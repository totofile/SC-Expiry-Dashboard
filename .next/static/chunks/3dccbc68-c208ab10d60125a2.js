"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[977],{8618:function(e,t){let r={SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},n={CLIENT_ERROR_RANGE_START:400,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR_RANGE_START:500,SERVER_ERROR_RANGE_END:599},o=[r.OPENID_SCOPE,r.PROFILE_SCOPE,r.OFFLINE_ACCESS_SCOPE],i=[...o,r.EMAIL_SCOPE],a={CONTENT_TYPE:"Content-Type",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",WWWAuthenticate:"WWW-Authenticate",AuthenticationInfo:"Authentication-Info",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},s={ID_TOKEN:"idtoken",CLIENT_INFO:"client.info",ADAL_ID_TOKEN:"adal.idtoken",ERROR:"error",ERROR_DESC:"error.description",ACTIVE_ACCOUNT:"active-account",ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},c={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},l={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},h={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},d={QUERY:"query",FRAGMENT:"fragment"},u={...d,FORM_POST:"form_post"},g={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",GENERIC_ACCOUNT_TYPE:"Generic"},p={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},m={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},C="appmetadata",f="authority-metadata",y={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},T={SCHEMA_VERSION:5,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},I={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},A={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},v={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},w={httpSuccess:200,httpBadRequest:400},E={FAILED_AUTO_DETECTION:"1",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},k={CONFIGURED_NO_AUTO_DETECTION:"2",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},S={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},R={Jwt:"JWT",Jwk:"JWK",Pop:"pop"},_="unexpected_error",b="post_request_failed";var P,N,M=Object.freeze({__proto__:null,postRequestFailed:b,unexpectedError:_});let O={[_]:"Unexpected error in authentication.",[b]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."},q={unexpectedError:{code:_,desc:O[_]},postRequestFailed:{code:b,desc:O[b]}};class U extends Error{constructor(e,t,n){super(t?`${e}: ${t}`:e),Object.setPrototypeOf(this,U.prototype),this.errorCode=e||r.EMPTY_STRING,this.errorMessage=t||r.EMPTY_STRING,this.subError=n||r.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function L(e,t){return new U(e,t?`${O[e]} ${t}`:O[e])}let H="client_info_decoding_error",D="client_info_empty_error",B="token_parsing_error",x="null_or_empty_token",F="endpoints_resolution_error",K="network_error",G="openid_config_error",z="hash_not_deserialized",$="invalid_state",Q="state_mismatch",W="state_not_found",V="nonce_mismatch",j="auth_time_not_found",Y="max_age_transpired",J="multiple_matching_tokens",X="multiple_matching_accounts",Z="multiple_matching_appMetadata",ee="request_cannot_be_made",et="cannot_remove_empty_scope",er="cannot_append_scopeset",en="empty_input_scopeset",eo="device_code_polling_cancelled",ei="device_code_expired",ea="device_code_unknown_error",es="no_account_in_silent_request",ec="invalid_cache_record",el="invalid_cache_environment",eh="no_account_found",ed="no_crypto_object",eu="unexpected_credential_type",eg="invalid_assertion",ep="invalid_client_credential",em="token_refresh_required",eC="user_timeout_reached",ef="token_claims_cnf_required_for_signedjwt",ey="authorization_code_missing_from_server_response",eT="binding_key_not_removed",eI="end_session_endpoint_not_supported",eA="key_id_missing",ev="no_network_connectivity",ew="user_canceled",eE="missing_tenant_id_error",ek="method_not_implemented",eS="nested_app_auth_bridge_disabled";var eR=Object.freeze({__proto__:null,authTimeNotFound:j,authorizationCodeMissingFromServerResponse:ey,bindingKeyNotRemoved:eT,cannotAppendScopeSet:er,cannotRemoveEmptyScope:et,clientInfoDecodingError:H,clientInfoEmptyError:D,deviceCodeExpired:ei,deviceCodePollingCancelled:eo,deviceCodeUnknownError:ea,emptyInputScopeSet:en,endSessionEndpointNotSupported:eI,endpointResolutionError:F,hashNotDeserialized:z,invalidAssertion:eg,invalidCacheEnvironment:el,invalidCacheRecord:ec,invalidClientCredential:ep,invalidState:$,keyIdMissing:eA,maxAgeTranspired:Y,methodNotImplemented:ek,missingTenantIdError:eE,multipleMatchingAccounts:X,multipleMatchingAppMetadata:Z,multipleMatchingTokens:J,nestedAppAuthBridgeDisabled:eS,networkError:K,noAccountFound:eh,noAccountInSilentRequest:es,noCryptoObject:ed,noNetworkConnectivity:ev,nonceMismatch:V,nullOrEmptyToken:x,openIdConfigError:G,requestCannotBeMade:ee,stateMismatch:Q,stateNotFound:W,tokenClaimsCnfRequiredForSignedJwt:ef,tokenParsingError:B,tokenRefreshRequired:em,unexpectedCredentialType:eu,userCanceled:ew,userTimeoutReached:eC});let e_={[H]:"The client info could not be parsed/decoded correctly",[D]:"The client info was empty",[B]:"Token cannot be parsed",[x]:"The token is null or empty",[F]:"Endpoints cannot be resolved",[K]:"Network request failed",[G]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[z]:"The hash parameters could not be deserialized",[$]:"State was not the expected format",[Q]:"State mismatch error",[W]:"State not found",[V]:"Nonce mismatch error",[j]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[Y]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[J]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[X]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[Z]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[ee]:"Token request cannot be made without authorization code or refresh token.",[et]:"Cannot remove null or empty scope from ScopeSet",[er]:"Cannot append ScopeSet",[en]:"Empty input ScopeSet cannot be processed",[eo]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[ei]:"Device code is expired.",[ea]:"Device code stopped polling for unknown reasons.",[es]:"Please pass an account object, silent flow is not supported without account information",[ec]:"Cache record object was null or undefined.",[el]:"Invalid environment when attempting to create cache entry",[eh]:"No account found in cache for given key.",[ed]:"No crypto object detected.",[eu]:"Unexpected credential type.",[eg]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[ep]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[em]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[eC]:"User defined timeout for device code polling reached",[ef]:"Cannot generate a POP jwt if the token_claims are not populated",[ey]:"Server response does not contain an authorization code to proceed",[eT]:"Could not remove the credential's binding key from storage.",[eI]:"The provided authority does not support logout",[eA]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[ev]:"No network connectivity. Check your internet connection.",[ew]:"User cancelled the flow.",[eE]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[ek]:"This method has not been implemented",[eS]:"The nested app auth bridge is disabled"},eb={clientInfoDecodingError:{code:H,desc:e_[H]},clientInfoEmptyError:{code:D,desc:e_[D]},tokenParsingError:{code:B,desc:e_[B]},nullOrEmptyToken:{code:x,desc:e_[x]},endpointResolutionError:{code:F,desc:e_[F]},networkError:{code:K,desc:e_[K]},unableToGetOpenidConfigError:{code:G,desc:e_[G]},hashNotDeserialized:{code:z,desc:e_[z]},invalidStateError:{code:$,desc:e_[$]},stateMismatchError:{code:Q,desc:e_[Q]},stateNotFoundError:{code:W,desc:e_[W]},nonceMismatchError:{code:V,desc:e_[V]},authTimeNotFoundError:{code:j,desc:e_[j]},maxAgeTranspired:{code:Y,desc:e_[Y]},multipleMatchingTokens:{code:J,desc:e_[J]},multipleMatchingAccounts:{code:X,desc:e_[X]},multipleMatchingAppMetadata:{code:Z,desc:e_[Z]},tokenRequestCannotBeMade:{code:ee,desc:e_[ee]},removeEmptyScopeError:{code:et,desc:e_[et]},appendScopeSetError:{code:er,desc:e_[er]},emptyInputScopeSetError:{code:en,desc:e_[en]},DeviceCodePollingCancelled:{code:eo,desc:e_[eo]},DeviceCodeExpired:{code:ei,desc:e_[ei]},DeviceCodeUnknownError:{code:ea,desc:e_[ea]},NoAccountInSilentRequest:{code:es,desc:e_[es]},invalidCacheRecord:{code:ec,desc:e_[ec]},invalidCacheEnvironment:{code:el,desc:e_[el]},noAccountFound:{code:eh,desc:e_[eh]},noCryptoObj:{code:ed,desc:e_[ed]},unexpectedCredentialType:{code:eu,desc:e_[eu]},invalidAssertion:{code:eg,desc:e_[eg]},invalidClientCredential:{code:ep,desc:e_[ep]},tokenRefreshRequired:{code:em,desc:e_[em]},userTimeoutReached:{code:eC,desc:e_[eC]},tokenClaimsRequired:{code:ef,desc:e_[ef]},noAuthorizationCodeFromServer:{code:ey,desc:e_[ey]},bindingKeyNotRemovedError:{code:eT,desc:e_[eT]},logoutNotSupported:{code:eI,desc:e_[eI]},keyIdMissing:{code:eA,desc:e_[eA]},noNetworkConnectivity:{code:ev,desc:e_[ev]},userCanceledError:{code:ew,desc:e_[ew]},missingTenantIdError:{code:eE,desc:e_[eE]},nestedAppAuthBridgeDisabled:{code:eS,desc:e_[eS]}};class eP extends U{constructor(e,t){super(e,t?`${e_[e]}: ${t}`:e_[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,eP.prototype)}}function eN(e,t){return new eP(e,t)}let eM={createNewGuid:()=>{throw eN(ek)},base64Decode:()=>{throw eN(ek)},base64Encode:()=>{throw eN(ek)},base64UrlEncode:()=>{throw eN(ek)},encodeKid:()=>{throw eN(ek)},async getPublicKeyThumbprint(){throw eN(ek)},async removeTokenBindingKey(){throw eN(ek)},async clearKeystore(){throw eN(ek)},async signJwt(){throw eN(ek)},async hashString(){throw eN(ek)}};t.LogLevel=void 0,(P=t.LogLevel||(t.LogLevel={}))[P.Error=0]="Error",P[P.Warning=1]="Warning",P[P.Info=2]="Info",P[P.Verbose=3]="Verbose",P[P.Trace=4]="Trace";class eO{constructor(e,n,o){this.level=t.LogLevel.Info;let i=e||eO.createDefaultLoggerOptions();this.localCallback=i.loggerCallback||(()=>{}),this.piiLoggingEnabled=i.piiLoggingEnabled||!1,this.level="number"==typeof i.logLevel?i.logLevel:t.LogLevel.Info,this.correlationId=i.correlationId||r.EMPTY_STRING,this.packageName=n||r.EMPTY_STRING,this.packageVersion=o||r.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:t.LogLevel.Info}}clone(e,t,r){return new eO({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:r||this.correlationId},e,t)}logMessage(e,r){if(r.logLevel>this.level||!this.piiLoggingEnabled&&r.containsPii)return;let n=new Date().toUTCString(),o=`[${n}] : [${r.correlationId||this.correlationId||""}]`,i=`${o} : ${this.packageName}@${this.packageVersion} : ${t.LogLevel[r.logLevel]} - ${e}`;this.executeCallback(r.logLevel,i,r.containsPii||!1)}executeCallback(e,t,r){this.localCallback&&this.localCallback(e,t,r)}error(e,n){this.logMessage(e,{logLevel:t.LogLevel.Error,containsPii:!1,correlationId:n||r.EMPTY_STRING})}errorPii(e,n){this.logMessage(e,{logLevel:t.LogLevel.Error,containsPii:!0,correlationId:n||r.EMPTY_STRING})}warning(e,n){this.logMessage(e,{logLevel:t.LogLevel.Warning,containsPii:!1,correlationId:n||r.EMPTY_STRING})}warningPii(e,n){this.logMessage(e,{logLevel:t.LogLevel.Warning,containsPii:!0,correlationId:n||r.EMPTY_STRING})}info(e,n){this.logMessage(e,{logLevel:t.LogLevel.Info,containsPii:!1,correlationId:n||r.EMPTY_STRING})}infoPii(e,n){this.logMessage(e,{logLevel:t.LogLevel.Info,containsPii:!0,correlationId:n||r.EMPTY_STRING})}verbose(e,n){this.logMessage(e,{logLevel:t.LogLevel.Verbose,containsPii:!1,correlationId:n||r.EMPTY_STRING})}verbosePii(e,n){this.logMessage(e,{logLevel:t.LogLevel.Verbose,containsPii:!0,correlationId:n||r.EMPTY_STRING})}trace(e,n){this.logMessage(e,{logLevel:t.LogLevel.Trace,containsPii:!1,correlationId:n||r.EMPTY_STRING})}tracePii(e,n){this.logMessage(e,{logLevel:t.LogLevel.Trace,containsPii:!0,correlationId:n||r.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}let eq="@azure/msal-common",eU="14.15.0",eL={None:"none",AzurePublic:"https://login.microsoftonline.com",AzurePpe:"https://login.windows-ppe.net",AzureChina:"https://login.chinacloudapi.cn",AzureGermany:"https://login.microsoftonline.de",AzureUsGovernment:"https://login.microsoftonline.us"};function eH(e,t){let r=function(e){if(!e)throw eN(x);let t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw eN(B);return t[2]}(e);try{let e=t(r);return JSON.parse(e)}catch(e){throw eN(B)}}function eD(e,t){if(0===t||Date.now()-3e5>e+t)throw eN(Y)}function eB(){return Math.round(new Date().getTime()/1e3)}function ex(e,t){let r=Number(e)||0;return eB()+t>r}function eF(e){return Number(e)>eB()}function eK(e){return[[e.homeAccountId,e.environment].join(p.CACHE_KEY_SEPARATOR).toLowerCase(),function(e){let t=e.credentialType===m.REFRESH_TOKEN&&e.familyId||e.clientId;return[e.credentialType,t,e.realm||""].join(p.CACHE_KEY_SEPARATOR).toLowerCase()}(e),(e.target||"").toLowerCase(),(e.requestedClaimsHash||"").toLowerCase(),e.tokenType&&e.tokenType.toLowerCase()!==I.BEARER.toLowerCase()?e.tokenType.toLowerCase():""].join(p.CACHE_KEY_SEPARATOR).toLowerCase()}function eG(e,t,r,n,o){return{credentialType:m.ID_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r,realm:o}}function ez(e,t,r,n,o,i,a,s,c,l,h,d,u,g,p){let C={homeAccountId:e,credentialType:m.ACCESS_TOKEN,secret:r,cachedAt:eB().toString(),expiresOn:a.toString(),extendedExpiresOn:s.toString(),environment:t,clientId:n,realm:o,target:i,tokenType:h||I.BEARER};if(d&&(C.userAssertionHash=d),l&&(C.refreshOn=l.toString()),g&&(C.requestedClaims=g,C.requestedClaimsHash=p),C.tokenType?.toLowerCase()!==I.BEARER.toLowerCase())switch(C.credentialType=m.ACCESS_TOKEN_WITH_AUTH_SCHEME,C.tokenType){case I.POP:let f=eH(r,c);if(!f?.cnf?.kid)throw eN(ef);C.keyId=f.cnf.kid;break;case I.SSH:C.keyId=u}return C}function e$(e,t,r,n,o,i,a){let s={credentialType:m.REFRESH_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r};return i&&(s.userAssertionHash=i),o&&(s.familyId=o),a&&(s.expiresOn=a.toString()),s}function eQ(e){return e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")}function eW(e){return!!e&&eQ(e)&&e.hasOwnProperty("realm")&&e.hasOwnProperty("target")&&(e.credentialType===m.ACCESS_TOKEN||e.credentialType===m.ACCESS_TOKEN_WITH_AUTH_SCHEME)}function eV(e){return!!e&&eQ(e)&&e.hasOwnProperty("realm")&&e.credentialType===m.ID_TOKEN}function ej(e){return!!e&&eQ(e)&&e.credentialType===m.REFRESH_TOKEN}function eY(e,t,r){e.authorization_endpoint=t.authorization_endpoint,e.token_endpoint=t.token_endpoint,e.end_session_endpoint=t.end_session_endpoint,e.issuer=t.issuer,e.endpointsFromNetwork=r,e.jwks_uri=t.jwks_uri}function eJ(e,t,r){e.aliases=t.aliases,e.preferred_cache=t.preferred_cache,e.preferred_network=t.preferred_network,e.aliasesFromNetwork=r}function eX(e){return e.expiresAt<=eB()}let eZ="redirect_uri_empty",e0="claims_request_parsing_error",e1="authority_uri_insecure",e2="url_parse_error",e6="empty_url_error",e4="empty_input_scopes_error",e3="invalid_prompt_value",e5="invalid_claims",e8="token_request_empty",e9="logout_request_empty",e7="invalid_code_challenge_method",te="pkce_params_missing",tt="invalid_cloud_discovery_metadata",tr="invalid_authority_metadata",tn="untrusted_authority",to="missing_ssh_jwk",ti="missing_ssh_kid",ta="missing_nonce_authentication_header",ts="invalid_authentication_header",tc="cannot_set_OIDCOptions",tl="cannot_allow_native_broker",th="authority_mismatch";var td=Object.freeze({__proto__:null,authorityMismatch:th,authorityUriInsecure:e1,cannotAllowNativeBroker:tl,cannotSetOIDCOptions:tc,claimsRequestParsingError:e0,emptyInputScopesError:e4,invalidAuthenticationHeader:ts,invalidAuthorityMetadata:tr,invalidClaims:e5,invalidCloudDiscoveryMetadata:tt,invalidCodeChallengeMethod:e7,invalidPromptValue:e3,logoutRequestEmpty:e9,missingNonceAuthenticationHeader:ta,missingSshJwk:to,missingSshKid:ti,pkceParamsMissing:te,redirectUriEmpty:eZ,tokenRequestEmpty:e8,untrustedAuthority:tn,urlEmptyError:e6,urlParseError:e2});let tu={[eZ]:"A redirect URI is required for all calls, and none has been set.",[e0]:"Could not parse the given claims request object.",[e1]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[e2]:"URL could not be parsed into appropriate segments.",[e6]:"URL was empty or null.",[e4]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[e3]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[e5]:"Given claims parameter must be a stringified JSON object.",[e8]:"Token request was empty and not found in cache.",[e9]:"The logout request was null or undefined.",[e7]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[te]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[tt]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[tr]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[tn]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[to]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[ti]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[ta]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[ts]:"Invalid authentication header provided",[tc]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[tl]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[th]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."},tg={redirectUriNotSet:{code:eZ,desc:tu[eZ]},claimsRequestParsingError:{code:e0,desc:tu[e0]},authorityUriInsecure:{code:e1,desc:tu[e1]},urlParseError:{code:e2,desc:tu[e2]},urlEmptyError:{code:e6,desc:tu[e6]},emptyScopesError:{code:e4,desc:tu[e4]},invalidPrompt:{code:e3,desc:tu[e3]},invalidClaimsRequest:{code:e5,desc:tu[e5]},tokenRequestEmptyError:{code:e8,desc:tu[e8]},logoutRequestEmptyError:{code:e9,desc:tu[e9]},invalidCodeChallengeMethod:{code:e7,desc:tu[e7]},invalidCodeChallengeParams:{code:te,desc:tu[te]},invalidCloudDiscoveryMetadata:{code:tt,desc:tu[tt]},invalidAuthorityMetadata:{code:tr,desc:tu[tr]},untrustedAuthority:{code:tn,desc:tu[tn]},missingSshJwk:{code:to,desc:tu[to]},missingSshKid:{code:ti,desc:tu[ti]},missingNonceAuthenticationHeader:{code:ta,desc:tu[ta]},invalidAuthenticationHeader:{code:ts,desc:tu[ts]},cannotSetOIDCOptions:{code:tc,desc:tu[tc]},cannotAllowNativeBroker:{code:tl,desc:tu[tl]},authorityMismatch:{code:th,desc:tu[th]}};class tp extends U{constructor(e){super(e,tu[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,tp.prototype)}}function tm(e){return new tp(e)}class tC{static isEmptyObj(e){if(e)try{let t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){let t={},r=e.split("&"),n=e=>decodeURIComponent(e.replace(/\+/g," "));return r.forEach(e=>{if(e.trim()){let[r,o]=e.split(/=(.+)/g,2);r&&o&&(t[n(r)]=n(o))}}),t}static trimArrayEntries(e){return e.map(e=>e.trim())}static removeEmptyStringsFromArray(e){return e.filter(e=>!!e)}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}class tf{constructor(e){let t=e?tC.trimArrayEntries([...e]):[],r=t?tC.removeEmptyStringsFromArray(t):[];this.validateInputScopes(r),this.scopes=new Set,r.forEach(e=>this.scopes.add(e))}static fromString(e){return new tf((e||r.EMPTY_STRING).split(" "))}static createSearchScopes(e){let t=new tf(e);return t.containsOnlyOIDCScopes()?t.removeScope(r.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw tm(e4)}containsScope(e){let t=new tf(this.printScopesLowerCase().split(" "));return!!e&&t.scopes.has(e.toLowerCase())}containsScopeSet(e){return!!e&&!(e.scopes.size<=0)&&this.scopes.size>=e.scopes.size&&e.asArray().every(e=>this.containsScope(e))}containsOnlyOIDCScopes(){let e=0;return i.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(e=>this.appendScope(e))}catch(e){throw eN(er)}}removeScope(e){if(!e)throw eN(et);this.scopes.delete(e.trim())}removeOIDCScopes(){i.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw eN(en);let t=new Set;return e.scopes.forEach(e=>t.add(e.toLowerCase())),this.scopes.forEach(e=>t.add(e.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw eN(en);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();let t=this.unionScopeSets(e),r=e.getScopeCount(),n=this.getScopeCount();return t.size<n+r}getScopeCount(){return this.scopes.size}asArray(){let e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):r.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}function ty(e,t){if(!e)throw eN(D);try{let r=t(e);return JSON.parse(r)}catch(e){throw eN(H)}}function tT(e){if(!e)throw eN(H);let t=e.split(p.CLIENT_INFO_SEPARATOR,2);return{uid:t[0],utid:t.length<2?r.EMPTY_STRING:t[1]}}function tI(e,t){return!!e&&!!t&&e===t.split(".")[1]}function tA(e,t,r,n){if(!n)return{tenantId:r,localAccountId:t,isHomeTenant:tI(r,e)};{let{oid:t,sub:r,tid:o,name:i,tfp:a,acr:s}=n,c=o||a||s||"";return{tenantId:c,localAccountId:t||r||"",name:i,isHomeTenant:tI(c,e)}}}function tv(e,t,r,n){let o=e;if(t){let{isHomeTenant:r,...n}=t;o={...e,...n}}if(r){let{isHomeTenant:t,...i}=tA(e.homeAccountId,e.localAccountId,e.tenantId,r);o={...o,...i,idTokenClaims:r,idToken:n}}return o}let tw={Default:0,Adfs:1,Dsts:2,Ciam:3};function tE(e){return e&&(e.tid||e.tfp||e.acr)||null}let tk={AAD:"AAD",OIDC:"OIDC"};class tS{generateAccountId(){return[this.homeAccountId,this.environment].join(p.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return tS.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e]))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){let t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(p.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t,r){let n;let o=new tS;t.authorityType===tw.Adfs?o.authorityType=g.ADFS_ACCOUNT_TYPE:t.protocolMode===tk.AAD?o.authorityType=g.MSSTS_ACCOUNT_TYPE:o.authorityType=g.GENERIC_ACCOUNT_TYPE,e.clientInfo&&r&&(n=ty(e.clientInfo,r)),o.clientInfo=e.clientInfo,o.homeAccountId=e.homeAccountId,o.nativeAccountId=e.nativeAccountId;let i=e.environment||t&&t.getPreferredCache();if(!i)throw eN(el);o.environment=i,o.realm=n?.utid||tE(e.idTokenClaims)||"",o.localAccountId=n?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";let a=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,s=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(o.username=a||s||"",o.name=e.idTokenClaims?.name||"",o.cloudGraphHostName=e.cloudGraphHostName,o.msGraphHost=e.msGraphHost,e.tenantProfiles)o.tenantProfiles=e.tenantProfiles;else{let t=tA(e.homeAccountId,o.localAccountId,o.realm,e.idTokenClaims);o.tenantProfiles=[t]}return o}static createFromAccountInfo(e,t,r){let n=new tS;return n.authorityType=e.authorityType||g.GENERIC_ACCOUNT_TYPE,n.homeAccountId=e.homeAccountId,n.localAccountId=e.localAccountId,n.nativeAccountId=e.nativeAccountId,n.realm=e.tenantId,n.environment=e.environment,n.username=e.username,n.name=e.name,n.cloudGraphHostName=t,n.msGraphHost=r,n.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),n}static generateHomeAccountId(e,t,r,n,o){if(!(t===tw.Adfs||t===tw.Dsts)){if(e)try{let t=ty(e,n.base64Decode);if(t.uid&&t.utid)return`${t.uid}.${t.utid}`}catch(e){}r.warning("No client info in response")}return o?.sub||""}static isAccountEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType")}static accountInfoIsEqual(e,t,r){if(!e||!t)return!1;let n=!0;if(r){let r=e.idTokenClaims||{},o=t.idTokenClaims||{};n=r.iat===o.iat&&r.nonce===o.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&n}}function tR(e){return e.startsWith("#/")?e.substring(2):e.startsWith("#")||e.startsWith("?")?e.substring(1):e}function t_(e){if(!e||0>e.indexOf("="))return null;try{let t=tR(e),r=Object.fromEntries(new URLSearchParams(t));if(r.code||r.error||r.error_description||r.state)return r}catch(e){throw eN(z)}return null}class tb{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw tm(e6);e.includes("#")||(this._urlString=tb.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return tC.endsWith(t,"?")?t=t.slice(0,-1):tC.endsWith(t,"?/")&&(t=t.slice(0,-2)),tC.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw tm(e2)}if(!e.HostNameAndPort||!e.PathSegments)throw tm(e2);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw tm(e1)}static appendQueryString(e,t){return t?0>e.indexOf("?")?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return tb.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){let t=this.getUrlComponents(),r=t.PathSegments;return e&&0!==r.length&&(r[0]===c.COMMON||r[0]===c.ORGANIZATIONS)&&(r[0]=e),tb.constructAuthorityUriFromObject(t)}getUrlComponents(){let e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw tm(e2);let r={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]},n=r.AbsolutePath.split("/");return n=n.filter(e=>e&&e.length>0),r.PathSegments=n,r.QueryString&&r.QueryString.endsWith("/")&&(r.QueryString=r.QueryString.substring(0,r.QueryString.length-1)),r}static getDomainFromUrl(e){let t=RegExp("^([^:/?#]+://)?([^/?#]*)"),r=e.match(t);if(!r)throw tm(e2);return r[2]}static getAbsoluteUrl(e,t){if(e[0]===r.FORWARD_SLASH){let r=new tb(t).getUrlComponents();return r.Protocol+"//"+r.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new tb(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!t_(e)}}let tP={"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},tN={metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},tM=new Set;function tO(e,t,r,n){if(n?.trace(`getAliasesFromMetadata called with source: ${r}`),e&&t){let o=tq(t,e);if(o)return n?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${r}, returning aliases`),o.aliases;n?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${r}`)}return null}function tq(e,t){for(let r=0;r<e.length;r++){let n=e[r];if(n.aliases.includes(t))return n}return null}tN.metadata.forEach(e=>{e.aliases.forEach(e=>{tM.add(e)})});let tU="cache_quota_exceeded",tL="cache_error_unknown",tH={[tU]:"Exceeded cache storage capacity.",[tL]:"Unexpected error occurred when using cache storage."};class tD extends Error{constructor(e,t){let r=t||(tH[e]?tH[e]:tH[tL]);super(`${e}: ${r}`),Object.setPrototypeOf(this,tD.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=r}}class tB{constructor(e,t,r,n){this.clientId=e,this.cryptoImpl=t,this.commonLogger=r.clone(eq,eU),this.staticAuthorityOptions=n}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){let t=this.getAllAccounts(e);return t.length>1?t.sort(e=>e.idTokenClaims?-1:1)[0]:1===t.length?t[0]:null}getBaseAccountInfo(e){let t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap(e=>this.getTenantProfilesFromAccountEntity(e,t?.tenantId,t))}getTenantedAccountInfoByFilter(e,t,r,n){let o;if(n&&!this.tenantProfileMatchesFilter(r,n))return null;let i=this.getIdToken(e,t,r.tenantId);return i&&(o=eH(i.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(o,n))?null:tv(e,r,o,i?.secret)}getTenantProfilesFromAccountEntity(e,t,r){let n=e.getAccountInfo(),o=n.tenantProfiles||new Map,i=this.getTokenKeys();if(t){let e=o.get(t);if(!e)return[];o=new Map([[t,e]])}let a=[];return o.forEach(e=>{let t=this.getTenantedAccountInfoByFilter(n,i,e,r);t&&a.push(t)}),a}tenantProfileMatchesFilter(e,t){return(!t.localAccountId||!!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId))&&(!t.name||e.name===t.name)&&(void 0===t.isHomeTenant||e.isHomeTenant===t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){return!t||(!t.localAccountId||!!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId))&&(!t.loginHint||!!this.matchLoginHintFromTokenClaims(e,t.loginHint))&&(!t.username||!!this.matchUsername(e.preferred_username,t.username))&&(!t.name||!!this.matchName(e,t.name))&&(!t.sid||!!this.matchSid(e,t.sid))}async saveCacheRecord(e,t,r){if(!e)throw eN(ec);try{e.account&&this.setAccount(e.account),e.idToken&&t?.idToken!==!1&&this.setIdTokenCredential(e.idToken),e.accessToken&&t?.accessToken!==!1&&await this.saveAccessToken(e.accessToken),e.refreshToken&&t?.refreshToken!==!1&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}catch(e){if(this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),e instanceof Error){if(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`,r),"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name||e.message.includes("exceeded the quota"))throw this.commonLogger?.error("CacheManager.saveCacheRecord: exceeded storage quota",r),new tD(tU);throw new tD(e.name,e.message)}throw this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`,r),new tD(tL)}}async saveAccessToken(e){let t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},r=this.getTokenKeys(),n=tf.fromString(e.target),o=[];r.accessToken.forEach(e=>{if(!this.accessTokenKeyMatchesFilter(e,t,!1))return;let r=this.getAccessTokenCredential(e);r&&this.credentialMatchesFilter(r,t)&&tf.fromString(r.target).intersectingScopeSets(n)&&o.push(this.removeAccessToken(e))}),await Promise.all(o),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){let t=this.getAccountKeys(),r=[];return t.forEach(t=>{if(!this.isAccountKey(t,e.homeAccountId))return;let n=this.getAccount(t,this.commonLogger);if(!n||e.homeAccountId&&!this.matchHomeAccountId(n,e.homeAccountId)||e.username&&!this.matchUsername(n.username,e.username)||e.environment&&!this.matchEnvironment(n,e.environment)||e.realm&&!this.matchRealm(n,e.realm)||e.nativeAccountId&&!this.matchNativeAccountId(n,e.nativeAccountId)||e.authorityType&&!this.matchAuthorityType(n,e.authorityType))return;let o={localAccountId:e?.localAccountId,name:e?.name},i=n.tenantProfiles?.filter(e=>this.tenantProfileMatchesFilter(e,o));i&&0===i.length||r.push(n)}),r}isAccountKey(e,t,r){return!(e.split(p.CACHE_KEY_SEPARATOR).length<3)&&(!t||!!e.toLowerCase().includes(t.toLowerCase()))&&(!r||!!e.toLowerCase().includes(r.toLowerCase()))}isCredentialKey(e){if(e.split(p.CACHE_KEY_SEPARATOR).length<6)return!1;let t=e.toLowerCase();if(-1===t.indexOf(m.ID_TOKEN.toLowerCase())&&-1===t.indexOf(m.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(m.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(m.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(m.REFRESH_TOKEN.toLowerCase())>-1){let e=`${m.REFRESH_TOKEN}${p.CACHE_KEY_SEPARATOR}${this.clientId}${p.CACHE_KEY_SEPARATOR}`,r=`${m.REFRESH_TOKEN}${p.CACHE_KEY_SEPARATOR}1${p.CACHE_KEY_SEPARATOR}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(r.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){return(!t.clientId||!!this.matchClientId(e,t.clientId))&&(!t.userAssertionHash||!!this.matchUserAssertionHash(e,t.userAssertionHash))&&("string"!=typeof t.homeAccountId||!!this.matchHomeAccountId(e,t.homeAccountId))&&(!t.environment||!!this.matchEnvironment(e,t.environment))&&(!t.realm||!!this.matchRealm(e,t.realm))&&(!t.credentialType||!!this.matchCredentialType(e,t.credentialType))&&(!t.familyId||!!this.matchFamilyId(e,t.familyId))&&(!t.target||!!this.matchTarget(e,t.target))&&(!t.requestedClaimsHash&&!e.requestedClaimsHash||e.requestedClaimsHash===t.requestedClaimsHash)&&(e.credentialType!==m.ACCESS_TOKEN_WITH_AUTH_SCHEME||(!t.tokenType||!!this.matchTokenType(e,t.tokenType))&&(t.tokenType!==I.SSH||!t.keyId||!!this.matchKeyId(e,t.keyId)))}getAppMetadataFilteredBy(e){let t=this.getKeys(),r={};return t.forEach(t=>{if(!this.isAppMetadata(t))return;let n=this.getAppMetadata(t);n&&(!e.environment||this.matchEnvironment(n,e.environment))&&(!e.clientId||this.matchClientId(n,e.clientId))&&(r[t]=n)}),r}getAuthorityMetadataByAlias(e){let t=this.getAuthorityMetadataKeys(),r=null;return t.forEach(t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;let n=this.getAuthorityMetadata(t);n&&-1!==n.aliases.indexOf(e)&&(r=n)}),r}async removeAllAccounts(){let e=this.getAccountKeys(),t=[];e.forEach(e=>{t.push(this.removeAccount(e))}),await Promise.all(t)}async removeAccount(e){let t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){let t=this.getTokenKeys(),r=e.generateAccountId(),n=[];t.idToken.forEach(e=>{0===e.indexOf(r)&&this.removeIdToken(e)}),t.accessToken.forEach(e=>{0===e.indexOf(r)&&n.push(this.removeAccessToken(e))}),t.refreshToken.forEach(e=>{0===e.indexOf(r)&&this.removeRefreshToken(e)}),await Promise.all(n)}updateOutdatedCachedAccount(e,t,r){if(t&&t.isSingleTenant()){this.commonLogger?.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");let n=this.getAccountKeys().filter(e=>e.startsWith(t.homeAccountId)),o=[];n.forEach(e=>{let t=this.getCachedAccountEntity(e);t&&o.push(t)});let i=o.find(e=>tI(e.realm,e.homeAccountId))||o[0];i.tenantProfiles=o.map(e=>({tenantId:e.realm,localAccountId:e.localAccountId,name:e.name,isHomeTenant:tI(e.realm,e.homeAccountId)}));let a=tB.toObject(new tS,{...i}),s=a.generateAccountKey();return n.forEach(t=>{t!==s&&this.removeOutdatedAccount(e)}),this.setAccount(a),r?.verbose("Updated an outdated account entity in the cache"),a}return t}async removeAccessToken(e){let t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===m.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===I.POP){let e=t.keyId;if(e)try{await this.cryptoImpl.removeTokenBindingKey(e)}catch(e){throw eN(eT)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach(e=>{this.isAppMetadata(e)&&this.removeItem(e)}),!0}readAccountFromCache(e){let t=tS.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getIdToken called");let i={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:m.ID_TOKEN,clientId:this.clientId,realm:r},a=this.getIdTokensByFilter(i,t),s=a.size;if(s<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(s>1){let t=a;if(!r){let r=new Map;a.forEach((t,n)=>{t.realm===e.tenantId&&r.set(n,t)});let n=r.size;if(n<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),a.values().next().value;if(1===n)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),r.values().next().value;t=r}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),t.forEach((e,t)=>{this.removeIdToken(t)}),n&&o&&n.addFields({multiMatchedID:a.size},o),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),a.values().next().value}getIdTokensByFilter(e,t){let r=t&&t.idToken||this.getTokenKeys().idToken,n=new Map;return r.forEach(t=>{if(!this.idTokenKeyMatchesFilter(t,{clientId:this.clientId,...e}))return;let r=this.getIdTokenCredential(t);r&&this.credentialMatchesFilter(r,e)&&n.set(t,r)}),n}idTokenKeyMatchesFilter(e,t){let r=e.toLowerCase();return(!t.clientId||-1!==r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,r,n,o,i){this.commonLogger.trace("CacheManager - getAccessToken called");let a=tf.createSearchScopes(t.scopes),s=t.authenticationScheme||I.BEARER,c=s&&s.toLowerCase()!==I.BEARER.toLowerCase()?m.ACCESS_TOKEN_WITH_AUTH_SCHEME:m.ACCESS_TOKEN,l={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:c,clientId:this.clientId,realm:n||e.tenantId,target:a,tokenType:s,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},h=r&&r.accessToken||this.getTokenKeys().accessToken,d=[];h.forEach(e=>{if(this.accessTokenKeyMatchesFilter(e,l,!0)){let t=this.getAccessTokenCredential(e);t&&this.credentialMatchesFilter(t,l)&&d.push(t)}});let u=d.length;return u<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):u>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),d.forEach(e=>{this.removeAccessToken(eK(e))}),o&&i&&o.addFields({multiMatchedAT:d.length},i),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),d[0])}accessTokenKeyMatchesFilter(e,t,r){let n=e.toLowerCase();if(t.clientId&&-1===n.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase())||t.realm&&-1===n.indexOf(t.realm.toLowerCase())||t.requestedClaimsHash&&-1===n.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){let e=t.target.asArray();for(let t=0;t<e.length;t++){if(r&&!n.includes(e[t].toLowerCase()))return!1;if(!r&&n.includes(e[t].toLowerCase()))break}}return!0}getAccessTokensByFilter(e){let t=this.getTokenKeys(),r=[];return t.accessToken.forEach(t=>{if(!this.accessTokenKeyMatchesFilter(t,e,!0))return;let n=this.getAccessTokenCredential(t);n&&this.credentialMatchesFilter(n,e)&&r.push(n)}),r}getRefreshToken(e,t,r,n,o){this.commonLogger.trace("CacheManager - getRefreshToken called");let i={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:m.REFRESH_TOKEN,clientId:this.clientId,familyId:t?"1":void 0},a=r&&r.refreshToken||this.getTokenKeys().refreshToken,s=[];a.forEach(e=>{if(this.refreshTokenKeyMatchesFilter(e,i)){let t=this.getRefreshTokenCredential(e);t&&this.credentialMatchesFilter(t,i)&&s.push(t)}});let c=s.length;return c<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(c>1&&n&&o&&n.addFields({multiMatchedRT:c},o),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),s[0])}refreshTokenKeyMatchesFilter(e,t){let r=e.toLowerCase();return(!t.familyId||-1!==r.indexOf(t.familyId.toLowerCase()))&&(!!t.familyId||!t.clientId||-1!==r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase()))}readAppMetadataFromCache(e){let t={environment:e,clientId:this.clientId},r=this.getAppMetadataFilteredBy(t),n=Object.keys(r).map(e=>r[e]),o=n.length;if(o<1)return null;if(o>1)throw eN(Z);return n[0]}isAppMetadataFOCI(e){let t=this.readAppMetadataFromCache(e);return!!(t&&"1"===t.familyId)}matchHomeAccountId(e,t){return!!("string"==typeof e.homeAccountId&&t===e.homeAccountId)}matchLocalAccountIdFromTokenClaims(e,t){return t===(e.oid||e.sub)}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return!(t.toLowerCase()!==e.name?.toLowerCase())}matchUsername(e,t){return!!(e&&"string"==typeof e&&t?.toLowerCase()===e.toLowerCase())}matchUserAssertionHash(e,t){return!!(e.userAssertionHash&&t===e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){let r=function(e,t){let r;let n=e.canonicalAuthority;if(n){let o=new tb(n).getUrlComponents().HostNameAndPort;r=tO(o,e.cloudDiscoveryMetadata?.metadata,y.CONFIG,t)||tO(o,tN.metadata,y.HARDCODED_VALUES,t)||e.knownAuthorities}return r||[]}(this.staticAuthorityOptions,this.commonLogger);if(r.includes(t)&&r.includes(e.environment))return!0}let r=this.getAuthorityMetadataByAlias(t);return!!(r&&r.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!!(e.clientId&&t===e.clientId)}matchFamilyId(e,t){return!!(e.familyId&&t===e.familyId)}matchRealm(e,t){return!(e.realm?.toLowerCase()!==t.toLowerCase())}matchNativeAccountId(e,t){return!!(e.nativeAccountId&&t===e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!!(e.authorityType&&t.toLowerCase()===e.authorityType.toLowerCase())}matchTarget(e,t){return(e.credentialType===m.ACCESS_TOKEN||e.credentialType===m.ACCESS_TOKEN_WITH_AUTH_SCHEME)&&!!e.target&&tf.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!!(e.tokenType&&e.tokenType===t)}matchKeyId(e,t){return!!(e.keyId&&e.keyId===t)}isAppMetadata(e){return -1!==e.indexOf(C)}isAuthorityMetadata(e){return -1!==e.indexOf(f)}generateAuthorityMetadataCacheKey(e){return`${f}-${this.clientId}-${e}`}static toObject(e,t){for(let r in t)e[r]=t[r];return e}}class tx extends tB{setAccount(){throw eN(ek)}getAccount(){throw eN(ek)}getCachedAccountEntity(){throw eN(ek)}setIdTokenCredential(){throw eN(ek)}getIdTokenCredential(){throw eN(ek)}setAccessTokenCredential(){throw eN(ek)}getAccessTokenCredential(){throw eN(ek)}setRefreshTokenCredential(){throw eN(ek)}getRefreshTokenCredential(){throw eN(ek)}setAppMetadata(){throw eN(ek)}getAppMetadata(){throw eN(ek)}setServerTelemetry(){throw eN(ek)}getServerTelemetry(){throw eN(ek)}setAuthorityMetadata(){throw eN(ek)}getAuthorityMetadata(){throw eN(ek)}getAuthorityMetadataKeys(){throw eN(ek)}setThrottlingCache(){throw eN(ek)}getThrottlingCache(){throw eN(ek)}removeItem(){throw eN(ek)}getKeys(){throw eN(ek)}getAccountKeys(){throw eN(ek)}getTokenKeys(){throw eN(ek)}async clear(){throw eN(ek)}updateCredentialCacheKey(){throw eN(ek)}removeOutdatedAccount(){throw eN(ek)}}let tF={tokenRenewalOffsetSeconds:300,preventCorsPreflight:!1},tK={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:t.LogLevel.Info,correlationId:r.EMPTY_STRING},tG={claimsBasedCachingEnabled:!1},tz={async sendGetRequestAsync(){throw eN(ek)},async sendPostRequestAsync(){throw eN(ek)}},t$={sku:r.SKU,version:eU,cpu:r.EMPTY_STRING,os:r.EMPTY_STRING},tQ={clientSecret:r.EMPTY_STRING,clientAssertion:void 0},tW={azureCloudInstance:eL.None,tenant:`${r.DEFAULT_COMMON_TENANT}`},tV={application:{appName:"",appVersion:""}};function tj(e){return e.authOptions.authority.options.protocolMode===tk.OIDC}class tY extends U{constructor(e,t,r,n,o){super(e,t,r),this.name="ServerError",this.errorNo=n,this.status=o,Object.setPrototypeOf(this,tY.prototype)}}class tJ{static generateThrottlingStorageKey(e){return`${A.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t){let n=tJ.generateThrottlingStorageKey(t),o=e.getThrottlingCache(n);if(o){if(o.throttleTime<Date.now()){e.removeItem(n);return}throw new tY(o.errorCodes?.join(" ")||r.EMPTY_STRING,o.errorMessage,o.subError)}}static postProcess(e,t,r){if(tJ.checkResponseStatus(r)||tJ.checkResponseForRetryAfter(r)){let n={throttleTime:tJ.calculateThrottleTime(parseInt(r.headers[a.RETRY_AFTER])),error:r.body.error,errorCodes:r.body.error_codes,errorMessage:r.body.error_description,subError:r.body.suberror};e.setThrottlingCache(tJ.generateThrottlingStorageKey(t),n)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&e.headers.hasOwnProperty(a.RETRY_AFTER)&&(e.status<200||e.status>=300)}static calculateThrottleTime(e){let t=Date.now()/1e3;return Math.floor(1e3*Math.min(t+((e<=0?0:e)||A.DEFAULT_THROTTLE_TIME_SECONDS),t+A.DEFAULT_MAX_THROTTLE_TIME_SECONDS))}static removeThrottle(e,t,r,n){let o={clientId:t,authority:r.authority,scopes:r.scopes,homeAccountIdentifier:n,claims:r.claims,authenticationScheme:r.authenticationScheme,resourceRequestMethod:r.resourceRequestMethod,resourceRequestUri:r.resourceRequestUri,shrClaims:r.shrClaims,sshKid:r.sshKid},i=this.generateThrottlingStorageKey(o);e.removeItem(i)}}class tX{constructor(e,t){this.networkClient=e,this.cacheManager=t}async sendPostRequest(e,t,r){let n;tJ.preProcess(this.cacheManager,e);try{n=await this.networkClient.sendPostRequestAsync(t,r)}catch(e){if(e instanceof U)throw e;throw eN(K)}return tJ.postProcess(this.cacheManager,e,n),n}}let tZ={HOME_ACCOUNT_ID:"home_account_id",UPN:"UPN"},t0="client_id",t1="response_type",t2="token_type",t6="req_cnf",t4="return_spa_code";class t3{static validateRedirectUri(e){if(!e)throw tm(eZ)}static validatePrompt(e){let t=[];for(let e in h)t.push(h[e]);if(0>t.indexOf(e))throw tm(e3)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw tm(e5)}}static validateCodeChallengeParams(e,t){if(e&&t)this.validateCodeChallengeMethod(t);else throw tm(te)}static validateCodeChallengeMethod(e){if(0>["plain","S256"].indexOf(e))throw tm(e7)}}class t5{constructor(){this.parameters=new Map}addResponseTypeCode(){this.parameters.set(t1,encodeURIComponent(r.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(t1,encodeURIComponent(`${r.TOKEN_RESPONSE_TYPE} ${r.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set("response_mode",encodeURIComponent(e||u.QUERY))}addNativeBroker(){this.parameters.set("nativebroker",encodeURIComponent("1"))}addScopes(e,t=!0,r=o){!t||r.includes("openid")||e.includes("openid")||r.push("openid");let n=new tf(t?[...e||[],...r]:e||[]);this.parameters.set("scope",encodeURIComponent(n.printScopes()))}addClientId(e){this.parameters.set(t0,encodeURIComponent(e))}addRedirectUri(e){t3.validateRedirectUri(e),this.parameters.set("redirect_uri",encodeURIComponent(e))}addPostLogoutRedirectUri(e){t3.validateRedirectUri(e),this.parameters.set("post_logout_redirect_uri",encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set("id_token_hint",encodeURIComponent(e))}addDomainHint(e){this.parameters.set("domain_hint",encodeURIComponent(e))}addLoginHint(e){this.parameters.set("login_hint",encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(a.CCS_HEADER,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(a.CCS_HEADER,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set("sid",encodeURIComponent(e))}addClaims(e,t){let r=this.addClientCapabilitiesToClaims(e,t);t3.validateClaims(r),this.parameters.set("claims",encodeURIComponent(r))}addCorrelationId(e){this.parameters.set("client-request-id",encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set("x-client-SKU",e.sku),this.parameters.set("x-client-VER",e.version),e.os&&this.parameters.set("x-client-OS",e.os),e.cpu&&this.parameters.set("x-client-CPU",e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set("x-app-name",e.appName),e?.appVersion&&this.parameters.set("x-app-ver",e.appVersion)}addPrompt(e){t3.validatePrompt(e),this.parameters.set("prompt",encodeURIComponent(e))}addState(e){e&&this.parameters.set("state",encodeURIComponent(e))}addNonce(e){this.parameters.set("nonce",encodeURIComponent(e))}addCodeChallengeParams(e,t){if(t3.validateCodeChallengeParams(e,t),e&&t)this.parameters.set("code_challenge",encodeURIComponent(e)),this.parameters.set("code_challenge_method",encodeURIComponent(t));else throw tm(te)}addAuthorizationCode(e){this.parameters.set("code",encodeURIComponent(e))}addDeviceCode(e){this.parameters.set("device_code",encodeURIComponent(e))}addRefreshToken(e){this.parameters.set("refresh_token",encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set("code_verifier",encodeURIComponent(e))}addClientSecret(e){this.parameters.set("client_secret",encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set("client_assertion",encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set("client_assertion_type",encodeURIComponent(e))}addOboAssertion(e){this.parameters.set("assertion",encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set("requested_token_use",encodeURIComponent(e))}addGrantType(e){this.parameters.set("grant_type",encodeURIComponent(e))}addClientInfo(){this.parameters.set("client_info","1")}addExtraQueryParameters(e){Object.entries(e).forEach(([e,t])=>{!this.parameters.has(e)&&t&&this.parameters.set(e,t)})}addClientCapabilitiesToClaims(e,t){let r;if(e)try{r=JSON.parse(e)}catch(e){throw tm(e5)}else r={};return t&&t.length>0&&(r.hasOwnProperty(l.ACCESS_TOKEN)||(r[l.ACCESS_TOKEN]={}),r[l.ACCESS_TOKEN][l.XMS_CC]={values:t}),JSON.stringify(r)}addUsername(e){this.parameters.set("username",encodeURIComponent(e))}addPassword(e){this.parameters.set("password",encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(t2,I.POP),this.parameters.set(t6,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(t2,I.SSH),this.parameters.set(t6,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set("x-client-current-telemetry",e.generateCurrentRequestHeaderValue()),this.parameters.set("x-client-last-telemetry",e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set("x-ms-lib-capability",A.X_MS_LIB_CAPABILITY_VALUE)}addLogoutHint(e){this.parameters.set("logout_hint",encodeURIComponent(e))}createQueryString(){let e=[];return this.parameters.forEach((t,r)=>{e.push(`${r}=${t}`)}),e.join("&")}}let t8={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"},t9=new Map([[t8.AcquireTokenByCode,"ATByCode"],[t8.AcquireTokenByRefreshToken,"ATByRT"],[t8.AcquireTokenSilent,"ATS"],[t8.AcquireTokenSilentAsync,"ATSAsync"],[t8.AcquireTokenPopup,"ATPopup"],[t8.AcquireTokenRedirect,"ATRedirect"],[t8.CryptoOptsGetPublicKeyThumbprint,"CryptoGetPKThumb"],[t8.CryptoOptsSignJwt,"CryptoSignJwt"],[t8.SilentCacheClientAcquireToken,"SltCacheClientAT"],[t8.SilentIframeClientAcquireToken,"SltIframeClientAT"],[t8.SilentRefreshClientAcquireToken,"SltRClientAT"],[t8.SsoSilent,"SsoSlt"],[t8.StandardInteractionClientGetDiscoveredAuthority,"StdIntClientGetDiscAuth"],[t8.FetchAccountIdWithNativeBroker,"FetchAccIdWithNtvBroker"],[t8.NativeInteractionClientAcquireToken,"NtvIntClientAT"],[t8.BaseClientCreateTokenRequestHeaders,"BaseClientCreateTReqHead"],[t8.RefreshTokenClientExecutePostToTokenEndpoint,"RTClientExecPost"],[t8.AuthorizationCodeClientExecutePostToTokenEndpoint,"AuthCodeClientExecPost"],[t8.BrokerHandhshake,"BrokerHandshake"],[t8.AcquireTokenByRefreshTokenInBroker,"ATByRTInBroker"],[t8.AcquireTokenByBroker,"ATByBroker"],[t8.RefreshTokenClientExecuteTokenRequest,"RTClientExecTReq"],[t8.RefreshTokenClientAcquireToken,"RTClientAT"],[t8.RefreshTokenClientAcquireTokenWithCachedRefreshToken,"RTClientATWithCachedRT"],[t8.RefreshTokenClientAcquireTokenByRefreshToken,"RTClientATByRT"],[t8.RefreshTokenClientCreateTokenRequestBody,"RTClientCreateTReqBody"],[t8.AcquireTokenFromCache,"ATFromCache"],[t8.SilentFlowClientAcquireCachedToken,"SltFlowClientATCached"],[t8.SilentFlowClientGenerateResultFromCacheRecord,"SltFlowClientGenResFromCache"],[t8.AcquireTokenBySilentIframe,"ATBySltIframe"],[t8.InitializeBaseRequest,"InitBaseReq"],[t8.InitializeSilentRequest,"InitSltReq"],[t8.InitializeClientApplication,"InitClientApplication"],[t8.SilentIframeClientTokenHelper,"SIClientTHelper"],[t8.SilentHandlerInitiateAuthRequest,"SHandlerInitAuthReq"],[t8.SilentHandlerMonitorIframeForHash,"SltHandlerMonitorIframeForHash"],[t8.SilentHandlerLoadFrame,"SHandlerLoadFrame"],[t8.SilentHandlerLoadFrameSync,"SHandlerLoadFrameSync"],[t8.StandardInteractionClientCreateAuthCodeClient,"StdIntClientCreateAuthCodeClient"],[t8.StandardInteractionClientGetClientConfiguration,"StdIntClientGetClientConf"],[t8.StandardInteractionClientInitializeAuthorizationRequest,"StdIntClientInitAuthReq"],[t8.StandardInteractionClientInitializeAuthorizationCodeRequest,"StdIntClientInitAuthCodeReq"],[t8.GetAuthCodeUrl,"GetAuthCodeUrl"],[t8.HandleCodeResponseFromServer,"HandleCodeResFromServer"],[t8.HandleCodeResponse,"HandleCodeResp"],[t8.UpdateTokenEndpointAuthority,"UpdTEndpointAuth"],[t8.AuthClientAcquireToken,"AuthClientAT"],[t8.AuthClientExecuteTokenRequest,"AuthClientExecTReq"],[t8.AuthClientCreateTokenRequestBody,"AuthClientCreateTReqBody"],[t8.AuthClientCreateQueryString,"AuthClientCreateQueryStr"],[t8.PopTokenGenerateCnf,"PopTGenCnf"],[t8.PopTokenGenerateKid,"PopTGenKid"],[t8.HandleServerTokenResponse,"HandleServerTRes"],[t8.DeserializeResponse,"DeserializeRes"],[t8.AuthorityFactoryCreateDiscoveredInstance,"AuthFactCreateDiscInst"],[t8.AuthorityResolveEndpointsAsync,"AuthResolveEndpointsAsync"],[t8.AuthorityResolveEndpointsFromLocalSources,"AuthResolveEndpointsFromLocal"],[t8.AuthorityGetCloudDiscoveryMetadataFromNetwork,"AuthGetCDMetaFromNet"],[t8.AuthorityUpdateCloudDiscoveryMetadata,"AuthUpdCDMeta"],[t8.AuthorityGetEndpointMetadataFromNetwork,"AuthUpdCDMetaFromNet"],[t8.AuthorityUpdateEndpointMetadata,"AuthUpdEndpointMeta"],[t8.AuthorityUpdateMetadataWithRegionalInformation,"AuthUpdMetaWithRegInfo"],[t8.RegionDiscoveryDetectRegion,"RegDiscDetectReg"],[t8.RegionDiscoveryGetRegionFromIMDS,"RegDiscGetRegFromIMDS"],[t8.RegionDiscoveryGetCurrentVersion,"RegDiscGetCurrentVer"],[t8.AcquireTokenByCodeAsync,"ATByCodeAsync"],[t8.GetEndpointMetadataFromNetwork,"GetEndpointMetaFromNet"],[t8.GetCloudDiscoveryMetadataFromNetworkMeasurement,"GetCDMetaFromNet"],[t8.HandleRedirectPromiseMeasurement,"HandleRedirectPromise"],[t8.HandleNativeRedirectPromiseMeasurement,"HandleNtvRedirectPromise"],[t8.UpdateCloudDiscoveryMetadataMeasurement,"UpdateCDMeta"],[t8.UsernamePasswordClientAcquireToken,"UserPassClientAT"],[t8.NativeMessageHandlerHandshake,"NtvMsgHandlerHandshake"],[t8.NativeGenerateAuthResult,"NtvGenAuthRes"],[t8.RemoveHiddenIframe,"RemoveHiddenIframe"],[t8.ClearTokensAndKeysWithClaims,"ClearTAndKeysWithClaims"],[t8.CacheManagerGetRefreshToken,"CacheManagerGetRT"],[t8.GeneratePkceCodes,"GenPkceCodes"],[t8.GenerateCodeVerifier,"GenCodeVerifier"],[t8.GenerateCodeChallengeFromVerifier,"GenCodeChallengeFromVerifier"],[t8.Sha256Digest,"Sha256Digest"],[t8.GetRandomValues,"GetRandomValues"]]),t7=new Set(["accessTokenSize","durationMs","idTokenSize","matsSilentStatus","matsHttpStatus","refreshTokenSize","queuedTimeMs","startTimeMs","status","multiMatchedAT","multiMatchedID","multiMatchedRT"]),re=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);let a=n?.startMeasurement(t,o);o&&n?.incrementFields({[t+"CallCount"]:1},o);try{let n=e(...i);return a?.end({success:!0}),r.trace(`Returning result from ${t}`),n}catch(e){r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw a?.end({success:!1},e),e}},rt=(e,t,r,n,o)=>(...i)=>{r.trace(`Executing function ${t}`);let a=n?.startMeasurement(t,o);return o&&n?.incrementFields({[t+"CallCount"]:1},o),n?.setPreQueueTime(t,o),e(...i).then(e=>(r.trace(`Returning result from ${t}`),a?.end({success:!0}),e)).catch(e=>{r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw a?.end({success:!1},e),e})};class rr{constructor(e,t,r,n){this.networkInterface=e,this.logger=t,this.performanceClient=r,this.correlationId=n}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(t8.RegionDiscoveryDetectRegion,this.correlationId);let n=e;if(n)t.region_source=E.ENVIRONMENT_VARIABLE;else{let e=rr.IMDS_OPTIONS;try{let o=await rt(this.getRegionFromIMDS.bind(this),t8.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(r.IMDS_VERSION,e);if(o.status===w.httpSuccess&&(n=o.body,t.region_source=E.IMDS),o.status===w.httpBadRequest){let r=await rt(this.getCurrentVersion.bind(this),t8.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(e);if(!r)return t.region_source=E.FAILED_AUTO_DETECTION,null;let o=await rt(this.getRegionFromIMDS.bind(this),t8.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(r,e);o.status===w.httpSuccess&&(n=o.body,t.region_source=E.IMDS)}}catch(e){return t.region_source=E.FAILED_AUTO_DETECTION,null}}return n||(t.region_source=E.FAILED_AUTO_DETECTION),n||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(t8.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${r.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,r.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(t8.RegionDiscoveryGetCurrentVersion,this.correlationId);try{let t=await this.networkInterface.sendGetRequestAsync(`${r.IMDS_ENDPOINT}?format=json`,e);if(t.status===w.httpBadRequest&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0)return t.body["newest-versions"][0];return null}catch(e){return null}}}rr.IMDS_OPTIONS={headers:{Metadata:"true"}};class rn{constructor(e,t,r,n,o,i,a,s){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=r,this.authorityOptions=n,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=o,this.performanceClient=a,this.correlationId=i,this.managedIdentity=s||!1,this.regionDiscovery=new rr(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(r.CIAM_AUTH_URL))return tw.Ciam;let t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case r.ADFS:return tw.Adfs;case r.DSTS:return tw.Dsts}return tw.Default}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new tb(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw eN(F)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw eN(F)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw eN(F)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw eN(eI);return this.replacePath(this.metadata.end_session_endpoint)}throw eN(F)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw eN(F)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw eN(F)}canReplaceTenant(e){return 1===e.PathSegments.length&&!rn.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===tw.Default&&this.protocolMode===tk.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e,r=new tb(this.metadata.canonical_authority).getUrlComponents(),n=r.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((e,o)=>{let i=n[o];if(0===o&&this.canReplaceTenant(r)){let e=new tb(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];i!==e&&(this.logger.verbose(`Replacing tenant domain name ${i} with id ${e}`),i=e)}e!==i&&(t=t.replace(`/${i}/`,`/${e}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){let e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===tw.Adfs||this.protocolMode!==tk.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(t8.AuthorityResolveEndpointsAsync,this.correlationId);let e=this.getCurrentMetadataEntity(),t=await rt(this.updateCloudDiscoveryMetadata.bind(this),t8.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);let r=await rt(this.updateEndpointMetadata.bind(this),t8.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:r}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:r},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:eB()+86400,jwks_uri:""}),e}updateCachedMetadata(e,t,r){t!==y.CACHE&&r?.source!==y.CACHE&&(e.expiresAt=eB()+86400,e.canonical_authority=this.canonicalAuthority);let n=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(n,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(t8.AuthorityUpdateEndpointMetadata,this.correlationId);let t=this.updateEndpointMetadataFromLocalSources(e);if(t)return t.source===y.HARDCODED_VALUES&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata&&(eY(e,await rt(this.updateMetadataWithRegionalInformation.bind(this),t8.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata),!1),e.canonical_authority=this.canonicalAuthority),t.source;let r=await rt(this.getEndpointMetadataFromNetwork.bind(this),t8.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(r=await rt(this.updateMetadataWithRegionalInformation.bind(this),t8.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(r)),eY(e,r,!0),y.NETWORK;throw eN(G,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");let t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),eY(e,t,!1),{source:y.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{let t=this.getEndpointMetadataFromHardcodedValues();if(t)return eY(e,t,!1),{source:y.HARDCODED_VALUES,metadata:t};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}let r=eX(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!r?(this.logger.verbose("Found endpoint metadata in the cache."),{source:y.CACHE}):(r&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new tb(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw tm(tr)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(t8.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);let e=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${e}`);try{var t;let r=await this.networkInterface.sendGetRequestAsync(e,{});if((t=r.body).hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("jwks_uri"))return r.body;return this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null}catch(e){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in tP?tP[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(t8.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);let t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==r.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=k.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,rn.replaceWithRegionalInformation(e,t);let n=await rt(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),t8.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(n)return this.regionDiscoveryMetadata.region_outcome=k.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=n,rn.replaceWithRegionalInformation(e,n);this.regionDiscoveryMetadata.region_outcome=k.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(t8.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);let t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;let r=await rt(this.getCloudDiscoveryMetadataFromNetwork.bind(this),t8.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return eJ(e,r,!0),y.NETWORK;throw tm(tn)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||r.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||r.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||r.NOT_APPLICABLE}`);let t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),eJ(e,t,!1),y.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{var n;let t=(n=this.hostnameAndPort,tq(tN.metadata,n));if(t)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),eJ(e,t,!1),y.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}let o=eX(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!o?(this.logger.verbose("Found cloud discovery metadata in the cache."),y.CACHE):(o&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===tw.Ciam)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),rn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");let e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=tq(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),tm(tt)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),rn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(t8.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);let e=`${r.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t=null;try{var n,o;let i,a;let s=await this.networkInterface.sendGetRequestAsync(e,{});if((n=s.body).hasOwnProperty("tenant_discovery_endpoint")&&n.hasOwnProperty("metadata"))a=(i=s.body).metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else{if(!((o=s.body).hasOwnProperty("error")&&o.hasOwnProperty("error_description")))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${s.status}`),(i=s.body).error===r.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),a=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),t=tq(a,this.hostnameAndPort)}catch(e){return e instanceof U?this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${e.errorCode}
Error Description: ${e.errorMessage}`):this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${e.name}
Error Description: ${e.message}`),null}return t||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),t=rn.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),t}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(e=>e&&tb.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==eL.None){let e=t.tenant?t.tenant:r.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${e}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return r.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw eN(F)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return tM.has(e)}static isPublicCloudAuthority(e){return r.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){let o=new tb(e);o.validateAsUri();let i=o.getUrlComponents(),a=`${t}.${i.HostNameAndPort}`;this.isPublicCloudAuthority(i.HostNameAndPort)&&(a=`${t}.${r.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);let s=tb.constructAuthorityUriFromObject({...o.getUrlComponents(),HostNameAndPort:a}).urlString;return n?`${s}?${n}`:s}static replaceWithRegionalInformation(e,t){let r={...e};return r.authorization_endpoint=rn.buildRegionalAuthorityString(r.authorization_endpoint,t),r.token_endpoint=rn.buildRegionalAuthorityString(r.token_endpoint,t),r.end_session_endpoint&&(r.end_session_endpoint=rn.buildRegionalAuthorityString(r.end_session_endpoint,t)),r}static transformCIAMAuthority(e){let t=e,n=new tb(e).getUrlComponents();if(0===n.PathSegments.length&&n.HostNameAndPort.endsWith(r.CIAM_AUTH_URL)){let e=n.HostNameAndPort.split(".")[0];t=`${t}${e}${r.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}function ro(e){return e.endsWith(r.FORWARD_SLASH)?e:`${e}${r.FORWARD_SLASH}`}function ri(e){let t;let r=e.cloudDiscoveryMetadata;if(r)try{t=JSON.parse(r)}catch(e){throw tm(tt)}return{canonicalAuthority:e.authority?ro(e.authority):void 0,knownAuthorities:e.knownAuthorities,cloudDiscoveryMetadata:t}}async function ra(e,t,r,n,o,i,a){a?.addQueueMeasurement(t8.AuthorityFactoryCreateDiscoveredInstance,i);let s=rn.transformCIAMAuthority(ro(e)),c=new rn(s,t,r,n,o,i,a);try{return await rt(c.resolveEndpointsAsync.bind(c),t8.AuthorityResolveEndpointsAsync,o,a,i)(),c}catch(e){throw eN(F)}}rn.reservedTenantDomains=new Set(["{tenant}","{tenantid}",c.COMMON,c.CONSUMERS,c.ORGANIZATIONS]);class rs{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:r,cacheOptions:n,storageInterface:o,networkInterface:i,cryptoInterface:a,clientCredentials:s,libraryInfo:c,telemetry:l,serverTelemetryManager:h,persistencePlugin:d,serializableCache:u}){let g={...tK,...r};return{authOptions:{clientCapabilities:[],azureCloudOptions:tW,skipAuthorityMetadataCache:!1,instanceAware:!1,...e},systemOptions:{...tF,...t},loggerOptions:g,cacheOptions:{...tG,...n},storageInterface:o||new tx(e.clientId,eM,new eO(g)),networkInterface:i||tz,cryptoInterface:a||eM,clientCredentials:s||tQ,libraryInfo:{...t$,...c},telemetry:{...tV,...l},serverTelemetryManager:h||null,persistencePlugin:d||null,serializableCache:u||null}}(e),this.logger=new eO(this.config.loggerOptions,eq,eU),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.networkManager=new tX(this.networkClient,this.cacheManager),this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){let t={};if(t[a.CONTENT_TYPE]=r.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case tZ.HOME_ACCOUNT_ID:try{let r=tT(e.credential);t[a.CCS_HEADER]=`Oid:${r.uid}@${r.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case tZ.UPN:t[a.CCS_HEADER]=`UPN: ${e.credential}`}return t}async executePostToTokenEndpoint(e,t,r,n,o,i){i&&this.performanceClient?.addQueueMeasurement(i,o);let s=await this.networkManager.sendPostRequest(n,e,{body:t,headers:r});return this.performanceClient?.addFields({refreshTokenSize:s.body.refresh_token?.length||0,httpVerToken:s.headers?.[a.X_MS_HTTP_VERSION]||""},o),this.config.serverTelemetryManager&&s.status<500&&429!==s.status&&this.config.serverTelemetryManager.clearTelemetryCache(),s}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(t8.UpdateTokenEndpointAuthority,t);let r=`https://${e}/${this.authority.tenant}/`,n=await ra(r,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=n}createTokenQueryParameters(e){let t=new t5;return e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.createQueryString()}}let rc="no_tokens_found",rl="native_account_unavailable",rh="refresh_token_expired",rd="interaction_required",ru="consent_required",rg="login_required",rp="bad_token";var rm=Object.freeze({__proto__:null,badToken:rp,consentRequired:ru,interactionRequired:rd,loginRequired:rg,nativeAccountUnavailable:rl,noTokensFound:rc,refreshTokenExpired:rh});let rC=[rd,ru,rg,rp],rf=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],ry={[rc]:"No refresh token found in the cache. Please sign-in.",[rl]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[rh]:"Refresh token has expired.",[rp]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."},rT={noTokensFoundError:{code:rc,desc:ry[rc]},native_account_unavailable:{code:rl,desc:ry[rl]},bad_token:{code:rp,desc:ry[rp]}};class rI extends U{constructor(e,t,n,o,i,a,s,c){super(e,t,n),Object.setPrototypeOf(this,rI.prototype),this.timestamp=o||r.EMPTY_STRING,this.traceId=i||r.EMPTY_STRING,this.correlationId=a||r.EMPTY_STRING,this.claims=s||r.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function rA(e,t,r){let n=!!e&&rC.indexOf(e)>-1,o=!!r&&rf.indexOf(r)>-1,i=!!t&&rC.some(e=>t.indexOf(e)>-1);return n||i||o}function rv(e){return new rI(e,ry[e])}class rw{static setRequestState(e,t,n){let o=rw.generateLibraryState(e,n);return t?`${o}${r.RESOURCE_DELIM}${t}`:o}static generateLibraryState(e,t){if(!e)throw eN(ed);let r={id:e.createNewGuid()};t&&(r.meta=t);let n=JSON.stringify(r);return e.base64Encode(n)}static parseRequestState(e,t){if(!e)throw eN(ed);if(!t)throw eN($);try{let n=t.split(r.RESOURCE_DELIM),o=n[0],i=n.length>1?n.slice(1).join(r.RESOURCE_DELIM):r.EMPTY_STRING,a=e.base64Decode(o),s=JSON.parse(a);return{userRequestState:i||r.EMPTY_STRING,libraryState:s}}catch(e){throw eN($)}}}class rE{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(t8.PopTokenGenerateCnf,e.correlationId);let r=await rt(this.generateKid.bind(this),t8.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),n=this.cryptoUtils.base64UrlEncode(JSON.stringify(r));return{kid:r.kid,reqCnfString:n}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(t8.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:"sw"}}async signPopToken(e,t,r){return this.signPayload(e,t,r)}async signPayload(e,t,r,n){let{resourceRequestMethod:o,resourceRequestUri:i,shrClaims:a,shrNonce:s,shrOptions:c}=r,l=i?new tb(i):void 0,h=l?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:eB(),m:o?.toUpperCase(),u:h?.HostNameAndPort,nonce:s||this.cryptoUtils.createNewGuid(),p:h?.AbsolutePath,q:h?.QueryString?[[],h.QueryString]:void 0,client_claims:a||void 0,...n},t,c,r.correlationId)}}class rk{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}class rS{constructor(e,t,r,n,o,i,a){this.clientId=e,this.cacheStorage=t,this.cryptoObj=r,this.logger=n,this.serializableCache=o,this.persistencePlugin=i,this.performanceClient=a}validateServerAuthorizationCodeResponse(e,t){let r,n;if(!e.state||!t)throw e.state?eN(W,"Cached State"):eN(W,"Server State");try{r=decodeURIComponent(e.state)}catch(t){throw eN($,e.state)}try{n=decodeURIComponent(t)}catch(t){throw eN($,e.state)}if(r!==n)throw eN(Q);if(e.error||e.error_description||e.suberror){let t=function(e){let t="code=",r=e.error_uri?.lastIndexOf(t);return r&&r>=0?e.error_uri?.substring(r+t.length):void 0}(e);if(rA(e.error,e.error_description,e.suberror))throw new rI(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",t);throw new tY(e.error||"",e.error_description,e.suberror,t)}}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){let o=`Error(s): ${e.error_codes||r.NOT_AVAILABLE} - Timestamp: ${e.timestamp||r.NOT_AVAILABLE} - Description: ${e.error_description||r.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||r.NOT_AVAILABLE} - Trace ID: ${e.trace_id||r.NOT_AVAILABLE}`,i=e.error_codes?.length?e.error_codes[0]:void 0,a=new tY(e.error,o,e.suberror,i,e.status);if(t&&e.status&&e.status>=n.SERVER_ERROR_RANGE_START&&e.status<=n.SERVER_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${a}`);return}if(t&&e.status&&e.status>=n.CLIENT_ERROR_RANGE_START&&e.status<=n.CLIENT_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${a}`);return}if(rA(e.error,e.error_description,e.suberror))throw new rI(e.error,e.error_description,e.suberror,e.timestamp||r.EMPTY_STRING,e.trace_id||r.EMPTY_STRING,e.correlation_id||r.EMPTY_STRING,e.claims||r.EMPTY_STRING,i);throw a}}async handleServerTokenResponse(e,t,n,o,i,a,s,c,l){let h,d,u;if(this.performanceClient?.addQueueMeasurement(t8.HandleServerTokenResponse,e.correlation_id),e.id_token){if(h=eH(e.id_token||r.EMPTY_STRING,this.cryptoObj.base64Decode),i&&i.nonce&&h.nonce!==i.nonce)throw eN(V);if(o.maxAge||0===o.maxAge){let e=h.auth_time;if(!e)throw eN(j);eD(e,o.maxAge)}}this.homeAccountIdentifier=tS.generateHomeAccountId(e.client_info||r.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,h),i&&i.state&&(d=rw.parseRequestState(this.cryptoObj,i.state)),e.key_id=e.key_id||o.sshKid||void 0;let g=this.generateCacheRecord(e,t,n,o,h,a,i);try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),u=new rk(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(u)),s&&!c&&g.account){let e=g.account.generateAccountKey();if(!this.cacheStorage.getAccount(e,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await rS.generateAuthenticationResult(this.cryptoObj,t,g,!1,o,h,d,void 0,l)}await this.cacheStorage.saveCacheRecord(g,o.storeInCache,o.correlationId)}finally{this.persistencePlugin&&this.serializableCache&&u&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(u))}return rS.generateAuthenticationResult(this.cryptoObj,t,g,!1,o,h,d,e,l)}generateCacheRecord(e,t,r,n,o,i,a){let s,c;let l=t.getPreferredCache();if(!l)throw eN(el);let h=tE(o);e.id_token&&o&&(s=eG(this.homeAccountIdentifier,l,e.id_token,this.clientId,h||""),c=rR(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,o,e.client_info,l,h,a,void 0,this.logger));let d=null;if(e.access_token){let o=e.scope?tf.fromString(e.scope):new tf(n.scopes||[]),a=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,s=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,c=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,u=r+a;d=ez(this.homeAccountIdentifier,l,e.access_token,this.clientId,h||t.tenant||"",o.printScopes(),u,u+s,this.cryptoObj.base64Decode,c&&c>0?r+c:void 0,e.token_type,i,e.key_id,n.claims,n.requestedClaimsHash)}let u=null;if(e.refresh_token){let t;e.refresh_token_expires_in&&(t=r+("string"==typeof e.refresh_token_expires_in?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in)),u=e$(this.homeAccountIdentifier,l,e.refresh_token,this.clientId,e.foci,i,t)}let g=null;return e.foci&&(g={clientId:this.clientId,environment:l,familyId:e.foci}),{account:c,idToken:s,accessToken:d,refreshToken:u,appMetadata:g}}static async generateAuthenticationResult(e,t,n,o,i,a,s,c,l){let h,d,u=r.EMPTY_STRING,g=[],p=null,m=r.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType!==I.POP||i.popKid)u=n.accessToken.secret;else{let t=new rE(e),{secret:r,keyId:o}=n.accessToken;if(!o)throw eN(eA);u=await t.signPopToken(r,o,i)}g=tf.fromString(n.accessToken.target).asArray(),p=new Date(1e3*Number(n.accessToken.expiresOn)),h=new Date(1e3*Number(n.accessToken.extendedExpiresOn)),n.accessToken.refreshOn&&(d=new Date(1e3*Number(n.accessToken.refreshOn)))}n.appMetadata&&(m="1"===n.appMetadata.familyId?"1":"");let C=a?.oid||a?.sub||"",f=a?.tid||"";c?.spa_accountid&&n.account&&(n.account.nativeAccountId=c?.spa_accountid);let y=n.account?tv(n.account.getAccountInfo(),void 0,a,n.idToken?.secret):null;return{authority:t.canonicalAuthority,uniqueId:C,tenantId:f,scopes:g,account:y,idToken:n?.idToken?.secret||"",idTokenClaims:a||{},accessToken:u,fromCache:o,expiresOn:p,extExpiresOn:h,refreshOn:d,correlationId:i.correlationId,requestId:l||r.EMPTY_STRING,familyId:m,tokenType:n.accessToken?.tokenType||r.EMPTY_STRING,state:s?s.userRequestState:r.EMPTY_STRING,cloudGraphHostName:n.account?.cloudGraphHostName||r.EMPTY_STRING,msGraphHost:n.account?.msGraphHost||r.EMPTY_STRING,code:c?.spa_code,fromNativeBroker:!1}}}function rR(e,t,r,n,o,i,a,s,c,l,h){h?.verbose("setCachedAccount called");let d=e.getAccountKeys().find(e=>e.startsWith(r)),u=null;d&&(u=e.getAccount(d,h));let g=u||tS.createAccount({homeAccountId:r,idTokenClaims:o,clientInfo:i,environment:a,cloudGraphHostName:c?.cloud_graph_host_name,msGraphHost:c?.msgraph_host,nativeAccountId:l},t,n),p=g.tenantProfiles||[],m=s||g.realm;if(m&&!p.find(e=>e.tenantId===m)){let e=tA(r,g.localAccountId,m,o);p.push(e)}return g.tenantProfiles=p,g}async function r_(e,t,r){return"string"==typeof e?e:e({clientId:t,tokenEndpoint:r})}class rb extends rs{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement(t8.GetAuthCodeUrl,e.correlationId);let t=await rt(this.createAuthCodeUrlQueryString.bind(this),t8.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return tb.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(t8.AuthClientAcquireToken,e.correlationId),!e.code)throw eN(ee);let r=eB(),n=await rt(this.executeTokenRequest.bind(this),t8.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),o=n.headers?.[a.X_MS_REQUEST_ID],i=new rS(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return i.validateTokenResponse(n.body),rt(i.handleServerTokenResponse.bind(i),t8.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,r,e,t,void 0,void 0,void 0,o)}handleFragmentResponse(e,t){if(new rS(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw eN(ey);return e}getLogoutUri(e){if(!e)throw tm(e9);let t=this.createLogoutUrlQueryString(e);return tb.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){let r;this.performanceClient?.addQueueMeasurement(t8.AuthClientExecuteTokenRequest,t.correlationId);let n=this.createTokenQueryParameters(t),o=tb.appendQueryString(e.tokenEndpoint,n),i=await rt(this.createTokenRequestBody.bind(this),t8.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);if(t.clientInfo)try{let e=ty(t.clientInfo,this.cryptoUtils.base64Decode);r={credential:`${e.uid}${p.CLIENT_INFO_SEPARATOR}${e.utid}`,type:tZ.HOME_ACCOUNT_ID}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}let a=this.createTokenRequestHeaders(r||t.ccsCredential),s={clientId:t.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return rt(this.executePostToTokenEndpoint.bind(this),t8.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(o,i,a,s,t.correlationId,t8.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){let t;this.performanceClient?.addQueueMeasurement(t8.AuthClientCreateTokenRequestBody,e.correlationId);let r=new t5;if(r.addClientId(e.tokenBodyParameters?.[t0]||this.config.authOptions.clientId),this.includeRedirectUri?r.addRedirectUri(e.redirectUri):t3.validateRedirectUri(e.redirectUri),r.addScopes(e.scopes,!0,this.oidcDefaultScopes),r.addAuthorizationCode(e.code),r.addLibraryInfo(this.config.libraryInfo),r.addApplicationTelemetry(this.config.telemetry.application),r.addThrottling(),this.serverTelemetryManager&&!tj(this.config)&&r.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&r.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&r.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){let t=this.config.clientCredentials.clientAssertion;r.addClientAssertion(await r_(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),r.addClientAssertionType(t.assertionType)}if(r.addGrantType("authorization_code"),r.addClientInfo(),e.authenticationScheme===I.POP){let t;let n=new rE(this.cryptoUtils,this.performanceClient);t=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await rt(n.generateCnf.bind(n),t8.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,r.addPopToken(t)}else if(e.authenticationScheme===I.SSH){if(e.sshJwk)r.addSshJwk(e.sshJwk);else throw tm(to)}let n=e.correlationId||this.config.cryptoInterface.createNewGuid();if(r.addCorrelationId(n),(!tC.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{let r=ty(e.clientInfo,this.cryptoUtils.base64Decode);t={credential:`${r.uid}${p.CLIENT_INFO_SEPARATOR}${r.utid}`,type:tZ.HOME_ACCOUNT_ID}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else t=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&t)switch(t.type){case tZ.HOME_ACCOUNT_ID:try{let e=tT(t.credential);r.addCcsOid(e)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case tZ.UPN:r.addCcsUpn(t.credential)}return e.tokenBodyParameters&&r.addExtraQueryParameters(e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[t4]||r.addExtraQueryParameters({[t4]:"1"}),r.createQueryString()}async createAuthCodeUrlQueryString(e){this.performanceClient?.addQueueMeasurement(t8.AuthClientCreateQueryString,e.correlationId);let t=new t5;t.addClientId(e.extraQueryParameters?.[t0]||this.config.authOptions.clientId);let r=[...e.scopes||[],...e.extraScopesToConsent||[]];t.addScopes(r,!0,this.oidcDefaultScopes),t.addRedirectUri(e.redirectUri);let n=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(n),t.addResponseMode(e.responseMode),t.addResponseTypeCode(),t.addLibraryInfo(this.config.libraryInfo),tj(this.config)||t.addApplicationTelemetry(this.config.telemetry.application),t.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&t.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&t.addPrompt(e.prompt),e.domainHint&&t.addDomainHint(e.domainHint),e.prompt!==h.SELECT_ACCOUNT){if(e.sid&&e.prompt===h.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),t.addSid(e.sid);else if(e.account){let r=this.extractAccountSid(e.account),n=this.extractLoginHint(e.account);if(n&&e.domainHint&&(this.logger.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),n=null),n){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),t.addLoginHint(n);try{let r=tT(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(r&&e.prompt===h.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),t.addSid(r);try{let r=tT(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),t.addLoginHint(e.account.username);try{let r=tT(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint))}else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&t.addNonce(e.nonce),e.state&&t.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.addExtraQueryParams(e,t),e.nativeBroker&&(t.addNativeBroker(),e.authenticationScheme===I.POP)){let r;let n=new rE(this.cryptoUtils);r=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await rt(n.generateCnf.bind(n),t8.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(r)}return t.createQueryString()}createLogoutUrlQueryString(e){let t=new t5;return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),this.addExtraQueryParams(e,t),t.createQueryString()}addExtraQueryParams(e,t){!(e.extraQueryParameters&&e.extraQueryParameters.hasOwnProperty("instance_aware"))&&this.config.authOptions.instanceAware&&(e.extraQueryParameters=e.extraQueryParameters||{},e.extraQueryParameters.instance_aware="true"),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters)}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}class rP extends rs{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(t8.RefreshTokenClientAcquireToken,e.correlationId);let t=eB(),r=await rt(this.executeTokenRequest.bind(this),t8.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),n=r.headers?.[a.X_MS_REQUEST_ID],o=new rS(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return o.validateTokenResponse(r.body),rt(o.handleServerTokenResponse.bind(o),t8.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,n)}async acquireTokenByRefreshToken(e){if(!e)throw tm(e8);if(this.performanceClient?.addQueueMeasurement(t8.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw eN(es);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await rt(this.acquireTokenWithCachedRefreshToken.bind(this),t8.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(r){let e=r instanceof rI&&r.errorCode===rc,t=r instanceof tY&&r.errorCode===v.INVALID_GRANT_ERROR&&r.subError===v.CLIENT_MISMATCH_ERROR;if(e||t);else throw r}return rt(this.acquireTokenWithCachedRefreshToken.bind(this),t8.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(t8.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);let r=re(this.cacheManager.getRefreshToken.bind(this.cacheManager),t8.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!r)throw rv(rc);if(r.expiresOn&&ex(r.expiresOn,e.refreshTokenExpirationOffsetSeconds||300))throw rv(rh);let n={...e,refreshToken:r.secret,authenticationScheme:e.authenticationScheme||I.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:tZ.HOME_ACCOUNT_ID}};try{return await rt(this.acquireToken.bind(this),t8.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(n)}catch(e){if(e instanceof rI&&e.subError===rp){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");let e=eK(r);this.cacheManager.removeRefreshToken(e)}throw e}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(t8.RefreshTokenClientExecuteTokenRequest,e.correlationId);let r=this.createTokenQueryParameters(e),n=tb.appendQueryString(t.tokenEndpoint,r),o=await rt(this.createTokenRequestBody.bind(this),t8.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),i=this.createTokenRequestHeaders(e.ccsCredential),a={clientId:e.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return rt(this.executePostToTokenEndpoint.bind(this),t8.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(n,o,i,a,e.correlationId,t8.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(t8.RefreshTokenClientCreateTokenRequestBody,e.correlationId);let t=e.correlationId,r=new t5;if(r.addClientId(e.tokenBodyParameters?.[t0]||this.config.authOptions.clientId),e.redirectUri&&r.addRedirectUri(e.redirectUri),r.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),r.addGrantType("refresh_token"),r.addClientInfo(),r.addLibraryInfo(this.config.libraryInfo),r.addApplicationTelemetry(this.config.telemetry.application),r.addThrottling(),this.serverTelemetryManager&&!tj(this.config)&&r.addServerTelemetry(this.serverTelemetryManager),r.addCorrelationId(t),r.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&r.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){let t=this.config.clientCredentials.clientAssertion;r.addClientAssertion(await r_(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),r.addClientAssertionType(t.assertionType)}if(e.authenticationScheme===I.POP){let t;let n=new rE(this.cryptoUtils,this.performanceClient);t=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await rt(n.generateCnf.bind(n),t8.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,r.addPopToken(t)}else if(e.authenticationScheme===I.SSH){if(e.sshJwk)r.addSshJwk(e.sshJwk);else throw tm(to)}if((!tC.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case tZ.HOME_ACCOUNT_ID:try{let t=tT(e.ccsCredential.credential);r.addCcsOid(t)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case tZ.UPN:r.addCcsUpn(e.ccsCredential.credential)}return e.tokenBodyParameters&&r.addExtraQueryParameters(e.tokenBodyParameters),r.createQueryString()}}class rN extends rs{constructor(e,t){super(e,t)}async acquireToken(e){try{let[t,r]=await this.acquireCachedToken({...e,scopes:e.scopes?.length?e.scopes:[...o]});return r===S.PROACTIVELY_REFRESHED&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new rP(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch(()=>{})),t}catch(t){if(t instanceof eP&&t.errorCode===em)return new rP(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(t8.SilentFlowClientAcquireCachedToken,e.correlationId);let t=S.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!tC.isEmptyObj(e.claims))throw this.setCacheOutcome(S.FORCE_REFRESH_OR_CLAIMS,e.correlationId),eN(em);if(!e.account)throw eN(es);let r=e.account.tenantId||function(e){let t=new tb(e).getUrlComponents(),r=t.PathSegments.slice(-1)[0]?.toLowerCase();switch(r){case c.COMMON:case c.ORGANIZATIONS:case c.CONSUMERS:return;default:return r}}(e.authority),n=this.cacheManager.getTokenKeys(),o=this.cacheManager.getAccessToken(e.account,e,n,r,this.performanceClient,e.correlationId);if(o){if(eF(o.cachedAt)||ex(o.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(S.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),eN(em);o.refreshOn&&ex(o.refreshOn,0)&&(t=S.PROACTIVELY_REFRESHED)}else throw this.setCacheOutcome(S.NO_CACHED_ACCESS_TOKEN,e.correlationId),eN(em);let i=e.authority||this.authority.getPreferredCache(),a={account:this.cacheManager.readAccountFromCache(e.account),accessToken:o,idToken:this.cacheManager.getIdToken(e.account,n,r,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(i)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await rt(this.generateResultFromCacheRecord.bind(this),t8.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(a,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),e!==S.NOT_APPLICABLE&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){let r;if(this.performanceClient?.addQueueMeasurement(t8.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId),e.idToken&&(r=eH(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){let e=r?.auth_time;if(!e)throw eN(j);eD(e,t.maxAge)}return rS.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,r)}}let rM={sendGetRequestAsync:()=>Promise.reject(eN(ek)),sendPostRequestAsync:()=>Promise.reject(eN(ek))};class rO{constructor(e){this.headers=e}getShrNonce(){let e=this.headers[a.AuthenticationInfo];if(e){let t=this.parseChallenges(e);if(t.nextnonce)return t.nextnonce;throw tm(ts)}let t=this.headers[a.WWWAuthenticate];if(t){let e=this.parseChallenges(t);if(e.nonce)return e.nonce;throw tm(ts)}throw tm(ta)}parseChallenges(e){let t=e.indexOf(" "),n=e.substr(t+1).split(","),o={};return n.forEach(e=>{let[t,n]=e.split("=");o[t]=unescape(n.replace(/['"]+/g,r.EMPTY_STRING))}),o}}class rq{constructor(e,t){this.cacheOutcome=S.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||r.EMPTY_STRING,this.wrapperVer=e.wrapperVer||r.EMPTY_STRING,this.telemetryCacheKey=T.CACHE_KEY+p.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){let e=`${this.apiId}${T.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],r=this.getNativeBrokerErrorCode();r?.length&&t.push(`broker_error=${r}`);let n=t.join(T.VALUE_SEPARATOR),o=[e,this.getRegionDiscoveryFields()].join(T.VALUE_SEPARATOR);return[T.SCHEMA_VERSION,o,n].join(T.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){let e=this.getLastRequests(),t=rq.maxErrorsToSend(e),r=e.failedRequests.slice(0,2*t).join(T.VALUE_SEPARATOR),n=e.errors.slice(0,t).join(T.VALUE_SEPARATOR),o=e.errors.length,i=t<o?T.OVERFLOW_TRUE:T.OVERFLOW_FALSE,a=[o,i].join(T.VALUE_SEPARATOR);return[T.SCHEMA_VERSION,e.cacheHits,r,n,a].join(T.CATEGORY_SEPARATOR)}cacheFailedRequest(e){let t=this.getLastRequests();t.errors.length>=T.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof U?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(T.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){let e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||{failedRequests:[],errors:[],cacheHits:0}}clearTelemetryCache(){let e=this.getLastRequests(),t=rq.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey);else{let r={failedRequests:e.failedRequests.slice(2*t),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,r)}}static maxErrorsToSend(e){let t;let n=0,o=0,i=e.errors.length;for(t=0;t<i;t++){let i=e.failedRequests[2*t]||r.EMPTY_STRING,a=e.failedRequests[2*t+1]||r.EMPTY_STRING,s=e.errors[t]||r.EMPTY_STRING;if((o+=i.toString().length+a.toString().length+s.length+3)<T.MAX_LAST_HEADER_BYTES)n+=1;else break}return n}getRegionDiscoveryFields(){let e=[];return e.push(this.regionUsed||r.EMPTY_STRING),e.push(this.regionSource||r.EMPTY_STRING),e.push(this.regionOutcome||r.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){let t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){let e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e)}static makeExtraSkuString(e){return function(e){let{skus:t,libraryName:r,libraryVersion:n,extensionName:o,extensionVersion:i}=e,a=new Map([[0,[r,n]],[2,[o,i]]]),s=[];if(t?.length){if((s=t.split(",")).length<4)return t}else s=Array.from({length:4},()=>"|");return a.forEach((e,t)=>{2===e.length&&e[0]?.length&&e[1]?.length&&function(e){let{skuArr:t,index:r,skuName:n,skuVersion:o}=e;r>=t.length||(t[r]=[n,o].join("|"))}({skuArr:s,index:t,skuName:e[0],skuVersion:e[1]})}),s.join(",")}(e)}}let rU="missing_kid_error",rL="missing_alg_error",rH={[rU]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[rL]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class rD extends U{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,rD.prototype)}}function rB(e){return new rD(e,rH[e])}class rx{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw rB(rU);if(!e.alg)throw rB(rL);return JSON.stringify(new rx({typ:e.typ||R.Pop,kid:e.kid,alg:e.alg}))}}class rF{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class rK{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:1,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new rF}}startPerformanceMeasurement(){return new rF}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}class rG{constructor(e,t,r,n,o,i,a,s){for(let s of(this.authority=t,this.libraryName=n,this.libraryVersion=o,this.applicationTelemetry=i,this.clientId=e,this.logger=r,this.callbacks=new Map,this.eventsByCorrelationId=new Map,this.eventStack=new Map,this.queueMeasurements=new Map,this.preQueueTimeByCorrelationId=new Map,this.intFields=a||new Set,t7))this.intFields.add(s);for(let[e,t]of(this.abbreviations=s||new Map,t9))this.abbreviations.set(e,t)}startPerformanceMeasurement(e,t){return{}}getPreQueueTime(e,t){let r=this.preQueueTimeByCorrelationId.get(t);if(r){if(r.name!==e){this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue time found for ${e}, unable to add queue measurement`);return}}else{this.logger.trace(`PerformanceClient.getPreQueueTime: no pre-queue times found for correlationId: ${t}, unable to add queue measurement`);return}return r.time}calculateQueuedTime(e,t){return e<1?(this.logger.trace(`PerformanceClient: preQueueTime should be a positive integer and not ${e}`),0):t<1?(this.logger.trace(`PerformanceClient: currentTime should be a positive integer and not ${t}`),0):t<e?(this.logger.trace("PerformanceClient: currentTime is less than preQueueTime, check how time is being retrieved"),0):t-e}addQueueMeasurement(e,t,r,n){if(!t){this.logger.trace(`PerformanceClient.addQueueMeasurement: correlationId not provided for ${e}, cannot add queue measurement`);return}if(0===r)this.logger.trace(`PerformanceClient.addQueueMeasurement: queue time provided for ${e} is ${r}`);else if(!r){this.logger.trace(`PerformanceClient.addQueueMeasurement: no queue time provided for ${e}`);return}let o={eventName:e,queueTime:n?0:r,manuallyCompleted:n},i=this.queueMeasurements.get(t);i?(i.push(o),this.queueMeasurements.set(t,i)):(this.logger.trace(`PerformanceClient.addQueueMeasurement: adding correlationId ${t} to queue measurements`),this.queueMeasurements.set(t,[o])),this.preQueueTimeByCorrelationId.delete(t)}startMeasurement(e,t){var r,n;let o=t||this.generateId();t||this.logger.info(`PerformanceClient: No correlation id provided for ${e}, generating`,o),this.logger.trace(`PerformanceClient: Performance measurement started for ${e}`,o);let i={eventId:this.generateId(),status:1,authority:this.authority,libraryName:this.libraryName,libraryVersion:this.libraryVersion,clientId:this.clientId,name:e,startTimeMs:Date.now(),correlationId:o,appName:this.applicationTelemetry?.appName,appVersion:this.applicationTelemetry?.appVersion};return this.cacheEventByCorrelationId(i),r=this.abbreviations,(n=this.eventStack.get(o))&&n.push({name:r.get(i.name)||i.name}),{end:(e,t)=>this.endMeasurement({...i,...e},t),discard:()=>this.discardMeasurements(i.correlationId),add:e=>this.addFields(e,i.correlationId),increment:e=>this.incrementFields(e,i.correlationId),event:i,measurement:new rF}}endMeasurement(e,t){let r=this.eventsByCorrelationId.get(e.correlationId);if(!r)return this.logger.trace(`PerformanceClient: Measurement not found for ${e.eventId}`,e.correlationId),null;let n=e.eventId===r.eventId,o={totalQueueTime:0,totalQueueCount:0,manuallyCompletedCount:0};e.durationMs=Math.round(e.durationMs||this.getDurationMs(e.startTimeMs));let i=JSON.stringify(function(e,t,r,n){let o;if(!r?.length)return;let i=e=>e.length?e[e.length-1]:void 0,a=t.get(e.name)||e.name,s=i(r);if(s?.name!==a)return;let c=r?.pop();if(!c)return;let l=n instanceof U?n.errorCode:n instanceof Error?n.name:void 0,h=n instanceof U?n.subError:void 0;l&&c.childErr!==l&&(c.err=l,h&&(c.subErr=h)),delete c.name,delete c.childErr;let d={...c,dur:e.durationMs};e.success||(d.fail=1);let u=i(r);if(!u)return{[a]:d};if(l&&(u.childErr=l),u[a]){let e=Object.keys(u).filter(e=>e.startsWith(a)).length;o=`${a}_${e+1}`}else o=a;return u[o]=d,u}(e,this.abbreviations,this.eventStack.get(r.correlationId),t));if(n?(o=this.getQueueInfo(e.correlationId),this.discardMeasurements(r.correlationId)):r.incompleteSubMeasurements?.delete(e.eventId),this.logger.trace(`PerformanceClient: Performance measurement ended for ${e.name}: ${e.durationMs} ms`,e.correlationId),!n)return r[e.name+"DurationMs"]=Math.floor(e.durationMs),{...r};t&&function(e,t,r,n=5){if(e instanceof Error){if(e instanceof U){r.errorCode=e.errorCode,r.subErrorCode=e.subError,(e instanceof tY||e instanceof rI)&&(r.serverErrorNo=e.errorNo);return}if(e instanceof tD){r.errorCode=e.errorCode;return}if(r.errorStack?.length){t.trace("PerformanceClient.addErrorStack: Stack already exist",r.correlationId);return}else if(!e.stack?.length){t.trace("PerformanceClient.addErrorStack: Input stack is empty",r.correlationId);return}}else{t.trace("PerformanceClient.addErrorStack: Input error is not instance of Error",r.correlationId);return}e.stack&&(r.errorStack=function(e,t){if(t<0)return[];let r=e.split("\n")||[];if(r.length<2)return[];let n=[];for(let e=Math.max(r.length-t-1,1);e<r.length;e++){let o=r[e];if(n.length>=t)break;n.push(function(e){let t=e.lastIndexOf(" ")+1;if(t<1)return e;let r=e.substring(t),n=r.lastIndexOf("/");return(n=n<0?r.lastIndexOf("\\"):n)>=0?(e.substring(0,t)+"("+r.substring(n+1)+(")"===r.charAt(r.length-1)?"":")")).trimStart():e.trimStart()}(o))}return n}(e.stack,n)),r.errorName=e.name}(t,this.logger,r);let a={...r,...e},s=0;return a.incompleteSubMeasurements?.forEach(t=>{this.logger.trace(`PerformanceClient: Incomplete submeasurement ${t.name} found for ${e.name}`,a.correlationId),s++}),a.incompleteSubMeasurements=void 0,a={...a,queuedTimeMs:o.totalQueueTime,queuedCount:o.totalQueueCount,queuedManuallyCompletedCount:o.manuallyCompletedCount,status:2,incompleteSubsCount:s,context:i},this.truncateIntegralFields(a),this.emitEvents([a],e.correlationId),a}addFields(e,t){this.logger.trace("PerformanceClient: Updating static fields");let r=this.eventsByCorrelationId.get(t);r?this.eventsByCorrelationId.set(t,{...r,...e}):this.logger.trace("PerformanceClient: Event not found for",t)}incrementFields(e,t){this.logger.trace("PerformanceClient: Updating counters");let r=this.eventsByCorrelationId.get(t);if(r)for(let t in e){if(r.hasOwnProperty(t)){if(isNaN(Number(r[t])))return}else r[t]=0;r[t]+=e[t]}else this.logger.trace("PerformanceClient: Event not found for",t)}cacheEventByCorrelationId(e){let t=this.eventsByCorrelationId.get(e.correlationId);t?(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} added/updated`,e.correlationId),t.incompleteSubMeasurements=t.incompleteSubMeasurements||new Map,t.incompleteSubMeasurements.set(e.eventId,{name:e.name,startTimeMs:e.startTimeMs})):(this.logger.trace(`PerformanceClient: Performance measurement for ${e.name} started`,e.correlationId),this.eventsByCorrelationId.set(e.correlationId,{...e}),this.eventStack.set(e.correlationId,[]))}getQueueInfo(e){let t=this.queueMeasurements.get(e);t||this.logger.trace(`PerformanceClient: no queue measurements found for for correlationId: ${e}`);let r=0,n=0,o=0;return t?.forEach(e=>{r+=e.queueTime,n++,o+=e.manuallyCompleted?1:0}),{totalQueueTime:r,totalQueueCount:n,manuallyCompletedCount:o}}discardMeasurements(e){this.logger.trace("PerformanceClient: Performance measurements discarded",e),this.eventsByCorrelationId.delete(e),this.logger.trace("PerformanceClient: QueueMeasurements discarded",e),this.queueMeasurements.delete(e),this.logger.trace("PerformanceClient: Pre-queue times discarded",e),this.preQueueTimeByCorrelationId.delete(e),this.logger.trace("PerformanceClient: Event stack discarded",e),this.eventStack.delete(e)}addPerformanceCallback(e){for(let[t,r]of this.callbacks)if(r.toString()===e.toString())return this.logger.warning(`PerformanceClient: Performance callback is already registered with id: ${t}`),t;let t=this.generateId();return this.callbacks.set(t,e),this.logger.verbose(`PerformanceClient: Performance callback registered with id: ${t}`),t}removePerformanceCallback(e){let t=this.callbacks.delete(e);return t?this.logger.verbose(`PerformanceClient: Performance callback ${e} removed.`):this.logger.verbose(`PerformanceClient: Performance callback ${e} not removed.`),t}emitEvents(e,t){this.logger.verbose("PerformanceClient: Emitting performance events",t),this.callbacks.forEach((r,n)=>{this.logger.trace(`PerformanceClient: Emitting event to callback ${n}`,t),r.apply(null,[e])})}truncateIntegralFields(e){this.intFields.forEach(t=>{t in e&&"number"==typeof e[t]&&(e[t]=Math.floor(e[t]))})}getDurationMs(e){let t=Date.now()-e;return t<0?t:0}}let rz="pkce_not_created",r$="crypto_nonexistent",rQ="empty_navigate_uri",rW="hash_empty_error",rV="no_state_in_hash",rj="hash_does_not_contain_known_properties",rY="unable_to_parse_state",rJ="state_interaction_type_mismatch",rX="interaction_in_progress",rZ="popup_window_error",r0="empty_window_error",r1="user_cancelled",r2="monitor_popup_timeout",r6="monitor_window_timeout",r4="redirect_in_iframe",r3="block_iframe_reload",r5="block_nested_popups",r8="iframe_closed_prematurely",r9="silent_logout_unsupported",r7="no_account_error",ne="silent_prompt_value_error",nt="no_token_request_cache_error",nr="unable_to_parse_token_request_cache_error",nn="no_cached_authority_error",no="auth_request_not_set_error",ni="invalid_cache_type",na="non_browser_environment",ns="database_not_open",nc="no_network_connectivity",nl="post_request_failed",nh="get_request_failed",nd="failed_to_parse_response",nu="unable_to_load_token",ng="crypto_key_not_found",np="auth_code_required",nm="auth_code_or_nativeAccountId_required",nC="spa_code_and_nativeAccountId_present",nf="database_unavailable",ny="unable_to_acquire_token_from_native_platform",nT="native_handshake_timeout",nI="native_extension_not_installed",nA="native_connection_not_established",nv="uninitialized_public_client_application",nw="native_prompt_not_supported",nE="invalid_base64_string",nk="invalid_pop_token_request";var nS=Object.freeze({__proto__:null,authCodeOrNativeAccountIdRequired:nm,authCodeRequired:np,authRequestNotSetError:no,blockIframeReload:r3,blockNestedPopups:r5,cryptoKeyNotFound:ng,cryptoNonExistent:r$,databaseNotOpen:ns,databaseUnavailable:nf,emptyNavigateUri:rQ,emptyWindowError:r0,failedToParseResponse:nd,getRequestFailed:nh,hashDoesNotContainKnownProperties:rj,hashEmptyError:rW,iframeClosedPrematurely:r8,interactionInProgress:rX,invalidBase64String:nE,invalidCacheType:ni,invalidPopTokenRequest:nk,monitorPopupTimeout:r2,monitorWindowTimeout:r6,nativeConnectionNotEstablished:nA,nativeExtensionNotInstalled:nI,nativeHandshakeTimeout:nT,nativePromptNotSupported:nw,noAccountError:r7,noCachedAuthorityError:nn,noNetworkConnectivity:nc,noStateInHash:rV,noTokenRequestCacheError:nt,nonBrowserEnvironment:na,pkceNotCreated:rz,popupWindowError:rZ,postRequestFailed:nl,redirectInIframe:r4,silentLogoutUnsupported:r9,silentPromptValueError:ne,spaCodeAndNativeAccountIdPresent:nC,stateInteractionTypeMismatch:rJ,unableToAcquireTokenFromNativePlatform:ny,unableToLoadToken:nu,unableToParseState:rY,unableToParseTokenRequestCacheError:nr,uninitializedPublicClientApplication:nv,userCancelled:r1});let nR="For more visit: aka.ms/msaljs/browser-errors",n_={[rz]:"The PKCE code challenge and verifier could not be generated.",[r$]:"The crypto object or function is not available.",[rQ]:"Navigation URI is empty. Please check stack trace for more info.",[rW]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${nR}`,[rV]:"Hash does not contain state. Please verify that the request originated from msal.",[rj]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${nR}`,[rY]:"Unable to parse state. Please verify that the request originated from msal.",[rJ]:"Hash contains state but the interaction type does not match the caller.",[rX]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${nR}`,[rZ]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[r0]:"window.open returned null or undefined window object.",[r1]:"User cancelled the flow.",[r2]:`Token acquisition in popup failed due to timeout.  ${nR}`,[r6]:`Token acquisition in iframe failed due to timeout.  ${nR}`,[r4]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[r3]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${nR}`,[r5]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[r8]:"The iframe being monitored was closed prematurely.",[r9]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[r7]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[ne]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[nt]:"No token request found in cache.",[nr]:"The cached token request could not be parsed.",[nn]:"No cached authority found.",[no]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[ni]:"Invalid cache type",[na]:"Login and token requests are not supported in non-browser environments.",[ns]:"Database is not open!",[nc]:"No network connectivity. Check your internet connection.",[nl]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[nh]:"Network request failed. Please check the network trace to determine root cause.",[nd]:"Failed to parse network response. Check network trace.",[nu]:"Error loading token to cache.",[ng]:"Cryptographic Key or Keypair not found in browser storage.",[np]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[nm]:"An authorization code or nativeAccountId must be provided to this flow.",[nC]:"Request cannot contain both spa code and native account id.",[nf]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[ny]:`Unable to acquire token from native platform.  ${nR}`,[nT]:"Timed out while attempting to establish connection to browser extension",[nI]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[nA]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${nR}`,[nv]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${nR}`,[nw]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[nE]:"Invalid base64 encoded string.",[nk]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true."},nb={pkceNotGenerated:{code:rz,desc:n_[rz]},cryptoDoesNotExist:{code:r$,desc:n_[r$]},emptyNavigateUriError:{code:rQ,desc:n_[rQ]},hashEmptyError:{code:rW,desc:n_[rW]},hashDoesNotContainStateError:{code:rV,desc:n_[rV]},hashDoesNotContainKnownPropertiesError:{code:rj,desc:n_[rj]},unableToParseStateError:{code:rY,desc:n_[rY]},stateInteractionTypeMismatchError:{code:rJ,desc:n_[rJ]},interactionInProgress:{code:rX,desc:n_[rX]},popupWindowError:{code:rZ,desc:n_[rZ]},emptyWindowError:{code:r0,desc:n_[r0]},userCancelledError:{code:r1,desc:n_[r1]},monitorPopupTimeoutError:{code:r2,desc:n_[r2]},monitorIframeTimeoutError:{code:r6,desc:n_[r6]},redirectInIframeError:{code:r4,desc:n_[r4]},blockTokenRequestsInHiddenIframeError:{code:r3,desc:n_[r3]},blockAcquireTokenInPopupsError:{code:r5,desc:n_[r5]},iframeClosedPrematurelyError:{code:r8,desc:n_[r8]},silentLogoutUnsupportedError:{code:r9,desc:n_[r9]},noAccountError:{code:r7,desc:n_[r7]},silentPromptValueError:{code:ne,desc:n_[ne]},noTokenRequestCacheError:{code:nt,desc:n_[nt]},unableToParseTokenRequestCacheError:{code:nr,desc:n_[nr]},noCachedAuthorityError:{code:nn,desc:n_[nn]},authRequestNotSet:{code:no,desc:n_[no]},invalidCacheType:{code:ni,desc:n_[ni]},notInBrowserEnvironment:{code:na,desc:n_[na]},databaseNotOpen:{code:ns,desc:n_[ns]},noNetworkConnectivity:{code:nc,desc:n_[nc]},postRequestFailed:{code:nl,desc:n_[nl]},getRequestFailed:{code:nh,desc:n_[nh]},failedToParseNetworkResponse:{code:nd,desc:n_[nd]},unableToLoadTokenError:{code:nu,desc:n_[nu]},signingKeyNotFoundInStorage:{code:ng,desc:n_[ng]},authCodeRequired:{code:np,desc:n_[np]},authCodeOrNativeAccountRequired:{code:nm,desc:n_[nm]},spaCodeAndNativeAccountPresent:{code:nC,desc:n_[nC]},databaseUnavailable:{code:nf,desc:n_[nf]},unableToAcquireTokenFromNativePlatform:{code:ny,desc:n_[ny]},nativeHandshakeTimeout:{code:nT,desc:n_[nT]},nativeExtensionNotInstalled:{code:nI,desc:n_[nI]},nativeConnectionNotEstablished:{code:nA,desc:n_[nA]},uninitializedPublicClientApplication:{code:nv,desc:n_[nv]},nativePromptNotSupported:{code:nw,desc:n_[nw]},invalidBase64StringError:{code:nE,desc:n_[nE]},invalidPopTokenRequest:{code:nk,desc:n_[nk]}};class nP extends U{constructor(e){super(e,n_[e]),Object.setPrototypeOf(this,nP.prototype),this.name="BrowserAuthError"}}function nN(e){return new nP(e)}let nM={INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},nO={CHANNEL_ID:"53ee284d-920a-4b59-9d30-a60315b26836",PREFERRED_EXTENSION_ID:"ppnbnpeolgkicgegkbkbjmhlideopiji",MATS_TELEMETRY:"MATS"},nq={HandshakeRequest:"Handshake",HandshakeResponse:"HandshakeResponse",GetToken:"GetToken",Response:"Response"},nU={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},nL={GET:"GET",POST:"POST"},nH={AUTHORITY:"authority",REQUEST_STATE:"request.state",NONCE_IDTOKEN:"nonce.id_token",ORIGIN_URI:"request.origin",URL_HASH:"urlHash",REQUEST_PARAMS:"request.params",INTERACTION_STATUS_KEY:"interaction.status",CCS_CREDENTIAL:"ccs.credential",CORRELATION_ID:"request.correlationId",NATIVE_REQUEST:"request.native"},nD={ACCOUNT_KEYS:"msal.account.keys",TOKEN_KEYS:"msal.token.keys"},nB="wrapper.sku",nx="wrapper.version",nF={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};t.InteractionType=void 0,(N=t.InteractionType||(t.InteractionType={})).Redirect="redirect",N.Popup="popup",N.Silent="silent",N.None="none";let nK={Startup:"startup",Login:"login",Logout:"logout",AcquireToken:"acquireToken",SsoSilent:"ssoSilent",HandleRedirect:"handleRedirect",None:"none"},nG={scopes:o},nz="msal.db",n$=`${nz}.keys`,nQ={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},nW=[nQ.Default,nQ.Skip,nQ.RefreshTokenAndNetwork];function nV(e){return encodeURIComponent(nY(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function nj(e){return nJ(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function nY(e){return nJ(new TextEncoder().encode(e))}function nJ(e){return btoa(Array.from(e,e=>String.fromCodePoint(e)).join(""))}let nX="SHA-256",nZ=new Uint8Array([1,0,1]),n0="0123456789abcdef",n1=new Uint32Array(1),n2={name:"RSASSA-PKCS1-v1_5",hash:nX,modulusLength:2048,publicExponent:nZ};async function n6(e,t,r){t?.addQueueMeasurement(t8.Sha256Digest,r);let n=new TextEncoder().encode(e);return window.crypto.subtle.digest(nX,n)}function n4(e){return window.crypto.getRandomValues(e)}function n3(){return window.crypto.getRandomValues(n1),n1[0]}function n5(){let e=Date.now(),t=1024*n3()+(1023&n3()),r=new Uint8Array(16),n=Math.trunc(t/1073741824),o=t&1073741824-1,i=n3();r[0]=e/1099511627776,r[1]=e/4294967296,r[2]=e/16777216,r[3]=e/65536,r[4]=e/256,r[5]=e,r[6]=112|n>>>8,r[7]=n,r[8]=128|o>>>24,r[9]=o>>>16,r[10]=o>>>8,r[11]=o,r[12]=i>>>24,r[13]=i>>>16,r[14]=i>>>8,r[15]=i;let a="";for(let e=0;e<r.length;e++)a+=n0.charAt(r[e]>>>4)+n0.charAt(15&r[e]),(3===e||5===e||7===e||9===e)&&(a+="-");return a}async function n8(e,t){return window.crypto.subtle.generateKey(n2,e,t)}async function n9(e){return window.crypto.subtle.exportKey("jwk",e)}async function n7(e,t,r){return window.crypto.subtle.importKey("jwk",e,n2,t,r)}async function oe(e,t){return window.crypto.subtle.sign(n2,e,t)}async function ot(e){return nj(new Uint8Array(await n6(e)))}let or="storage_not_supported",on="stubbed_public_client_application_called",oo="in_mem_redirect_unavailable";var oi=Object.freeze({__proto__:null,inMemRedirectUnavailable:oo,storageNotSupported:or,stubbedPublicClientApplicationCalled:on});let oa={[or]:"Given storage configuration option was not supported.",[on]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[oo]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."},os={storageNotSupportedError:{code:or,desc:oa[or]},stubPcaInstanceCalled:{code:on,desc:oa[on]},inMemRedirectUnavailable:{code:oo,desc:oa[oo]}};class oc extends U{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,oc.prototype)}}function ol(e){return new oc(e,oa[e])}function oh(e){e.location.hash="","function"==typeof e.history.replaceState&&e.history.replaceState(null,"",`${e.location.origin}${e.location.pathname}${e.location.search}`)}function od(e){let t=e.split("#");t.shift(),window.location.hash=t.length>0?t.join("#"):""}function ou(){return window.parent!==window}function og(){return"undefined"!=typeof window&&!!window.opener&&window.opener!==window&&"string"==typeof window.name&&0===window.name.indexOf(`${nM.POPUP_NAME_PREFIX}.`)}function op(){return window.location.href.split("?")[0].split("#")[0]}function om(){let e=new tb(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}function oC(){if(tb.hashContainsKnownProperties(window.location.hash)&&ou())throw nN(r3)}function of(e){if(ou()&&!e)throw nN(r4)}function oy(){if(og())throw nN(r5)}function oT(){if("undefined"==typeof window)throw nN(na)}function oI(e){if(!e)throw nN(nv)}function oA(e){oT(),oC(),oy(),oI(e)}function ov(e,t){if(oA(e),of(t.system.allowRedirectInIframe),t.cache.cacheLocation===nU.MemoryStorage&&!t.cache.storeAuthStateInCookie)throw ol(oo)}function ow(e){let t=document.createElement("link");t.rel="preconnect",t.href=new URL(e).origin,t.crossOrigin="anonymous",document.head.appendChild(t),window.setTimeout(()=>{try{document.head.removeChild(t)}catch{}},1e4)}var oE=Object.freeze({__proto__:null,blockAPICallsBeforeInitialize:oI,blockAcquireTokenInPopups:oy,blockNonBrowserEnvironment:oT,blockRedirectInIframe:of,blockReloadInHiddenIframes:oC,clearHash:oh,createGuid:function(){return n5()},getCurrentUri:op,getHomepage:om,invoke:re,invokeAsync:rt,isInIframe:ou,isInPopup:og,preconnect:ow,preflightCheck:oA,redirectPreflightCheck:ov,replaceHash:od});class ok{navigateInternal(e,t){return ok.defaultNavigateWindow(e,t)}navigateExternal(e,t){return ok.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise(e=>{setTimeout(()=>{e(!0)},t.timeout)})}}class oS{async sendGetRequestAsync(e,t){let r;try{r=await fetch(e,{method:nL.GET,headers:this.getFetchHeaders(t)})}catch(e){if(window.navigator.onLine)throw nN(nh);throw nN(nc)}try{return{headers:this.getHeaderDict(r.headers),body:await r.json(),status:r.status}}catch(e){throw nN(nd)}}async sendPostRequestAsync(e,t){let n;let o=t&&t.body||r.EMPTY_STRING;try{n=await fetch(e,{method:nL.POST,headers:this.getFetchHeaders(t),body:o})}catch(e){if(window.navigator.onLine)throw nN(nl);throw nN(nc)}try{return{headers:this.getHeaderDict(n.headers),body:await n.json(),status:n.status}}catch(e){throw nN(nd)}}getFetchHeaders(e){let t=new Headers;if(!(e&&e.headers))return t;let r=e.headers;return Object.keys(r).forEach(e=>{t.append(e,r[e])}),t}getHeaderDict(e){let t={};return e.forEach((e,r)=>{t[r]=e}),t}}let oR="@azure/msal-browser",o_="3.24.0";class ob{static loggerCallback(e,r){switch(e){case t.LogLevel.Error:console.error(r);return;case t.LogLevel.Info:console.info(r);return;case t.LogLevel.Verbose:console.debug(r);return;case t.LogLevel.Warning:console.warn(r);return;default:console.log(r);return}}constructor(e){let n;this.browserEnvironment="undefined"!=typeof window,this.config=function({auth:e,cache:n,system:o,telemetry:i},a){let s={clientId:r.EMPTY_STRING,authority:`${r.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:r.EMPTY_STRING,authorityMetadata:r.EMPTY_STRING,redirectUri:r.EMPTY_STRING,postLogoutRedirectUri:r.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:tk.AAD,OIDCOptions:{serverResponseType:d.FRAGMENT,defaultScopes:[r.OPENID_SCOPE,r.PROFILE_SCOPE,r.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:eL.None,tenant:r.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1},c={cacheLocation:nU.SessionStorage,temporaryCacheLocation:nU.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!!n&&n.cacheLocation===nU.LocalStorage,claimsBasedCachingEnabled:!1},l={loggerCallback:()=>{},logLevel:t.LogLevel.Info,piiLoggingEnabled:!1},h={...{...tF,loggerOptions:l,networkClient:a?new oS:rM,navigationClient:new ok,loadFrameTimeout:0,windowHashTimeout:o?.loadFrameTimeout||6e4,iframeHashTimeout:o?.loadFrameTimeout||1e4,navigateFrameWait:0,redirectNavigationTimeout:3e4,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:o?.nativeBrokerHandshakeTimeout||2e3,pollIntervalMilliseconds:nM.DEFAULT_POLL_INTERVAL_MS},...o,loggerOptions:o?.loggerOptions||l},u={application:{appName:r.EMPTY_STRING,appVersion:r.EMPTY_STRING},client:new rK};if(e?.protocolMode!==tk.OIDC&&e?.OIDCOptions&&new eO(h.loggerOptions).warning(JSON.stringify(tm(tc))),e?.protocolMode&&e.protocolMode!==tk.AAD&&h?.allowNativeBroker)throw tm(tl);return{auth:{...s,...e,OIDCOptions:{...s.OIDCOptions,...e?.OIDCOptions}},cache:{...c,...n},system:h,telemetry:{...u,...i}}}(e,this.browserEnvironment);try{n=window[nU.SessionStorage]}catch(e){}let o=n?.getItem("msal.browser.log.level"),i=n?.getItem("msal.browser.log.pii")?.toLowerCase(),a="true"===i||"false"!==i&&void 0,s={...this.config.system.loggerOptions},c=o&&Object.keys(t.LogLevel).includes(o)?t.LogLevel[o]:void 0;c&&(s.loggerCallback=ob.loggerCallback,s.logLevel=c),void 0!==a&&(s.piiLoggingEnabled=a),this.logger=new eO(s,oR,o_),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}let oP={UserInteractionRequired:"USER_INTERACTION_REQUIRED",UserCancel:"USER_CANCEL",NoNetwork:"NO_NETWORK",TransientError:"TRANSIENT_ERROR",PersistentError:"PERSISTENT_ERROR",Disabled:"DISABLED",AccountUnavailable:"ACCOUNT_UNAVAILABLE",NestedAppAuthUnavailable:"NESTED_APP_AUTH_UNAVAILABLE"};class oN{static async initializeNestedAppAuthBridge(){if(void 0===window)throw Error("window is undefined");if(void 0===window.nestedAppAuthBridge)throw Error("window.nestedAppAuthBridge is undefined");try{window.nestedAppAuthBridge.addEventListener("message",e=>{let t="string"==typeof e?e:e.data,r=JSON.parse(t),n=oN.bridgeRequests.find(e=>e.requestId===r.requestId);void 0!==n&&(oN.bridgeRequests.splice(oN.bridgeRequests.indexOf(n),1),r.success?n.resolve(r):n.reject(r.error))});let e=await new Promise((e,t)=>{let r=oN.buildRequest("GetInitContext"),n={requestId:r.requestId,method:r.method,resolve:e,reject:t};oN.bridgeRequests.push(n),window.nestedAppAuthBridge.postMessage(JSON.stringify(r))});return oN.validateBridgeResultOrThrow(e.initContext)}catch(e){throw window.console.log(e),e}}getTokenInteractive(e){return this.getToken("GetTokenPopup",e)}getTokenSilent(e){return this.getToken("GetToken",e)}async getToken(e,t){let r=await this.sendRequest(e,{tokenParams:t});return{token:oN.validateBridgeResultOrThrow(r.token),account:oN.validateBridgeResultOrThrow(r.account)}}getHostCapabilities(){return this.capabilities??null}getAccountContext(){return this.accountContext?this.accountContext:null}static buildRequest(e,t){return{messageType:"NestedAppAuthRequest",method:e,requestId:n5(),sendTime:Date.now(),clientLibrary:nM.MSAL_SKU,clientLibraryVersion:o_,...t}}sendRequest(e,t){let r=oN.buildRequest(e,t);return new Promise((e,t)=>{let n={requestId:r.requestId,method:r.method,resolve:e,reject:t};oN.bridgeRequests.push(n),window.nestedAppAuthBridge.postMessage(JSON.stringify(r))})}static validateBridgeResultOrThrow(e){if(void 0===e)throw{status:oP.NestedAppAuthUnavailable};return e}constructor(e,t,r,n){this.sdkName=e,this.sdkVersion=t,this.accountContext=r,this.capabilities=n}static async create(){let e=await oN.initializeNestedAppAuthBridge();return new oN(e.sdkName,e.sdkVersion,e.accountContext,e.capabilities)}}oN.bridgeRequests=[];class oM extends ob{constructor(){super(...arguments),this.bridgeProxy=void 0,this.accountContext=null}getModuleName(){return oM.MODULE_NAME}getId(){return oM.ID}getBridgeProxy(){return this.bridgeProxy}async initialize(){try{if("undefined"!=typeof window){"function"==typeof window.__initializeNestedAppAuth&&await window.__initializeNestedAppAuth();let e=await oN.create();this.accountContext=e.getAccountContext(),this.bridgeProxy=e,this.available=void 0!==e}}catch(e){this.logger.infoPii(`Could not initialize Nested App Auth bridge (${e})`)}return this.logger.info(`Nested App Auth Bridge available: ${this.available}`),this.available}}oM.MODULE_NAME="",oM.ID="NestedAppOperatingContext";class oO extends ob{getModuleName(){return oO.MODULE_NAME}getId(){return oO.ID}async initialize(){return this.available="undefined"!=typeof window,this.available}}function oq(e){return new TextDecoder().decode(function(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw nN(nE)}let r=atob(t);return Uint8Array.from(r,e=>e.codePointAt(0)||0)}(e))}oO.MODULE_NAME="",oO.ID="StandardOperatingContext";class oU{constructor(){this.dbName=nz,this.version=1,this.tableName=n$,this.dbOpen=!1}async open(){return new Promise((e,t)=>{let r=window.indexedDB.open(this.dbName,this.version);r.addEventListener("upgradeneeded",e=>{e.target.result.createObjectStore(this.tableName)}),r.addEventListener("success",t=>{this.db=t.target.result,this.dbOpen=!0,e()}),r.addEventListener("error",()=>t(nN(nf)))})}closeConnection(){let e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(nN(ns));let n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);n.addEventListener("success",e=>{this.closeConnection(),t(e.target.result)}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((r,n)=>{if(!this.db)return n(nN(ns));let o=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);o.addEventListener("success",()=>{this.closeConnection(),r()}),o.addEventListener("error",e=>{this.closeConnection(),n(e)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(nN(ns));let n=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);n.addEventListener("success",()=>{this.closeConnection(),t()}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(nN(ns));let r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",t=>{this.closeConnection(),e(t.target.result)}),r.addEventListener("error",e=>{this.closeConnection(),t(e)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r(nN(ns));let n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);n.addEventListener("success",e=>{this.closeConnection(),t(1===e.target.result)}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{let r=window.indexedDB.deleteDatabase(nz),n=setTimeout(()=>t(!1),200);r.addEventListener("success",()=>(clearTimeout(n),e(!0))),r.addEventListener("blocked",()=>(clearTimeout(n),e(!0))),r.addEventListener("error",()=>(clearTimeout(n),t(!1)))})}}class oL{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){let e=[];return this.cache.forEach((t,r)=>{e.push(r)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}class oH{constructor(e){this.inMemoryCache=new oL,this.indexedDBCache=new oU,this.logger=e}handleDatabaseAccessError(e){if(e instanceof nP&&e.errorCode===nf)this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.");else throw e}async getItem(e){let t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(e){this.handleDatabaseAccessError(e)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(e){this.handleDatabaseAccessError(e)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(e){this.handleDatabaseAccessError(e)}}async getKeys(){let e=this.inMemoryCache.getKeys();if(0===e.length)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(e){this.handleDatabaseAccessError(e)}return e}async containsKey(e){let t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(e){this.handleDatabaseAccessError(e)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");let e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}class oD{constructor(e,t){this.logger=e,function(e){if("crypto"in window)e.verbose("BrowserCrypto: modern crypto interface available");else throw e.error("BrowserCrypto: crypto interface is unavailable"),nN(r$)}(e),this.cache=new oH(this.logger),this.performanceClient=t}createNewGuid(){return n5()}base64Encode(e){return nY(e)}base64Decode(e){return oq(e)}base64UrlEncode(e){return nV(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){let t=this.performanceClient?.startMeasurement(t8.CryptoOptsGetPublicKeyThumbprint,e.correlationId),r=await n8(oD.EXTRACTABLE,oD.POP_KEY_USAGES),n=await n9(r.publicKey),o=oB({e:n.e,kty:n.kty,n:n.n}),i=await this.hashString(o),a=await n9(r.privateKey),s=await n7(a,!1,["sign"]);return await this.cache.setItem(i,{privateKey:s,publicKey:r.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),i}async removeTokenBindingKey(e){return await this.cache.removeItem(e),!await this.cache.containsKey(e)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,r,n){let o=this.performanceClient?.startMeasurement(t8.CryptoOptsSignJwt,n),i=await this.cache.getItem(t);if(!i)throw nN(ng);let a=await n9(i.publicKey),s=oB(a),c=nV(JSON.stringify({kid:t})),l=nV(rx.getShrHeaderString({...r?.header,alg:a.alg,kid:c}));e.cnf={jwk:JSON.parse(s)};let h=nV(JSON.stringify(e)),d=`${l}.${h}`,u=new TextEncoder().encode(d),g=nj(new Uint8Array(await oe(i.privateKey,u))),p=`${d}.${g}`;return o&&o.end({success:!0}),p}async hashString(e){return ot(e)}}function oB(e){return JSON.stringify(e,Object.keys(e).sort())}oD.POP_KEY_USAGES=["sign","verify"],oD.EXTRACTABLE=!0;class ox{constructor(e){this.validateWindowStorage(e),this.windowStorage=window[e]}validateWindowStorage(e){if(e!==nU.LocalStorage&&e!==nU.SessionStorage||!window[e])throw ol(or)}getItem(e){return this.windowStorage.getItem(e)}setItem(e,t){this.windowStorage.setItem(e,t)}removeItem(e){this.windowStorage.removeItem(e)}getKeys(){return Object.keys(this.windowStorage)}containsKey(e){return this.windowStorage.hasOwnProperty(e)}}function oF(e,t){if(!t)return null;try{return rw.parseRequestState(e,t).libraryState.meta}catch(e){throw eN($)}}class oK extends tB{constructor(e,t,r,n,o,i){super(e,r,n,o),this.COOKIE_LIFE_MULTIPLIER=864e5,this.cacheConfig=t,this.logger=n,this.internalStorage=new oL,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation,this.cacheConfig.cacheLocation),t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps()),this.performanceClient=i}setupBrowserStorage(e){switch(e){case nU.LocalStorage:case nU.SessionStorage:try{return new ox(e)}catch(e){this.logger.verbose(e)}case nU.MemoryStorage:}return this.cacheConfig.cacheLocation=nU.MemoryStorage,new oL}setupTemporaryCacheStorage(e,t){switch(t){case nU.LocalStorage:case nU.SessionStorage:try{return new ox(e||nU.SessionStorage)}catch(e){return this.logger.verbose(e),this.internalStorage}case nU.MemoryStorage:default:return this.internalStorage}}migrateCacheEntries(){let e=`${r.CACHE_PREFIX}.${s.ID_TOKEN}`,t=`${r.CACHE_PREFIX}.${s.CLIENT_INFO}`,n=`${r.CACHE_PREFIX}.${s.ERROR}`,o=`${r.CACHE_PREFIX}.${s.ERROR_DESC}`,i=this.browserStorage.getItem(e),a=[i,this.browserStorage.getItem(t),this.browserStorage.getItem(n),this.browserStorage.getItem(o)];[s.ID_TOKEN,s.CLIENT_INFO,s.ERROR,s.ERROR_DESC].forEach((e,t)=>{let r=a[t];r&&this.setTemporaryCache(e,r,!0)})}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");let e=this.getItem(nD.ACCOUNT_KEYS),t=this.getItem(`${nD.TOKEN_KEYS}.${this.clientId}`);if(e&&t){this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.");return}this.browserStorage.getKeys().forEach(e=>{if(this.isCredentialKey(e)){let t=this.getItem(e);if(t){let r=this.validateAndParseJson(t);if(r&&r.hasOwnProperty("credentialType"))switch(r.credentialType){case m.ID_TOKEN:if(eV(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${e} found, saving key to token key map`);let t=this.updateCredentialCacheKey(e,r);this.addTokenKey(t,m.ID_TOKEN);return}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${e}`);break;case m.ACCESS_TOKEN:case m.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(eW(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${e} found, saving key to token key map`);let t=this.updateCredentialCacheKey(e,r);this.addTokenKey(t,m.ACCESS_TOKEN);return}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${e}`);break;case m.REFRESH_TOKEN:if(ej(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${e} found, saving key to token key map`);let t=this.updateCredentialCacheKey(e,r);this.addTokenKey(t,m.REFRESH_TOKEN);return}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${e}`)}}}if(this.isAccountKey(e)){let t=this.getItem(e);if(t){let r=this.validateAndParseJson(t);r&&tS.isAccountEntity(r)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${e} found, saving key to account key map`),this.addAccountKeyToMap(e))}}})}validateAndParseJson(e){try{let t=JSON.parse(e);return t&&"object"==typeof t?t:null}catch(e){return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");let r=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,r,t)}getCachedAccountEntity(e){let t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;let r=this.validateAndParseJson(t);return r&&tS.isAccountEntity(r)?tB.toObject(new tS,r):(this.removeAccountKeyFromMap(e),null)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");let t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");let e=this.getItem(nD.ACCOUNT_KEYS);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);let t=this.getAccountKeys();-1===t.indexOf(e)?(t.push(e),this.setItem(nD.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);let t=this.getAccountKeys(),r=t.indexOf(e);r>-1?(t.splice(r,1),this.setItem(nD.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,m.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,m.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,m.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");let e=this.getItem(`${nD.TOKEN_KEYS}.${this.clientId}`);if(e){let t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");let r=this.getTokenKeys();switch(t){case m.ID_TOKEN:-1===r.idToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),r.idToken.push(e));break;case m.ACCESS_TOKEN:-1===r.accessToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),r.accessToken.push(e));break;case m.REFRESH_TOKEN:-1===r.refreshToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),r.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),eN(eu)}this.setItem(`${nD.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(r))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");let r=this.getTokenKeys();switch(t){case m.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);let n=r.idToken.indexOf(e);n>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),r.idToken.splice(n,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case m.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);let o=r.accessToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),r.accessToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case m.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);let i=r.refreshToken.indexOf(e);i>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),r.refreshToken.splice(i,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),eN(eu)}this.setItem(`${nD.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(r))}getIdTokenCredential(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,m.ID_TOKEN),null;let r=this.validateAndParseJson(t);return r&&eV(r)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,m.ID_TOKEN),null)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");let t=eK(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,m.ID_TOKEN)}getAccessTokenCredential(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,m.ACCESS_TOKEN),null;let r=this.validateAndParseJson(t);return r&&eW(r)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,m.ACCESS_TOKEN),null)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");let t=eK(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,m.ACCESS_TOKEN)}getRefreshTokenCredential(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,m.REFRESH_TOKEN),null;let r=this.validateAndParseJson(t);return r&&ej(r)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,m.REFRESH_TOKEN),null)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");let t=eK(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,m.REFRESH_TOKEN)}getAppMetadata(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;let r=this.validateAndParseJson(t);return r&&r&&0===e.indexOf(C)&&r.hasOwnProperty("clientId")&&r.hasOwnProperty("environment")?(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null)}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");let t=function({environment:e,clientId:t}){return[C,e,t].join(p.CACHE_KEY_SEPARATOR).toLowerCase()}(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;let r=this.validateAndParseJson(t);return r&&function(e,t){let r=0===e.indexOf(T.CACHE_KEY),n=!0;return t&&(n=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),r):(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){let t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;let r=this.validateAndParseJson(t);return r&&r&&0===e.indexOf(f)&&r.hasOwnProperty("aliases")&&r.hasOwnProperty("preferred_cache")&&r.hasOwnProperty("preferred_network")&&r.hasOwnProperty("canonical_authority")&&r.hasOwnProperty("authorization_endpoint")&&r.hasOwnProperty("token_endpoint")&&r.hasOwnProperty("issuer")&&r.hasOwnProperty("aliasesFromNetwork")&&r.hasOwnProperty("endpointsFromNetwork")&&r.hasOwnProperty("expiresAt")&&r.hasOwnProperty("jwks_uri")?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),r):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(e=>this.isAuthorityMetadata(e))}setWrapperMetadata(e,t){this.internalStorage.setItem(nB,e),this.internalStorage.setItem(nx,t)}getWrapperMetadata(){return[this.internalStorage.getItem(nB)||r.EMPTY_STRING,this.internalStorage.getItem(nx)||r.EMPTY_STRING]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){let e=this.generateCacheKey(s.ACTIVE_ACCOUNT_FILTERS),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");let e=this.generateCacheKey(s.ACTIVE_ACCOUNT),t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;let r=this.getAccountInfoFilteredBy({localAccountId:t});return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(r),r):null}let r=this.validateAndParseJson(t);return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:r.homeAccountId,localAccountId:r.localAccountId,tenantId:r.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){let t=this.generateCacheKey(s.ACTIVE_ACCOUNT_FILTERS),r=this.generateCacheKey(s.ACTIVE_ACCOUNT);if(e){this.logger.verbose("setActiveAccount: Active account set");let n={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(n)),this.browserStorage.setItem(r,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(r)}getThrottlingCache(e){let t,r;let n=this.getItem(e);if(!n)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;let o=this.validateAndParseJson(n);return o&&(t=!1,e&&(t=0===e.indexOf(A.THROTTLING_PREFIX)),r=!0,o&&(r=o.hasOwnProperty("throttleTime")),t&&r)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),o):(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){let r=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){let e=this.getItemCookie(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),e}let n=this.temporaryCacheStorage.getItem(r);if(!n){if(this.cacheConfig.cacheLocation===nU.LocalStorage){let e=this.browserStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),e}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),n}setTemporaryCache(e,t,r){let n=r?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(n,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.setItemCookie(n,t))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.clearItemCookie(e))}getKeys(){return this.browserStorage.getKeys()}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.temporaryCacheStorage.getKeys().forEach(e=>{(-1!==e.indexOf(r.CACHE_PREFIX)||-1!==e.indexOf(this.clientId))&&this.removeTemporaryItem(e)}),this.browserStorage.getKeys().forEach(e=>{(-1!==e.indexOf(r.CACHE_PREFIX)||-1!==e.indexOf(this.clientId))&&this.browserStorage.removeItem(e)}),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e,t){e.addQueueMeasurement(t8.ClearTokensAndKeysWithClaims,t);let r=this.getTokenKeys(),n=[];r.accessToken.forEach(e=>{let t=this.getAccessTokenCredential(e);t?.requestedClaimsHash&&e.includes(t.requestedClaimsHash.toLowerCase())&&n.push(this.removeAccessToken(e))}),await Promise.all(n),n.length>0&&this.logger.warning(`${n.length} access tokens with claims in the cache keys have been removed from the cache.`)}setItemCookie(e,t,r){let n=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(r){let e=this.getCookieExpirationTime(r);n+=`expires=${e};`}this.cacheConfig.secureCookies&&(n+="Secure;"),document.cookie=n}getItemCookie(e){let t=`${encodeURIComponent(e)}=`,n=document.cookie.split(";");for(let e=0;e<n.length;e++){let r=n[e];for(;" "===r.charAt(0);)r=r.substring(1);if(0===r.indexOf(t))return decodeURIComponent(r.substring(t.length,r.length))}return r.EMPTY_STRING}clearMsalCookies(){let e=`${r.CACHE_PREFIX}.${this.clientId}`;document.cookie.split(";").forEach(t=>{for(;" "===t.charAt(0);)t=t.substring(1);if(0===t.indexOf(e)){let e=t.split("=")[0];this.clearItemCookie(e)}})}clearItemCookie(e){this.setItemCookie(e,r.EMPTY_STRING,-1)}getCookieExpirationTime(e){return new Date(new Date().getTime()+e*this.COOKIE_LIFE_MULTIPLIER).toUTCString()}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):tC.startsWith(e,r.CACHE_PREFIX)||tC.startsWith(e,s.ADAL_ID_TOKEN)?e:`${r.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){let{libraryState:{id:t}}=rw.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${nH.AUTHORITY}.${t}`)}generateNonceKey(e){let{libraryState:{id:t}}=rw.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${nH.NONCE_IDTOKEN}.${t}`)}generateStateKey(e){let{libraryState:{id:t}}=rw.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${nH.REQUEST_STATE}.${t}`)}getCachedAuthority(e){let t=this.generateStateKey(e),r=this.getTemporaryCache(t);if(!r)return null;let n=this.generateAuthorityKey(r);return this.getTemporaryCache(n)}updateCacheEntries(e,t,r,n,o){this.logger.trace("BrowserCacheManager.updateCacheEntries called");let i=this.generateStateKey(e);this.setTemporaryCache(i,e,!1);let a=this.generateNonceKey(e);this.setTemporaryCache(a,t,!1);let s=this.generateAuthorityKey(e);if(this.setTemporaryCache(s,r,!1),o){let e={credential:o.homeAccountId,type:tZ.HOME_ACCOUNT_ID};this.setTemporaryCache(nH.CCS_CREDENTIAL,JSON.stringify(e),!0)}else if(n){let e={credential:n,type:tZ.UPN};this.setTemporaryCache(nH.CCS_CREDENTIAL,JSON.stringify(e),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.temporaryCacheStorage.getKeys().forEach(t=>{-1!==t.indexOf(e)&&this.removeTemporaryItem(t)}),this.removeTemporaryItem(this.generateStateKey(e)),this.removeTemporaryItem(this.generateNonceKey(e)),this.removeTemporaryItem(this.generateAuthorityKey(e))),this.removeTemporaryItem(this.generateCacheKey(nH.REQUEST_PARAMS)),this.removeTemporaryItem(this.generateCacheKey(nH.ORIGIN_URI)),this.removeTemporaryItem(this.generateCacheKey(nH.URL_HASH)),this.removeTemporaryItem(this.generateCacheKey(nH.CORRELATION_ID)),this.removeTemporaryItem(this.generateCacheKey(nH.CCS_CREDENTIAL)),this.removeTemporaryItem(this.generateCacheKey(nH.NATIVE_REQUEST)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){let t=this.generateStateKey(e),n=this.temporaryCacheStorage.getItem(t);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n||r.EMPTY_STRING)}this.clearMsalCookies()}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.temporaryCacheStorage.getKeys().forEach(t=>{if(-1===t.indexOf(nH.REQUEST_STATE))return;let r=this.temporaryCacheStorage.getItem(t);if(!r)return;let n=oF(this.cryptoImpl,r);n&&n.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${r}`),this.resetRequestCache(r))}),this.clearMsalCookies(),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");let t=nY(JSON.stringify(e));this.setTemporaryCache(nH.REQUEST_PARAMS,t,!0)}getCachedRequest(e){let t;this.logger.trace("BrowserCacheManager.getCachedRequest called");let r=this.getTemporaryCache(nH.REQUEST_PARAMS,!0);if(!r)throw nN(nt);try{t=JSON.parse(oq(r))}catch(e){throw this.logger.errorPii(`Attempted to parse: ${r}`),this.logger.error(`Parsing cached token request threw with error: ${e}`),nN(nr)}if(this.removeTemporaryItem(this.generateCacheKey(nH.REQUEST_PARAMS)),!t.authority){let r=this.generateAuthorityKey(e),n=this.getTemporaryCache(r);if(!n)throw nN(nn);t.authority=n}return t}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");let e=this.getTemporaryCache(nH.NATIVE_REQUEST,!0);return e?this.validateAndParseJson(e)||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null):(this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null)}isInteractionInProgress(e){let t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){let e=`${r.CACHE_PREFIX}.${nH.INTERACTION_STATUS_KEY}`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){let t=`${r.CACHE_PREFIX}.${nH.INTERACTION_STATUS_KEY}`;if(e){if(this.getInteractionInProgress())throw nN(rX);this.setTemporaryCache(t,this.clientId,!1)}else e||this.getInteractionInProgress()!==this.clientId||this.removeTemporaryItem(t)}getLegacyLoginHint(){let e=this.getTemporaryCache(s.ADAL_ID_TOKEN);e&&(this.browserStorage.removeItem(s.ADAL_ID_TOKEN),this.logger.verbose("Cached ADAL id token retrieved."));let t=this.getTemporaryCache(s.ID_TOKEN,!0);t&&(this.browserStorage.removeItem(this.generateCacheKey(s.ID_TOKEN)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));let r=t||e;if(r){let e=eH(r,oq);if(e.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),e.preferred_username;if(e.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),e.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){let r=eK(t);if(e!==r){let n=this.getItem(e);if(n)return this.browserStorage.removeItem(e),this.setItem(r,n),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),r;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}async hydrateCache(e,t){let r;let n=eG(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);t.claims&&(r=await this.cryptoImpl.hashString(t.claims));let o=ez(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?e.expiresOn.getTime()/1e3:0,e.extExpiresOn?e.extExpiresOn.getTime()/1e3:0,oq,void 0,e.tokenType,void 0,t.sshKid,t.claims,r);return this.saveCacheRecord({idToken:n,accessToken:o})}async saveCacheRecord(e,t,r){try{await super.saveCacheRecord(e,t,r)}catch(e){if(e instanceof tD&&this.performanceClient&&r)try{let e=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:e.refreshToken.length,cacheIdCount:e.idToken.length,cacheAtCount:e.accessToken.length},r)}catch(e){}throw e}}}let oG=(e,t)=>new oK(e,{cacheLocation:nU.MemoryStorage,temporaryCacheLocation:nU.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1},eM,t);function oz(e,t,r,n){return e.verbose("getAllAccounts called"),r?t.getAllAccounts(n):[]}function o$(e,t,r){if(t.trace("getAccount called"),0===Object.keys(e).length)return t.warning("getAccount: No accountFilter provided"),null;let n=r.getAccountInfoFilteredBy(e);return n?(t.verbose("getAccount: Account matching provided filter found, returning"),n):(t.verbose("getAccount: No matching account found, returning null"),null)}function oQ(e,t,r){if(t.trace("getAccountByUsername called"),!e)return t.warning("getAccountByUsername: No username provided"),null;let n=r.getAccountInfoFilteredBy({username:e});return n?(t.verbose("getAccountByUsername: Account matching username found, returning"),t.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),n):(t.verbose("getAccountByUsername: No matching account found, returning null"),null)}function oW(e,t,r){if(t.trace("getAccountByHomeId called"),!e)return t.warning("getAccountByHomeId: No homeAccountId provided"),null;let n=r.getAccountInfoFilteredBy({homeAccountId:e});return n?(t.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),t.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),n):(t.verbose("getAccountByHomeId: No matching account found, returning null"),null)}function oV(e,t,r){if(t.trace("getAccountByLocalId called"),!e)return t.warning("getAccountByLocalId: No localAccountId provided"),null;let n=r.getAccountInfoFilteredBy({localAccountId:e});return n?(t.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),t.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),n):(t.verbose("getAccountByLocalId: No matching account found, returning null"),null)}function oj(e,t){t.setActiveAccount(e)}function oY(e){return e.getActiveAccount()}let oJ={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",ACTIVE_ACCOUNT_CHANGED:"msal:activeAccountChanged",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache"};class oX{constructor(e,t){this.eventCallbacks=new Map,this.logger=e,this.browserCrypto=t,this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}addEventCallback(e){if("undefined"!=typeof window){let t=n5();return this.eventCallbacks.set(t,e),this.logger.verbose(`Event callback registered with id: ${t}`),t}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}enableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}emitEvent(e,t,r,n){if("undefined"!=typeof window){let o={eventType:e,interactionType:t||null,payload:r||null,error:n||null,timestamp:Date.now()};this.logger.info(`Emitting event: ${e}`),this.eventCallbacks.forEach((t,r)=>{this.logger.verbose(`Emitting event to callback ${r}: ${e}`),t.apply(null,[o])})}}handleAccountCacheChange(e){try{e.key?.includes(s.ACTIVE_ACCOUNT_FILTERS)&&this.emitEvent(oJ.ACTIVE_ACCOUNT_CHANGED);let t=e.newValue||e.oldValue;if(!t)return;let r=JSON.parse(t);if("object"!=typeof r||!tS.isAccountEntity(r))return;let n=tB.toObject(new tS,r).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.emitEvent(oJ.ACCOUNT_ADDED,void 0,n)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.emitEvent(oJ.ACCOUNT_REMOVED,void 0,n))}catch(e){return}}}class oZ{constructor(e,t,r,n,o,i,a,s,c){this.config=e,this.browserStorage=t,this.browserCrypto=r,this.networkClient=this.config.system.networkClient,this.eventHandler=o,this.navigationClient=i,this.nativeMessageHandler=s,this.correlationId=c||n5(),this.logger=n.clone(nM.MSAL_SKU,o_,this.correlationId),this.performanceClient=a}async clearCacheOnLogout(e){if(e){tS.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(tS.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch(e){this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch(e){this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");let t=e||this.config.auth.redirectUri||op();return tb.getAbsoluteUrl(t,op())}initializeServerTelemetryManager(e,t){return this.logger.verbose("initializeServerTelemetryManager called"),new rq({clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]},this.browserStorage)}async getDiscoveredAuthority(e){let{account:t}=e,r=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(t8.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);let n={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e.requestAuthority||this.config.auth.authority,i=r?.length?"true"===r:this.config.auth.instanceAware,a=t&&i?this.config.auth.authority.replace(tb.getDomainFromUrl(o),t.environment):o,s=rn.generateAuthority(a,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),c=await rt(ra,t8.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(s,this.config.system.networkClient,this.browserStorage,n,this.logger,this.correlationId,this.performanceClient);if(t&&!c.isAlias(t.environment))throw tm(th);return c}}async function o0(e,t,r){e.addQueueMeasurement(t8.GeneratePkceCodes,r);let n=re(o1,t8.GenerateCodeVerifier,t,e,r)(e,t,r),o=await rt(o2,t8.GenerateCodeChallengeFromVerifier,t,e,r)(n,e,t,r);return{verifier:n,challenge:o}}function o1(e,t,r){try{let n=new Uint8Array(32);return re(n4,t8.GetRandomValues,t,e,r)(n),nj(n)}catch(e){throw nN(rz)}}async function o2(e,t,r,n){t.addQueueMeasurement(t8.GenerateCodeChallengeFromVerifier,n);try{let o=await rt(n6,t8.Sha256Digest,r,t,n)(e,t,n);return nj(new Uint8Array(o))}catch(e){throw nN(rz)}}async function o6(e,t,r,n){r.addQueueMeasurement(t8.InitializeBaseRequest,e.correlationId);let o=e.authority||t.auth.authority,i=[...e&&e.scopes||[]],a={...e,correlationId:e.correlationId,authority:o,scopes:i};if(a.authenticationScheme){if(a.authenticationScheme===I.SSH){if(!e.sshJwk)throw tm(to);if(!e.sshKid)throw tm(ti)}n.verbose(`Authentication Scheme set to "${a.authenticationScheme}" as configured in Auth request`)}else a.authenticationScheme=I.BEARER,n.verbose('Authentication Scheme wasn\'t explicitly set in request, defaulting to "Bearer" request');return t.cache.claimsBasedCachingEnabled&&e.claims&&!tC.isEmptyObj(e.claims)&&(a.requestedClaimsHash=await ot(e.claims)),a}async function o4(e,t,r,n,o){n.addQueueMeasurement(t8.InitializeSilentRequest,e.correlationId);let i=await rt(o6,t8.InitializeBaseRequest,o,n,e.correlationId)(e,r,n,o);return{...e,...i,account:t,forceRefresh:e.forceRefresh||!1}}class o3 extends oZ{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(t8.StandardInteractionClientInitializeAuthorizationCodeRequest,this.correlationId);let t=await rt(o0,t8.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),n={...e,redirectUri:e.redirectUri,code:r.EMPTY_STRING,codeVerifier:t.verifier};return e.codeChallenge=t.challenge,e.codeChallengeMethod=r.S256_CODE_CHALLENGE_METHOD,n}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);let t={correlationId:this.correlationId||n5(),...e};if(e){if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){let r=this.getLogoutHintFromIdTokenClaims(e.account);r&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=r)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set")}else this.logger.verbose("logoutHint will not be set since no logout request was configured");return e&&null===e.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId):e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=tb.getAbsoluteUrl(e.postLogoutRedirectUri,op())):null===this.config.auth.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=tb.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,op())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=tb.getAbsoluteUrl(op(),op())),t}getLogoutHintFromIdTokenClaims(e){let t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){return this.performanceClient.addQueueMeasurement(t8.StandardInteractionClientCreateAuthCodeClient,this.correlationId),new rb(await rt(this.getClientConfiguration.bind(this),t8.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e),this.performanceClient)}async getClientConfiguration(e){let{serverTelemetryManager:t,requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:a}=e;this.performanceClient.addQueueMeasurement(t8.StandardInteractionClientGetClientConfiguration,this.correlationId);let s=await rt(this.getDiscoveredAuthority.bind(this),t8.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)({requestAuthority:n,requestAzureCloudOptions:o,requestExtraQueryParameters:i,account:a}),c=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:s,clientCapabilities:this.config.auth.clientCapabilities},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:c.loggerCallback,piiLoggingEnabled:c.piiLoggingEnabled,logLevel:c.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:t,libraryInfo:{sku:nM.MSAL_SKU,version:o_,cpu:r.EMPTY_STRING,os:r.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(t8.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);let n=this.getRedirectUri(e.redirectUri),o=rw.setRequestState(this.browserCrypto,e&&e.state||r.EMPTY_STRING,{interactionType:t}),i={...await rt(o6,t8.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:n,state:o,nonce:e.nonce||n5(),responseMode:this.config.auth.OIDCOptions.serverResponseType},a=e.account||this.browserStorage.getActiveAccount();if(a&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${a.homeAccountId}`,this.correlationId),i.account=a),!i.loginHint&&!a){let e=this.browserStorage.getLegacyLoginHint();e&&(i.loginHint=e)}return i}}let o5="user_switch",o8={[o5]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class o9 extends U{constructor(e,t,r){super(e,t),Object.setPrototypeOf(this,o9.prototype),this.name="NativeAuthError",this.ext=r}}function o7(e){return!!e.ext&&!!e.ext.status&&("PERSISTENT_ERROR"===e.ext.status||"DISABLED"===e.ext.status)||!!e.ext&&!!e.ext.error&&-2147186943===e.ext.error||"ContentError"===e.errorCode}function ie(e,t,r){if(r&&r.status)switch(r.status){case"ACCOUNT_UNAVAILABLE":return rv(rl);case"USER_INTERACTION_REQUIRED":return new rI(e,t);case"USER_CANCEL":return nN(r1);case"NO_NETWORK":return nN(nc)}return new o9(e,o8[e]||t,r)}class it extends o3{async acquireToken(e){this.performanceClient.addQueueMeasurement(t8.SilentCacheClientAcquireToken,e.correlationId);let t=this.initializeServerTelemetryManager(nF.acquireTokenSilent_silentFlow),r=new rN(await rt(this.getClientConfiguration.bind(this),t8.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),this.performanceClient);this.logger.verbose("Silent auth client created");try{let t=(await rt(r.acquireCachedToken.bind(r),t8.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),t}catch(e){throw e instanceof nP&&e.errorCode===ng&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),e}}logout(e){this.logger.verbose("logoutRedirect called");let t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t?.account)}}let ir={BROKER_CLIENT_ID:"brk_client_id",BROKER_REDIRECT_URI:"brk_redirect_uri"};class io extends oZ{constructor(e,t,r,n,o,i,a,s,c,l,h,d){super(e,t,r,n,o,i,s,c,d),this.apiId=a,this.accountId=l,this.nativeMessageHandler=c,this.nativeStorageManager=h,this.silentCacheClient=new it(e,this.nativeStorageManager,r,n,o,i,s,c,d),this.serverTelemetryManager=this.initializeServerTelemetryManager(this.apiId);let u=this.nativeMessageHandler.getExtensionId()===nO.PREFERRED_EXTENSION_ID?"chrome":this.nativeMessageHandler.getExtensionId()?.length?"unknown":void 0;this.skus=rq.makeExtraSkuString({libraryName:nM.MSAL_SKU,libraryVersion:o_,extensionName:u,extensionVersion:this.nativeMessageHandler.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,"x-client-xtra-sku":this.skus}}async acquireToken(e){this.performanceClient.addQueueMeasurement(t8.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");let t=this.performanceClient.startMeasurement(t8.NativeInteractionClientAcquireToken,e.correlationId),r=eB();try{let n=await this.initializeNativeRequest(e);try{let e=await this.acquireTokensFromCache(this.accountId,n);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),e}catch(e){this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}let{...o}=n,i={method:nq.GetToken,request:o},a=await this.nativeMessageHandler.sendMessage(i),s=this.validateNativeResponse(a);return await this.handleNativeResponse(s,n,r).then(e=>(t.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),this.serverTelemetryManager.clearNativeBrokerErrorCode(),e)).catch(e=>{throw t.end({success:!1,errorCode:e.errorCode,subErrorCode:e.subError,isNativeBroker:!0}),e})}catch(e){throw e instanceof o9&&this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),e}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:tf.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),eN(eh);let r=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!r)throw eN(eh);try{let e=this.createSilentCacheRequest(t,r),n=await this.silentCacheClient.acquireToken(e),o={...r,idTokenClaims:n?.idTokenClaims,idToken:n?.idToken};return{...n,account:o}}catch(e){throw e}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");let{...r}=e;delete r.onRedirectNavigate;let n=await this.initializeNativeRequest(r),o={method:nq.GetToken,request:n};try{let e=await this.nativeMessageHandler.sendMessage(o);this.validateNativeResponse(e)}catch(e){if(e instanceof o9&&(this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),o7(e)))throw e}this.browserStorage.setTemporaryCache(nH.NATIVE_REQUEST,JSON.stringify(n),!0);let i={apiId:nF.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},a=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(a,i)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;let r=this.browserStorage.getCachedNativeRequest();if(!r)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;let{prompt:n,...o}=r;n&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(nH.NATIVE_REQUEST));let i={method:nq.GetToken,request:o},a=eB();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");let e=await this.nativeMessageHandler.sendMessage(i);this.validateNativeResponse(e);let t=this.handleNativeResponse(e,o,a);this.browserStorage.setInteractionInProgress(!1);let r=await t;return this.serverTelemetryManager.clearNativeBrokerErrorCode(),r}catch(e){throw this.browserStorage.setInteractionInProgress(!1),e}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,r){this.logger.trace("NativeInteractionClient - handleNativeResponse called.");let n=eH(e.id_token,oq),o=this.createHomeAccountIdentifier(e,n);if(o!==this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId})?.homeAccountId&&e.account.id!==t.accountId)throw ie(o5);let i=await this.getDiscoveredAuthority({requestAuthority:t.authority}),a=rR(this.browserStorage,i,o,oq,n,e.client_info,void 0,n.tid,void 0,e.account.id,this.logger),s=await this.generateAuthenticationResult(e,t,n,a,i.canonicalAuthority,r);return this.cacheAccount(a),this.cacheNativeTokens(e,t,o,n,e.access_token,s.tenantId,r),s}createHomeAccountIdentifier(e,t){return tS.generateHomeAccountId(e.client_info||r.EMPTY_STRING,tw.Default,this.logger,this.browserCrypto,t)}generateScopes(e,t){return e.scope?tf.fromString(e.scope):tf.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType!==I.POP||!t.signPopToken)return e.access_token;{if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;let r=new rE(this.browserCrypto),n={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw eN(eA);return r.signPopToken(e.access_token,t.keyId,n)}}async generateAuthenticationResult(e,t,n,o,i,a){let s=this.addTelemetryFromNativeResponse(e),c=e.scope?tf.fromString(e.scope):tf.fromString(t.scope),l=e.account.properties||{},h=l.UID||n.oid||n.sub||r.EMPTY_STRING,d=l.TenantId||n.tid||r.EMPTY_STRING,u=tv(o.getAccountInfo(),void 0,n,e.id_token);u.nativeAccountId!==e.account.id&&(u.nativeAccountId=e.account.id);let g=await this.generatePopAccessToken(e,t),p=t.tokenType===I.POP?I.POP:I.BEARER;return{authority:i,uniqueId:h,tenantId:d,scopes:c.asArray(),account:u,idToken:e.id_token,idTokenClaims:n,accessToken:g,fromCache:!!s&&this.isResponseFromCache(s),expiresOn:new Date(1e3*Number(a+e.expires_in)),tokenType:p,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch(e=>{this.logger.error(`Error occurred while removing account context from browser storage. ${e}`)})}cacheNativeTokens(e,t,n,o,i,a,s){let c=eG(n,t.authority,e.id_token||"",t.clientId,o.tid||""),l=t.tokenType===I.POP?r.SHR_NONCE_VALIDITY:("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,h=this.generateScopes(e,t),d=ez(n,t.authority,i,t.clientId,o.tid||a,h.printScopes(),s+l,0,oq,void 0,t.tokenType,void 0,t.keyId);this.nativeStorageManager.saveCacheRecord({idToken:c,accessToken:d},t.storeInCache)}addTelemetryFromNativeResponse(e){let t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw L(_,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch(e){this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return void 0===e.is_cached?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");let t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:t,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});let r=new tb(t);r.validateAsUri();let{scopes:n,...i}=e,a=new tf(n||[]);a.appendScopes(o);let s={...i,accountId:this.accountId,clientId:this.config.auth.clientId,authority:r.urlString,scope:a.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:(()=>{switch(this.apiId){case nF.ssoSilent:case nF.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),h.NONE}if(!e.prompt){this.logger.trace("initializeNativeRequest: prompt was not provided");return}switch(e.prompt){case h.NONE:case h.CONSENT:case h.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),nN(nw)}})(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(s.signPopToken&&e.popKid)throw nN(nk);if(this.handleExtraBrokerParams(s),s.extraParameters=s.extraParameters||{},s.extraParameters.telemetry=nO.MATS_TELEMETRY,e.authenticationScheme===I.POP){let t;let r={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},n=new rE(this.browserCrypto);if(s.keyId)t=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:s.keyId})),s.signPopToken=!1;else{let o=await rt(n.generateCnf.bind(n),t8.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(r,this.logger);t=o.reqCnfString,s.keyId=o.kid,s.signPopToken=!0}s.reqCnf=t}return this.addRequestSKUs(s),s}handleExtraBrokerParams(e){if(e.extraParameters&&e.extraParameters.hasOwnProperty(ir.BROKER_CLIENT_ID)&&e.extraParameters.hasOwnProperty(ir.BROKER_REDIRECT_URI)&&e.extraParameters.hasOwnProperty(t0)){let t=e.extraParameters[t0],r=e.redirectUri,n=e.extraParameters[ir.BROKER_REDIRECT_URI];e.extraParameters={child_client_id:t,child_redirect_uri:r},e.redirectUri=n}}}class ii{constructor(e,t,r,n){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=n,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=r,this.handshakeEvent=r.startMeasurement(t8.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");let t={channel:nO.CHANNEL_ID,extensionId:this.extensionId,responseId:n5(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise((e,r)=>{this.resolvers.set(t.responseId,{resolve:e,reject:r})})}static async createProvider(e,t,r){e.trace("NativeMessageHandler - createProvider called.");try{let n=new ii(e,t,r,nO.PREFERRED_EXTENSION_ID);return await n.sendHandshakeRequest(),n}catch(o){let n=new ii(e,t,r);return await n.sendHandshakeRequest(),n}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);let e={channel:nO.CHANNEL_ID,extensionId:this.extensionId,responseId:n5(),body:{method:nq.HandshakeRequest}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=e=>{this.onChannelMessage(e)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,r)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:r}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),r(nN(nT)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;let t=e.data;if(t.channel&&t.channel===nO.CHANNEL_ID&&(!t.extensionId||t.extensionId===this.extensionId)&&t.body.method===nq.HandshakeRequest){let e=this.handshakeResolvers.get(t.responseId);if(!e){this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);return}this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),e.reject(nN(nI))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");let t=e.data,r=this.resolvers.get(t.responseId),n=this.handshakeResolvers.get(t.responseId);try{let e=t.body.method;if(e===nq.Response){if(!r)return;let e=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(e)}`),"Success"!==e.status)r.reject(ie(e.code,e.description,e.ext));else if(e.result)e.result.code&&e.result.description?r.reject(ie(e.result.code,e.result.description,e.result.ext)):r.resolve(e.result);else throw L(_,"Event does not contain result.");this.resolvers.delete(t.responseId)}else if(e===nq.HandshakeResponse){if(!n){this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);return}clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),n.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(t){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${t}`),this.logger.errorPii(`Unable to parse ${e}`),r?r.reject(t):n&&n.reject(t)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,r,n){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!r)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(n)switch(n){case I.BEARER:case I.POP:t.trace("isNativeAvailable: authenticationScheme is supported, returning true");break;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}class ia{constructor(e,t,r,n,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=o}async handleCodeResponse(e,t){let r;this.performanceClient.addQueueMeasurement(t8.HandleCodeResponse,t.correlationId);try{r=this.authModule.handleFragmentResponse(e,t.state)}catch(e){if(e instanceof tY&&e.subError===r1)throw nN(r1);throw e}return rt(this.handleCodeResponseFromServer.bind(this),t8.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(r,t)}async handleCodeResponseFromServer(e,t,r=!0){if(this.performanceClient.addQueueMeasurement(t8.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await rt(this.authModule.updateAuthority.bind(this.authModule),t8.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),r&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{let e=this.createCcsCredentials(t);e&&(this.authCodeRequest.ccsCredential=e)}return await rt(this.authModule.acquireToken.bind(this.authModule),t8.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:tZ.HOME_ACCOUNT_ID}:e.loginHint?{credential:e.loginHint,type:tZ.UPN}:null}}function is(e,t,r){let n=t_(e);if(!n){if(tR(e))throw r.error(`A ${t} is present in the iframe but it does not contain known properties. It's likely that the ${t} has been replaced by code running on the redirectUri page.`),r.errorPii(`The ${t} detected is: ${e}`),nN(rj);throw r.error(`The request has returned to the redirectUri but a ${t} is not present. It's likely that the ${t} has been removed or the page has been redirected by code running on the redirectUri page.`),nN(rW)}return n}class ic extends o3{constructor(e,t,r,n,o,i,a,s,c,l){super(e,t,r,n,o,i,a,c,l),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=s}acquireToken(e){try{let t={popupName:this.generatePopupName(e.scopes||o,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,t);return this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),t.popup=this.openSizedPopup("about:blank",t),this.acquireTokenPopupAsync(e,t)}catch(e){return Promise.reject(e)}}logout(e){try{this.logger.verbose("logoutPopup called");let t=this.initializeLogoutRequest(e),r={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:e?.popupWindowAttributes||{},popupWindowParent:e?.popupWindowParent??window},n=e&&e.authority,o=e&&e.mainWindowRedirectUri;if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,r,n,o);return this.logger.verbose("asyncPopup set to false, opening popup"),r.popup=this.openSizedPopup("about:blank",r),this.logoutPopupAsync(t,r,n,o)}catch(e){return Promise.reject(e)}}async acquireTokenPopupAsync(e,r){this.logger.verbose("acquireTokenPopupAsync called");let n=this.initializeServerTelemetryManager(nF.acquireTokenPopup),o=await rt(this.initializeAuthorizationRequest.bind(this),t8.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,t.InteractionType.Popup);ow(o.authority);try{let i;let a=await rt(this.initializeAuthorizationCodeRequest.bind(this),t8.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(o),s=await rt(this.createAuthCodeClient.bind(this),t8.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:o.authority,requestAzureCloudOptions:o.azureCloudOptions,requestExtraQueryParameters:o.extraQueryParameters,account:o.account}),c=ii.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);c&&(i=this.performanceClient.startMeasurement(t8.FetchAccountIdWithNativeBroker,e.correlationId));let l=await s.getAuthCodeUrl({...o,nativeBroker:c}),h=new ia(s,this.browserStorage,a,this.logger,this.performanceClient),d=this.initiateAuthRequest(l,r);this.eventHandler.emitEvent(oJ.POPUP_OPENED,t.InteractionType.Popup,{popupWindow:d},null);let u=await this.monitorPopupForHash(d,r.popupWindowParent),g=re(is,t8.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(u,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(tJ.removeThrottle(this.browserStorage,this.config.auth.clientId,a),g.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),i&&i.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw nN(nA);let e=new io(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,nF.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,g.accountId,this.nativeStorage,o.correlationId),{userRequestState:t}=rw.parseRequestState(this.browserCrypto,o.state);return await e.acquireToken({...o,state:t,prompt:void 0})}return await h.handleCodeResponse(g,o)}catch(e){throw r.popup?.close(),e instanceof U&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),e}}async logoutPopupAsync(e,r,n,o){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(oJ.LOGOUT_START,t.InteractionType.Popup,e);let i=this.initializeServerTelemetryManager(nF.logoutPopup);try{await this.clearCacheOnLogout(e.account);let a=await rt(this.createAuthCodeClient.bind(this),t8.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:i,requestAuthority:n,account:e.account||void 0});try{a.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&a.authority.protocolMode===tk.OIDC){if(this.browserStorage.removeAccount(e.account?.homeAccountId),this.eventHandler.emitEvent(oJ.LOGOUT_SUCCESS,t.InteractionType.Popup,e),o){let e={apiId:nF.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=tb.getAbsoluteUrl(o,op());await this.navigationClient.navigateInternal(t,e)}r.popup?.close();return}}let s=a.getLogoutUri(e);this.eventHandler.emitEvent(oJ.LOGOUT_SUCCESS,t.InteractionType.Popup,e);let c=this.openPopup(s,r);if(this.eventHandler.emitEvent(oJ.POPUP_OPENED,t.InteractionType.Popup,{popupWindow:c},null),await this.monitorPopupForHash(c,r.popupWindowParent).catch(()=>{}),o){let e={apiId:nF.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=tb.getAbsoluteUrl(o,op());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${t}`),await this.navigationClient.navigateInternal(t,e)}else this.logger.verbose("No main window navigation requested")}catch(e){throw r.popup?.close(),e instanceof U&&(e.setCorrelationId(this.correlationId),i.cacheFailedRequest(e)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(oJ.LOGOUT_FAILURE,t.InteractionType.Popup,null,e),this.eventHandler.emitEvent(oJ.LOGOUT_END,t.InteractionType.Popup),e}this.eventHandler.emitEvent(oJ.LOGOUT_END,t.InteractionType.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),nN(rQ)}monitorPopupForHash(e,t){return new Promise((t,r)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");let n=setInterval(()=>{if(e.closed){this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(n),r(nN(r1));return}let o="";try{o=e.location.href}catch(e){}if(!o||"about:blank"===o)return;clearInterval(n);let i="",a=this.config.auth.OIDCOptions.serverResponseType;e&&(i=a===d.QUERY?e.location.search:e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(i)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e,t)})}openPopup(e,t){try{let r;if(t.popup?(r=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),r.location.assign(e)):void 0===t.popup&&(this.logger.verbosePii(`Opening popup window to: ${e}`),r=this.openSizedPopup(e,t)),!r)throw nN(r0);return r.focus&&r.focus(),this.currentWindow=r,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),r}catch(e){throw this.logger.error("error opening popup "+e.message),this.browserStorage.setInteractionInProgress(!1),nN(rZ)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:r,popupWindowParent:n}){let o=n.screenLeft?n.screenLeft:n.screenX,i=n.screenTop?n.screenTop:n.screenY,a=n.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,s=n.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,c=r.popupSize?.width,l=r.popupSize?.height,h=r.popupPosition?.top,d=r.popupPosition?.left;return(!c||c<0||c>a)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),c=nM.POPUP_WIDTH),(!l||l<0||l>s)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),l=nM.POPUP_HEIGHT),(!h||h<0||h>s)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),h=Math.max(0,s/2-nM.POPUP_HEIGHT/2+i)),(!d||d<0||d>a)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),d=Math.max(0,a/2-nM.POPUP_WIDTH/2+o)),n.open(e,t,`width=${c}, height=${l}, top=${h}, left=${d}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(t.InteractionType.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${nM.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){let t=e.account&&e.account.homeAccountId;return`${nM.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}class il{constructor(e,t,r,n,o){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=o}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(nH.ORIGIN_URI,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(nH.CORRELATION_ID,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);let r={apiId:nF.acquireTokenRedirect,timeout:t.redirectTimeout,noHistory:!1};if("function"==typeof t.onRedirectNavigate){if(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),!1!==t.onRedirectNavigate(e)){this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),await t.navigationClient.navigateExternal(e,r);return}this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation");return}this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),await t.navigationClient.navigateExternal(e,r);return}throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),nN(rQ)}async handleCodeResponse(e,t){let r;this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);let n=this.browserStorage.generateStateKey(t),o=this.browserStorage.getTemporaryCache(n);if(!o)throw eN(W,"Cached State");try{r=this.authModule.handleFragmentResponse(e,o)}catch(e){if(e instanceof tY&&e.subError===r1)throw nN(r1);throw e}let i=this.browserStorage.generateNonceKey(o),a=this.browserStorage.getTemporaryCache(i);if(this.authCodeRequest.code=r.code,r.cloud_instance_host_name&&await rt(this.authModule.updateAuthority.bind(this.authModule),t8.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(r.cloud_instance_host_name,this.authCodeRequest.correlationId),r.nonce=a||void 0,r.state=o,r.client_info)this.authCodeRequest.clientInfo=r.client_info;else{let e=this.checkCcsCredentials();e&&(this.authCodeRequest.ccsCredential=e)}let s=await this.authModule.acquireToken(this.authCodeRequest,r);return this.browserStorage.cleanRequestByState(t),s}checkCcsCredentials(){let e=this.browserStorage.getTemporaryCache(nH.CCS_CREDENTIAL,!0);if(e)try{return JSON.parse(e)}catch(t){this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}class ih extends o3{constructor(e,t,r,n,o,i,a,s,c,l){super(e,t,r,n,o,i,a,c,l),this.nativeStorage=s}async acquireToken(e){let r=await rt(this.initializeAuthorizationRequest.bind(this),t8.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,t.InteractionType.Redirect);this.browserStorage.updateCacheEntries(r.state,r.nonce,r.authority,r.loginHint||"",r.account||null);let n=this.initializeServerTelemetryManager(nF.acquireTokenRedirect),o=e=>{e.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(r.state),this.eventHandler.emitEvent(oJ.RESTORE_FROM_BFCACHE,t.InteractionType.Redirect))};try{let t=await rt(this.initializeAuthorizationCodeRequest.bind(this),t8.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(r),i=await rt(this.createAuthCodeClient.bind(this),t8.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:r.authority,requestAzureCloudOptions:r.azureCloudOptions,requestExtraQueryParameters:r.extraQueryParameters,account:r.account}),a=new il(i,this.browserStorage,t,this.logger,this.performanceClient),s=await i.getAuthCodeUrl({...r,nativeBroker:ii.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),c=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${c}`),window.addEventListener("pageshow",o),await a.initiateAuthRequest(s,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:c,onRedirectNavigate:e.onRedirectNavigate||this.config.auth.onRedirectNavigate})}catch(e){throw e instanceof U&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),window.removeEventListener("pageshow",o),this.browserStorage.cleanRequestByState(r.state),e}}async handleRedirectPromise(e="",n){let o=this.initializeServerTelemetryManager(nF.handleRedirectPromise);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;let[i,a]=this.getRedirectResponse(e||"");if(!i)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(t.InteractionType.Redirect),n.event.errorCode="no_server_response",null;let s=this.browserStorage.getTemporaryCache(nH.ORIGIN_URI,!0)||r.EMPTY_STRING,c=tb.removeHashFromUrl(s),l=tb.removeHashFromUrl(window.location.href);if(c===l&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),s.indexOf("#")>-1&&od(s),await this.handleResponse(i,o);if(!this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(i,o);if(!ou()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(nH.URL_HASH,a,!0);let e={apiId:nF.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0},t=!0;if(s&&"null"!==s)this.logger.verbose(`Navigating to loginRequestUrl: ${s}`),t=await this.navigationClient.navigateInternal(s,e);else{let r=om();this.browserStorage.setTemporaryCache(nH.ORIGIN_URI,r,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),t=await this.navigationClient.navigateInternal(r,e)}if(!t)return await this.handleResponse(i,o)}return null}catch(e){throw e instanceof U&&(e.setCorrelationId(this.correlationId),o.cacheFailedRequest(e)),this.browserStorage.cleanRequestByInteractionType(t.InteractionType.Redirect),e}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let r=e;r||(r=this.config.auth.OIDCOptions.serverResponseType===d.QUERY?window.location.search:window.location.hash);let n=t_(r);if(n){try{!function(e,t,r){if(!e.state)throw nN(rV);let n=oF(t,e.state);if(!n)throw nN(rY);if(n.interactionType!==r)throw nN(rJ)}(n,this.browserCrypto,t.InteractionType.Redirect)}catch(e){return e instanceof U&&this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`),[null,""]}return oh(window),this.logger.verbose("Hash contains known properties, returning response hash"),[n,r]}let o=this.browserStorage.getTemporaryCache(nH.URL_HASH,!0);return(this.browserStorage.removeItem(this.browserStorage.generateCacheKey(nH.URL_HASH)),o&&(n=t_(o)))?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[n,o]):[null,""]}async handleResponse(e,t){let r=e.state;if(!r)throw nN(rV);let n=this.browserStorage.getCachedRequest(r);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw nN(nA);let t=new io(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,nF.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,n.correlationId),{userRequestState:o}=rw.parseRequestState(this.browserCrypto,r);return t.acquireToken({...n,state:o,prompt:void 0}).finally(()=>{this.browserStorage.cleanRequestByState(r)})}let o=this.browserStorage.getCachedAuthority(r);if(!o)throw nN(nn);let i=await rt(this.createAuthCodeClient.bind(this),t8.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:o});return tJ.removeThrottle(this.browserStorage,this.config.auth.clientId,n),new il(i,this.browserStorage,n,this.logger,this.performanceClient).handleCodeResponse(e,r)}async logout(e){this.logger.verbose("logoutRedirect called");let r=this.initializeLogoutRequest(e),n=this.initializeServerTelemetryManager(nF.logout);try{this.eventHandler.emitEvent(oJ.LOGOUT_START,t.InteractionType.Redirect,e),await this.clearCacheOnLogout(r.account);let o={apiId:nF.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},i=await rt(this.createAuthCodeClient.bind(this),t8.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:n,requestAuthority:e&&e.authority,requestExtraQueryParameters:e?.extraQueryParameters,account:e&&e.account||void 0});if(i.authority.protocolMode===tk.OIDC)try{i.authority.endSessionEndpoint}catch{if(r.account?.homeAccountId){this.browserStorage.removeAccount(r.account?.homeAccountId),this.eventHandler.emitEvent(oJ.LOGOUT_SUCCESS,t.InteractionType.Redirect,r);return}}let a=i.getLogoutUri(r);if(this.eventHandler.emitEvent(oJ.LOGOUT_SUCCESS,t.InteractionType.Redirect,r),e&&"function"==typeof e.onRedirectNavigate){let t=e.onRedirectNavigate(a);if(!1!==t){this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(a,o);return}this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation")}else{this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(a,o);return}}catch(e){throw e instanceof U&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),this.eventHandler.emitEvent(oJ.LOGOUT_FAILURE,t.InteractionType.Redirect,null,e),this.eventHandler.emitEvent(oJ.LOGOUT_END,t.InteractionType.Redirect),e}this.eventHandler.emitEvent(oJ.LOGOUT_END,t.InteractionType.Redirect)}getRedirectStartPage(e){let t=e||window.location.href;return tb.getAbsoluteUrl(t,op())}}async function id(e,t,r,n,o){if(t.addQueueMeasurement(t8.SilentHandlerInitiateAuthRequest,n),!e)throw r.info("Navigate url is empty"),nN(rQ);return o?rt(ig,t8.SilentHandlerLoadFrame,r,t,n)(e,o,t,n):re(ip,t8.SilentHandlerLoadFrameSync,r,t,n)(e)}async function iu(e,t,r,n,o,i,a){return n.addQueueMeasurement(t8.SilentHandlerMonitorIframeForHash,i),new Promise((n,i)=>{t<1e4&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${t}ms) than the default (10000ms). This may result in timeouts.`);let s=window.setTimeout(()=>{window.clearInterval(c),i(nN(r6))},t),c=window.setInterval(()=>{let t="",r=e.contentWindow;try{t=r?r.location.href:""}catch(e){}if(!t||"about:blank"===t)return;let o="";r&&(o=a===d.QUERY?r.location.search:r.location.hash),window.clearTimeout(s),window.clearInterval(c),n(o)},r)}).finally(()=>{re(iC,t8.RemoveHiddenIframe,o,n,i)(e)})}function ig(e,t,r,n){return r.addQueueMeasurement(t8.SilentHandlerLoadFrame,n),new Promise((r,n)=>{let o=im();window.setTimeout(()=>{if(!o){n("Unable to load iframe");return}o.src=e,r(o)},t)})}function ip(e){let t=im();return t.src=e,t}function im(){let e=document.createElement("iframe");return e.className="msalSilentIframe",e.style.visibility="hidden",e.style.position="absolute",e.style.width=e.style.height="0",e.style.border="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(e),e}function iC(e){document.body===e.parentNode&&document.body.removeChild(e)}class iy extends o3{constructor(e,t,r,n,o,i,a,s,c,l,h){super(e,t,r,n,o,i,s,l,h),this.apiId=a,this.nativeStorage=c}async acquireToken(e){let r;this.performanceClient.addQueueMeasurement(t8.SilentIframeClientAcquireToken,e.correlationId),e.loginHint||e.sid||e.account&&e.account.username||this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");let n={...e};n.prompt?n.prompt!==h.NONE&&n.prompt!==h.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${n.prompt} with ${h.NONE}`),n.prompt=h.NONE):n.prompt=h.NONE;let o=await rt(this.initializeAuthorizationRequest.bind(this),t8.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(n,t.InteractionType.Silent);ow(o.authority);let i=this.initializeServerTelemetryManager(this.apiId);try{return r=await rt(this.createAuthCodeClient.bind(this),t8.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:i,requestAuthority:o.authority,requestAzureCloudOptions:o.azureCloudOptions,requestExtraQueryParameters:o.extraQueryParameters,account:o.account}),await rt(this.silentTokenHelper.bind(this),t8.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(r,o)}catch(a){if(a instanceof U&&(a.setCorrelationId(this.correlationId),i.cacheFailedRequest(a)),!r||!(a instanceof U)||a.errorCode!==nM.INVALID_GRANT_ERROR)throw a;this.performanceClient.addFields({retryError:a.errorCode},this.correlationId);let o=await rt(this.initializeAuthorizationRequest.bind(this),t8.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(n,t.InteractionType.Silent);return await rt(this.silentTokenHelper.bind(this),t8.SilentIframeClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(r,o)}}logout(){return Promise.reject(nN(r9))}async silentTokenHelper(e,t){let r=t.correlationId;this.performanceClient.addQueueMeasurement(t8.SilentIframeClientTokenHelper,r);let n=await rt(this.initializeAuthorizationCodeRequest.bind(this),t8.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,r)(t),o=await rt(e.getAuthCodeUrl.bind(e),t8.GetAuthCodeUrl,this.logger,this.performanceClient,r)({...t,nativeBroker:ii.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),i=new ia(e,this.browserStorage,n,this.logger,this.performanceClient),a=await rt(id,t8.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,r)(o,this.performanceClient,this.logger,r,this.config.system.navigateFrameWait),s=this.config.auth.OIDCOptions.serverResponseType,c=await rt(iu,t8.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,r)(a,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,r,s),l=re(is,t8.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(c,s,this.logger);if(l.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw nN(nA);let e=new io(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,l.accountId,this.browserStorage,r),{userRequestState:n}=rw.parseRequestState(this.browserCrypto,t.state);return rt(e.acquireToken.bind(e),t8.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,r)({...t,state:n,prompt:t.prompt||h.NONE})}return rt(i.handleCodeResponse.bind(i),t8.HandleCodeResponse,this.logger,this.performanceClient,r)(l,t)}}class iT extends o3{async acquireToken(e){this.performanceClient.addQueueMeasurement(t8.SilentRefreshClientAcquireToken,e.correlationId);let t=await rt(o6,t8.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),r={...e,...t};e.redirectUri&&(r.redirectUri=this.getRedirectUri(e.redirectUri));let n=this.initializeServerTelemetryManager(nF.acquireTokenSilent_silentFlow),o=await this.createRefreshTokenClient({serverTelemetryManager:n,authorityUrl:r.authority,azureCloudOptions:r.azureCloudOptions,account:r.account});return rt(o.acquireTokenByRefreshToken.bind(o),t8.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(r).catch(e=>{throw e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e),e})}logout(){return Promise.reject(nN(r9))}async createRefreshTokenClient(e){return new rP(await rt(this.getClientConfiguration.bind(this),t8.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),this.performanceClient)}}class iI{constructor(e,t,r,n){this.isBrowserEnvironment="undefined"!=typeof window,this.config=e,this.storage=t,this.logger=r,this.cryptoObj=n}loadExternalTokens(e,t,r){if(!this.isBrowserEnvironment)throw nN(na);let n=t.id_token?eH(t.id_token,oq):void 0,o={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},i=e.authority?new rn(rn.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,o,this.logger,e.correlationId||n5()):void 0,a=this.loadAccount(e,r.clientInfo||t.client_info||"",n,i),s=this.loadIdToken(t,a.homeAccountId,a.environment,a.realm),c=this.loadAccessToken(e,t,a.homeAccountId,a.environment,a.realm,r),l=this.loadRefreshToken(t,a.homeAccountId,a.environment);return this.generateAuthenticationResult(e,{account:a,idToken:s,accessToken:c,refreshToken:l},n,i)}loadAccount(e,t,r,n){if(this.logger.verbose("TokenCache - loading account"),e.account){let t=tS.createFromAccountInfo(e.account);return this.storage.setAccount(t),t}if(!n||!t&&!r)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),nN(nu);let o=tS.generateHomeAccountId(t,n.authorityType,this.logger,this.cryptoObj,r),i=r?.tid,a=rR(this.storage,n,o,oq,r,t,n.hostnameAndPort,i,void 0,void 0,this.logger);return this.storage.setAccount(a),a}loadIdToken(e,t,r,n){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");let o=eG(t,r,e.id_token,this.config.auth.clientId,n);return this.storage.setIdTokenCredential(o),o}loadAccessToken(e,t,r,n,o,i){if(!t.access_token)return this.logger.verbose("TokenCache - no access token found in response"),null;if(!t.expires_in)return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;if(!t.scope&&(!e.scopes||!e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null;this.logger.verbose("TokenCache - loading access token");let a=t.scope?tf.fromString(t.scope):new tf(e.scopes),s=i.expiresOn||t.expires_in+new Date().getTime()/1e3,c=i.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+new Date().getTime()/1e3,l=ez(r,n,t.access_token,this.config.auth.clientId,o,a.printScopes(),s,c,oq);return this.storage.setAccessTokenCredential(l),l}loadRefreshToken(e,t,r){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");let n=e$(t,r,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return this.storage.setRefreshTokenCredential(n),n}generateAuthenticationResult(e,t,r,n){let o,i="",a=[],s=null;t?.accessToken&&(i=t.accessToken.secret,a=tf.fromString(t.accessToken.target).asArray(),s=new Date(1e3*Number(t.accessToken.expiresOn)),o=new Date(1e3*Number(t.accessToken.extendedExpiresOn)));let c=t.account;return{authority:n?n.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:a,account:c.getAccountInfo(),idToken:t.idToken?.secret||"",idTokenClaims:r||{},accessToken:i,fromCache:!0,expiresOn:s,correlationId:e.correlationId||"",requestId:"",extExpiresOn:o,familyId:t.refreshToken?.familyId||"",tokenType:t?.accessToken?.tokenType||"",state:e.state||"",cloudGraphHostName:c.cloudGraphHostName||"",msGraphHost:c.msGraphHost||"",fromNativeBroker:!1}}}class iA extends rb{constructor(e){super(e),this.includeRedirectUri=!1}}class iv extends o3{constructor(e,t,r,n,o,i,a,s,c,l){super(e,t,r,n,o,i,s,c,l),this.apiId=a}async acquireToken(e){if(!e.code)throw nN(np);let r=await rt(this.initializeAuthorizationRequest.bind(this),t8.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,t.InteractionType.Silent),n=this.initializeServerTelemetryManager(this.apiId);try{let t={...r,code:e.code},o=await rt(this.getClientConfiguration.bind(this),t8.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:n,requestAuthority:r.authority,requestAzureCloudOptions:r.azureCloudOptions,requestExtraQueryParameters:r.extraQueryParameters,account:r.account}),i=new iA(o);this.logger.verbose("Auth code client created");let a=new ia(i,this.browserStorage,t,this.logger,this.performanceClient);return await rt(a.handleCodeResponseFromServer.bind(a),t8.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},r,!1)}catch(e){throw e instanceof U&&(e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e)),e}}logout(){return Promise.reject(nN(r9))}}function iw(e){let t=e?.idTokenClaims;return t?.tfp||t?.acr?"B2C":t?.tid?t?.tid==="9188040d-6c67-4c5b-b112-36a304b66dad"?"MSA":"AAD":void 0}function iE(e,t){try{oA(e)}catch(e){throw t.end({success:!1},e),e}}class ik{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new oD(this.logger,this.performanceClient):eM,this.eventHandler=new oX(this.logger,this.browserCrypto),this.browserStorage=this.isBrowserEnvironment?new oK(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,ri(this.config.auth),this.performanceClient):oG(this.config.auth.clientId,this.logger);let t={cacheLocation:nU.MemoryStorage,temporaryCacheLocation:nU.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new oK(this.config.auth.clientId,t,this.browserCrypto,this.logger,void 0,this.performanceClient),this.tokenCache=new iI(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this)}static async createController(e,t){let r=new ik(e);return await r.initialize(t),r}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e){if(this.logger.trace("initialize called"),this.initialized){this.logger.info("initialize has already been called, exiting early.");return}let t=e?.correlationId||this.getRequestCorrelationId(),r=this.config.system.allowNativeBroker,n=this.performanceClient.startMeasurement(t8.InitializeClientApplication,t);if(this.eventHandler.emitEvent(oJ.INITIALIZE_START),r)try{this.nativeExtensionProvider=await ii.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(e){this.logger.verbose(e)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await rt(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),t8.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient,t)(this.performanceClient,t)),this.initialized=!0,this.eventHandler.emitEvent(oJ.INITIALIZE_END),n.end({allowNativeBroker:r,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),oI(this.initialized),this.isBrowserEnvironment){let t=e||"",r=this.redirectResponse.get(t);return void 0===r?(r=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,r),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),r}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){let r;let n=this.getAllAccounts(),o=this.browserStorage.getCachedNativeRequest(),i=o&&ii.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e,a=i?o?.correlationId:this.browserStorage.getTemporaryCache(nH.CORRELATION_ID,!0)||"",s=this.performanceClient.startMeasurement(t8.AcquireTokenRedirect,a);if(this.eventHandler.emitEvent(oJ.HANDLE_REDIRECT_START,t.InteractionType.Redirect),i&&this.nativeExtensionProvider){this.logger.trace("handleRedirectPromise - acquiring token from native platform");let e=new io(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,nF.handleRedirectPromise,this.performanceClient,this.nativeExtensionProvider,o.accountId,this.nativeInternalStorage,o.correlationId);r=rt(e.handleRedirectPromise.bind(e),t8.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,s.event.correlationId)(this.performanceClient,s.event.correlationId)}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");let t=this.createRedirectClient(a);r=rt(t.handleRedirectPromise.bind(t),t8.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,s.event.correlationId)(e,s)}return r.then(e=>(e?(n.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(oJ.LOGIN_SUCCESS,t.InteractionType.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),s.end({success:!0,accountType:iw(e.account)})):s.event.errorCode?s.end({success:!1}):s.discard(),this.eventHandler.emitEvent(oJ.HANDLE_REDIRECT_END,t.InteractionType.Redirect),e)).catch(e=>{throw n.length>0?this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Redirect,null,e):this.eventHandler.emitEvent(oJ.LOGIN_FAILURE,t.InteractionType.Redirect,null,e),this.eventHandler.emitEvent(oJ.HANDLE_REDIRECT_END,t.InteractionType.Redirect),s.end({success:!1},e),e})}async acquireTokenRedirect(e){let r=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",r);let n=this.performanceClient.startMeasurement(t8.AcquireTokenPreRedirect,r);n.add({accountType:iw(e.account),scenarioId:e.scenarioId});let o=e.onRedirectNavigate;if(o)e.onRedirectNavigate=e=>{let t="function"==typeof o?o(e):void 0;return!1!==t?n.end({success:!0}):n.discard(),t};else{let e=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=t=>{let r="function"==typeof e?e(t):void 0;return!1!==r?n.end({success:!0}):n.discard(),r}}let i=this.getAllAccounts().length>0;try{let o;return ov(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),i?this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_START,t.InteractionType.Redirect,e):this.eventHandler.emitEvent(oJ.LOGIN_START,t.InteractionType.Redirect,e),o=this.nativeExtensionProvider&&this.canUseNative(e)?new io(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,nF.acquireTokenRedirect,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,r).acquireTokenRedirect(e,n).catch(t=>{if(t instanceof o9&&o7(t))return this.nativeExtensionProvider=void 0,this.createRedirectClient(r).acquireToken(e);if(t instanceof rI)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(r).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),t}):this.createRedirectClient(r).acquireToken(e),await o}catch(e){throw n.end({success:!1},e),i?this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Redirect,null,e):this.eventHandler.emitEvent(oJ.LOGIN_FAILURE,t.InteractionType.Redirect,null,e),e}}acquireTokenPopup(e){let r=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(t8.AcquireTokenPopup,r);n.add({scenarioId:e.scenarioId,accountType:iw(e.account)});try{this.logger.verbose("acquireTokenPopup called",r),iE(this.initialized,n),this.browserStorage.setInteractionInProgress(!0)}catch(e){return Promise.reject(e)}let o=this.getAllAccounts();return o.length>0?this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_START,t.InteractionType.Popup,e):this.eventHandler.emitEvent(oJ.LOGIN_START,t.InteractionType.Popup,e),(this.canUseNative(e)?this.acquireTokenNative({...e,correlationId:r},nF.acquireTokenPopup).then(e=>(this.browserStorage.setInteractionInProgress(!1),n.end({success:!0,isNativeBroker:!0,requestId:e.requestId,accountType:iw(e.account)}),e)).catch(t=>{if(t instanceof o9&&o7(t))return this.nativeExtensionProvider=void 0,this.createPopupClient(r).acquireToken(e);if(t instanceof rI)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(r).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),t}):this.createPopupClient(r).acquireToken(e)).then(e=>(o.length<this.getAllAccounts().length?this.eventHandler.emitEvent(oJ.LOGIN_SUCCESS,t.InteractionType.Popup,e):this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Popup,e),n.end({success:!0,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:iw(e.account)}),e)).catch(e=>(o.length>0?this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Popup,null,e):this.eventHandler.emitEvent(oJ.LOGIN_FAILURE,t.InteractionType.Popup,null,e),n.end({success:!1},e),Promise.reject(e)))}trackPageVisibilityWithMeasurement(){let e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){let r=this.getRequestCorrelationId(e),n={...e,prompt:e.prompt,correlationId:r};return this.ssoSilentMeasurement=this.performanceClient.startMeasurement(t8.SsoSilent,r),this.ssoSilentMeasurement?.add({scenarioId:e.scenarioId,accountType:iw(e.account)}),iE(this.initialized,this.ssoSilentMeasurement),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",r),this.eventHandler.emitEvent(oJ.SSO_SILENT_START,t.InteractionType.Silent,n),(this.canUseNative(n)?this.acquireTokenNative(n,nF.ssoSilent).catch(e=>{if(e instanceof o9&&o7(e))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(n.correlationId).acquireToken(n);throw e}):this.createSilentIframeClient(n.correlationId).acquireToken(n)).then(e=>(this.eventHandler.emitEvent(oJ.SSO_SILENT_SUCCESS,t.InteractionType.Silent,e),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:e.fromNativeBroker,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:iw(e.account)}),e)).catch(e=>{throw this.eventHandler.emitEvent(oJ.SSO_SILENT_FAILURE,t.InteractionType.Silent,null,e),this.ssoSilentMeasurement?.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){let r=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",r);let n=this.performanceClient.startMeasurement(t8.AcquireTokenByCode,r);iE(this.initialized,n),this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_BY_CODE_START,t.InteractionType.Silent,e),n.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw nN(nC);if(e.code){let o=e.code,i=this.hybridAuthCodeResponses.get(o);return i?(this.logger.verbose("Existing acquireTokenByCode request found",r),n.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",r),i=this.acquireTokenByCodeAsync({...e,correlationId:r}).then(e=>(this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_BY_CODE_SUCCESS,t.InteractionType.Silent,e),this.hybridAuthCodeResponses.delete(o),n.end({success:!0,isNativeBroker:e.fromNativeBroker,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:iw(e.account)}),e)).catch(e=>{throw this.hybridAuthCodeResponses.delete(o),this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_BY_CODE_FAILURE,t.InteractionType.Silent,null,e),n.end({success:!1},e),e}),this.hybridAuthCodeResponses.set(o,i)),await i}if(e.nativeAccountId){if(this.canUseNative(e,e.nativeAccountId)){let t=await this.acquireTokenNative({...e,correlationId:r},nF.acquireTokenByCode,e.nativeAccountId).catch(e=>{throw e instanceof o9&&o7(e)&&(this.nativeExtensionProvider=void 0),e});return n.end({accountType:iw(t.account),success:!0}),t}throw nN(ny)}throw nN(nm)}catch(e){throw this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_BY_CODE_FAILURE,t.InteractionType.Silent,null,e),n.end({success:!1},e),e}}async acquireTokenByCodeAsync(e){this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(t8.AcquireTokenByCodeAsync,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement);let t=this.createSilentAuthCodeClient(e.correlationId);return await t.acquireToken(e).then(e=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker,requestId:e.requestId}),e)).catch(e=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(t8.AcquireTokenFromCache,e.correlationId),t){case nQ.Default:case nQ.AccessToken:case nQ.AccessTokenAndRefreshToken:let r=this.createSilentCacheClient(e.correlationId);return rt(r.acquireToken.bind(r),t8.SilentCacheClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw eN(em)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(t8.AcquireTokenByRefreshToken,e.correlationId),t){case nQ.Default:case nQ.AccessTokenAndRefreshToken:case nQ.RefreshToken:case nQ.RefreshTokenAndNetwork:let r=this.createSilentRefreshClient(e.correlationId);return rt(r.acquireToken.bind(r),t8.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw eN(em)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(t8.AcquireTokenBySilentIframe,e.correlationId);let t=this.createSilentIframeClient(e.correlationId);return rt(t.acquireToken.bind(t),t8.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){let t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){let t=this.getRequestCorrelationId(e);return ov(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{let t=this.getRequestCorrelationId(e);return oA(this.initialized),this.browserStorage.setInteractionInProgress(!0),this.createPopupClient(t).logout(e)}catch(e){return Promise.reject(e)}}async clearCache(e){let t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return oz(this.logger,this.browserStorage,this.isBrowserEnvironment,e)}getAccount(e){return o$(e,this.logger,this.browserStorage)}getAccountByUsername(e){return oQ(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return oW(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return oV(e,this.logger,this.browserStorage)}setActiveAccount(e){oj(e,this.browserStorage)}getActiveAccount(){return oY(this.browserStorage)}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");let r=tS.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return(this.browserStorage.setAccount(r),e.fromNativeBroker)?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,r){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw nN(nA);return new io(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,r||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!ii.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case h.NONE:case h.CONSENT:case h.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!!(t||this.getNativeAccountId(e))||(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),!1)}getNativeAccountId(e){let t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new ic(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new ih(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new iy(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,nF.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new it(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new iT(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new iv(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,nF.acquireTokenByCode,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e){return this.eventHandler.addEventCallback(e)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){this.eventHandler.enableAccountStorageEvents()}disableAccountStorageEvents(){this.eventHandler.disableAccountStorageEvents()}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getEventHandler(){return this.eventHandler}getRequestCorrelationId(e){return e?.correlationId?e.correlationId:this.isBrowserEnvironment?n5():r.EMPTY_STRING}async loginRedirect(e){let t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||nG})}loginPopup(e){let t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||nG})}async acquireTokenSilent(e){let t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(t8.AcquireTokenSilent,t);n.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),iE(this.initialized,n),this.logger.verbose("acquireTokenSilent called",t);let o=e.account||this.getActiveAccount();if(!o)throw nN(r7);n.add({accountType:iw(o)});let i=JSON.stringify({clientId:this.config.auth.clientId,authority:e.authority||r.EMPTY_STRING,scopes:e.scopes,homeAccountIdentifier:o.homeAccountId,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid,shrOptions:e.shrOptions}),a=this.activeSilentTokenRequests.get(i);if(void 0!==a)return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",t),n.discard(),{...await a,state:e.state};{this.logger.verbose("acquireTokenSilent called for the first time, storing active request",t);let r=rt(this.acquireTokenSilentAsync.bind(this),t8.AcquireTokenSilentAsync,this.logger,this.performanceClient,t)({...e,correlationId:t},o).then(t=>(this.activeSilentTokenRequests.delete(i),n.end({success:!0,fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker,cacheLookupPolicy:e.cacheLookupPolicy,requestId:t.requestId,accessTokenSize:t.accessToken.length,idTokenSize:t.idToken.length}),t)).catch(e=>{throw this.activeSilentTokenRequests.delete(i),n.end({success:!1},e),e});return this.activeSilentTokenRequests.set(i,r),{...await r,state:e.state}}}async acquireTokenSilentAsync(e,r){let n=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(t8.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_START,t.InteractionType.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",n);let o=await rt(o4,t8.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,r,this.config,this.performanceClient,this.logger),i=e.cacheLookupPolicy||nQ.Default;return this.acquireTokenSilentNoIframe(o,i).catch(async e=>{if(function(e,t){let r=!(e instanceof rI&&e.subError!==rp),n=e.errorCode===nM.INVALID_GRANT_ERROR||e.errorCode===em,o=r&&n||e.errorCode===rc||e.errorCode===rh,i=nW.includes(t);return o&&i}(e,i)){if(this.activeIframeRequest){if(i===nQ.Skip)return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",o.correlationId),rt(this.acquireTokenBySilentIframe.bind(this),t8.AcquireTokenBySilentIframe,this.logger,this.performanceClient,o.correlationId)(o);{let[t,r]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${r}`,o.correlationId);let n=this.performanceClient.startMeasurement(t8.AwaitConcurrentIframe,o.correlationId);n.add({awaitIframeCorrelationId:r});let a=await t;if(n.end({success:a}),a)return this.logger.verbose(`Parallel iframe request with correlationId: ${r} succeeded. Retrying cache and/or RT redemption`,o.correlationId),this.acquireTokenSilentNoIframe(o,i);throw this.logger.info(`Iframe request with correlationId: ${r} failed. Interaction is required.`),e}}{let e;return this.activeIframeRequest=[new Promise(t=>{e=t}),o.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",o.correlationId),rt(this.acquireTokenBySilentIframe.bind(this),t8.AcquireTokenBySilentIframe,this.logger,this.performanceClient,o.correlationId)(o).then(t=>(e(!0),t)).catch(t=>{throw e(!1),t}).finally(()=>{this.activeIframeRequest=void 0})}}throw e}).then(r=>(this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Silent,r),e.correlationId&&this.performanceClient.addFields({fromCache:r.fromCache,isNativeBroker:r.fromNativeBroker,requestId:r.requestId},e.correlationId),r)).catch(e=>{throw this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Silent,null,e),e}).finally(()=>{document.removeEventListener("visibilitychange",n)})}async acquireTokenSilentNoIframe(e,r){return ii.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,nF.acquireTokenSilent_silentFlow).catch(async e=>{if(e instanceof o9&&o7(e))throw this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,eN(em);throw e})):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),rt(this.acquireTokenFromCache.bind(this),t8.AcquireTokenFromCache,this.logger,this.performanceClient,e.correlationId)(e,r).catch(n=>{if(r===nQ.AccessToken)throw n;return this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_NETWORK_START,t.InteractionType.Silent,e),rt(this.acquireTokenByRefreshToken.bind(this),t8.AcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,r)}))}}class iS{constructor(e,t,r,n){this.clientId=e,this.clientCapabilities=t,this.crypto=r,this.logger=n}toNaaTokenRequest(e){let t;t=void 0===e.extraQueryParameters?new Map:new Map(Object.entries(e.extraQueryParameters));let r=new t5().addClientCapabilitiesToClaims(e.claims,this.clientCapabilities),n=e.scopes||o;return{platformBrokerId:e.account?.homeAccountId,clientId:this.clientId,authority:e.authority,scope:n.join(" "),correlationId:void 0!==e.correlationId?e.correlationId:this.crypto.createNewGuid(),claims:tC.isEmptyObj(r)?void 0:r,state:e.state,authenticationScheme:e.authenticationScheme||I.BEARER,extraParameters:t}}fromNaaTokenResponse(e,t,r){if(!t.token.id_token||!t.token.access_token)throw eN(x);let n=new Date((r+(t.token.expires_in||0))*1e3),o=eH(t.token.id_token,this.crypto.base64Decode),i=this.fromNaaAccountInfo(t.account,t.token.id_token,o),a=t.token.scope||e.scope;return{authority:t.token.authority||i.environment,uniqueId:i.localAccountId,tenantId:i.tenantId,scopes:a.split(" "),account:i,idToken:t.token.id_token,idTokenClaims:o,accessToken:t.token.access_token,fromCache:!1,expiresOn:n,tokenType:e.authenticationScheme||I.BEARER,correlationId:e.correlationId,extExpiresOn:n,state:e.state}}fromNaaAccountInfo(e,t,r){let n=r||e.idTokenClaims,o=e.localAccountId||n?.oid||n?.sub||"",i=e.tenantId||n?.tid||"",a=e.homeAccountId||`${o}.${i}`,s=e.username||n?.preferred_username||"",c=e.name||n?.name,l=new Map,h=tA(a,o,i,n);return l.set(i,h),{homeAccountId:a,environment:e.environment,tenantId:i,username:s,localAccountId:o,name:c,idToken:t,idTokenClaims:n,tenantProfiles:l}}fromBridgeError(e){if(void 0===e.status)return new U("unknown_error","An unknown error occurred");switch(e.status){case oP.UserCancel:return new eP(ew);case oP.NoNetwork:return new eP(ev);case oP.AccountUnavailable:return new eP(eh);case oP.Disabled:return new eP(eS);case oP.NestedAppAuthUnavailable:return new eP(e.code||eS,e.description);case oP.TransientError:case oP.PersistentError:return new tY(e.code,e.description);case oP.UserInteractionRequired:return new rI(e.code,e.description);default:return new U(e.code,e.description)}}toAuthenticationResultFromCache(e,t,r,n,o){if(!t||!r)throw eN(x);let i=eH(t.secret,this.crypto.base64Decode),a=r.target||n.scopes.join(" ");return{authority:r.environment||e.environment,uniqueId:e.localAccountId,tenantId:e.tenantId,scopes:a.split(" "),account:e,idToken:t.secret,idTokenClaims:i||{},accessToken:r.secret,fromCache:!0,expiresOn:new Date(1e3*Number(r.expiresOn)),tokenType:n.authenticationScheme||I.BEARER,correlationId:o,extExpiresOn:new Date(1e3*Number(r.extendedExpiresOn)),state:n.state}}}class iR extends U{constructor(e,t){super(e,t),Object.setPrototypeOf(this,iR.prototype),this.name="NestedAppAuthError"}static createUnsupportedError(){return new iR("unsupported_method","This method is not supported in nested app environment.")}}class i_{constructor(e){this.operatingContext=e;let t=this.operatingContext.getBridgeProxy();if(void 0!==t)this.bridgeProxy=t;else throw Error("unexpected: bridgeProxy is undefined");this.config=e.getConfig(),this.logger=this.operatingContext.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=e.isBrowserEnvironment()?new oD(this.logger,this.performanceClient):eM,this.browserStorage=this.operatingContext.isBrowserEnvironment()?new oK(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,ri(this.config.auth)):oG(this.config.auth.clientId,this.logger),this.eventHandler=new oX(this.logger,this.browserCrypto),this.nestedAppAuthAdapter=new iS(this.config.auth.clientId,this.config.auth.clientCapabilities,this.browserCrypto,this.logger);let r=this.bridgeProxy.getAccountContext();r&&oj(o$(r,this.logger,this.browserStorage),this.browserStorage)}getEventHandler(){return this.eventHandler}static async createController(e){return Promise.resolve(new i_(e))}initialize(){return Promise.resolve()}ensureValidRequest(e){return e?.correlationId?e:{...e,correlationId:this.browserCrypto.createNewGuid()}}async acquireTokenInteractive(e){let r=this.ensureValidRequest(e);this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_START,t.InteractionType.Popup,r);let n=this.performanceClient.startMeasurement(t8.AcquireTokenPopup,r.correlationId);n?.add({nestedAppAuthRequest:!0});try{let o=this.nestedAppAuthAdapter.toNaaTokenRequest(r),i=eB(),a=await this.bridgeProxy.getTokenInteractive(o),s=this.nestedAppAuthAdapter.fromNaaTokenResponse(o,a,i);return await this.hydrateCache(s,e),this.browserStorage.setActiveAccount(s.account),this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Popup,s),n.add({accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length}),n.end({success:!0,requestId:s.requestId}),s}catch(r){let e=this.nestedAppAuthAdapter.fromBridgeError(r);throw this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Popup,null,r),n.end({success:!1},r),e}}async acquireTokenSilentInternal(e){let r=this.ensureValidRequest(e);this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_START,t.InteractionType.Silent,r);let n=await this.acquireTokenFromCache(r);if(n)return this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Silent,n),n;let o=this.performanceClient.startMeasurement(t8.SsoSilent,r.correlationId);o?.increment({visibilityChangeCount:0}),o?.add({nestedAppAuthRequest:!0});try{let n=this.nestedAppAuthAdapter.toNaaTokenRequest(r),i=eB(),a=await this.bridgeProxy.getTokenSilent(n),s=this.nestedAppAuthAdapter.fromNaaTokenResponse(n,a,i);return await this.hydrateCache(s,e),this.browserStorage.setActiveAccount(s.account),this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Silent,s),o?.add({accessTokenSize:s.accessToken.length,idTokenSize:s.idToken.length}),o?.end({success:!0,requestId:s.requestId}),s}catch(r){let e=this.nestedAppAuthAdapter.fromBridgeError(r);throw this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Silent,null,r),o?.end({success:!1},r),e}}async acquireTokenFromCache(e){let r=this.performanceClient.startMeasurement(t8.AcquireTokenSilent,e.correlationId);r?.add({nestedAppAuthRequest:!0});let n=await this.acquireTokenFromCacheInternal(e);return n?(this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_SUCCESS,t.InteractionType.Silent,n),r?.add({accessTokenSize:n?.accessToken.length,idTokenSize:n?.idToken.length}),r?.end({success:!0}),n):(this.logger.error("Cached tokens are not found for the account, proceeding with silent token request."),this.eventHandler.emitEvent(oJ.ACQUIRE_TOKEN_FAILURE,t.InteractionType.Silent,null),r?.end({success:!1}),null)}async acquireTokenFromCacheInternal(e){let t=this.bridgeProxy.getAccountContext(),r=null;if(t&&(r=o$(t,this.logger,this.browserStorage)||e.account),!r)return this.logger.verbose("No active account found, falling back to the host"),Promise.resolve(null);this.logger.verbose("active account found, attempting to acquire token silently");let n={...e,correlationId:e.correlationId||this.browserCrypto.createNewGuid(),authority:e.authority||r.environment,scopes:e.scopes?.length?e.scopes:[...o]},i=this.browserStorage.getTokenKeys(),a=this.browserStorage.getAccessToken(r,n,i,r.tenantId,this.performanceClient,n.correlationId);if(!a)return this.logger.verbose("No cached access token found"),Promise.resolve(null);if(eF(a.cachedAt)||ex(a.expiresOn,this.config.system.tokenRenewalOffsetSeconds)){this.logger.verbose("Cached access token has expired, deleting all related tokens from cache");let e=tS.createFromAccountInfo(r);return await this.browserStorage.removeAccountContext(e),Promise.resolve(null)}let s=this.browserStorage.getIdToken(r,i,r.tenantId,this.performanceClient,n.correlationId);return s?this.nestedAppAuthAdapter.toAuthenticationResultFromCache(r,s,a,n,n.correlationId):(this.logger.verbose("No cached id token found"),Promise.resolve(null))}async acquireTokenPopup(e){return this.acquireTokenInteractive(e)}acquireTokenRedirect(e){throw iR.createUnsupportedError()}async acquireTokenSilent(e){return this.acquireTokenSilentInternal(e)}acquireTokenByCode(e){throw iR.createUnsupportedError()}acquireTokenNative(e,t,r){throw iR.createUnsupportedError()}acquireTokenByRefreshToken(e,t){throw iR.createUnsupportedError()}addEventCallback(e){return this.eventHandler.addEventCallback(e)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){throw iR.createUnsupportedError()}removePerformanceCallback(e){throw iR.createUnsupportedError()}enableAccountStorageEvents(){throw iR.createUnsupportedError()}disableAccountStorageEvents(){throw iR.createUnsupportedError()}getAllAccounts(e){return oz(this.logger,this.browserStorage,this.isBrowserEnv(),e)}getAccount(e){return o$(e,this.logger,this.browserStorage)}getAccountByUsername(e){return oQ(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return oW(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return oV(e,this.logger,this.browserStorage)}setActiveAccount(e){return oj(e,this.browserStorage)}getActiveAccount(){return oY(this.browserStorage)}handleRedirectPromise(e){return Promise.resolve(null)}loginPopup(e){return this.acquireTokenInteractive(e||nG)}loginRedirect(e){throw iR.createUnsupportedError()}logout(e){throw iR.createUnsupportedError()}logoutRedirect(e){throw iR.createUnsupportedError()}logoutPopup(e){throw iR.createUnsupportedError()}ssoSilent(e){return this.acquireTokenSilentInternal(e)}getTokenCache(){throw iR.createUnsupportedError()}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){}setNavigationClient(e){this.logger.warning("setNavigationClient is not supported in nested app auth")}getConfiguration(){return this.config}isBrowserEnv(){return this.operatingContext.isBrowserEnvironment()}getBrowserCrypto(){return this.browserCrypto}getPerformanceClient(){throw iR.createUnsupportedError()}getRedirectResponse(){throw iR.createUnsupportedError()}async clearCache(e){throw iR.createUnsupportedError()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");let r=tS.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(r),this.browserStorage.hydrateCache(e,t)}}async function ib(e,t){let r=new oO(e);return await r.initialize(),ik.createController(r,t)}async function iP(e){let t=new oO(e),r=new oM(e),n=[t.initialize(),r.initialize()];return(await Promise.all(n),r.isAvailable()&&e.auth.supportsNestedAppAuth)?i_.createController(r):t.isAvailable()?ik.createController(t):null}class iN{static async createPublicClientApplication(e){let t=await ib(e);return new iN(e,t)}constructor(e,t){this.controller=t||new ik(new oO(e))}async initialize(e){return this.controller.initialize(e)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e){return this.controller.addEventCallback(e)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}async function iM(e){let t=new oM(e);return(await t.initialize(),t.isAvailable())?new iN(e,new i_(t)):iO(e)}async function iO(e){let t=new iN(e);return await t.initialize(),t}class iq{constructor(e){this.initialized=!1,this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.logger=e.getLogger(),this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new oD(this.logger,this.performanceClient):eM,this.browserStorage=this.isBrowserEnvironment?new oK(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,void 0,this.performanceClient):oG(this.config.auth.clientId,this.logger),this.eventHandler=new oX(this.logger,this.browserCrypto)}getBrowserStorage(){return this.browserStorage}getEventHandler(){return this.eventHandler}getAccount(e){return null}getAccountByHomeId(e){return null}getAccountByLocalId(e){return null}getAccountByUsername(e){return null}getAllAccounts(){return[]}initialize(){return this.initialized=!0,Promise.resolve()}acquireTokenPopup(e){return oI(this.initialized),oT(),{}}acquireTokenRedirect(e){return oI(this.initialized),oT(),Promise.resolve()}acquireTokenSilent(e){return oI(this.initialized),oT(),{}}acquireTokenByCode(e){return oI(this.initialized),oT(),{}}acquireTokenNative(e,t,r){return oI(this.initialized),oT(),{}}acquireTokenByRefreshToken(e,t){return oI(this.initialized),oT(),{}}addEventCallback(e){return this.eventHandler.addEventCallback(e)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return oI(this.initialized),oT(),""}removePerformanceCallback(e){return oI(this.initialized),oT(),!0}enableAccountStorageEvents(){oI(this.initialized),oT()}disableAccountStorageEvents(){oI(this.initialized),oT()}handleRedirectPromise(e){return oI(this.initialized),Promise.resolve(null)}loginPopup(e){return oI(this.initialized),oT(),{}}loginRedirect(e){return oI(this.initialized),oT(),{}}logout(e){return oI(this.initialized),oT(),{}}logoutRedirect(e){return oI(this.initialized),oT(),{}}logoutPopup(e){return oI(this.initialized),oT(),{}}ssoSilent(e){return oI(this.initialized),oT(),{}}getTokenCache(){return oI(this.initialized),oT(),{}}getLogger(){return this.logger}setLogger(e){oI(this.initialized),oT()}setActiveAccount(e){oI(this.initialized),oT()}getActiveAccount(){return oI(this.initialized),oT(),null}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){oI(this.initialized),oT()}getConfiguration(){return this.config}isBrowserEnv(){return oI(this.initialized),oT(),!0}getBrowserCrypto(){return oI(this.initialized),oT(),{}}getPerformanceClient(){return oI(this.initialized),oT(),{}}getRedirectResponse(){return oI(this.initialized),oT(),{}}async clearCache(e){oI(this.initialized),oT()}async hydrateCache(e,t){oI(this.initialized),oT()}}class iU extends ob{getId(){return iU.ID}getModuleName(){return iU.MODULE_NAME}async initialize(){return!0}}iU.MODULE_NAME="",iU.ID="UnknownOperatingContext";class iL{static async createPublicClientApplication(e){let t=await iP(e);return null!==t?new iL(e,t):new iL(e)}constructor(e,t){if(this.configuration=e,t)this.controller=t;else{let t=new iU(e);this.controller=new iq(t)}}async initialize(){if(this.controller instanceof iq){let e=await iP(this.configuration);return null!==e&&(this.controller=e),this.controller.initialize()}return Promise.resolve()}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e){return this.controller.addEventCallback(e)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}class iH{static getInteractionStatusFromEvent(e,r){switch(e.eventType){case oJ.LOGIN_START:return nK.Login;case oJ.SSO_SILENT_START:return nK.SsoSilent;case oJ.ACQUIRE_TOKEN_START:if(e.interactionType===t.InteractionType.Redirect||e.interactionType===t.InteractionType.Popup)return nK.AcquireToken;break;case oJ.HANDLE_REDIRECT_START:return nK.HandleRedirect;case oJ.LOGOUT_START:return nK.Logout;case oJ.SSO_SILENT_SUCCESS:case oJ.SSO_SILENT_FAILURE:if(r&&r!==nK.SsoSilent)break;return nK.None;case oJ.LOGOUT_END:if(r&&r!==nK.Logout)break;return nK.None;case oJ.HANDLE_REDIRECT_END:if(r&&r!==nK.HandleRedirect)break;return nK.None;case oJ.LOGIN_SUCCESS:case oJ.LOGIN_FAILURE:case oJ.ACQUIRE_TOKEN_SUCCESS:case oJ.ACQUIRE_TOKEN_FAILURE:case oJ.RESTORE_FROM_BFCACHE:if(e.interactionType===t.InteractionType.Redirect||e.interactionType===t.InteractionType.Popup){if(r&&r!==nK.Login&&r!==nK.AcquireToken)break;return nK.None}}return null}}class iD{constructor(e,t){let r=t&&t.loggerOptions||{};this.logger=new eO(r,oR,o_),this.cryptoOps=new oD(this.logger),this.popTokenGenerator=new rE(this.cryptoOps),this.shrParameters=e}async generatePublicKeyThumbprint(){let{kid:e}=await this.popTokenGenerator.generateKid(this.shrParameters);return e}async signRequest(e,t,r){return this.popTokenGenerator.signPayload(e,t,this.shrParameters,r)}async removeKeys(e){return this.cryptoOps.removeTokenBindingKey(e)}}function iB(){let e;try{e=window[nU.SessionStorage];let t=e?.getItem("msal.browser.performance.enabled");if(1===Number(t))return Promise.resolve().then(function(){return iG})}catch(e){}}function ix(){return"undefined"!=typeof window&&void 0!==window.performance&&"function"==typeof window.performance.now}class iF extends rG{constructor(e,t,n){super(e.auth.clientId,e.auth.authority||`${r.DEFAULT_AUTHORITY}`,new eO(e.system?.loggerOptions||{},oR,o_),oR,o_,e.telemetry?.application||{appName:"",appVersion:""},t,n)}generateId(){return n5()}getPageVisibility(){return document.visibilityState?.toString()||null}deleteIncompleteSubMeasurements(e){iB()?.then(t=>{let r=this.eventsByCorrelationId.get(e.event.correlationId),n=r&&r.eventId===e.event.eventId,o=[];n&&r?.incompleteSubMeasurements&&r.incompleteSubMeasurements.forEach(e=>{o.push({...e})}),t.BrowserPerformanceMeasurement.flushMeasurements(e.event.correlationId,o)})}startMeasurement(e,t){let r=this.getPageVisibility(),n=super.startMeasurement(e,t),o=ix()?window.performance.now():void 0,i=iB()?.then(t=>new t.BrowserPerformanceMeasurement(e,n.event.correlationId));return i?.then(e=>e.startMeasurement()),{...n,end:(e,t)=>{let a=n.end({...e,startPageVisibility:r,endPageVisibility:this.getPageVisibility(),durationMs:function(e){if(e&&ix())return Math.round(window.performance.now()-e)}(o)},t);return i?.then(e=>e.endMeasurement()),this.deleteIncompleteSubMeasurements(n),a},discard:()=>{n.discard(),i?.then(e=>e.flushMeasurement()),this.deleteIncompleteSubMeasurements(n)}}}setPreQueueTime(e,t){if(!ix()){this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to set telemetry queue time for ${e}`);return}if(!t){this.logger.trace(`BrowserPerformanceClient: correlationId for ${e} not provided, unable to set telemetry queue time`);return}let r=this.preQueueTimeByCorrelationId.get(t);r&&(this.logger.trace(`BrowserPerformanceClient: Incomplete pre-queue ${r.name} found`,t),this.addQueueMeasurement(r.name,t,void 0,!0)),this.preQueueTimeByCorrelationId.set(t,{name:e,time:window.performance.now()})}addQueueMeasurement(e,t,r,n){if(!ix()){this.logger.trace(`BrowserPerformanceClient: window performance API not available, unable to add queue measurement for ${e}`);return}if(!t){this.logger.trace(`BrowserPerformanceClient: correlationId for ${e} not provided, unable to add queue measurement`);return}let o=super.getPreQueueTime(e,t);if(!o)return;let i=window.performance.now(),a=r||super.calculateQueuedTime(o,i);return super.addQueueMeasurement(e,t,a,n)}}class iK{constructor(e,t){this.correlationId=t,this.measureName=iK.makeMeasureName(e,t),this.startMark=iK.makeStartMark(e,t),this.endMark=iK.makeEndMark(e,t)}static makeMeasureName(e,t){return`msal.measure.${e}.${t}`}static makeStartMark(e,t){return`msal.start.${e}.${t}`}static makeEndMark(e,t){return`msal.end.${e}.${t}`}static supportsBrowserPerformance(){return"undefined"!=typeof window&&void 0!==window.performance&&"function"==typeof window.performance.mark&&"function"==typeof window.performance.measure&&"function"==typeof window.performance.clearMarks&&"function"==typeof window.performance.clearMeasures&&"function"==typeof window.performance.getEntriesByName}static flushMeasurements(e,t){if(iK.supportsBrowserPerformance())try{t.forEach(t=>{let r=iK.makeMeasureName(t.name,e);window.performance.getEntriesByName(r,"measure").length>0&&(window.performance.clearMeasures(r),window.performance.clearMarks(iK.makeStartMark(r,e)),window.performance.clearMarks(iK.makeEndMark(r,e)))})}catch(e){}}startMeasurement(){if(iK.supportsBrowserPerformance())try{window.performance.mark(this.startMark)}catch(e){}}endMeasurement(){if(iK.supportsBrowserPerformance())try{window.performance.mark(this.endMark),window.performance.measure(this.measureName,this.startMark,this.endMark)}catch(e){}}flushMeasurement(){if(iK.supportsBrowserPerformance())try{let e=window.performance.getEntriesByName(this.measureName,"measure");if(e.length>0){let t=e[0].duration;return window.performance.clearMeasures(this.measureName),window.performance.clearMarks(this.startMark),window.performance.clearMarks(this.endMark),t}}catch(e){}return null}}var iG=Object.freeze({__proto__:null,BrowserPerformanceMeasurement:iK});t.AccountEntity=tS,t.ApiId=nF,t.AuthError=U,t.AuthErrorCodes=M,t.AuthErrorMessage=q,t.AuthenticationHeaderParser=rO,t.AuthenticationScheme=I,t.AzureCloudInstance=eL,t.BrowserAuthError=nP,t.BrowserAuthErrorCodes=nS,t.BrowserAuthErrorMessage=nb,t.BrowserCacheLocation=nU,t.BrowserConfigurationAuthError=oc,t.BrowserConfigurationAuthErrorCodes=oi,t.BrowserConfigurationAuthErrorMessage=os,t.BrowserPerformanceClient=iF,t.BrowserPerformanceMeasurement=iK,t.BrowserStorage=ox,t.BrowserUtils=oE,t.CacheLookupPolicy=nQ,t.ClientAuthError=eP,t.ClientAuthErrorCodes=eR,t.ClientAuthErrorMessage=eb,t.ClientConfigurationError=tp,t.ClientConfigurationErrorCodes=td,t.ClientConfigurationErrorMessage=tg,t.DEFAULT_IFRAME_TIMEOUT_MS=1e4,t.EventMessageUtils=iH,t.EventType=oJ,t.InteractionRequiredAuthError=rI,t.InteractionRequiredAuthErrorCodes=rm,t.InteractionRequiredAuthErrorMessage=rT,t.InteractionStatus=nK,t.JsonWebTokenTypes=R,t.Logger=eO,t.MemoryStorage=oL,t.NavigationClient=ok,t.OIDC_DEFAULT_SCOPES=o,t.PerformanceEvents=t8,t.PromptValue=h,t.ProtocolMode=tk,t.PublicClientApplication=iN,t.PublicClientNext=iL,t.ServerError=tY,t.ServerResponseType=d,t.SignedHttpRequest=iD,t.StringUtils=tC,t.StubPerformanceClient=rK,t.UrlString=tb,t.WrapperSKU={React:"@azure/msal-react",Angular:"@azure/msal-angular"},t.createNestablePublicClientApplication=iM,t.createStandardPublicClientApplication=iO,t.stubbedPublicClientApplication={initialize:()=>Promise.reject(ol(on)),acquireTokenPopup:()=>Promise.reject(ol(on)),acquireTokenRedirect:()=>Promise.reject(ol(on)),acquireTokenSilent:()=>Promise.reject(ol(on)),acquireTokenByCode:()=>Promise.reject(ol(on)),getAllAccounts:()=>[],getAccount:()=>null,getAccountByHomeId:()=>null,getAccountByUsername:()=>null,getAccountByLocalId:()=>null,handleRedirectPromise:()=>Promise.reject(ol(on)),loginPopup:()=>Promise.reject(ol(on)),loginRedirect:()=>Promise.reject(ol(on)),logout:()=>Promise.reject(ol(on)),logoutRedirect:()=>Promise.reject(ol(on)),logoutPopup:()=>Promise.reject(ol(on)),ssoSilent:()=>Promise.reject(ol(on)),addEventCallback:()=>null,removeEventCallback:()=>{},addPerformanceCallback:()=>"",removePerformanceCallback:()=>!1,enableAccountStorageEvents:()=>{},disableAccountStorageEvents:()=>{},getTokenCache:()=>{throw ol(on)},getLogger:()=>{throw ol(on)},setLogger:()=>{},setActiveAccount:()=>{},getActiveAccount:()=>null,initializeWrapperLibrary:()=>{},setNavigationClient:()=>{},getConfiguration:()=>{throw ol(on)},hydrateCache:()=>Promise.reject(ol(on)),clearCache:()=>Promise.reject(ol(on))},t.version=o_}}]);