"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@azure";
exports.ids = ["vendor-chunks/@azure"];
exports.modules = {

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PublicClientApplication: () => (/* binding */ PublicClientApplication),\n/* harmony export */   createNestablePublicClientApplication: () => (/* binding */ createNestablePublicClientApplication),\n/* harmony export */   createStandardPublicClientApplication: () => (/* binding */ createStandardPublicClientApplication)\n/* harmony export */ });\n/* harmony import */ var _controllers_ControllerFactory_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../controllers/ControllerFactory.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs\");\n/* harmony import */ var _controllers_StandardController_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../controllers/StandardController.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs\");\n/* harmony import */ var _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operatingcontext/StandardOperatingContext.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs\");\n/* harmony import */ var _controllers_NestedAppAuthController_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../controllers/NestedAppAuthController.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs\");\n/* harmony import */ var _operatingcontext_NestedAppOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operatingcontext/NestedAppOperatingContext.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/NestedAppOperatingContext.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\r\nclass PublicClientApplication {\r\n    /**\r\n     * Creates StandardController and passes it to the PublicClientApplication\r\n     *\r\n     * @param configuration {Configuration}\r\n     */\r\n    static async createPublicClientApplication(configuration) {\r\n        const controller = await (0,_controllers_ControllerFactory_mjs__WEBPACK_IMPORTED_MODULE_0__.createV3Controller)(configuration);\r\n        const pca = new PublicClientApplication(configuration, controller);\r\n        return pca;\r\n    }\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param configuration Object for the MSAL PublicClientApplication instance\r\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\r\n     */\r\n    constructor(configuration, controller) {\r\n        this.controller =\r\n            controller ||\r\n                new _controllers_StandardController_mjs__WEBPACK_IMPORTED_MODULE_1__.StandardController(new _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_2__.StandardOperatingContext(configuration));\r\n    }\r\n    /**\r\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\r\n     * @param request {?InitializeApplicationRequest}\r\n     */\r\n    async initialize(request) {\r\n        return this.controller.initialize(request);\r\n    }\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenPopup(request) {\r\n        return this.controller.acquireTokenPopup(request);\r\n    }\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    acquireTokenRedirect(request) {\r\n        return this.controller.acquireTokenRedirect(request);\r\n    }\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\r\n     */\r\n    acquireTokenSilent(silentRequest) {\r\n        return this.controller.acquireTokenSilent(silentRequest);\r\n    }\r\n    /**\r\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\r\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\r\n     * This API is not indended for normal authorization code acquisition and redemption.\r\n     *\r\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\r\n     *\r\n     * @param request {@link AuthorizationCodeRequest}\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    acquireTokenByCode(request) {\r\n        return this.controller.acquireTokenByCode(request);\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     */\r\n    addEventCallback(callback) {\r\n        return this.controller.addEventCallback(callback);\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        return this.controller.removeEventCallback(callbackId);\r\n    }\r\n    /**\r\n     * Registers a callback to receive performance events.\r\n     *\r\n     * @param {PerformanceCallbackFunction} callback\r\n     * @returns {string}\r\n     */\r\n    addPerformanceCallback(callback) {\r\n        return this.controller.addPerformanceCallback(callback);\r\n    }\r\n    /**\r\n     * Removes a callback registered with addPerformanceCallback.\r\n     *\r\n     * @param {string} callbackId\r\n     * @returns {boolean}\r\n     */\r\n    removePerformanceCallback(callbackId) {\r\n        return this.controller.removePerformanceCallback(callbackId);\r\n    }\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    enableAccountStorageEvents() {\r\n        this.controller.enableAccountStorageEvents();\r\n    }\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    disableAccountStorageEvents() {\r\n        this.controller.disableAccountStorageEvents();\r\n    }\r\n    /**\r\n     * Returns the first account found in the cache that matches the account filter passed in.\r\n     * @param accountFilter\r\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n     */\r\n    getAccount(accountFilter) {\r\n        return this.controller.getAccount(accountFilter);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByHomeId(homeAccountId) {\r\n        return this.controller.getAccountByHomeId(homeAccountId);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByLocalId(localId) {\r\n        return this.controller.getAccountByLocalId(localId);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param userName\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByUsername(userName) {\r\n        return this.controller.getAccountByUsername(userName);\r\n    }\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return this.controller.getAllAccounts(accountFilter);\r\n    }\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\r\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    handleRedirectPromise(hash) {\r\n        return this.controller.handleRedirectPromise(hash);\r\n    }\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    loginPopup(request) {\r\n        return this.controller.loginPopup(request);\r\n    }\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    loginRedirect(request) {\r\n        return this.controller.loginRedirect(request);\r\n    }\r\n    /**\r\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\r\n     * @param logoutRequest\r\n     * @deprecated\r\n     */\r\n    logout(logoutRequest) {\r\n        return this.controller.logout(logoutRequest);\r\n    }\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    logoutRedirect(logoutRequest) {\r\n        return this.controller.logoutRedirect(logoutRequest);\r\n    }\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logoutPopup(logoutRequest) {\r\n        return this.controller.logoutPopup(logoutRequest);\r\n    }\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param request {@link SsoSilentRequest}\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    ssoSilent(request) {\r\n        return this.controller.ssoSilent(request);\r\n    }\r\n    /**\r\n     * Gets the token cache for the application.\r\n     */\r\n    getTokenCache() {\r\n        return this.controller.getTokenCache();\r\n    }\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger() {\r\n        return this.controller.getLogger();\r\n    }\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger) {\r\n        this.controller.setLogger(logger);\r\n    }\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        this.controller.setActiveAccount(account);\r\n    }\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount() {\r\n        return this.controller.getActiveAccount();\r\n    }\r\n    /**\r\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\r\n     * @param sku\r\n     * @param version\r\n     */\r\n    initializeWrapperLibrary(sku, version) {\r\n        return this.controller.initializeWrapperLibrary(sku, version);\r\n    }\r\n    /**\r\n     * Sets navigation client\r\n     * @param navigationClient\r\n     */\r\n    setNavigationClient(navigationClient) {\r\n        this.controller.setNavigationClient(navigationClient);\r\n    }\r\n    /**\r\n     * Returns the configuration object\r\n     * @internal\r\n     */\r\n    getConfiguration() {\r\n        return this.controller.getConfiguration();\r\n    }\r\n    /**\r\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\r\n     * @param result\r\n     * @param request - The request object that was used to obtain the AuthenticationResult\r\n     * @returns\r\n     */\r\n    async hydrateCache(result, request) {\r\n        return this.controller.hydrateCache(result, request);\r\n    }\r\n    /**\r\n     * Clears tokens and account from the browser cache.\r\n     * @param logoutRequest\r\n     */\r\n    clearCache(logoutRequest) {\r\n        return this.controller.clearCache(logoutRequest);\r\n    }\r\n}\r\n/**\r\n * creates NestedAppAuthController and passes it to the PublicClientApplication,\r\n * falls back to StandardController if NestedAppAuthController is not available\r\n *\r\n * @param configuration\r\n * @returns IPublicClientApplication\r\n *\r\n */\r\nasync function createNestablePublicClientApplication(configuration) {\r\n    const nestedAppAuth = new _operatingcontext_NestedAppOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_3__.NestedAppOperatingContext(configuration);\r\n    await nestedAppAuth.initialize();\r\n    if (nestedAppAuth.isAvailable()) {\r\n        const controller = new _controllers_NestedAppAuthController_mjs__WEBPACK_IMPORTED_MODULE_4__.NestedAppAuthController(nestedAppAuth);\r\n        return new PublicClientApplication(configuration, controller);\r\n    }\r\n    return createStandardPublicClientApplication(configuration);\r\n}\r\n/**\r\n * creates PublicClientApplication using StandardController\r\n *\r\n * @param configuration\r\n * @returns IPublicClientApplication\r\n *\r\n */\r\nasync function createStandardPublicClientApplication(configuration) {\r\n    const pca = new PublicClientApplication(configuration);\r\n    await pca.initialize();\r\n    return pca;\r\n}\n\n\n//# sourceMappingURL=PublicClientApplication.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NativeMessageHandler: () => (/* binding */ NativeMessageHandler)\n/* harmony export */ });\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../error/NativeAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../crypto/BrowserCrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NativeMessageHandler {\r\n    constructor(logger, handshakeTimeoutMs, performanceClient, extensionId) {\r\n        this.logger = logger;\r\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\r\n        this.extensionId = extensionId;\r\n        this.resolvers = new Map(); // Used for non-handshake messages\r\n        this.handshakeResolvers = new Map(); // Used for handshake messages\r\n        this.messageChannel = new MessageChannel();\r\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\r\n        this.performanceClient = performanceClient;\r\n        this.handshakeEvent = performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.NativeMessageHandlerHandshake);\r\n    }\r\n    /**\r\n     * Sends a given message to the extension and resolves with the extension response\r\n     * @param body\r\n     */\r\n    async sendMessage(body) {\r\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\r\n        const req = {\r\n            channel: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.CHANNEL_ID,\r\n            extensionId: this.extensionId,\r\n            responseId: (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_2__.createNewGuid)(),\r\n            body: body,\r\n        };\r\n        this.logger.trace(\"NativeMessageHandler - Sending request to browser extension\");\r\n        this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(req)}`);\r\n        this.messageChannel.port1.postMessage(req);\r\n        return new Promise((resolve, reject) => {\r\n            this.resolvers.set(req.responseId, { resolve, reject });\r\n        });\r\n    }\r\n    /**\r\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\r\n     * @param {Logger} logger\r\n     * @param {number} handshakeTimeoutMs\r\n     * @param {IPerformanceClient} performanceClient\r\n     * @param {ICrypto} crypto\r\n     */\r\n    static async createProvider(logger, handshakeTimeoutMs, performanceClient) {\r\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\r\n        try {\r\n            const preferredProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.PREFERRED_EXTENSION_ID);\r\n            await preferredProvider.sendHandshakeRequest();\r\n            return preferredProvider;\r\n        }\r\n        catch (e) {\r\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\r\n            const backupProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient);\r\n            await backupProvider.sendHandshakeRequest();\r\n            return backupProvider;\r\n        }\r\n    }\r\n    /**\r\n     * Send handshake request helper.\r\n     */\r\n    async sendHandshakeRequest() {\r\n        this.logger.trace(\"NativeMessageHandler - sendHandshakeRequest called.\");\r\n        // Register this event listener before sending handshake\r\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\r\n        const req = {\r\n            channel: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.CHANNEL_ID,\r\n            extensionId: this.extensionId,\r\n            responseId: (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_2__.createNewGuid)(),\r\n            body: {\r\n                method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.HandshakeRequest,\r\n            },\r\n        };\r\n        this.handshakeEvent.add({\r\n            extensionId: this.extensionId,\r\n            extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,\r\n        });\r\n        this.messageChannel.port1.onmessage = (event) => {\r\n            this.onChannelMessage(event);\r\n        };\r\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\r\n        return new Promise((resolve, reject) => {\r\n            this.handshakeResolvers.set(req.responseId, { resolve, reject });\r\n            this.timeoutId = window.setTimeout(() => {\r\n                /*\r\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\r\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\r\n                 */\r\n                window.removeEventListener(\"message\", this.windowListener, false);\r\n                this.messageChannel.port1.close();\r\n                this.messageChannel.port2.close();\r\n                this.handshakeEvent.end({\r\n                    extensionHandshakeTimedOut: true,\r\n                    success: false,\r\n                });\r\n                reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.nativeHandshakeTimeout));\r\n                this.handshakeResolvers.delete(req.responseId);\r\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\r\n        });\r\n    }\r\n    /**\r\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\r\n     * @param event\r\n     */\r\n    onWindowMessage(event) {\r\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\r\n        // We only accept messages from ourselves\r\n        if (event.source !== window) {\r\n            return;\r\n        }\r\n        const request = event.data;\r\n        if (!request.channel ||\r\n            request.channel !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeConstants.CHANNEL_ID) {\r\n            return;\r\n        }\r\n        if (request.extensionId && request.extensionId !== this.extensionId) {\r\n            return;\r\n        }\r\n        if (request.body.method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.HandshakeRequest) {\r\n            const handshakeResolver = this.handshakeResolvers.get(request.responseId);\r\n            /*\r\n             * Filter out responses with no matched resolvers sooner to keep channel ports open while waiting for\r\n             * the proper response.\r\n             */\r\n            if (!handshakeResolver) {\r\n                this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${request.responseId}`);\r\n                return;\r\n            }\r\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\r\n            this.logger.verbose(request.extensionId\r\n                ? `Extension with id: ${request.extensionId} not installed`\r\n                : \"No extension installed\");\r\n            clearTimeout(this.timeoutId);\r\n            this.messageChannel.port1.close();\r\n            this.messageChannel.port2.close();\r\n            window.removeEventListener(\"message\", this.windowListener, false);\r\n            this.handshakeEvent.end({\r\n                success: false,\r\n                extensionInstalled: false,\r\n            });\r\n            handshakeResolver.reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.nativeExtensionNotInstalled));\r\n        }\r\n    }\r\n    /**\r\n     * Invoked when a message is received from the extension on the MessageChannel port\r\n     * @param event\r\n     */\r\n    onChannelMessage(event) {\r\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\r\n        const request = event.data;\r\n        const resolver = this.resolvers.get(request.responseId);\r\n        const handshakeResolver = this.handshakeResolvers.get(request.responseId);\r\n        try {\r\n            const method = request.body.method;\r\n            if (method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.Response) {\r\n                if (!resolver) {\r\n                    return;\r\n                }\r\n                const response = request.body.response;\r\n                this.logger.trace(\"NativeMessageHandler - Received response from browser extension\");\r\n                this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(response)}`);\r\n                if (response.status !== \"Success\") {\r\n                    resolver.reject((0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.createNativeAuthError)(response.code, response.description, response.ext));\r\n                }\r\n                else if (response.result) {\r\n                    if (response.result[\"code\"] &&\r\n                        response.result[\"description\"]) {\r\n                        resolver.reject((0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.createNativeAuthError)(response.result[\"code\"], response.result[\"description\"], response.result[\"ext\"]));\r\n                    }\r\n                    else {\r\n                        resolver.resolve(response.result);\r\n                    }\r\n                }\r\n                else {\r\n                    throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.createAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.unexpectedError, \"Event does not contain result.\");\r\n                }\r\n                this.resolvers.delete(request.responseId);\r\n            }\r\n            else if (method === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.NativeExtensionMethod.HandshakeResponse) {\r\n                if (!handshakeResolver) {\r\n                    this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${request.responseId}`);\r\n                    return;\r\n                }\r\n                clearTimeout(this.timeoutId); // Clear setTimeout\r\n                window.removeEventListener(\"message\", this.windowListener, false); // Remove 'No extension' listener\r\n                this.extensionId = request.extensionId;\r\n                this.extensionVersion = request.body.version;\r\n                this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`);\r\n                this.handshakeEvent.end({\r\n                    extensionInstalled: true,\r\n                    success: true,\r\n                });\r\n                handshakeResolver.resolve();\r\n                this.handshakeResolvers.delete(request.responseId);\r\n            }\r\n            // Do nothing if method is not Response or HandshakeResponse\r\n        }\r\n        catch (err) {\r\n            this.logger.error(\"Error parsing response from WAM Extension\");\r\n            this.logger.errorPii(`Error parsing response from WAM Extension: ${err}`);\r\n            this.logger.errorPii(`Unable to parse ${event}`);\r\n            if (resolver) {\r\n                resolver.reject(err);\r\n            }\r\n            else if (handshakeResolver) {\r\n                handshakeResolver.reject(err);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns the Id for the browser extension this handler is communicating with\r\n     * @returns\r\n     */\r\n    getExtensionId() {\r\n        return this.extensionId;\r\n    }\r\n    /**\r\n     * Returns the version for the browser extension this handler is communicating with\r\n     * @returns\r\n     */\r\n    getExtensionVersion() {\r\n        return this.extensionVersion;\r\n    }\r\n    /**\r\n     * Returns boolean indicating whether or not the request should attempt to use native broker\r\n     * @param logger\r\n     * @param config\r\n     * @param nativeExtensionProvider\r\n     * @param authenticationScheme\r\n     */\r\n    static isNativeAvailable(config, logger, nativeExtensionProvider, authenticationScheme) {\r\n        logger.trace(\"isNativeAvailable called\");\r\n        if (!config.system.allowNativeBroker) {\r\n            logger.trace(\"isNativeAvailable: allowNativeBroker is not enabled, returning false\");\r\n            // Developer disabled WAM\r\n            return false;\r\n        }\r\n        if (!nativeExtensionProvider) {\r\n            logger.trace(\"isNativeAvailable: WAM extension provider is not initialized, returning false\");\r\n            // Extension is not available\r\n            return false;\r\n        }\r\n        if (authenticationScheme) {\r\n            switch (authenticationScheme) {\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.BEARER:\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.POP:\r\n                    logger.trace(\"isNativeAvailable: authenticationScheme is supported, returning true\");\r\n                    return true;\r\n                default:\r\n                    logger.trace(\"isNativeAvailable: authenticationScheme is not supported, returning false\");\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\n\n\n//# sourceMappingURL=NativeMessageHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeStatusCodes.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeStatusCodes.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACCOUNT_UNAVAILABLE: () => (/* binding */ ACCOUNT_UNAVAILABLE),\n/* harmony export */   DISABLED: () => (/* binding */ DISABLED),\n/* harmony export */   NO_NETWORK: () => (/* binding */ NO_NETWORK),\n/* harmony export */   PERSISTENT_ERROR: () => (/* binding */ PERSISTENT_ERROR),\n/* harmony export */   USER_CANCEL: () => (/* binding */ USER_CANCEL),\n/* harmony export */   USER_INTERACTION_REQUIRED: () => (/* binding */ USER_INTERACTION_REQUIRED)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Status Codes that can be thrown by WAM\r\nconst USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\";\r\nconst USER_CANCEL = \"USER_CANCEL\";\r\nconst NO_NETWORK = \"NO_NETWORK\";\r\nconst PERSISTENT_ERROR = \"PERSISTENT_ERROR\";\r\nconst DISABLED = \"DISABLED\";\r\nconst ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\";\n\n\n//# sourceMappingURL=NativeStatusCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Jyb2tlci9uYXRpdmVCcm9rZXIvTmF0aXZlU3RhdHVzQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUrRztBQUMvRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Jyb2tlci9uYXRpdmVCcm9rZXIvTmF0aXZlU3RhdHVzQ29kZXMubWpzPzQ5NWEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjQuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLy8gU3RhdHVzIENvZGVzIHRoYXQgY2FuIGJlIHRocm93biBieSBXQU1cclxuY29uc3QgVVNFUl9JTlRFUkFDVElPTl9SRVFVSVJFRCA9IFwiVVNFUl9JTlRFUkFDVElPTl9SRVFVSVJFRFwiO1xyXG5jb25zdCBVU0VSX0NBTkNFTCA9IFwiVVNFUl9DQU5DRUxcIjtcclxuY29uc3QgTk9fTkVUV09SSyA9IFwiTk9fTkVUV09SS1wiO1xyXG5jb25zdCBQRVJTSVNURU5UX0VSUk9SID0gXCJQRVJTSVNURU5UX0VSUk9SXCI7XHJcbmNvbnN0IERJU0FCTEVEID0gXCJESVNBQkxFRFwiO1xyXG5jb25zdCBBQ0NPVU5UX1VOQVZBSUxBQkxFID0gXCJBQ0NPVU5UX1VOQVZBSUxBQkxFXCI7XG5cbmV4cG9ydCB7IEFDQ09VTlRfVU5BVkFJTEFCTEUsIERJU0FCTEVELCBOT19ORVRXT1JLLCBQRVJTSVNURU5UX0VSUk9SLCBVU0VSX0NBTkNFTCwgVVNFUl9JTlRFUkFDVElPTl9SRVFVSVJFRCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TmF0aXZlU3RhdHVzQ29kZXMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeStatusCodes.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/cache/AccountManager.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/AccountManager.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAccount: () => (/* binding */ getAccount),\n/* harmony export */   getAccountByHomeId: () => (/* binding */ getAccountByHomeId),\n/* harmony export */   getAccountByLocalId: () => (/* binding */ getAccountByLocalId),\n/* harmony export */   getAccountByUsername: () => (/* binding */ getAccountByUsername),\n/* harmony export */   getActiveAccount: () => (/* binding */ getActiveAccount),\n/* harmony export */   getAllAccounts: () => (/* binding */ getAllAccounts),\n/* harmony export */   setActiveAccount: () => (/* binding */ setActiveAccount)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n * @returns Array of AccountInfo objects in cache\r\n */\r\nfunction getAllAccounts(logger, browserStorage, isInBrowser, accountFilter) {\r\n    logger.verbose(\"getAllAccounts called\");\r\n    return isInBrowser ? browserStorage.getAllAccounts(accountFilter) : [];\r\n}\r\n/**\r\n * Returns the first account found in the cache that matches the account filter passed in.\r\n * @param accountFilter\r\n * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n */\r\nfunction getAccount(accountFilter, logger, browserStorage) {\r\n    logger.trace(\"getAccount called\");\r\n    if (Object.keys(accountFilter).length === 0) {\r\n        logger.warning(\"getAccount: No accountFilter provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy(accountFilter);\r\n    if (account) {\r\n        logger.verbose(\"getAccount: Account matching provided filter found, returning\");\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccount: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns the signed in account matching username.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found.\r\n * This API is provided for convenience but getAccountById should be used for best reliability\r\n * @param username\r\n * @returns The account object stored in MSAL\r\n */\r\nfunction getAccountByUsername(username, logger, browserStorage) {\r\n    logger.trace(\"getAccountByUsername called\");\r\n    if (!username) {\r\n        logger.warning(\"getAccountByUsername: No username provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        username,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\"getAccountByUsername: Account matching username found, returning\");\r\n        logger.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${username}`);\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccountByUsername: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns the signed in account matching homeAccountId.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found\r\n * @param homeAccountId\r\n * @returns The account object stored in MSAL\r\n */\r\nfunction getAccountByHomeId(homeAccountId, logger, browserStorage) {\r\n    logger.trace(\"getAccountByHomeId called\");\r\n    if (!homeAccountId) {\r\n        logger.warning(\"getAccountByHomeId: No homeAccountId provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        homeAccountId,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\"getAccountByHomeId: Account matching homeAccountId found, returning\");\r\n        logger.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${homeAccountId}`);\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccountByHomeId: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns the signed in account matching localAccountId.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found\r\n * @param localAccountId\r\n * @returns The account object stored in MSAL\r\n */\r\nfunction getAccountByLocalId(localAccountId, logger, browserStorage) {\r\n    logger.trace(\"getAccountByLocalId called\");\r\n    if (!localAccountId) {\r\n        logger.warning(\"getAccountByLocalId: No localAccountId provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        localAccountId,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\"getAccountByLocalId: Account matching localAccountId found, returning\");\r\n        logger.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${localAccountId}`);\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccountByLocalId: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n * @param account\r\n */\r\nfunction setActiveAccount(account, browserStorage) {\r\n    browserStorage.setActiveAccount(account);\r\n}\r\n/**\r\n * Gets the currently active account\r\n */\r\nfunction getActiveAccount(browserStorage) {\r\n    return browserStorage.getActiveAccount();\r\n}\n\n\n//# sourceMappingURL=AccountManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/cache/AccountManager.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncMemoryStorage: () => (/* binding */ AsyncMemoryStorage)\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _DatabaseStorage_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DatabaseStorage.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs\");\n/* harmony import */ var _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MemoryStorage.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\r\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\r\n */\r\nclass AsyncMemoryStorage {\r\n    constructor(logger) {\r\n        this.inMemoryCache = new _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_0__.MemoryStorage();\r\n        this.indexedDBCache = new _DatabaseStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.DatabaseStorage();\r\n        this.logger = logger;\r\n    }\r\n    handleDatabaseAccessError(error) {\r\n        if (error instanceof _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserAuthError &&\r\n            error.errorCode === _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.databaseUnavailable) {\r\n            this.logger.error(\"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\");\r\n        }\r\n        else {\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\r\n     * storage object if item isn't found in-memory.\r\n     * @param key\r\n     */\r\n    async getItem(key) {\r\n        const item = this.inMemoryCache.getItem(key);\r\n        if (!item) {\r\n            try {\r\n                this.logger.verbose(\"Queried item not found in in-memory cache, now querying persistent storage.\");\r\n                return await this.indexedDBCache.getItem(key);\r\n            }\r\n            catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return item;\r\n    }\r\n    /**\r\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\r\n     * storage object with the given key.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    async setItem(key, value) {\r\n        this.inMemoryCache.setItem(key, value);\r\n        try {\r\n            await this.indexedDBCache.setItem(key, value);\r\n        }\r\n        catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\r\n     * @param key\r\n     */\r\n    async removeItem(key) {\r\n        this.inMemoryCache.removeItem(key);\r\n        try {\r\n            await this.indexedDBCache.removeItem(key);\r\n        }\r\n        catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n        }\r\n    }\r\n    /**\r\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\r\n     * asynchronous storage object.\r\n     */\r\n    async getKeys() {\r\n        const cacheKeys = this.inMemoryCache.getKeys();\r\n        if (cacheKeys.length === 0) {\r\n            try {\r\n                this.logger.verbose(\"In-memory cache is empty, now querying persistent storage.\");\r\n                return await this.indexedDBCache.getKeys();\r\n            }\r\n            catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return cacheKeys;\r\n    }\r\n    /**\r\n     * Returns true or false if the given key is present in the cache.\r\n     * @param key\r\n     */\r\n    async containsKey(key) {\r\n        const containsKey = this.inMemoryCache.containsKey(key);\r\n        if (!containsKey) {\r\n            try {\r\n                this.logger.verbose(\"Key not found in in-memory cache, now querying persistent storage.\");\r\n                return await this.indexedDBCache.containsKey(key);\r\n            }\r\n            catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return containsKey;\r\n    }\r\n    /**\r\n     * Clears in-memory Map\r\n     */\r\n    clearInMemory() {\r\n        // InMemory cache is a Map instance, clear is straightforward\r\n        this.logger.verbose(`Deleting in-memory keystore`);\r\n        this.inMemoryCache.clear();\r\n        this.logger.verbose(`In-memory keystore deleted`);\r\n    }\r\n    /**\r\n     * Tries to delete the IndexedDB database\r\n     * @returns\r\n     */\r\n    async clearPersistent() {\r\n        try {\r\n            this.logger.verbose(\"Deleting persistent keystore\");\r\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\r\n            if (dbDeleted) {\r\n                this.logger.verbose(\"Persistent keystore deleted\");\r\n            }\r\n            return dbDeleted;\r\n        }\r\n        catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n            return false;\r\n        }\r\n    }\r\n}\n\n\n//# sourceMappingURL=AsyncMemoryStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserCacheManager: () => (/* binding */ BrowserCacheManager),\n/* harmony export */   DEFAULT_BROWSER_CACHE_MANAGER: () => (/* binding */ DEFAULT_BROWSER_CACHE_MANAGER)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/CacheError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _BrowserStorage_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BrowserStorage.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs\");\n/* harmony import */ var _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MemoryStorage.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs\");\n/* harmony import */ var _utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../utils/BrowserProtocolUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs\");\n/* harmony import */ var _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../encode/Base64Decode.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\");\n/* harmony import */ var _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../encode/Base64Encode.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage.\r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\r\n * parameters such as state and nonce, generally.\r\n */\r\nclass BrowserCacheManager extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheManager {\r\n    constructor(clientId, cacheConfig, cryptoImpl, logger, staticAuthorityOptions, performanceClient) {\r\n        super(clientId, cryptoImpl, logger, staticAuthorityOptions);\r\n        // Cookie life calculation (hours * minutes * seconds * ms)\r\n        this.COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\r\n        this.cacheConfig = cacheConfig;\r\n        this.logger = logger;\r\n        this.internalStorage = new _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.MemoryStorage();\r\n        this.browserStorage = this.setupBrowserStorage(this.cacheConfig.cacheLocation);\r\n        this.temporaryCacheStorage = this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation, this.cacheConfig.cacheLocation);\r\n        // Migrate cache entries from older versions of MSAL.\r\n        if (cacheConfig.cacheMigrationEnabled) {\r\n            this.migrateCacheEntries();\r\n            this.createKeyMaps();\r\n        }\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\r\n     * @param cacheLocation\r\n     */\r\n    setupBrowserStorage(cacheLocation) {\r\n        switch (cacheLocation) {\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.LocalStorage:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.SessionStorage:\r\n                try {\r\n                    return new _BrowserStorage_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserStorage(cacheLocation);\r\n                }\r\n                catch (e) {\r\n                    this.logger.verbose(e);\r\n                    break;\r\n                }\r\n        }\r\n        this.cacheConfig.cacheLocation = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.MemoryStorage;\r\n        return new _MemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.MemoryStorage();\r\n    }\r\n    /**\r\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured temporaryCacheLocation.\r\n     * @param temporaryCacheLocation\r\n     * @param cacheLocation\r\n     */\r\n    setupTemporaryCacheStorage(temporaryCacheLocation, cacheLocation) {\r\n        switch (cacheLocation) {\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.LocalStorage:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.SessionStorage:\r\n                try {\r\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\r\n                    return new _BrowserStorage_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserStorage(temporaryCacheLocation ||\r\n                        _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.SessionStorage);\r\n                }\r\n                catch (e) {\r\n                    this.logger.verbose(e);\r\n                    return this.internalStorage;\r\n                }\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.MemoryStorage:\r\n            default:\r\n                return this.internalStorage;\r\n        }\r\n    }\r\n    /**\r\n     * Migrate all old cache entries to new schema. No rollback supported.\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    migrateCacheEntries() {\r\n        const idTokenKey = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.CACHE_PREFIX}.${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ID_TOKEN}`;\r\n        const clientInfoKey = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.CACHE_PREFIX}.${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.CLIENT_INFO}`;\r\n        const errorKey = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.CACHE_PREFIX}.${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ERROR}`;\r\n        const errorDescKey = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.CACHE_PREFIX}.${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ERROR_DESC}`;\r\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\r\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\r\n        const errorValue = this.browserStorage.getItem(errorKey);\r\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\r\n        const values = [\r\n            idTokenValue,\r\n            clientInfoValue,\r\n            errorValue,\r\n            errorDescValue,\r\n        ];\r\n        const keysToMigrate = [\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ID_TOKEN,\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.CLIENT_INFO,\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ERROR,\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ERROR_DESC,\r\n        ];\r\n        keysToMigrate.forEach((cacheKey, index) => {\r\n            const value = values[index];\r\n            if (value) {\r\n                this.setTemporaryCache(cacheKey, value, true);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Searches all cache entries for MSAL accounts and creates the account key map\r\n     * This is used to migrate users from older versions of MSAL which did not create the map.\r\n     * @returns\r\n     */\r\n    createKeyMaps() {\r\n        this.logger.trace(\"BrowserCacheManager - createKeyMaps called.\");\r\n        const accountKeys = this.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.ACCOUNT_KEYS);\r\n        const tokenKeys = this.getItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`);\r\n        if (accountKeys && tokenKeys) {\r\n            this.logger.verbose(\"BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.\");\r\n            // Key maps already exist, no need to iterate through cache\r\n            return;\r\n        }\r\n        const allKeys = this.browserStorage.getKeys();\r\n        allKeys.forEach((key) => {\r\n            if (this.isCredentialKey(key)) {\r\n                // Get item, parse, validate and write key to map\r\n                const value = this.getItem(key);\r\n                if (value) {\r\n                    const credObj = this.validateAndParseJson(value);\r\n                    if (credObj && credObj.hasOwnProperty(\"credentialType\")) {\r\n                        switch (credObj[\"credentialType\"]) {\r\n                            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ID_TOKEN:\r\n                                if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.isIdTokenEntity(credObj)) {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${key} found, saving key to token key map`);\r\n                                    const idTokenEntity = credObj;\r\n                                    const newKey = this.updateCredentialCacheKey(key, idTokenEntity);\r\n                                    this.addTokenKey(newKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ID_TOKEN);\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping.\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${key}`);\r\n                                }\r\n                                break;\r\n                            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN:\r\n                            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\r\n                                if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.isAccessTokenEntity(credObj)) {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${key} found, saving key to token key map`);\r\n                                    const accessTokenEntity = credObj;\r\n                                    const newKey = this.updateCredentialCacheKey(key, accessTokenEntity);\r\n                                    this.addTokenKey(newKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN);\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping.\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${key}`);\r\n                                }\r\n                                break;\r\n                            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN:\r\n                                if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.isRefreshTokenEntity(credObj)) {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${key} found, saving key to token key map`);\r\n                                    const refreshTokenEntity = credObj;\r\n                                    const newKey = this.updateCredentialCacheKey(key, refreshTokenEntity);\r\n                                    this.addTokenKey(newKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN);\r\n                                    return;\r\n                                }\r\n                                else {\r\n                                    this.logger.trace(\"BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping.\");\r\n                                    this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${key}`);\r\n                                }\r\n                                break;\r\n                            // If credentialType isn't one of our predefined ones, it may not be an MSAL cache value. Ignore.\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (this.isAccountKey(key)) {\r\n                const value = this.getItem(key);\r\n                if (value) {\r\n                    const accountObj = this.validateAndParseJson(value);\r\n                    if (accountObj &&\r\n                        _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.AccountEntity.isAccountEntity(accountObj)) {\r\n                        this.logger.trace(\"BrowserCacheManager:createKeyMaps - account found, saving key to account key map\");\r\n                        this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${key} found, saving key to account key map`);\r\n                        this.addAccountKeyToMap(key);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\r\n     * @param input\r\n     */\r\n    validateAndParseJson(jsonValue) {\r\n        try {\r\n            const parsedJson = JSON.parse(jsonValue);\r\n            /**\r\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\r\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\r\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\r\n             *\r\n             */\r\n            return parsedJson && typeof parsedJson === \"object\"\r\n                ? parsedJson\r\n                : null;\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * fetches the entry from the browser storage based off the key\r\n     * @param key\r\n     */\r\n    getItem(key) {\r\n        return this.browserStorage.getItem(key);\r\n    }\r\n    /**\r\n     * sets the entry in the browser storage\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setItem(key, value) {\r\n        this.browserStorage.setItem(key, value);\r\n    }\r\n    /**\r\n     * fetch the account entity from the platform cache\r\n     * @param accountKey\r\n     */\r\n    getAccount(accountKey, logger) {\r\n        this.logger.trace(\"BrowserCacheManager.getAccount called\");\r\n        const accountEntity = this.getCachedAccountEntity(accountKey);\r\n        return this.updateOutdatedCachedAccount(accountKey, accountEntity, logger);\r\n    }\r\n    /**\r\n     * Reads account from cache, deserializes it into an account entity and returns it.\r\n     * If account is not found from the key, returns null and removes key from map.\r\n     * @param accountKey\r\n     * @returns\r\n     */\r\n    getCachedAccountEntity(accountKey) {\r\n        const serializedAccount = this.getItem(accountKey);\r\n        if (!serializedAccount) {\r\n            this.removeAccountKeyFromMap(accountKey);\r\n            return null;\r\n        }\r\n        const parsedAccount = this.validateAndParseJson(serializedAccount);\r\n        if (!parsedAccount || !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.AccountEntity.isAccountEntity(parsedAccount)) {\r\n            this.removeAccountKeyFromMap(accountKey);\r\n            return null;\r\n        }\r\n        return _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.CacheManager.toObject(new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.AccountEntity(), parsedAccount);\r\n    }\r\n    /**\r\n     * set account entity in the platform cache\r\n     * @param account\r\n     */\r\n    setAccount(account) {\r\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\r\n        const key = account.generateAccountKey();\r\n        this.setItem(key, JSON.stringify(account));\r\n        this.addAccountKeyToMap(key);\r\n    }\r\n    /**\r\n     * Returns the array of account keys currently cached\r\n     * @returns\r\n     */\r\n    getAccountKeys() {\r\n        this.logger.trace(\"BrowserCacheManager.getAccountKeys called\");\r\n        const accountKeys = this.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.ACCOUNT_KEYS);\r\n        if (accountKeys) {\r\n            return JSON.parse(accountKeys);\r\n        }\r\n        this.logger.verbose(\"BrowserCacheManager.getAccountKeys - No account keys found\");\r\n        return [];\r\n    }\r\n    /**\r\n     * Add a new account to the key map\r\n     * @param key\r\n     */\r\n    addAccountKeyToMap(key) {\r\n        this.logger.trace(\"BrowserCacheManager.addAccountKeyToMap called\");\r\n        this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${key}`);\r\n        const accountKeys = this.getAccountKeys();\r\n        if (accountKeys.indexOf(key) === -1) {\r\n            // Only add key if it does not already exist in the map\r\n            accountKeys.push(key);\r\n            this.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\r\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key added\");\r\n        }\r\n        else {\r\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key already exists in map\");\r\n        }\r\n    }\r\n    /**\r\n     * Remove an account from the key map\r\n     * @param key\r\n     */\r\n    removeAccountKeyFromMap(key) {\r\n        this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap called\");\r\n        this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${key}`);\r\n        const accountKeys = this.getAccountKeys();\r\n        const removalIndex = accountKeys.indexOf(key);\r\n        if (removalIndex > -1) {\r\n            accountKeys.splice(removalIndex, 1);\r\n            this.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\r\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap account key removed\");\r\n        }\r\n        else {\r\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap key not found in existing map\");\r\n        }\r\n    }\r\n    /**\r\n     * Extends inherited removeAccount function to include removal of the account key from the map\r\n     * @param key\r\n     */\r\n    async removeAccount(key) {\r\n        void super.removeAccount(key);\r\n        this.removeAccountKeyFromMap(key);\r\n    }\r\n    /**\r\n     * Remove account entity from the platform cache if it's outdated\r\n     * @param accountKey\r\n     */\r\n    removeOutdatedAccount(accountKey) {\r\n        this.removeItem(accountKey);\r\n        this.removeAccountKeyFromMap(accountKey);\r\n    }\r\n    /**\r\n     * Removes given idToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    removeIdToken(key) {\r\n        super.removeIdToken(key);\r\n        this.removeTokenKey(key, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ID_TOKEN);\r\n    }\r\n    /**\r\n     * Removes given accessToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    async removeAccessToken(key) {\r\n        void super.removeAccessToken(key);\r\n        this.removeTokenKey(key, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN);\r\n    }\r\n    /**\r\n     * Removes given refreshToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    removeRefreshToken(key) {\r\n        super.removeRefreshToken(key);\r\n        this.removeTokenKey(key, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN);\r\n    }\r\n    /**\r\n     * Gets the keys for the cached tokens associated with this clientId\r\n     * @returns\r\n     */\r\n    getTokenKeys() {\r\n        this.logger.trace(\"BrowserCacheManager.getTokenKeys called\");\r\n        const item = this.getItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`);\r\n        if (item) {\r\n            const tokenKeys = this.validateAndParseJson(item);\r\n            if (tokenKeys &&\r\n                tokenKeys.hasOwnProperty(\"idToken\") &&\r\n                tokenKeys.hasOwnProperty(\"accessToken\") &&\r\n                tokenKeys.hasOwnProperty(\"refreshToken\")) {\r\n                return tokenKeys;\r\n            }\r\n            else {\r\n                this.logger.error(\"BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.\");\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"BrowserCacheManager.getTokenKeys - No token keys found\");\r\n        }\r\n        return {\r\n            idToken: [],\r\n            accessToken: [],\r\n            refreshToken: [],\r\n        };\r\n    }\r\n    /**\r\n     * Adds the given key to the token key map\r\n     * @param key\r\n     * @param type\r\n     */\r\n    addTokenKey(key, type) {\r\n        this.logger.trace(\"BrowserCacheManager addTokenKey called\");\r\n        const tokenKeys = this.getTokenKeys();\r\n        switch (type) {\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ID_TOKEN:\r\n                if (tokenKeys.idToken.indexOf(key) === -1) {\r\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - idToken added to map\");\r\n                    tokenKeys.idToken.push(key);\r\n                }\r\n                break;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN:\r\n                if (tokenKeys.accessToken.indexOf(key) === -1) {\r\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - accessToken added to map\");\r\n                    tokenKeys.accessToken.push(key);\r\n                }\r\n                break;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN:\r\n                if (tokenKeys.refreshToken.indexOf(key) === -1) {\r\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - refreshToken added to map\");\r\n                    tokenKeys.refreshToken.push(key);\r\n                }\r\n                break;\r\n            default:\r\n                this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.unexpectedCredentialType);\r\n        }\r\n        this.setItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\r\n    }\r\n    /**\r\n     * Removes the given key from the token key map\r\n     * @param key\r\n     * @param type\r\n     */\r\n    removeTokenKey(key, type) {\r\n        this.logger.trace(\"BrowserCacheManager removeTokenKey called\");\r\n        const tokenKeys = this.getTokenKeys();\r\n        switch (type) {\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ID_TOKEN:\r\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${key} from map`);\r\n                const idRemoval = tokenKeys.idToken.indexOf(key);\r\n                if (idRemoval > -1) {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken removed from map\");\r\n                    tokenKeys.idToken.splice(idRemoval, 1);\r\n                }\r\n                else {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.\");\r\n                }\r\n                break;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN:\r\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${key} from map`);\r\n                const accessRemoval = tokenKeys.accessToken.indexOf(key);\r\n                if (accessRemoval > -1) {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken removed from map\");\r\n                    tokenKeys.accessToken.splice(accessRemoval, 1);\r\n                }\r\n                else {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.\");\r\n                }\r\n                break;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN:\r\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${key} from map`);\r\n                const refreshRemoval = tokenKeys.refreshToken.indexOf(key);\r\n                if (refreshRemoval > -1) {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken removed from map\");\r\n                    tokenKeys.refreshToken.splice(refreshRemoval, 1);\r\n                }\r\n                else {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.\");\r\n                }\r\n                break;\r\n            default:\r\n                this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.unexpectedCredentialType);\r\n        }\r\n        this.setItem(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\r\n    }\r\n    /**\r\n     * generates idToken entity from a string\r\n     * @param idTokenKey\r\n     */\r\n    getIdTokenCredential(idTokenKey) {\r\n        const value = this.getItem(idTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(idTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ID_TOKEN);\r\n            return null;\r\n        }\r\n        const parsedIdToken = this.validateAndParseJson(value);\r\n        if (!parsedIdToken || !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.isIdTokenEntity(parsedIdToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(idTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ID_TOKEN);\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: cache hit\");\r\n        return parsedIdToken;\r\n    }\r\n    /**\r\n     * set IdToken credential to the platform cache\r\n     * @param idToken\r\n     */\r\n    setIdTokenCredential(idToken) {\r\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\r\n        const idTokenKey = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.generateCredentialKey(idToken);\r\n        this.setItem(idTokenKey, JSON.stringify(idToken));\r\n        this.addTokenKey(idTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ID_TOKEN);\r\n    }\r\n    /**\r\n     * generates accessToken entity from a string\r\n     * @param key\r\n     */\r\n    getAccessTokenCredential(accessTokenKey) {\r\n        const value = this.getItem(accessTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(accessTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN);\r\n            return null;\r\n        }\r\n        const parsedAccessToken = this.validateAndParseJson(value);\r\n        if (!parsedAccessToken ||\r\n            !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.isAccessTokenEntity(parsedAccessToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(accessTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN);\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: cache hit\");\r\n        return parsedAccessToken;\r\n    }\r\n    /**\r\n     * set accessToken credential to the platform cache\r\n     * @param accessToken\r\n     */\r\n    setAccessTokenCredential(accessToken) {\r\n        this.logger.trace(\"BrowserCacheManager.setAccessTokenCredential called\");\r\n        const accessTokenKey = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.generateCredentialKey(accessToken);\r\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\r\n        this.addTokenKey(accessTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.ACCESS_TOKEN);\r\n    }\r\n    /**\r\n     * generates refreshToken entity from a string\r\n     * @param refreshTokenKey\r\n     */\r\n    getRefreshTokenCredential(refreshTokenKey) {\r\n        const value = this.getItem(refreshTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(refreshTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN);\r\n            return null;\r\n        }\r\n        const parsedRefreshToken = this.validateAndParseJson(value);\r\n        if (!parsedRefreshToken ||\r\n            !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.isRefreshTokenEntity(parsedRefreshToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(refreshTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN);\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: cache hit\");\r\n        return parsedRefreshToken;\r\n    }\r\n    /**\r\n     * set refreshToken credential to the platform cache\r\n     * @param refreshToken\r\n     */\r\n    setRefreshTokenCredential(refreshToken) {\r\n        this.logger.trace(\"BrowserCacheManager.setRefreshTokenCredential called\");\r\n        const refreshTokenKey = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.generateCredentialKey(refreshToken);\r\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\r\n        this.addTokenKey(refreshTokenKey, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CredentialType.REFRESH_TOKEN);\r\n    }\r\n    /**\r\n     * fetch appMetadata entity from the platform cache\r\n     * @param appMetadataKey\r\n     */\r\n    getAppMetadata(appMetadataKey) {\r\n        const value = this.getItem(appMetadataKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedMetadata = this.validateAndParseJson(value);\r\n        if (!parsedMetadata ||\r\n            !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.isAppMetadataEntity(appMetadataKey, parsedMetadata)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\r\n        return parsedMetadata;\r\n    }\r\n    /**\r\n     * set appMetadata entity to the platform cache\r\n     * @param appMetadata\r\n     */\r\n    setAppMetadata(appMetadata) {\r\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\r\n        const appMetadataKey = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.generateAppMetadataKey(appMetadata);\r\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\r\n    }\r\n    /**\r\n     * fetch server telemetry entity from the platform cache\r\n     * @param serverTelemetryKey\r\n     */\r\n    getServerTelemetry(serverTelemetryKey) {\r\n        const value = this.getItem(serverTelemetryKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedEntity = this.validateAndParseJson(value);\r\n        if (!parsedEntity ||\r\n            !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.isServerTelemetryEntity(serverTelemetryKey, parsedEntity)) {\r\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\r\n        return parsedEntity;\r\n    }\r\n    /**\r\n     * set server telemetry entity to the platform cache\r\n     * @param serverTelemetryKey\r\n     * @param serverTelemetry\r\n     */\r\n    setServerTelemetry(serverTelemetryKey, serverTelemetry) {\r\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\r\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    getAuthorityMetadata(key) {\r\n        const value = this.internalStorage.getItem(key);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedMetadata = this.validateAndParseJson(value);\r\n        if (parsedMetadata &&\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.isAuthorityMetadataEntity(key, parsedMetadata)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: cache hit\");\r\n            return parsedMetadata;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    getAuthorityMetadataKeys() {\r\n        const allKeys = this.internalStorage.getKeys();\r\n        return allKeys.filter((key) => {\r\n            return this.isAuthorityMetadata(key);\r\n        });\r\n    }\r\n    /**\r\n     * Sets wrapper metadata in memory\r\n     * @param wrapperSKU\r\n     * @param wrapperVersion\r\n     */\r\n    setWrapperMetadata(wrapperSKU, wrapperVersion) {\r\n        this.internalStorage.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\r\n        this.internalStorage.setItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InMemoryCacheKeys.WRAPPER_VER, wrapperVersion);\r\n    }\r\n    /**\r\n     * Returns wrapper metadata from in-memory storage\r\n     */\r\n    getWrapperMetadata() {\r\n        const sku = this.internalStorage.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InMemoryCacheKeys.WRAPPER_SKU) ||\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING;\r\n        const version = this.internalStorage.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InMemoryCacheKeys.WRAPPER_VER) ||\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING;\r\n        return [sku, version];\r\n    }\r\n    /**\r\n     *\r\n     * @param entity\r\n     */\r\n    setAuthorityMetadata(key, entity) {\r\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\r\n        this.internalStorage.setItem(key, JSON.stringify(entity));\r\n    }\r\n    /**\r\n     * Gets the active account\r\n     */\r\n    getActiveAccount() {\r\n        const activeAccountKeyFilters = this.generateCacheKey(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\r\n        const activeAccountValueFilters = this.getItem(activeAccountKeyFilters);\r\n        if (!activeAccountValueFilters) {\r\n            // if new active account cache type isn't found, it's an old version, so look for that instead\r\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema\");\r\n            const activeAccountKeyLocal = this.generateCacheKey(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ACTIVE_ACCOUNT);\r\n            const activeAccountValueLocal = this.getItem(activeAccountKeyLocal);\r\n            if (!activeAccountValueLocal) {\r\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account found\");\r\n                return null;\r\n            }\r\n            const activeAccount = this.getAccountInfoFilteredBy({\r\n                localAccountId: activeAccountValueLocal,\r\n            });\r\n            if (activeAccount) {\r\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: Legacy active account cache schema found\");\r\n                this.logger.trace(\"BrowserCacheManager.getActiveAccount: Adding active account filters cache schema\");\r\n                this.setActiveAccount(activeAccount);\r\n                return activeAccount;\r\n            }\r\n            return null;\r\n        }\r\n        const activeAccountValueObj = this.validateAndParseJson(activeAccountValueFilters);\r\n        if (activeAccountValueObj) {\r\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: Active account filters schema found\");\r\n            return this.getAccountInfoFilteredBy({\r\n                homeAccountId: activeAccountValueObj.homeAccountId,\r\n                localAccountId: activeAccountValueObj.localAccountId,\r\n                tenantId: activeAccountValueObj.tenantId,\r\n            });\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account found\");\r\n        return null;\r\n    }\r\n    /**\r\n     * Sets the active account's localAccountId in cache\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        const activeAccountKey = this.generateCacheKey(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\r\n        const activeAccountKeyLocal = this.generateCacheKey(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ACTIVE_ACCOUNT);\r\n        if (account) {\r\n            this.logger.verbose(\"setActiveAccount: Active account set\");\r\n            const activeAccountValue = {\r\n                homeAccountId: account.homeAccountId,\r\n                localAccountId: account.localAccountId,\r\n                tenantId: account.tenantId,\r\n            };\r\n            this.browserStorage.setItem(activeAccountKey, JSON.stringify(activeAccountValue));\r\n            this.browserStorage.setItem(activeAccountKeyLocal, account.localAccountId);\r\n        }\r\n        else {\r\n            this.logger.verbose(\"setActiveAccount: No account passed, active account not set\");\r\n            this.browserStorage.removeItem(activeAccountKey);\r\n            this.browserStorage.removeItem(activeAccountKeyLocal);\r\n        }\r\n    }\r\n    /**\r\n     * fetch throttling entity from the platform cache\r\n     * @param throttlingCacheKey\r\n     */\r\n    getThrottlingCache(throttlingCacheKey) {\r\n        const value = this.getItem(throttlingCacheKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedThrottlingCache = this.validateAndParseJson(value);\r\n        if (!parsedThrottlingCache ||\r\n            !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.isThrottlingEntity(throttlingCacheKey, parsedThrottlingCache)) {\r\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\r\n        return parsedThrottlingCache;\r\n    }\r\n    /**\r\n     * set throttling entity to the platform cache\r\n     * @param throttlingCacheKey\r\n     * @param throttlingCache\r\n     */\r\n    setThrottlingCache(throttlingCacheKey, throttlingCache) {\r\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\r\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\r\n    }\r\n    /**\r\n     * Gets cache item with given key.\r\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    getTemporaryCache(cacheKey, generateKey) {\r\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            const itemCookie = this.getItemCookie(key);\r\n            if (itemCookie) {\r\n                this.logger.trace(\"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\");\r\n                return itemCookie;\r\n            }\r\n        }\r\n        const value = this.temporaryCacheStorage.getItem(key);\r\n        if (!value) {\r\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\r\n            if (this.cacheConfig.cacheLocation ===\r\n                _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.LocalStorage) {\r\n                const item = this.browserStorage.getItem(key);\r\n                if (item) {\r\n                    this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\");\r\n                    return item;\r\n                }\r\n            }\r\n            this.logger.trace(\"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\");\r\n        return value;\r\n    }\r\n    /**\r\n     * Sets the cache item with the key and value given.\r\n     * Stores in cookie if storeAuthStateInCookie is set to true.\r\n     * This can cause cookie overflow if used incorrectly.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setTemporaryCache(cacheKey, value, generateKey) {\r\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\r\n        this.temporaryCacheStorage.setItem(key, value);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.logger.trace(\"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\");\r\n            this.setItemCookie(key, value);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the cache item with the given key.\r\n     * @param key\r\n     */\r\n    removeItem(key) {\r\n        this.browserStorage.removeItem(key);\r\n    }\r\n    /**\r\n     * Removes the temporary cache item with the given key.\r\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    removeTemporaryItem(key) {\r\n        this.temporaryCacheStorage.removeItem(key);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.logger.trace(\"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\");\r\n            this.clearItemCookie(key);\r\n        }\r\n    }\r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    getKeys() {\r\n        return this.browserStorage.getKeys();\r\n    }\r\n    /**\r\n     * Clears all cache entries created by MSAL.\r\n     */\r\n    async clear() {\r\n        // Removes all accounts and their credentials\r\n        await this.removeAllAccounts();\r\n        this.removeAppMetadata();\r\n        // Remove temp storage first to make sure any cookies are cleared\r\n        this.temporaryCacheStorage.getKeys().forEach((cacheKey) => {\r\n            if (cacheKey.indexOf(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.CACHE_PREFIX) !== -1 ||\r\n                cacheKey.indexOf(this.clientId) !== -1) {\r\n                this.removeTemporaryItem(cacheKey);\r\n            }\r\n        });\r\n        // Removes all remaining MSAL cache items\r\n        this.browserStorage.getKeys().forEach((cacheKey) => {\r\n            if (cacheKey.indexOf(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.CACHE_PREFIX) !== -1 ||\r\n                cacheKey.indexOf(this.clientId) !== -1) {\r\n                this.browserStorage.removeItem(cacheKey);\r\n            }\r\n        });\r\n        this.internalStorage.clear();\r\n    }\r\n    /**\r\n     * Clears all access tokes that have claims prior to saving the current one\r\n     * @param performanceClient {IPerformanceClient}\r\n     * @param correlationId {string} correlation id\r\n     * @returns\r\n     */\r\n    async clearTokensAndKeysWithClaims(performanceClient, correlationId) {\r\n        performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.PerformanceEvents.ClearTokensAndKeysWithClaims, correlationId);\r\n        const tokenKeys = this.getTokenKeys();\r\n        const removedAccessTokens = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            // if the access token has claims in its key, remove the token key and the token\r\n            const credential = this.getAccessTokenCredential(key);\r\n            if (credential?.requestedClaimsHash &&\r\n                key.includes(credential.requestedClaimsHash.toLowerCase())) {\r\n                removedAccessTokens.push(this.removeAccessToken(key));\r\n            }\r\n        });\r\n        await Promise.all(removedAccessTokens);\r\n        // warn if any access tokens are removed\r\n        if (removedAccessTokens.length > 0) {\r\n            this.logger.warning(`${removedAccessTokens.length} access tokens with claims in the cache keys have been removed from the cache.`);\r\n        }\r\n    }\r\n    /**\r\n     * Add value to cookies\r\n     * @param cookieName\r\n     * @param cookieValue\r\n     * @param expires\r\n     * @deprecated\r\n     */\r\n    setItemCookie(cookieName, cookieValue, expires) {\r\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(cookieValue)};path=/;SameSite=Lax;`;\r\n        if (expires) {\r\n            const expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += `expires=${expireTime};`;\r\n        }\r\n        if (this.cacheConfig.secureCookies) {\r\n            cookieStr += \"Secure;\";\r\n        }\r\n        document.cookie = cookieStr;\r\n    }\r\n    /**\r\n     * Get one item by key from cookies\r\n     * @param cookieName\r\n     * @deprecated\r\n     */\r\n    getItemCookie(cookieName) {\r\n        const name = `${encodeURIComponent(cookieName)}=`;\r\n        const cookieList = document.cookie.split(\";\");\r\n        for (let i = 0; i < cookieList.length; i++) {\r\n            let cookie = cookieList[i];\r\n            while (cookie.charAt(0) === \" \") {\r\n                cookie = cookie.substring(1);\r\n            }\r\n            if (cookie.indexOf(name) === 0) {\r\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\r\n            }\r\n        }\r\n        return _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING;\r\n    }\r\n    /**\r\n     * Clear all msal-related cookies currently set in the browser. Should only be used to clear temporary cache items.\r\n     * @deprecated\r\n     */\r\n    clearMsalCookies() {\r\n        const cookiePrefix = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.CACHE_PREFIX}.${this.clientId}`;\r\n        const cookieList = document.cookie.split(\";\");\r\n        cookieList.forEach((cookie) => {\r\n            while (cookie.charAt(0) === \" \") {\r\n                // eslint-disable-next-line no-param-reassign\r\n                cookie = cookie.substring(1);\r\n            }\r\n            if (cookie.indexOf(cookiePrefix) === 0) {\r\n                const cookieKey = cookie.split(\"=\")[0];\r\n                this.clearItemCookie(cookieKey);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cookieName\r\n     * @deprecated\r\n     */\r\n    clearItemCookie(cookieName) {\r\n        this.setItemCookie(cookieName, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, -1);\r\n    }\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     * @deprecated\r\n     */\r\n    getCookieExpirationTime(cookieLifeDays) {\r\n        const today = new Date();\r\n        const expr = new Date(today.getTime() + cookieLifeDays * this.COOKIE_LIFE_MULTIPLIER);\r\n        return expr.toUTCString();\r\n    }\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    generateCacheKey(key) {\r\n        const generatedKey = this.validateAndParseJson(key);\r\n        if (!generatedKey) {\r\n            if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.StringUtils.startsWith(key, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.CACHE_PREFIX) ||\r\n                _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.StringUtils.startsWith(key, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ADAL_ID_TOKEN)) {\r\n                return key;\r\n            }\r\n            return `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\r\n        }\r\n        return JSON.stringify(key);\r\n    }\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    generateAuthorityKey(stateString) {\r\n        const { libraryState: { id: stateId }, } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n        return this.generateCacheKey(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.AUTHORITY}.${stateId}`);\r\n    }\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    generateNonceKey(stateString) {\r\n        const { libraryState: { id: stateId }, } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n        return this.generateCacheKey(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`);\r\n    }\r\n    /**\r\n     * Creates full cache key for the request state\r\n     * @param stateString State string for the request\r\n     */\r\n    generateStateKey(stateString) {\r\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\r\n        const { libraryState: { id: stateId }, } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n        return this.generateCacheKey(`${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_STATE}.${stateId}`);\r\n    }\r\n    /**\r\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\r\n     */\r\n    getCachedAuthority(cachedState) {\r\n        const stateCacheKey = this.generateStateKey(cachedState);\r\n        const state = this.getTemporaryCache(stateCacheKey);\r\n        if (!state) {\r\n            return null;\r\n        }\r\n        const authorityCacheKey = this.generateAuthorityKey(state);\r\n        return this.getTemporaryCache(authorityCacheKey);\r\n    }\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    updateCacheEntries(state, nonce, authorityInstance, loginHint, account) {\r\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\r\n        // Cache the request state\r\n        const stateCacheKey = this.generateStateKey(state);\r\n        this.setTemporaryCache(stateCacheKey, state, false);\r\n        // Cache the nonce\r\n        const nonceCacheKey = this.generateNonceKey(state);\r\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\r\n        // Cache authorityKey\r\n        const authorityCacheKey = this.generateAuthorityKey(state);\r\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\r\n        if (account) {\r\n            const ccsCredential = {\r\n                credential: account.homeAccountId,\r\n                type: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.HOME_ACCOUNT_ID,\r\n            };\r\n            this.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\r\n        }\r\n        else if (loginHint) {\r\n            const ccsCredential = {\r\n                credential: loginHint,\r\n                type: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.UPN,\r\n            };\r\n            this.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\r\n        }\r\n    }\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    resetRequestCache(state) {\r\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\r\n        // check state and remove associated cache items\r\n        if (state) {\r\n            this.temporaryCacheStorage.getKeys().forEach((key) => {\r\n                if (key.indexOf(state) !== -1) {\r\n                    this.removeTemporaryItem(key);\r\n                }\r\n            });\r\n            // delete generic interactive request parameters\r\n            this.removeTemporaryItem(this.generateStateKey(state));\r\n            this.removeTemporaryItem(this.generateNonceKey(state));\r\n            this.removeTemporaryItem(this.generateAuthorityKey(state));\r\n        }\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_PARAMS));\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.ORIGIN_URI));\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.URL_HASH));\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.CORRELATION_ID));\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.CCS_CREDENTIAL));\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.NATIVE_REQUEST));\r\n        this.setInteractionInProgress(false);\r\n    }\r\n    /**\r\n     * Removes temporary cache for the provided state\r\n     * @param stateString\r\n     */\r\n    cleanRequestByState(stateString) {\r\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\r\n        // Interaction is completed - remove interaction status.\r\n        if (stateString) {\r\n            const stateKey = this.generateStateKey(stateString);\r\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\r\n            this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`);\r\n            this.resetRequestCache(cachedState || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING);\r\n        }\r\n        this.clearMsalCookies();\r\n    }\r\n    /**\r\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\r\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\r\n     * @param interactionType\r\n     */\r\n    cleanRequestByInteractionType(interactionType) {\r\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByInteractionType called\");\r\n        // Loop through all keys to find state key\r\n        this.temporaryCacheStorage.getKeys().forEach((key) => {\r\n            // If this key is not the state key, move on\r\n            if (key.indexOf(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_STATE) === -1) {\r\n                return;\r\n            }\r\n            // Retrieve state value, return if not a valid value\r\n            const stateValue = this.temporaryCacheStorage.getItem(key);\r\n            if (!stateValue) {\r\n                return;\r\n            }\r\n            // Extract state and ensure it matches given InteractionType, then clean request cache\r\n            const parsedState = (0,_utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_13__.extractBrowserRequestState)(this.cryptoImpl, stateValue);\r\n            if (parsedState &&\r\n                parsedState.interactionType === interactionType) {\r\n                this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`);\r\n                this.resetRequestCache(stateValue);\r\n            }\r\n        });\r\n        this.clearMsalCookies();\r\n        this.setInteractionInProgress(false);\r\n    }\r\n    cacheCodeRequest(authCodeRequest) {\r\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\r\n        const encodedValue = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_14__.base64Encode)(JSON.stringify(authCodeRequest));\r\n        this.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_PARAMS, encodedValue, true);\r\n    }\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    getCachedRequest(state) {\r\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\r\n        // Get token request from cache and parse as TokenExchangeParameters.\r\n        const encodedTokenRequest = this.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_PARAMS, true);\r\n        if (!encodedTokenRequest) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_15__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_16__.noTokenRequestCacheError);\r\n        }\r\n        let parsedRequest;\r\n        try {\r\n            parsedRequest = JSON.parse((0,_encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_17__.base64Decode)(encodedTokenRequest));\r\n        }\r\n        catch (e) {\r\n            this.logger.errorPii(`Attempted to parse: ${encodedTokenRequest}`);\r\n            this.logger.error(`Parsing cached token request threw with error: ${e}`);\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_15__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_16__.unableToParseTokenRequestCacheError);\r\n        }\r\n        this.removeTemporaryItem(this.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.REQUEST_PARAMS));\r\n        // Get cached authority and use if no authority is cached with request.\r\n        if (!parsedRequest.authority) {\r\n            const authorityCacheKey = this.generateAuthorityKey(state);\r\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\r\n            if (!cachedAuthority) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_15__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_16__.noCachedAuthorityError);\r\n            }\r\n            parsedRequest.authority = cachedAuthority;\r\n        }\r\n        return parsedRequest;\r\n    }\r\n    /**\r\n     * Gets cached native request for redirect flows\r\n     */\r\n    getCachedNativeRequest() {\r\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\r\n        const cachedRequest = this.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.NATIVE_REQUEST, true);\r\n        if (!cachedRequest) {\r\n            this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest: No cached native request found\");\r\n            return null;\r\n        }\r\n        const parsedRequest = this.validateAndParseJson(cachedRequest);\r\n        if (!parsedRequest) {\r\n            this.logger.error(\"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\");\r\n            return null;\r\n        }\r\n        return parsedRequest;\r\n    }\r\n    isInteractionInProgress(matchClientId) {\r\n        const clientId = this.getInteractionInProgress();\r\n        if (matchClientId) {\r\n            return clientId === this.clientId;\r\n        }\r\n        else {\r\n            return !!clientId;\r\n        }\r\n    }\r\n    getInteractionInProgress() {\r\n        const key = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.CACHE_PREFIX}.${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\r\n        return this.getTemporaryCache(key, false);\r\n    }\r\n    setInteractionInProgress(inProgress) {\r\n        // Ensure we don't overwrite interaction in progress for a different clientId\r\n        const key = `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.CACHE_PREFIX}.${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\r\n        if (inProgress) {\r\n            if (this.getInteractionInProgress()) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_15__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_16__.interactionInProgress);\r\n            }\r\n            else {\r\n                // No interaction is in progress\r\n                this.setTemporaryCache(key, this.clientId, false);\r\n            }\r\n        }\r\n        else if (!inProgress &&\r\n            this.getInteractionInProgress() === this.clientId) {\r\n            this.removeTemporaryItem(key);\r\n        }\r\n    }\r\n    /**\r\n     * Returns username retrieved from ADAL or MSAL v1 idToken\r\n     * @deprecated\r\n     */\r\n    getLegacyLoginHint() {\r\n        // Only check for adal/msal token if no SSO params are being used\r\n        const adalIdTokenString = this.getTemporaryCache(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ADAL_ID_TOKEN);\r\n        if (adalIdTokenString) {\r\n            this.browserStorage.removeItem(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ADAL_ID_TOKEN);\r\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\r\n        }\r\n        // Check for cached MSAL v1 id token\r\n        const msalIdTokenString = this.getTemporaryCache(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ID_TOKEN, true);\r\n        if (msalIdTokenString) {\r\n            this.browserStorage.removeItem(this.generateCacheKey(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PersistentCacheKeys.ID_TOKEN));\r\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\r\n        }\r\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\r\n        if (cachedIdTokenString) {\r\n            const idTokenClaims = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_18__.extractTokenClaims(cachedIdTokenString, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_17__.base64Decode);\r\n            if (idTokenClaims.preferred_username) {\r\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\");\r\n                return idTokenClaims.preferred_username;\r\n            }\r\n            else if (idTokenClaims.upn) {\r\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\");\r\n                return idTokenClaims.upn;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\");\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Updates a credential's cache key if the current cache key is outdated\r\n     */\r\n    updateCredentialCacheKey(currentCacheKey, credential) {\r\n        const updatedCacheKey = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.generateCredentialKey(credential);\r\n        if (currentCacheKey !== updatedCacheKey) {\r\n            const cacheItem = this.getItem(currentCacheKey);\r\n            if (cacheItem) {\r\n                this.browserStorage.removeItem(currentCacheKey);\r\n                this.setItem(updatedCacheKey, cacheItem);\r\n                this.logger.verbose(`Updated an outdated ${credential.credentialType} cache key`);\r\n                return updatedCacheKey;\r\n            }\r\n            else {\r\n                this.logger.error(`Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`);\r\n            }\r\n        }\r\n        return currentCacheKey;\r\n    }\r\n    /**\r\n     * Builds credential entities from AuthenticationResult object and saves the resulting credentials to the cache\r\n     * @param result\r\n     * @param request\r\n     */\r\n    async hydrateCache(result, request) {\r\n        const idTokenEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.createIdTokenEntity(result.account?.homeAccountId, result.account?.environment, result.idToken, this.clientId, result.tenantId);\r\n        let claimsHash;\r\n        if (request.claims) {\r\n            claimsHash = await this.cryptoImpl.hashString(request.claims);\r\n        }\r\n        /**\r\n         * meta data for cache stores time in seconds from epoch\r\n         * AuthenticationResult returns expiresOn and extExpiresOn in milliseconds (as a Date object which is in ms)\r\n         * We need to map these for the cache when building tokens from AuthenticationResult\r\n         *\r\n         * The next MSAL VFuture should map these both to same value if possible\r\n         */\r\n        const accessTokenEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.createAccessTokenEntity(result.account?.homeAccountId, result.account.environment, result.accessToken, this.clientId, result.tenantId, result.scopes.join(\" \"), result.expiresOn ? result.expiresOn.getTime() / 1000 : 0, result.extExpiresOn ? result.extExpiresOn.getTime() / 1000 : 0, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_17__.base64Decode, undefined, // refreshOn\r\n        result.tokenType, undefined, // userAssertionHash\r\n        request.sshKid, request.claims, claimsHash);\r\n        const cacheRecord = {\r\n            idToken: idTokenEntity,\r\n            accessToken: accessTokenEntity,\r\n        };\r\n        return this.saveCacheRecord(cacheRecord);\r\n    }\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord {CacheRecord}\r\n     * @param storeInCache {?StoreInCache}\r\n     * @param correlationId {?string} correlation id\r\n     */\r\n    async saveCacheRecord(cacheRecord, storeInCache, correlationId) {\r\n        try {\r\n            await super.saveCacheRecord(cacheRecord, storeInCache, correlationId);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.CacheError &&\r\n                this.performanceClient &&\r\n                correlationId) {\r\n                try {\r\n                    const tokenKeys = this.getTokenKeys();\r\n                    this.performanceClient.addFields({\r\n                        cacheRtCount: tokenKeys.refreshToken.length,\r\n                        cacheIdCount: tokenKeys.idToken.length,\r\n                        cacheAtCount: tokenKeys.accessToken.length,\r\n                    }, correlationId);\r\n                }\r\n                catch (e) { }\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n}\r\nconst DEFAULT_BROWSER_CACHE_MANAGER = (clientId, logger) => {\r\n    const cacheOptions = {\r\n        cacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.MemoryStorage,\r\n        temporaryCacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.MemoryStorage,\r\n        storeAuthStateInCookie: false,\r\n        secureCookies: false,\r\n        cacheMigrationEnabled: false,\r\n        claimsBasedCachingEnabled: false,\r\n    };\r\n    return new BrowserCacheManager(clientId, cacheOptions, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_20__.DEFAULT_CRYPTO_IMPLEMENTATION, logger);\r\n};\n\n\n//# sourceMappingURL=BrowserCacheManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserStorage: () => (/* binding */ BrowserStorage)\n/* harmony export */ });\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass BrowserStorage {\r\n    constructor(cacheLocation) {\r\n        this.validateWindowStorage(cacheLocation);\r\n        this.windowStorage = window[cacheLocation];\r\n    }\r\n    validateWindowStorage(cacheLocation) {\r\n        if ((cacheLocation !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserCacheLocation.LocalStorage &&\r\n            cacheLocation !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.BrowserCacheLocation.SessionStorage) ||\r\n            !window[cacheLocation]) {\r\n            throw (0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.storageNotSupported);\r\n        }\r\n    }\r\n    getItem(key) {\r\n        return this.windowStorage.getItem(key);\r\n    }\r\n    setItem(key, value) {\r\n        this.windowStorage.setItem(key, value);\r\n    }\r\n    removeItem(key) {\r\n        this.windowStorage.removeItem(key);\r\n    }\r\n    getKeys() {\r\n        return Object.keys(this.windowStorage);\r\n    }\r\n    containsKey(key) {\r\n        return this.windowStorage.hasOwnProperty(key);\r\n    }\r\n}\n\n\n//# sourceMappingURL=BrowserStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL0Jyb3dzZXJTdG9yYWdlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUNvRjtBQUM1QjtBQUNpQjs7QUFFdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNkVBQW9CO0FBQ25ELDhCQUE4Qiw2RUFBb0I7QUFDbEQ7QUFDQSxrQkFBa0IsNkdBQW1DLENBQUMsOEZBQW1CO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9jYWNoZS9Ccm93c2VyU3RvcmFnZS5tanM/ZWY0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yNC4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IEJyb3dzZXJDYWNoZUxvY2F0aW9uIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgc3RvcmFnZU5vdFN1cHBvcnRlZCB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIEJyb3dzZXJTdG9yYWdlIHtcclxuICAgIGNvbnN0cnVjdG9yKGNhY2hlTG9jYXRpb24pIHtcclxuICAgICAgICB0aGlzLnZhbGlkYXRlV2luZG93U3RvcmFnZShjYWNoZUxvY2F0aW9uKTtcclxuICAgICAgICB0aGlzLndpbmRvd1N0b3JhZ2UgPSB3aW5kb3dbY2FjaGVMb2NhdGlvbl07XHJcbiAgICB9XHJcbiAgICB2YWxpZGF0ZVdpbmRvd1N0b3JhZ2UoY2FjaGVMb2NhdGlvbikge1xyXG4gICAgICAgIGlmICgoY2FjaGVMb2NhdGlvbiAhPT0gQnJvd3NlckNhY2hlTG9jYXRpb24uTG9jYWxTdG9yYWdlICYmXHJcbiAgICAgICAgICAgIGNhY2hlTG9jYXRpb24gIT09IEJyb3dzZXJDYWNoZUxvY2F0aW9uLlNlc3Npb25TdG9yYWdlKSB8fFxyXG4gICAgICAgICAgICAhd2luZG93W2NhY2hlTG9jYXRpb25dKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yKHN0b3JhZ2VOb3RTdXBwb3J0ZWQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGdldEl0ZW0oa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMud2luZG93U3RvcmFnZS5nZXRJdGVtKGtleSk7XHJcbiAgICB9XHJcbiAgICBzZXRJdGVtKGtleSwgdmFsdWUpIHtcclxuICAgICAgICB0aGlzLndpbmRvd1N0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTtcclxuICAgIH1cclxuICAgIHJlbW92ZUl0ZW0oa2V5KSB7XHJcbiAgICAgICAgdGhpcy53aW5kb3dTdG9yYWdlLnJlbW92ZUl0ZW0oa2V5KTtcclxuICAgIH1cclxuICAgIGdldEtleXMoKSB7XHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMud2luZG93U3RvcmFnZSk7XHJcbiAgICB9XHJcbiAgICBjb250YWluc0tleShrZXkpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy53aW5kb3dTdG9yYWdlLmhhc093blByb3BlcnR5KGtleSk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgQnJvd3NlclN0b3JhZ2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJyb3dzZXJTdG9yYWdlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/cache/BrowserStorage.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DatabaseStorage: () => (/* binding */ DatabaseStorage)\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\r\n */\r\nclass DatabaseStorage {\r\n    constructor() {\r\n        this.dbName = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_NAME;\r\n        this.version = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_VERSION;\r\n        this.tableName = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_TABLE_NAME;\r\n        this.dbOpen = false;\r\n    }\r\n    /**\r\n     * Opens IndexedDB instance.\r\n     */\r\n    async open() {\r\n        return new Promise((resolve, reject) => {\r\n            const openDB = window.indexedDB.open(this.dbName, this.version);\r\n            openDB.addEventListener(\"upgradeneeded\", (e) => {\r\n                const event = e;\r\n                event.target.result.createObjectStore(this.tableName);\r\n            });\r\n            openDB.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.db = event.target.result;\r\n                this.dbOpen = true;\r\n                resolve();\r\n            });\r\n            openDB.addEventListener(\"error\", () => reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseUnavailable)));\r\n        });\r\n    }\r\n    /**\r\n     * Closes the connection to IndexedDB database when all pending transactions\r\n     * complete.\r\n     */\r\n    closeConnection() {\r\n        const db = this.db;\r\n        if (db && this.dbOpen) {\r\n            db.close();\r\n            this.dbOpen = false;\r\n        }\r\n    }\r\n    /**\r\n     * Opens database if it's not already open\r\n     */\r\n    async validateDbIsOpen() {\r\n        if (!this.dbOpen) {\r\n            return this.open();\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves item from IndexedDB instance.\r\n     * @param key\r\n     */\r\n    async getItem(key) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            // TODO: Add timeouts?\r\n            if (!this.db) {\r\n                return reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbGet = objectStore.get(key);\r\n            dbGet.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.closeConnection();\r\n                resolve(event.target.result);\r\n            });\r\n            dbGet.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Adds item to IndexedDB under given key\r\n     * @param key\r\n     * @param payload\r\n     */\r\n    async setItem(key, payload) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            // TODO: Add timeouts?\r\n            if (!this.db) {\r\n                return reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbPut = objectStore.put(payload, key);\r\n            dbPut.addEventListener(\"success\", () => {\r\n                this.closeConnection();\r\n                resolve();\r\n            });\r\n            dbPut.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Removes item from IndexedDB under given key\r\n     * @param key\r\n     */\r\n    async removeItem(key) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.db) {\r\n                return reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbDelete = objectStore.delete(key);\r\n            dbDelete.addEventListener(\"success\", () => {\r\n                this.closeConnection();\r\n                resolve();\r\n            });\r\n            dbDelete.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Get all the keys from the storage object as an iterable array of strings.\r\n     */\r\n    async getKeys() {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.db) {\r\n                return reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbGetKeys = objectStore.getAllKeys();\r\n            dbGetKeys.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.closeConnection();\r\n                resolve(event.target.result);\r\n            });\r\n            dbGetKeys.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * Checks whether there is an object under the search key in the object store\r\n     */\r\n    async containsKey(key) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.db) {\r\n                return reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbContainsKey = objectStore.count(key);\r\n            dbContainsKey.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.closeConnection();\r\n                resolve(event.target.result === 1);\r\n            });\r\n            dbContainsKey.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\r\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\r\n     * with IndexedDB database versions.\r\n     */\r\n    async deleteDatabase() {\r\n        // Check if database being deleted exists\r\n        if (this.db && this.dbOpen) {\r\n            this.closeConnection();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const deleteDbRequest = window.indexedDB.deleteDatabase(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.DB_NAME);\r\n            const id = setTimeout(() => reject(false), 200); // Reject if events aren't raised within 200ms\r\n            deleteDbRequest.addEventListener(\"success\", () => {\r\n                clearTimeout(id);\r\n                return resolve(true);\r\n            });\r\n            deleteDbRequest.addEventListener(\"blocked\", () => {\r\n                clearTimeout(id);\r\n                return resolve(true);\r\n            });\r\n            deleteDbRequest.addEventListener(\"error\", () => {\r\n                clearTimeout(id);\r\n                return reject(false);\r\n            });\r\n        });\r\n    }\r\n}\n\n\n//# sourceMappingURL=DatabaseStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MemoryStorage: () => (/* binding */ MemoryStorage)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.cache = new Map();\r\n    }\r\n    getItem(key) {\r\n        return this.cache.get(key) || null;\r\n    }\r\n    setItem(key, value) {\r\n        this.cache.set(key, value);\r\n    }\r\n    removeItem(key) {\r\n        this.cache.delete(key);\r\n    }\r\n    getKeys() {\r\n        const cacheKeys = [];\r\n        this.cache.forEach((value, key) => {\r\n            cacheKeys.push(key);\r\n        });\r\n        return cacheKeys;\r\n    }\r\n    containsKey(key) {\r\n        return this.cache.has(key);\r\n    }\r\n    clear() {\r\n        this.cache.clear();\r\n    }\r\n}\n\n\n//# sourceMappingURL=MemoryStorage.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NhY2hlL01lbW9yeVN0b3JhZ2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9jYWNoZS9NZW1vcnlTdG9yYWdlLm1qcz80MTY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIE1lbW9yeVN0b3JhZ2Uge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5jYWNoZSA9IG5ldyBNYXAoKTtcclxuICAgIH1cclxuICAgIGdldEl0ZW0oa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGUuZ2V0KGtleSkgfHwgbnVsbDtcclxuICAgIH1cclxuICAgIHNldEl0ZW0oa2V5LCB2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuY2FjaGUuc2V0KGtleSwgdmFsdWUpO1xyXG4gICAgfVxyXG4gICAgcmVtb3ZlSXRlbShrZXkpIHtcclxuICAgICAgICB0aGlzLmNhY2hlLmRlbGV0ZShrZXkpO1xyXG4gICAgfVxyXG4gICAgZ2V0S2V5cygpIHtcclxuICAgICAgICBjb25zdCBjYWNoZUtleXMgPSBbXTtcclxuICAgICAgICB0aGlzLmNhY2hlLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcclxuICAgICAgICAgICAgY2FjaGVLZXlzLnB1c2goa2V5KTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gY2FjaGVLZXlzO1xyXG4gICAgfVxyXG4gICAgY29udGFpbnNLZXkoa2V5KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGUuaGFzKGtleSk7XHJcbiAgICB9XHJcbiAgICBjbGVhcigpIHtcclxuICAgICAgICB0aGlzLmNhY2hlLmNsZWFyKCk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgTWVtb3J5U3RvcmFnZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TWVtb3J5U3RvcmFnZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenCache: () => (/* binding */ TokenCache)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encode/Base64Decode.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Token cache manager\r\n */\r\nclass TokenCache {\r\n    constructor(configuration, storage, logger, cryptoObj) {\r\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\r\n        this.config = configuration;\r\n        this.storage = storage;\r\n        this.logger = logger;\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n    // Move getAllAccounts here and cache utility APIs\r\n    /**\r\n     * API to load tokens to msal-browser cache.\r\n     * @param request\r\n     * @param response\r\n     * @param options\r\n     * @returns `AuthenticationResult` for the response that was loaded.\r\n     */\r\n    loadExternalTokens(request, response, options) {\r\n        if (!this.isBrowserEnvironment) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.nonBrowserEnvironment);\r\n        }\r\n        const idTokenClaims = response.id_token\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.extractTokenClaims(response.id_token, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__.base64Decode)\r\n            : undefined;\r\n        const authorityOptions = {\r\n            protocolMode: this.config.auth.protocolMode,\r\n            knownAuthorities: this.config.auth.knownAuthorities,\r\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n            authorityMetadata: this.config.auth.authorityMetadata,\r\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\r\n        };\r\n        const authority = request.authority\r\n            ? new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Authority(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Authority.generateAuthority(request.authority, request.azureCloudOptions), this.config.system.networkClient, this.storage, authorityOptions, this.logger, request.correlationId || (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_5__.createNewGuid)())\r\n            : undefined;\r\n        const cacheRecordAccount = this.loadAccount(request, options.clientInfo || response.client_info || \"\", idTokenClaims, authority);\r\n        const idToken = this.loadIdToken(response, cacheRecordAccount.homeAccountId, cacheRecordAccount.environment, cacheRecordAccount.realm);\r\n        const accessToken = this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, cacheRecordAccount.environment, cacheRecordAccount.realm, options);\r\n        const refreshToken = this.loadRefreshToken(response, cacheRecordAccount.homeAccountId, cacheRecordAccount.environment);\r\n        return this.generateAuthenticationResult(request, {\r\n            account: cacheRecordAccount,\r\n            idToken,\r\n            accessToken,\r\n            refreshToken,\r\n        }, idTokenClaims, authority);\r\n    }\r\n    /**\r\n     * Helper function to load account to msal-browser cache\r\n     * @param idToken\r\n     * @param environment\r\n     * @param clientInfo\r\n     * @param authorityType\r\n     * @param requestHomeAccountId\r\n     * @returns `AccountEntity`\r\n     */\r\n    loadAccount(request, clientInfo, idTokenClaims, authority) {\r\n        this.logger.verbose(\"TokenCache - loading account\");\r\n        if (request.account) {\r\n            const accountEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.AccountEntity.createFromAccountInfo(request.account);\r\n            this.storage.setAccount(accountEntity);\r\n            return accountEntity;\r\n        }\r\n        else if (!authority || (!clientInfo && !idTokenClaims)) {\r\n            this.logger.error(\"TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead.\");\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.unableToLoadToken);\r\n        }\r\n        const homeAccountId = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.AccountEntity.generateHomeAccountId(clientInfo, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\r\n        const claimsTenantId = idTokenClaims?.tid;\r\n        const cachedAccount = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.buildAccountToCache)(this.storage, authority, homeAccountId, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__.base64Decode, idTokenClaims, clientInfo, authority.hostnameAndPort, claimsTenantId, undefined, // authCodePayload\r\n        undefined, // nativeAccountId\r\n        this.logger);\r\n        this.storage.setAccount(cachedAccount);\r\n        return cachedAccount;\r\n    }\r\n    /**\r\n     * Helper function to load id tokens to msal-browser cache\r\n     * @param idToken\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param tenantId\r\n     * @returns `IdTokenEntity`\r\n     */\r\n    loadIdToken(response, homeAccountId, environment, tenantId) {\r\n        if (!response.id_token) {\r\n            this.logger.verbose(\"TokenCache - no id token found in response\");\r\n            return null;\r\n        }\r\n        this.logger.verbose(\"TokenCache - loading id token\");\r\n        const idTokenEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.createIdTokenEntity(homeAccountId, environment, response.id_token, this.config.auth.clientId, tenantId);\r\n        this.storage.setIdTokenCredential(idTokenEntity);\r\n        return idTokenEntity;\r\n    }\r\n    /**\r\n     * Helper function to load access tokens to msal-browser cache\r\n     * @param request\r\n     * @param response\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param tenantId\r\n     * @returns `AccessTokenEntity`\r\n     */\r\n    loadAccessToken(request, response, homeAccountId, environment, tenantId, options) {\r\n        if (!response.access_token) {\r\n            this.logger.verbose(\"TokenCache - no access token found in response\");\r\n            return null;\r\n        }\r\n        else if (!response.expires_in) {\r\n            this.logger.error(\"TokenCache - no expiration set on the access token. Cannot add it to the cache.\");\r\n            return null;\r\n        }\r\n        else if (!response.scope &&\r\n            (!request.scopes || !request.scopes.length)) {\r\n            this.logger.error(\"TokenCache - scopes not specified in the request or response. Cannot add token to the cache.\");\r\n            return null;\r\n        }\r\n        this.logger.verbose(\"TokenCache - loading access token\");\r\n        const scopes = response.scope\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.ScopeSet.fromString(response.scope)\r\n            : new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.ScopeSet(request.scopes);\r\n        const expiresOn = options.expiresOn ||\r\n            response.expires_in + new Date().getTime() / 1000;\r\n        const extendedExpiresOn = options.extendedExpiresOn ||\r\n            (response.ext_expires_in || response.expires_in) +\r\n                new Date().getTime() / 1000;\r\n        const accessTokenEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.createAccessTokenEntity(homeAccountId, environment, response.access_token, this.config.auth.clientId, tenantId, scopes.printScopes(), expiresOn, extendedExpiresOn, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__.base64Decode);\r\n        this.storage.setAccessTokenCredential(accessTokenEntity);\r\n        return accessTokenEntity;\r\n    }\r\n    /**\r\n     * Helper function to load refresh tokens to msal-browser cache\r\n     * @param request\r\n     * @param response\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @returns `RefreshTokenEntity`\r\n     */\r\n    loadRefreshToken(response, homeAccountId, environment) {\r\n        if (!response.refresh_token) {\r\n            this.logger.verbose(\"TokenCache - no refresh token found in response\");\r\n            return null;\r\n        }\r\n        this.logger.verbose(\"TokenCache - loading refresh token\");\r\n        const refreshTokenEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.createRefreshTokenEntity(homeAccountId, environment, response.refresh_token, this.config.auth.clientId, response.foci, undefined, // userAssertionHash\r\n        response.refresh_token_expires_in);\r\n        this.storage.setRefreshTokenCredential(refreshTokenEntity);\r\n        return refreshTokenEntity;\r\n    }\r\n    /**\r\n     * Helper function to generate an `AuthenticationResult` for the result.\r\n     * @param request\r\n     * @param idTokenObj\r\n     * @param cacheRecord\r\n     * @param authority\r\n     * @returns `AuthenticationResult`\r\n     */\r\n    generateAuthenticationResult(request, cacheRecord, idTokenClaims, authority) {\r\n        let accessToken = \"\";\r\n        let responseScopes = [];\r\n        let expiresOn = null;\r\n        let extExpiresOn;\r\n        if (cacheRecord?.accessToken) {\r\n            accessToken = cacheRecord.accessToken.secret;\r\n            responseScopes = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\r\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\r\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\r\n        }\r\n        const accountEntity = cacheRecord.account;\r\n        return {\r\n            authority: authority ? authority.canonicalAuthority : \"\",\r\n            uniqueId: cacheRecord.account.localAccountId,\r\n            tenantId: cacheRecord.account.realm,\r\n            scopes: responseScopes,\r\n            account: accountEntity.getAccountInfo(),\r\n            idToken: cacheRecord.idToken?.secret || \"\",\r\n            idTokenClaims: idTokenClaims || {},\r\n            accessToken: accessToken,\r\n            fromCache: true,\r\n            expiresOn: expiresOn,\r\n            correlationId: request.correlationId || \"\",\r\n            requestId: \"\",\r\n            extExpiresOn: extExpiresOn,\r\n            familyId: cacheRecord.refreshToken?.familyId || \"\",\r\n            tokenType: cacheRecord?.accessToken?.tokenType || \"\",\r\n            state: request.state || \"\",\r\n            cloudGraphHostName: accountEntity.cloudGraphHostName || \"\",\r\n            msGraphHost: accountEntity.msGraphHost || \"\",\r\n            fromNativeBroker: false,\r\n        };\r\n    }\r\n}\n\n\n//# sourceMappingURL=TokenCache.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/config/Configuration.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/config/Configuration.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_IFRAME_TIMEOUT_MS: () => (/* binding */ DEFAULT_IFRAME_TIMEOUT_MS),\n/* harmony export */   DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS: () => (/* binding */ DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS),\n/* harmony export */   DEFAULT_POPUP_TIMEOUT_MS: () => (/* binding */ DEFAULT_POPUP_TIMEOUT_MS),\n/* harmony export */   DEFAULT_REDIRECT_TIMEOUT_MS: () => (/* binding */ DEFAULT_REDIRECT_TIMEOUT_MS),\n/* harmony export */   buildConfiguration: () => (/* binding */ buildConfiguration)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _navigation_NavigationClient_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../navigation/NavigationClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs\");\n/* harmony import */ var _network_FetchClient_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../network/FetchClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Default timeout for popup windows and iframes in milliseconds\r\nconst DEFAULT_POPUP_TIMEOUT_MS = 60000;\r\nconst DEFAULT_IFRAME_TIMEOUT_MS = 10000;\r\nconst DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\r\nconst DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth\r\n * @param cache\r\n * @param system\r\n *\r\n * @returns Configuration object\r\n */\r\nfunction buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem, telemetry: userInputTelemetry, }, isBrowserEnvironment) {\r\n    // Default auth options for browser\r\n    const DEFAULT_AUTH_OPTIONS = {\r\n        clientId: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        authority: `${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_AUTHORITY}`,\r\n        knownAuthorities: [],\r\n        cloudDiscoveryMetadata: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        authorityMetadata: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        redirectUri: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        postLogoutRedirectUri: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        navigateToLoginRequestUrl: true,\r\n        clientCapabilities: [],\r\n        protocolMode: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ProtocolMode.AAD,\r\n        OIDCOptions: {\r\n            serverResponseType: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ServerResponseType.FRAGMENT,\r\n            defaultScopes: [\r\n                _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.OPENID_SCOPE,\r\n                _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.PROFILE_SCOPE,\r\n                _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.OFFLINE_ACCESS_SCOPE,\r\n            ],\r\n        },\r\n        azureCloudOptions: {\r\n            azureCloudInstance: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.AzureCloudInstance.None,\r\n            tenant: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        },\r\n        skipAuthorityMetadataCache: false,\r\n        supportsNestedAppAuth: false,\r\n        instanceAware: false,\r\n    };\r\n    // Default cache options for browser\r\n    const DEFAULT_CACHE_OPTIONS = {\r\n        cacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheLocation.SessionStorage,\r\n        temporaryCacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheLocation.SessionStorage,\r\n        storeAuthStateInCookie: false,\r\n        secureCookies: false,\r\n        // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\r\n        cacheMigrationEnabled: userInputCache &&\r\n            userInputCache.cacheLocation === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserCacheLocation.LocalStorage\r\n            ? true\r\n            : false,\r\n        claimsBasedCachingEnabled: false,\r\n    };\r\n    // Default logger options for browser\r\n    const DEFAULT_LOGGER_OPTIONS = {\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        loggerCallback: () => {\r\n            // allow users to not set logger call back\r\n        },\r\n        logLevel: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.LogLevel.Info,\r\n        piiLoggingEnabled: false,\r\n    };\r\n    // Default system options for browser\r\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS = {\r\n        ..._azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.DEFAULT_SYSTEM_OPTIONS,\r\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\r\n        networkClient: isBrowserEnvironment\r\n            ? new _network_FetchClient_mjs__WEBPACK_IMPORTED_MODULE_6__.FetchClient()\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.StubbedNetworkModule,\r\n        navigationClient: new _navigation_NavigationClient_mjs__WEBPACK_IMPORTED_MODULE_8__.NavigationClient(),\r\n        loadFrameTimeout: 0,\r\n        // If loadFrameTimeout is provided, use that as default.\r\n        windowHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\r\n        iframeHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\r\n        navigateFrameWait: 0,\r\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\r\n        asyncPopups: false,\r\n        allowRedirectInIframe: false,\r\n        allowNativeBroker: false,\r\n        nativeBrokerHandshakeTimeout: userInputSystem?.nativeBrokerHandshakeTimeout ||\r\n            DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\r\n        pollIntervalMilliseconds: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\r\n    };\r\n    const providedSystemOptions = {\r\n        ...DEFAULT_BROWSER_SYSTEM_OPTIONS,\r\n        ...userInputSystem,\r\n        loggerOptions: userInputSystem?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\r\n    };\r\n    const DEFAULT_TELEMETRY_OPTIONS = {\r\n        application: {\r\n            appName: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n            appVersion: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        },\r\n        client: new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.StubPerformanceClient(),\r\n    };\r\n    // Throw an error if user has set OIDCOptions without being in OIDC protocol mode\r\n    if (userInputAuth?.protocolMode !== _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ProtocolMode.OIDC &&\r\n        userInputAuth?.OIDCOptions) {\r\n        const logger = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Logger(providedSystemOptions.loggerOptions);\r\n        logger.warning(JSON.stringify((0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.cannotSetOIDCOptions)));\r\n    }\r\n    // Throw an error if user has set allowNativeBroker to true without being in AAD protocol mode\r\n    if (userInputAuth?.protocolMode &&\r\n        userInputAuth.protocolMode !== _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ProtocolMode.AAD &&\r\n        providedSystemOptions?.allowNativeBroker) {\r\n        throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.cannotAllowNativeBroker);\r\n    }\r\n    const overlayedConfig = {\r\n        auth: {\r\n            ...DEFAULT_AUTH_OPTIONS,\r\n            ...userInputAuth,\r\n            OIDCOptions: {\r\n                ...DEFAULT_AUTH_OPTIONS.OIDCOptions,\r\n                ...userInputAuth?.OIDCOptions,\r\n            },\r\n        },\r\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\r\n        system: providedSystemOptions,\r\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry },\r\n    };\r\n    return overlayedConfig;\r\n}\n\n\n//# sourceMappingURL=Configuration.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/config/Configuration.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createController: () => (/* binding */ createController),\n/* harmony export */   createV3Controller: () => (/* binding */ createV3Controller)\n/* harmony export */ });\n/* harmony import */ var _operatingcontext_NestedAppOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../operatingcontext/NestedAppOperatingContext.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/NestedAppOperatingContext.mjs\");\n/* harmony import */ var _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../operatingcontext/StandardOperatingContext.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs\");\n/* harmony import */ var _StandardController_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StandardController.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs\");\n/* harmony import */ var _NestedAppAuthController_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NestedAppAuthController.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nasync function createV3Controller(config, request) {\r\n    const standard = new _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardOperatingContext(config);\r\n    await standard.initialize();\r\n    return _StandardController_mjs__WEBPACK_IMPORTED_MODULE_1__.StandardController.createController(standard, request);\r\n}\r\nasync function createController(config) {\r\n    const standard = new _operatingcontext_StandardOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardOperatingContext(config);\r\n    const nestedApp = new _operatingcontext_NestedAppOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_2__.NestedAppOperatingContext(config);\r\n    const operatingContexts = [standard.initialize(), nestedApp.initialize()];\r\n    await Promise.all(operatingContexts);\r\n    if (nestedApp.isAvailable() && config.auth.supportsNestedAppAuth) {\r\n        return _NestedAppAuthController_mjs__WEBPACK_IMPORTED_MODULE_3__.NestedAppAuthController.createController(nestedApp);\r\n    }\r\n    else if (standard.isAvailable()) {\r\n        return _StandardController_mjs__WEBPACK_IMPORTED_MODULE_1__.StandardController.createController(standard);\r\n    }\r\n    else {\r\n        // Since neither of the actual operating contexts are available keep the UnknownOperatingContextController\r\n        return null;\r\n    }\r\n}\n\n\n//# sourceMappingURL=ControllerFactory.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NvbnRyb2xsZXJzL0NvbnRyb2xsZXJGYWN0b3J5Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2lGO0FBQ0Y7QUFDOUI7QUFDVTs7QUFFeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixvR0FBd0I7QUFDakQ7QUFDQSxXQUFXLHVFQUFrQjtBQUM3QjtBQUNBO0FBQ0EseUJBQXlCLG9HQUF3QjtBQUNqRCwwQkFBMEIsc0dBQXlCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUZBQXVCO0FBQ3RDO0FBQ0E7QUFDQSxlQUFlLHVFQUFrQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWdEO0FBQ2hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvY29udHJvbGxlcnMvQ29udHJvbGxlckZhY3RvcnkubWpzP2VkOWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjQuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBOZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0IH0gZnJvbSAnLi4vb3BlcmF0aW5nY29udGV4dC9OZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0Lm1qcyc7XG5pbXBvcnQgeyBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQgfSBmcm9tICcuLi9vcGVyYXRpbmdjb250ZXh0L1N0YW5kYXJkT3BlcmF0aW5nQ29udGV4dC5tanMnO1xuaW1wb3J0IHsgU3RhbmRhcmRDb250cm9sbGVyIH0gZnJvbSAnLi9TdGFuZGFyZENvbnRyb2xsZXIubWpzJztcbmltcG9ydCB7IE5lc3RlZEFwcEF1dGhDb250cm9sbGVyIH0gZnJvbSAnLi9OZXN0ZWRBcHBBdXRoQ29udHJvbGxlci5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlVjNDb250cm9sbGVyKGNvbmZpZywgcmVxdWVzdCkge1xyXG4gICAgY29uc3Qgc3RhbmRhcmQgPSBuZXcgU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0KGNvbmZpZyk7XHJcbiAgICBhd2FpdCBzdGFuZGFyZC5pbml0aWFsaXplKCk7XHJcbiAgICByZXR1cm4gU3RhbmRhcmRDb250cm9sbGVyLmNyZWF0ZUNvbnRyb2xsZXIoc3RhbmRhcmQsIHJlcXVlc3QpO1xyXG59XHJcbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZUNvbnRyb2xsZXIoY29uZmlnKSB7XHJcbiAgICBjb25zdCBzdGFuZGFyZCA9IG5ldyBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQoY29uZmlnKTtcclxuICAgIGNvbnN0IG5lc3RlZEFwcCA9IG5ldyBOZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0KGNvbmZpZyk7XHJcbiAgICBjb25zdCBvcGVyYXRpbmdDb250ZXh0cyA9IFtzdGFuZGFyZC5pbml0aWFsaXplKCksIG5lc3RlZEFwcC5pbml0aWFsaXplKCldO1xyXG4gICAgYXdhaXQgUHJvbWlzZS5hbGwob3BlcmF0aW5nQ29udGV4dHMpO1xyXG4gICAgaWYgKG5lc3RlZEFwcC5pc0F2YWlsYWJsZSgpICYmIGNvbmZpZy5hdXRoLnN1cHBvcnRzTmVzdGVkQXBwQXV0aCkge1xyXG4gICAgICAgIHJldHVybiBOZXN0ZWRBcHBBdXRoQ29udHJvbGxlci5jcmVhdGVDb250cm9sbGVyKG5lc3RlZEFwcCk7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChzdGFuZGFyZC5pc0F2YWlsYWJsZSgpKSB7XHJcbiAgICAgICAgcmV0dXJuIFN0YW5kYXJkQ29udHJvbGxlci5jcmVhdGVDb250cm9sbGVyKHN0YW5kYXJkKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIC8vIFNpbmNlIG5laXRoZXIgb2YgdGhlIGFjdHVhbCBvcGVyYXRpbmcgY29udGV4dHMgYXJlIGF2YWlsYWJsZSBrZWVwIHRoZSBVbmtub3duT3BlcmF0aW5nQ29udGV4dENvbnRyb2xsZXJcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBjcmVhdGVDb250cm9sbGVyLCBjcmVhdGVWM0NvbnRyb2xsZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNvbnRyb2xsZXJGYWN0b3J5Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NestedAppAuthController: () => (/* binding */ NestedAppAuthController)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/CryptoOps.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\");\n/* harmony import */ var _naa_mapping_NestedAppAuthAdapter_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../naa/mapping/NestedAppAuthAdapter.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/naa/mapping/NestedAppAuthAdapter.mjs\");\n/* harmony import */ var _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../error/NestedAppAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/NestedAppAuthError.mjs\");\n/* harmony import */ var _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../event/EventHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../event/EventType.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../cache/BrowserCacheManager.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs\");\n/* harmony import */ var _cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../cache/AccountManager.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/cache/AccountManager.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NestedAppAuthController {\r\n    constructor(operatingContext) {\r\n        this.operatingContext = operatingContext;\r\n        const proxy = this.operatingContext.getBridgeProxy();\r\n        if (proxy !== undefined) {\r\n            this.bridgeProxy = proxy;\r\n        }\r\n        else {\r\n            throw new Error(\"unexpected: bridgeProxy is undefined\");\r\n        }\r\n        // Set the configuration.\r\n        this.config = operatingContext.getConfig();\r\n        // Initialize logger\r\n        this.logger = this.operatingContext.getLogger();\r\n        // Initialize performance client\r\n        this.performanceClient = this.config.telemetry.client;\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = operatingContext.isBrowserEnvironment()\r\n            ? new _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_0__.CryptoOps(this.logger, this.performanceClient)\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_CRYPTO_IMPLEMENTATION;\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = this.operatingContext.isBrowserEnvironment()\r\n            ? new _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger, (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.buildStaticAuthorityOptions)(this.config.auth))\r\n            : (0,_cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_BROWSER_CACHE_MANAGER)(this.config.auth.clientId, this.logger);\r\n        this.eventHandler = new _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_4__.EventHandler(this.logger, this.browserCrypto);\r\n        this.nestedAppAuthAdapter = new _naa_mapping_NestedAppAuthAdapter_mjs__WEBPACK_IMPORTED_MODULE_5__.NestedAppAuthAdapter(this.config.auth.clientId, this.config.auth.clientCapabilities, this.browserCrypto, this.logger);\r\n        // Set the active account if available\r\n        const accountContext = this.bridgeProxy.getAccountContext();\r\n        if (accountContext) {\r\n            const cachedAccount = (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_6__.getAccount)(accountContext, this.logger, this.browserStorage);\r\n            (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_6__.setActiveAccount)(cachedAccount, this.browserStorage);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the event handler instance\r\n     * @returns EventHandler\r\n     */\r\n    getEventHandler() {\r\n        return this.eventHandler;\r\n    }\r\n    /**\r\n     * Factory function to create a new instance of NestedAppAuthController\r\n     * @param operatingContext\r\n     * @returns Promise<IController>\r\n     */\r\n    static async createController(operatingContext) {\r\n        const controller = new NestedAppAuthController(operatingContext);\r\n        return Promise.resolve(controller);\r\n    }\r\n    /**\r\n     * Specific implementation of initialize function for NestedAppAuthController\r\n     * @returns\r\n     */\r\n    initialize() {\r\n        // do nothing not required by this controller\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Validate the incoming request and add correlationId if not present\r\n     * @param request\r\n     * @returns\r\n     */\r\n    ensureValidRequest(request) {\r\n        if (request?.correlationId) {\r\n            return request;\r\n        }\r\n        return {\r\n            ...request,\r\n            correlationId: this.browserCrypto.createNewGuid(),\r\n        };\r\n    }\r\n    /**\r\n     * Internal implementation of acquireTokenInteractive flow\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async acquireTokenInteractive(request) {\r\n        const validRequest = this.ensureValidRequest(request);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_8__.InteractionType.Popup, validRequest);\r\n        const atPopupMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.PerformanceEvents.AcquireTokenPopup, validRequest.correlationId);\r\n        atPopupMeasurement?.add({ nestedAppAuthRequest: true });\r\n        try {\r\n            const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(validRequest);\r\n            const reqTimestamp = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.nowSeconds();\r\n            const response = await this.bridgeProxy.getTokenInteractive(naaRequest);\r\n            const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response, reqTimestamp);\r\n            // cache the tokens in the response\r\n            await this.hydrateCache(result, request);\r\n            this.browserStorage.setActiveAccount(result.account);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_8__.InteractionType.Popup, result);\r\n            atPopupMeasurement.add({\r\n                accessTokenSize: result.accessToken.length,\r\n                idTokenSize: result.idToken.length,\r\n            });\r\n            atPopupMeasurement.end({\r\n                success: true,\r\n                requestId: result.requestId,\r\n            });\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_8__.InteractionType.Popup, null, e);\r\n            atPopupMeasurement.end({\r\n                success: false,\r\n            }, e);\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Internal implementation of acquireTokenSilent flow\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async acquireTokenSilentInternal(request) {\r\n        const validRequest = this.ensureValidRequest(request);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_8__.InteractionType.Silent, validRequest);\r\n        // Look for tokens in the cache first\r\n        const result = await this.acquireTokenFromCache(validRequest);\r\n        if (result) {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_8__.InteractionType.Silent, result);\r\n            return result;\r\n        }\r\n        // proceed with acquiring tokens via the host\r\n        const ssoSilentMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.PerformanceEvents.SsoSilent, validRequest.correlationId);\r\n        ssoSilentMeasurement?.increment({\r\n            visibilityChangeCount: 0,\r\n        });\r\n        ssoSilentMeasurement?.add({\r\n            nestedAppAuthRequest: true,\r\n        });\r\n        try {\r\n            const naaRequest = this.nestedAppAuthAdapter.toNaaTokenRequest(validRequest);\r\n            const reqTimestamp = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.nowSeconds();\r\n            const response = await this.bridgeProxy.getTokenSilent(naaRequest);\r\n            const result = this.nestedAppAuthAdapter.fromNaaTokenResponse(naaRequest, response, reqTimestamp);\r\n            // cache the tokens in the response\r\n            await this.hydrateCache(result, request);\r\n            this.browserStorage.setActiveAccount(result.account);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_8__.InteractionType.Silent, result);\r\n            ssoSilentMeasurement?.add({\r\n                accessTokenSize: result.accessToken.length,\r\n                idTokenSize: result.idToken.length,\r\n            });\r\n            ssoSilentMeasurement?.end({\r\n                success: true,\r\n                requestId: result.requestId,\r\n            });\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            const error = this.nestedAppAuthAdapter.fromBridgeError(e);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_8__.InteractionType.Silent, null, e);\r\n            ssoSilentMeasurement?.end({\r\n                success: false,\r\n            }, e);\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * acquires tokens from cache\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async acquireTokenFromCache(request) {\r\n        const atsMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.PerformanceEvents.AcquireTokenSilent, request.correlationId);\r\n        atsMeasurement?.add({\r\n            nestedAppAuthRequest: true,\r\n        });\r\n        const result = await this.acquireTokenFromCacheInternal(request);\r\n        if (result) {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_8__.InteractionType.Silent, result);\r\n            atsMeasurement?.add({\r\n                accessTokenSize: result?.accessToken.length,\r\n                idTokenSize: result?.idToken.length,\r\n            });\r\n            atsMeasurement?.end({\r\n                success: true,\r\n            });\r\n            return result;\r\n        }\r\n        this.logger.error(\"Cached tokens are not found for the account, proceeding with silent token request.\");\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_7__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_8__.InteractionType.Silent, null);\r\n        atsMeasurement?.end({\r\n            success: false,\r\n        });\r\n        return null;\r\n    }\r\n    /**\r\n     *\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async acquireTokenFromCacheInternal(request) {\r\n        const accountContext = this.bridgeProxy.getAccountContext();\r\n        let currentAccount = null;\r\n        if (accountContext) {\r\n            const hubAccount = (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_6__.getAccount)(accountContext, this.logger, this.browserStorage);\r\n            // always prioritize for hub account context, the reqirement of `request.account` will be removed soon\r\n            currentAccount = hubAccount || request.account;\r\n        }\r\n        // fall back to brokering if no cached account is found\r\n        if (!currentAccount) {\r\n            this.logger.verbose(\"No active account found, falling back to the host\");\r\n            return Promise.resolve(null);\r\n        }\r\n        this.logger.verbose(\"active account found, attempting to acquire token silently\");\r\n        const authRequest = {\r\n            ...request,\r\n            correlationId: request.correlationId || this.browserCrypto.createNewGuid(),\r\n            authority: request.authority || currentAccount.environment,\r\n            scopes: request.scopes?.length\r\n                ? request.scopes\r\n                : [..._azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.OIDC_DEFAULT_SCOPES],\r\n        };\r\n        // fetch access token and check for expiry\r\n        const tokenKeys = this.browserStorage.getTokenKeys();\r\n        const cachedAccessToken = this.browserStorage.getAccessToken(currentAccount, authRequest, tokenKeys, currentAccount.tenantId, this.performanceClient, authRequest.correlationId);\r\n        // If there is no access token, log it and return null\r\n        if (!cachedAccessToken) {\r\n            this.logger.verbose(\"No cached access token found\");\r\n            return Promise.resolve(null);\r\n            // If access token has expired, remove the token from cache and return null\r\n        }\r\n        else if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.wasClockTurnedBack(cachedAccessToken.cachedAt) ||\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.isTokenExpired(cachedAccessToken.expiresOn, this.config.system.tokenRenewalOffsetSeconds)) {\r\n            this.logger.verbose(\"Cached access token has expired, deleting all related tokens from cache\");\r\n            const accountEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_12__.AccountEntity.createFromAccountInfo(currentAccount);\r\n            await this.browserStorage.removeAccountContext(accountEntity);\r\n            return Promise.resolve(null);\r\n        }\r\n        const cachedIdToken = this.browserStorage.getIdToken(currentAccount, tokenKeys, currentAccount.tenantId, this.performanceClient, authRequest.correlationId);\r\n        if (!cachedIdToken) {\r\n            this.logger.verbose(\"No cached id token found\");\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.nestedAppAuthAdapter.toAuthenticationResultFromCache(currentAccount, cachedIdToken, cachedAccessToken, authRequest, authRequest.correlationId);\r\n    }\r\n    /**\r\n     * acquireTokenPopup flow implementation\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async acquireTokenPopup(request) {\r\n        return this.acquireTokenInteractive(request);\r\n    }\r\n    /**\r\n     * acquireTokenRedirect flow is not supported in nested app auth\r\n     * @param request\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    acquireTokenRedirect(request) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    /**\r\n     * acquireTokenSilent flow implementation\r\n     * @param silentRequest\r\n     * @returns\r\n     */\r\n    async acquireTokenSilent(silentRequest) {\r\n        return this.acquireTokenSilentInternal(silentRequest);\r\n    }\r\n    /**\r\n     * Hybrid flow is not currently supported in nested app auth\r\n     * @param request\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    acquireTokenByCode(request // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    /**\r\n     * acquireTokenNative flow is not currently supported in nested app auth\r\n     * @param request\r\n     * @param apiId\r\n     * @param accountId\r\n     */\r\n    acquireTokenNative(request, apiId, // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    accountId // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    /**\r\n     * acquireTokenByRefreshToken flow is not currently supported in nested app auth\r\n     * @param commonRequest\r\n     * @param silentRequest\r\n     */\r\n    acquireTokenByRefreshToken(commonRequest, // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    silentRequest // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     */\r\n    addEventCallback(callback) {\r\n        return this.eventHandler.addEventCallback(callback);\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        this.eventHandler.removeEventCallback(callbackId);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    addPerformanceCallback(callback) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    removePerformanceCallback(callbackId) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    enableAccountStorageEvents() {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    disableAccountStorageEvents() {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    // #region Account APIs\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_6__.getAllAccounts)(this.logger, this.browserStorage, this.isBrowserEnv(), accountFilter);\r\n    }\r\n    /**\r\n     * Returns the first account found in the cache that matches the account filter passed in.\r\n     * @param accountFilter\r\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n     */\r\n    getAccount(accountFilter) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_6__.getAccount)(accountFilter, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param username\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByUsername(username) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_6__.getAccountByUsername)(username, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByHomeId(homeAccountId) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_6__.getAccountByHomeId)(homeAccountId, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByLocalId(localAccountId) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_6__.getAccountByLocalId)(localAccountId, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        /*\r\n         * StandardController uses this to allow the developer to set the active account\r\n         * in the nested app auth scenario the active account is controlled by the app hosting the nested app\r\n         */\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_6__.setActiveAccount)(account, this.browserStorage);\r\n    }\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount() {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_6__.getActiveAccount)(this.browserStorage);\r\n    }\r\n    // #endregion\r\n    handleRedirectPromise(hash // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        return Promise.resolve(null);\r\n    }\r\n    loginPopup(request // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        return this.acquireTokenInteractive(request || _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_8__.DEFAULT_REQUEST);\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    loginRedirect(request) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    logout(logoutRequest) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    logoutRedirect(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    logoutPopup(logoutRequest // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    ) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    ssoSilent(\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    request) {\r\n        return this.acquireTokenSilentInternal(request);\r\n    }\r\n    getTokenCache() {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger) {\r\n        this.logger = logger;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    initializeWrapperLibrary(sku, version) {\r\n        /*\r\n         * Standard controller uses this to set the sku and version of the wrapper library in the storage\r\n         * we do nothing here\r\n         */\r\n        return;\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    setNavigationClient(navigationClient) {\r\n        this.logger.warning(\"setNavigationClient is not supported in nested app auth\");\r\n    }\r\n    getConfiguration() {\r\n        return this.config;\r\n    }\r\n    isBrowserEnv() {\r\n        return this.operatingContext.isBrowserEnvironment();\r\n    }\r\n    getBrowserCrypto() {\r\n        return this.browserCrypto;\r\n    }\r\n    getPerformanceClient() {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    getRedirectResponse() {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    async clearCache(logoutRequest) {\r\n        throw _error_NestedAppAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NestedAppAuthError.createUnsupportedError();\r\n    }\r\n    async hydrateCache(result, request) {\r\n        this.logger.verbose(\"hydrateCache called\");\r\n        const accountEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_12__.AccountEntity.createFromAccountInfo(result.account, result.cloudGraphHostName, result.msGraphHost);\r\n        this.browserStorage.setAccount(accountEntity);\r\n        return this.browserStorage.hydrateCache(result, request);\r\n    }\r\n}\n\n\n//# sourceMappingURL=NestedAppAuthController.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/controllers/NestedAppAuthController.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardController: () => (/* binding */ StandardController)\n/* harmony export */ });\n/* harmony import */ var _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../crypto/CryptoOps.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\");\n/* harmony import */ var _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../cache/BrowserCacheManager.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs\");\n/* harmony import */ var _cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../cache/AccountManager.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/cache/AccountManager.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../event/EventType.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../event/EventHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs\");\n/* harmony import */ var _interaction_client_PopupClient_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../interaction_client/PopupClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs\");\n/* harmony import */ var _interaction_client_RedirectClient_mjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../interaction_client/RedirectClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs\");\n/* harmony import */ var _interaction_client_SilentIframeClient_mjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../interaction_client/SilentIframeClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs\");\n/* harmony import */ var _interaction_client_SilentRefreshClient_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../interaction_client/SilentRefreshClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs\");\n/* harmony import */ var _cache_TokenCache_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cache/TokenCache.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs\");\n/* harmony import */ var _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../interaction_client/NativeInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../error/NativeAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\");\n/* harmony import */ var _interaction_client_SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../interaction_client/SilentCacheClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs\");\n/* harmony import */ var _interaction_client_SilentAuthCodeClient_mjs__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../interaction_client/SilentAuthCodeClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../request/RequestHelpers.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction getAccountType(account) {\r\n    const idTokenClaims = account?.idTokenClaims;\r\n    if (idTokenClaims?.tfp || idTokenClaims?.acr) {\r\n        return \"B2C\";\r\n    }\r\n    if (!idTokenClaims?.tid) {\r\n        return undefined;\r\n    }\r\n    else if (idTokenClaims?.tid === \"9188040d-6c67-4c5b-b112-36a304b66dad\") {\r\n        return \"MSA\";\r\n    }\r\n    return \"AAD\";\r\n}\r\nfunction preflightCheck(initialized, performanceEvent) {\r\n    try {\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.preflightCheck)(initialized);\r\n    }\r\n    catch (e) {\r\n        performanceEvent.end({ success: false }, e);\r\n        throw e;\r\n    }\r\n}\r\nclass StandardController {\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param configuration Object for the MSAL PublicClientApplication instance\r\n     */\r\n    constructor(operatingContext) {\r\n        this.operatingContext = operatingContext;\r\n        this.isBrowserEnvironment =\r\n            this.operatingContext.isBrowserEnvironment();\r\n        // Set the configuration.\r\n        this.config = operatingContext.getConfig();\r\n        this.initialized = false;\r\n        // Initialize logger\r\n        this.logger = this.operatingContext.getLogger();\r\n        // Initialize the network module class.\r\n        this.networkClient = this.config.system.networkClient;\r\n        // Initialize the navigation client class.\r\n        this.navigationClient = this.config.system.navigationClient;\r\n        // Initialize redirectResponse Map\r\n        this.redirectResponse = new Map();\r\n        // Initial hybrid spa map\r\n        this.hybridAuthCodeResponses = new Map();\r\n        // Initialize performance client\r\n        this.performanceClient = this.config.telemetry.client;\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = this.isBrowserEnvironment\r\n            ? new _crypto_CryptoOps_mjs__WEBPACK_IMPORTED_MODULE_1__.CryptoOps(this.logger, this.performanceClient)\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_CRYPTO_IMPLEMENTATION;\r\n        this.eventHandler = new _event_EventHandler_mjs__WEBPACK_IMPORTED_MODULE_3__.EventHandler(this.logger, this.browserCrypto);\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = this.isBrowserEnvironment\r\n            ? new _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger, (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.buildStaticAuthorityOptions)(this.config.auth), this.performanceClient)\r\n            : (0,_cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_BROWSER_CACHE_MANAGER)(this.config.auth.clientId, this.logger);\r\n        // initialize in memory storage for native flows\r\n        const nativeCacheOptions = {\r\n            cacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserCacheLocation.MemoryStorage,\r\n            temporaryCacheLocation: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserCacheLocation.MemoryStorage,\r\n            storeAuthStateInCookie: false,\r\n            secureCookies: false,\r\n            cacheMigrationEnabled: false,\r\n            claimsBasedCachingEnabled: false,\r\n        };\r\n        this.nativeInternalStorage = new _cache_BrowserCacheManager_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserCacheManager(this.config.auth.clientId, nativeCacheOptions, this.browserCrypto, this.logger, undefined, this.performanceClient);\r\n        // Initialize the token cache\r\n        this.tokenCache = new _cache_TokenCache_mjs__WEBPACK_IMPORTED_MODULE_7__.TokenCache(this.config, this.browserStorage, this.logger, this.browserCrypto);\r\n        this.activeSilentTokenRequests = new Map();\r\n        // Register listener functions\r\n        this.trackPageVisibility = this.trackPageVisibility.bind(this);\r\n        // Register listener functions\r\n        this.trackPageVisibilityWithMeasurement =\r\n            this.trackPageVisibilityWithMeasurement.bind(this);\r\n    }\r\n    static async createController(operatingContext, request) {\r\n        const controller = new StandardController(operatingContext);\r\n        await controller.initialize(request);\r\n        return controller;\r\n    }\r\n    trackPageVisibility(correlationId) {\r\n        if (!correlationId) {\r\n            return;\r\n        }\r\n        this.logger.info(\"Perf: Visibility change detected\");\r\n        this.performanceClient.incrementFields({ visibilityChangeCount: 1 }, correlationId);\r\n    }\r\n    /**\r\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\r\n     * @param request {?InitializeApplicationRequest} correlation id\r\n     */\r\n    async initialize(request) {\r\n        this.logger.trace(\"initialize called\");\r\n        if (this.initialized) {\r\n            this.logger.info(\"initialize has already been called, exiting early.\");\r\n            return;\r\n        }\r\n        const initCorrelationId = request?.correlationId || this.getRequestCorrelationId();\r\n        const allowNativeBroker = this.config.system.allowNativeBroker;\r\n        const initMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.InitializeClientApplication, initCorrelationId);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.INITIALIZE_START);\r\n        if (allowNativeBroker) {\r\n            try {\r\n                this.nativeExtensionProvider =\r\n                    await _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeMessageHandler.createProvider(this.logger, this.config.system.nativeBrokerHandshakeTimeout, this.performanceClient);\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(e);\r\n            }\r\n        }\r\n        if (!this.config.cache.claimsBasedCachingEnabled) {\r\n            this.logger.verbose(\"Claims-based caching is disabled. Clearing the previous cache with claims\");\r\n            await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.ClearTokensAndKeysWithClaims, this.logger, this.performanceClient, initCorrelationId)(this.performanceClient, initCorrelationId);\r\n        }\r\n        this.initialized = true;\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.INITIALIZE_END);\r\n        initMeasurement.end({ allowNativeBroker, success: true });\r\n    }\r\n    // #region Redirect Flow\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\r\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    async handleRedirectPromise(hash) {\r\n        this.logger.verbose(\"handleRedirectPromise called\");\r\n        // Block token acquisition before initialize has been called\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.blockAPICallsBeforeInitialize)(this.initialized);\r\n        if (this.isBrowserEnvironment) {\r\n            /**\r\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\r\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\r\n             * several times concurrently.\r\n             */\r\n            const redirectResponseKey = hash || \"\";\r\n            let response = this.redirectResponse.get(redirectResponseKey);\r\n            if (typeof response === \"undefined\") {\r\n                response = this.handleRedirectPromiseInternal(hash);\r\n                this.redirectResponse.set(redirectResponseKey, response);\r\n                this.logger.verbose(\"handleRedirectPromise has been called for the first time, storing the promise\");\r\n            }\r\n            else {\r\n                this.logger.verbose(\"handleRedirectPromise has been called previously, returning the result from the first call\");\r\n            }\r\n            return response;\r\n        }\r\n        this.logger.verbose(\"handleRedirectPromise returns null, not browser environment\");\r\n        return null;\r\n    }\r\n    /**\r\n     * The internal details of handleRedirectPromise. This is separated out to a helper to allow handleRedirectPromise to memoize requests\r\n     * @param hash\r\n     * @returns\r\n     */\r\n    async handleRedirectPromiseInternal(hash) {\r\n        const loggedInAccounts = this.getAllAccounts();\r\n        const request = this.browserStorage.getCachedNativeRequest();\r\n        const useNative = request &&\r\n            _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider) &&\r\n            this.nativeExtensionProvider &&\r\n            !hash;\r\n        const correlationId = useNative\r\n            ? request?.correlationId\r\n            : this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.TemporaryCacheKeys.CORRELATION_ID, true) || \"\";\r\n        const rootMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenRedirect, correlationId);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.HANDLE_REDIRECT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Redirect);\r\n        let redirectResponse;\r\n        if (useNative && this.nativeExtensionProvider) {\r\n            this.logger.trace(\"handleRedirectPromise - acquiring token from native platform\");\r\n            const nativeClient = new _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_12__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.ApiId.handleRedirectPromise, this.performanceClient, this.nativeExtensionProvider, request.accountId, this.nativeInternalStorage, request.correlationId);\r\n            redirectResponse = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(nativeClient.handleRedirectPromise.bind(nativeClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.HandleNativeRedirectPromiseMeasurement, this.logger, this.performanceClient, rootMeasurement.event.correlationId)(this.performanceClient, rootMeasurement.event.correlationId);\r\n        }\r\n        else {\r\n            this.logger.trace(\"handleRedirectPromise - acquiring token from web flow\");\r\n            const redirectClient = this.createRedirectClient(correlationId);\r\n            redirectResponse = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(redirectClient.handleRedirectPromise.bind(redirectClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.HandleRedirectPromiseMeasurement, this.logger, this.performanceClient, rootMeasurement.event.correlationId)(hash, rootMeasurement);\r\n        }\r\n        return redirectResponse\r\n            .then((result) => {\r\n            if (result) {\r\n                // Emit login event if number of accounts change\r\n                const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\r\n                if (isLoggingIn) {\r\n                    this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.LOGIN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Redirect, result);\r\n                    this.logger.verbose(\"handleRedirectResponse returned result, login success\");\r\n                }\r\n                else {\r\n                    this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Redirect, result);\r\n                    this.logger.verbose(\"handleRedirectResponse returned result, acquire token success\");\r\n                }\r\n                rootMeasurement.end({\r\n                    success: true,\r\n                    accountType: getAccountType(result.account),\r\n                });\r\n            }\r\n            else {\r\n                /*\r\n                 * Instrument an event only if an error code is set. Otherwise, discard it when the redirect response\r\n                 * is empty and the error code is missing.\r\n                 */\r\n                if (rootMeasurement.event.errorCode) {\r\n                    rootMeasurement.end({ success: false });\r\n                }\r\n                else {\r\n                    rootMeasurement.discard();\r\n                }\r\n            }\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.HANDLE_REDIRECT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Redirect);\r\n            return result;\r\n        })\r\n            .catch((e) => {\r\n            const eventError = e;\r\n            // Emit login event if there is an account\r\n            if (loggedInAccounts.length > 0) {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Redirect, null, eventError);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.LOGIN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Redirect, null, eventError);\r\n            }\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.HANDLE_REDIRECT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Redirect);\r\n            rootMeasurement.end({\r\n                success: false,\r\n            }, eventError);\r\n            throw e;\r\n        });\r\n    }\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    async acquireTokenRedirect(request) {\r\n        // Preflight request\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\r\n        const atrMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenPreRedirect, correlationId);\r\n        atrMeasurement.add({\r\n            accountType: getAccountType(request.account),\r\n            scenarioId: request.scenarioId,\r\n        });\r\n        // Override on request only if set, as onRedirectNavigate field is deprecated\r\n        const onRedirectNavigateCb = request.onRedirectNavigate;\r\n        if (onRedirectNavigateCb) {\r\n            request.onRedirectNavigate = (url) => {\r\n                const navigate = typeof onRedirectNavigateCb === \"function\"\r\n                    ? onRedirectNavigateCb(url)\r\n                    : undefined;\r\n                if (navigate !== false) {\r\n                    atrMeasurement.end({ success: true });\r\n                }\r\n                else {\r\n                    atrMeasurement.discard();\r\n                }\r\n                return navigate;\r\n            };\r\n        }\r\n        else {\r\n            const configOnRedirectNavigateCb = this.config.auth.onRedirectNavigate;\r\n            this.config.auth.onRedirectNavigate = (url) => {\r\n                const navigate = typeof configOnRedirectNavigateCb === \"function\"\r\n                    ? configOnRedirectNavigateCb(url)\r\n                    : undefined;\r\n                if (navigate !== false) {\r\n                    atrMeasurement.end({ success: true });\r\n                }\r\n                else {\r\n                    atrMeasurement.discard();\r\n                }\r\n                return navigate;\r\n            };\r\n        }\r\n        // If logged in, emit acquire token events\r\n        const isLoggedIn = this.getAllAccounts().length > 0;\r\n        try {\r\n            (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectPreflightCheck)(this.initialized, this.config);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n            if (isLoggedIn) {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Redirect, request);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.LOGIN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Redirect, request);\r\n            }\r\n            let result;\r\n            if (this.nativeExtensionProvider && this.canUseNative(request)) {\r\n                const nativeClient = new _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_12__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.ApiId.acquireTokenRedirect, this.performanceClient, this.nativeExtensionProvider, this.getNativeAccountId(request), this.nativeInternalStorage, correlationId);\r\n                result = nativeClient\r\n                    .acquireTokenRedirect(request, atrMeasurement)\r\n                    .catch((e) => {\r\n                    if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NativeAuthError &&\r\n                        (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.isFatalNativeAuthError)(e)) {\r\n                        this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                        const redirectClient = this.createRedirectClient(correlationId);\r\n                        return redirectClient.acquireToken(request);\r\n                    }\r\n                    else if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_14__.InteractionRequiredAuthError) {\r\n                        this.logger.verbose(\"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\");\r\n                        const redirectClient = this.createRedirectClient(correlationId);\r\n                        return redirectClient.acquireToken(request);\r\n                    }\r\n                    this.browserStorage.setInteractionInProgress(false);\r\n                    throw e;\r\n                });\r\n            }\r\n            else {\r\n                const redirectClient = this.createRedirectClient(correlationId);\r\n                result = redirectClient.acquireToken(request);\r\n            }\r\n            return await result;\r\n        }\r\n        catch (e) {\r\n            atrMeasurement.end({ success: false }, e);\r\n            if (isLoggedIn) {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Redirect, null, e);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.LOGIN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Redirect, null, e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    // #endregion\r\n    // #region Popup Flow\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    acquireTokenPopup(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const atPopupMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenPopup, correlationId);\r\n        atPopupMeasurement.add({\r\n            scenarioId: request.scenarioId,\r\n            accountType: getAccountType(request.account),\r\n        });\r\n        try {\r\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\r\n            preflightCheck(this.initialized, atPopupMeasurement);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n        }\r\n        catch (e) {\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n        // If logged in, emit acquire token events\r\n        const loggedInAccounts = this.getAllAccounts();\r\n        if (loggedInAccounts.length > 0) {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Popup, request);\r\n        }\r\n        else {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.LOGIN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Popup, request);\r\n        }\r\n        let result;\r\n        if (this.canUseNative(request)) {\r\n            result = this.acquireTokenNative({\r\n                ...request,\r\n                correlationId,\r\n            }, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.ApiId.acquireTokenPopup)\r\n                .then((response) => {\r\n                this.browserStorage.setInteractionInProgress(false);\r\n                atPopupMeasurement.end({\r\n                    success: true,\r\n                    isNativeBroker: true,\r\n                    requestId: response.requestId,\r\n                    accountType: getAccountType(response.account),\r\n                });\r\n                return response;\r\n            })\r\n                .catch((e) => {\r\n                if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NativeAuthError &&\r\n                    (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.isFatalNativeAuthError)(e)) {\r\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                    const popupClient = this.createPopupClient(correlationId);\r\n                    return popupClient.acquireToken(request);\r\n                }\r\n                else if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_14__.InteractionRequiredAuthError) {\r\n                    this.logger.verbose(\"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\");\r\n                    const popupClient = this.createPopupClient(correlationId);\r\n                    return popupClient.acquireToken(request);\r\n                }\r\n                this.browserStorage.setInteractionInProgress(false);\r\n                throw e;\r\n            });\r\n        }\r\n        else {\r\n            const popupClient = this.createPopupClient(correlationId);\r\n            result = popupClient.acquireToken(request);\r\n        }\r\n        return result\r\n            .then((result) => {\r\n            /*\r\n             *  If logged in, emit acquire token events\r\n             */\r\n            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\r\n            if (isLoggingIn) {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.LOGIN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Popup, result);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Popup, result);\r\n            }\r\n            atPopupMeasurement.end({\r\n                success: true,\r\n                requestId: result.requestId,\r\n                accessTokenSize: result.accessToken.length,\r\n                idTokenSize: result.idToken.length,\r\n                accountType: getAccountType(result.account),\r\n            });\r\n            return result;\r\n        })\r\n            .catch((e) => {\r\n            if (loggedInAccounts.length > 0) {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Popup, null, e);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.LOGIN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Popup, null, e);\r\n            }\r\n            atPopupMeasurement.end({\r\n                success: false,\r\n            }, e);\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        });\r\n    }\r\n    trackPageVisibilityWithMeasurement() {\r\n        const measurement = this.ssoSilentMeasurement ||\r\n            this.acquireTokenByCodeAsyncMeasurement;\r\n        if (!measurement) {\r\n            return;\r\n        }\r\n        this.logger.info(\"Perf: Visibility change detected in \", measurement.event.name);\r\n        measurement.increment({\r\n            visibilityChangeCount: 1,\r\n        });\r\n    }\r\n    // #endregion\r\n    // #region Silent Flow\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param request {@link SsoSilentRequest}\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async ssoSilent(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const validRequest = {\r\n            ...request,\r\n            // will be PromptValue.NONE or PromptValue.NO_SESSION\r\n            prompt: request.prompt,\r\n            correlationId: correlationId,\r\n        };\r\n        this.ssoSilentMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.SsoSilent, correlationId);\r\n        this.ssoSilentMeasurement?.add({\r\n            scenarioId: request.scenarioId,\r\n            accountType: getAccountType(request.account),\r\n        });\r\n        preflightCheck(this.initialized, this.ssoSilentMeasurement);\r\n        this.ssoSilentMeasurement?.increment({\r\n            visibilityChangeCount: 0,\r\n        });\r\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        this.logger.verbose(\"ssoSilent called\", correlationId);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.SSO_SILENT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Silent, validRequest);\r\n        let result;\r\n        if (this.canUseNative(validRequest)) {\r\n            result = this.acquireTokenNative(validRequest, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.ApiId.ssoSilent).catch((e) => {\r\n                // If native token acquisition fails for availability reasons fallback to standard flow\r\n                if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NativeAuthError && (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.isFatalNativeAuthError)(e)) {\r\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                    const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\r\n                    return silentIframeClient.acquireToken(validRequest);\r\n                }\r\n                throw e;\r\n            });\r\n        }\r\n        else {\r\n            const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\r\n            result = silentIframeClient.acquireToken(validRequest);\r\n        }\r\n        return result\r\n            .then((response) => {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.SSO_SILENT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Silent, response);\r\n            this.ssoSilentMeasurement?.end({\r\n                success: true,\r\n                isNativeBroker: response.fromNativeBroker,\r\n                requestId: response.requestId,\r\n                accessTokenSize: response.accessToken.length,\r\n                idTokenSize: response.idToken.length,\r\n                accountType: getAccountType(response.account),\r\n            });\r\n            return response;\r\n        })\r\n            .catch((e) => {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.SSO_SILENT_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Silent, null, e);\r\n            this.ssoSilentMeasurement?.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        })\r\n            .finally(() => {\r\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        });\r\n    }\r\n    /**\r\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\r\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\r\n     * This API is not indended for normal authorization code acquisition and redemption.\r\n     *\r\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\r\n     *\r\n     * @param request {@link AuthorizationCodeRequest}\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenByCode(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\r\n        const atbcMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenByCode, correlationId);\r\n        preflightCheck(this.initialized, atbcMeasurement);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_BY_CODE_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Silent, request);\r\n        atbcMeasurement.add({ scenarioId: request.scenarioId });\r\n        try {\r\n            if (request.code && request.nativeAccountId) {\r\n                // Throw error in case server returns both spa_code and spa_accountid in exchange for auth code.\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_15__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_16__.spaCodeAndNativeAccountIdPresent);\r\n            }\r\n            else if (request.code) {\r\n                const hybridAuthCode = request.code;\r\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\r\n                if (!response) {\r\n                    this.logger.verbose(\"Initiating new acquireTokenByCode request\", correlationId);\r\n                    response = this.acquireTokenByCodeAsync({\r\n                        ...request,\r\n                        correlationId,\r\n                    })\r\n                        .then((result) => {\r\n                        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Silent, result);\r\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\r\n                        atbcMeasurement.end({\r\n                            success: true,\r\n                            isNativeBroker: result.fromNativeBroker,\r\n                            requestId: result.requestId,\r\n                            accessTokenSize: result.accessToken.length,\r\n                            idTokenSize: result.idToken.length,\r\n                            accountType: getAccountType(result.account),\r\n                        });\r\n                        return result;\r\n                    })\r\n                        .catch((error) => {\r\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\r\n                        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Silent, null, error);\r\n                        atbcMeasurement.end({\r\n                            success: false,\r\n                        }, error);\r\n                        throw error;\r\n                    });\r\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"Existing acquireTokenByCode request found\", correlationId);\r\n                    atbcMeasurement.discard();\r\n                }\r\n                return await response;\r\n            }\r\n            else if (request.nativeAccountId) {\r\n                if (this.canUseNative(request, request.nativeAccountId)) {\r\n                    const result = await this.acquireTokenNative({\r\n                        ...request,\r\n                        correlationId,\r\n                    }, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.ApiId.acquireTokenByCode, request.nativeAccountId).catch((e) => {\r\n                        // If native token acquisition fails for availability reasons fallback to standard flow\r\n                        if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NativeAuthError &&\r\n                            (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.isFatalNativeAuthError)(e)) {\r\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                        }\r\n                        throw e;\r\n                    });\r\n                    atbcMeasurement.end({\r\n                        accountType: getAccountType(result.account),\r\n                        success: true,\r\n                    });\r\n                    return result;\r\n                }\r\n                else {\r\n                    throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_15__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_16__.unableToAcquireTokenFromNativePlatform);\r\n                }\r\n            }\r\n            else {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_15__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_16__.authCodeOrNativeAccountIdRequired);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Silent, null, e);\r\n            atbcMeasurement.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\r\n     * @param request\r\n     * @returns Result of the operation to redeem the authorization code\r\n     */\r\n    async acquireTokenByCodeAsync(request) {\r\n        this.logger.trace(\"acquireTokenByCodeAsync called\", request.correlationId);\r\n        this.acquireTokenByCodeAsyncMeasurement =\r\n            this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenByCodeAsync, request.correlationId);\r\n        this.acquireTokenByCodeAsyncMeasurement?.increment({\r\n            visibilityChangeCount: 0,\r\n        });\r\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(request.correlationId);\r\n        const silentTokenResult = await silentAuthCodeClient\r\n            .acquireToken(request)\r\n            .then((response) => {\r\n            this.acquireTokenByCodeAsyncMeasurement?.end({\r\n                success: true,\r\n                fromCache: response.fromCache,\r\n                isNativeBroker: response.fromNativeBroker,\r\n                requestId: response.requestId,\r\n            });\r\n            return response;\r\n        })\r\n            .catch((tokenRenewalError) => {\r\n            this.acquireTokenByCodeAsyncMeasurement?.end({\r\n                success: false,\r\n            }, tokenRenewalError);\r\n            throw tokenRenewalError;\r\n        })\r\n            .finally(() => {\r\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        });\r\n        return silentTokenResult;\r\n    }\r\n    /**\r\n     * Attempt to acquire an access token from the cache\r\n     * @param silentCacheClient SilentCacheClient\r\n     * @param commonRequest CommonSilentFlowRequest\r\n     * @param silentRequest SilentRequest\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    async acquireTokenFromCache(commonRequest, cacheLookupPolicy) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenFromCache, commonRequest.correlationId);\r\n        switch (cacheLookupPolicy) {\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.CacheLookupPolicy.Default:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.CacheLookupPolicy.AccessToken:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.CacheLookupPolicy.AccessTokenAndRefreshToken:\r\n                const silentCacheClient = this.createSilentCacheClient(commonRequest.correlationId);\r\n                return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(silentCacheClient.acquireToken.bind(silentCacheClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.SilentCacheClientAcquireToken, this.logger, this.performanceClient, commonRequest.correlationId)(commonRequest);\r\n            default:\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_18__.tokenRefreshRequired);\r\n        }\r\n    }\r\n    /**\r\n     * Attempt to acquire an access token via a refresh token\r\n     * @param commonRequest CommonSilentFlowRequest\r\n     * @param cacheLookupPolicy CacheLookupPolicy\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    async acquireTokenByRefreshToken(commonRequest, cacheLookupPolicy) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenByRefreshToken, commonRequest.correlationId);\r\n        switch (cacheLookupPolicy) {\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.CacheLookupPolicy.Default:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.CacheLookupPolicy.AccessTokenAndRefreshToken:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.CacheLookupPolicy.RefreshToken:\r\n            case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.CacheLookupPolicy.RefreshTokenAndNetwork:\r\n                const silentRefreshClient = this.createSilentRefreshClient(commonRequest.correlationId);\r\n                return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(silentRefreshClient.acquireToken.bind(silentRefreshClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.SilentRefreshClientAcquireToken, this.logger, this.performanceClient, commonRequest.correlationId)(commonRequest);\r\n            default:\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_18__.tokenRefreshRequired);\r\n        }\r\n    }\r\n    /**\r\n     * Attempt to acquire an access token via an iframe\r\n     * @param request CommonSilentFlowRequest\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    async acquireTokenBySilentIframe(request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenBySilentIframe, request.correlationId);\r\n        const silentIframeClient = this.createSilentIframeClient(request.correlationId);\r\n        return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(silentIframeClient.acquireToken.bind(silentIframeClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.SilentIframeClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(request);\r\n    }\r\n    // #endregion\r\n    // #region Logout\r\n    /**\r\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\r\n     * @param logoutRequest\r\n     * @deprecated\r\n     */\r\n    async logout(logoutRequest) {\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        this.logger.warning(\"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\", correlationId);\r\n        return this.logoutRedirect({\r\n            correlationId,\r\n            ...logoutRequest,\r\n        });\r\n    }\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    async logoutRedirect(logoutRequest) {\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectPreflightCheck)(this.initialized, this.config);\r\n        this.browserStorage.setInteractionInProgress(true);\r\n        const redirectClient = this.createRedirectClient(correlationId);\r\n        return redirectClient.logout(logoutRequest);\r\n    }\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logoutPopup(logoutRequest) {\r\n        try {\r\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n            (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.preflightCheck)(this.initialized);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n            const popupClient = this.createPopupClient(correlationId);\r\n            return popupClient.logout(logoutRequest);\r\n        }\r\n        catch (e) {\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    /**\r\n     * Creates a cache interaction client to clear broswer cache.\r\n     * @param logoutRequest\r\n     */\r\n    async clearCache(logoutRequest) {\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        const cacheClient = this.createSilentCacheClient(correlationId);\r\n        return cacheClient.logout(logoutRequest);\r\n    }\r\n    // #endregion\r\n    // #region Account APIs\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_19__.getAllAccounts)(this.logger, this.browserStorage, this.isBrowserEnvironment, accountFilter);\r\n    }\r\n    /**\r\n     * Returns the first account found in the cache that matches the account filter passed in.\r\n     * @param accountFilter\r\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n     */\r\n    getAccount(accountFilter) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_19__.getAccount)(accountFilter, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param username\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByUsername(username) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_19__.getAccountByUsername)(username, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByHomeId(homeAccountId) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_19__.getAccountByHomeId)(homeAccountId, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByLocalId(localAccountId) {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_19__.getAccountByLocalId)(localAccountId, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_19__.setActiveAccount)(account, this.browserStorage);\r\n    }\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount() {\r\n        return (0,_cache_AccountManager_mjs__WEBPACK_IMPORTED_MODULE_19__.getActiveAccount)(this.browserStorage);\r\n    }\r\n    // #endregion\r\n    /**\r\n     * Hydrates the cache with the tokens from an AuthenticationResult\r\n     * @param result\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async hydrateCache(result, request) {\r\n        this.logger.verbose(\"hydrateCache called\");\r\n        // Account gets saved to browser storage regardless of native or not\r\n        const accountEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_20__.AccountEntity.createFromAccountInfo(result.account, result.cloudGraphHostName, result.msGraphHost);\r\n        this.browserStorage.setAccount(accountEntity);\r\n        if (result.fromNativeBroker) {\r\n            this.logger.verbose(\"Response was from native broker, storing in-memory\");\r\n            // Tokens from native broker are stored in-memory\r\n            return this.nativeInternalStorage.hydrateCache(result, request);\r\n        }\r\n        else {\r\n            return this.browserStorage.hydrateCache(result, request);\r\n        }\r\n    }\r\n    // #region Helpers\r\n    /**\r\n     * Acquire a token from native device (e.g. WAM)\r\n     * @param request\r\n     */\r\n    async acquireTokenNative(request, apiId, accountId) {\r\n        this.logger.trace(\"acquireTokenNative called\");\r\n        if (!this.nativeExtensionProvider) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_15__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_16__.nativeConnectionNotEstablished);\r\n        }\r\n        const nativeClient = new _interaction_client_NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_12__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, apiId, this.performanceClient, this.nativeExtensionProvider, accountId || this.getNativeAccountId(request), this.nativeInternalStorage, request.correlationId);\r\n        return nativeClient.acquireToken(request);\r\n    }\r\n    /**\r\n     * Returns boolean indicating if this request can use the native broker\r\n     * @param request\r\n     */\r\n    canUseNative(request, accountId) {\r\n        this.logger.trace(\"canUseNative called\");\r\n        if (!_broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme)) {\r\n            this.logger.trace(\"canUseNative: isNativeAvailable returned false, returning false\");\r\n            return false;\r\n        }\r\n        if (request.prompt) {\r\n            switch (request.prompt) {\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_21__.PromptValue.NONE:\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_21__.PromptValue.CONSENT:\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_21__.PromptValue.LOGIN:\r\n                    this.logger.trace(\"canUseNative: prompt is compatible with native flow\");\r\n                    break;\r\n                default:\r\n                    this.logger.trace(`canUseNative: prompt = ${request.prompt} is not compatible with native flow, returning false`);\r\n                    return false;\r\n            }\r\n        }\r\n        if (!accountId && !this.getNativeAccountId(request)) {\r\n            this.logger.trace(\"canUseNative: nativeAccountId is not available, returning false\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Get the native accountId from the account\r\n     * @param request\r\n     * @returns\r\n     */\r\n    getNativeAccountId(request) {\r\n        const account = request.account ||\r\n            this.getAccount({\r\n                loginHint: request.loginHint,\r\n                sid: request.sid,\r\n            }) ||\r\n            this.getActiveAccount();\r\n        return (account && account.nativeAccountId) || \"\";\r\n    }\r\n    /**\r\n     * Returns new instance of the Popup Interaction Client\r\n     * @param correlationId\r\n     */\r\n    createPopupClient(correlationId) {\r\n        return new _interaction_client_PopupClient_mjs__WEBPACK_IMPORTED_MODULE_22__.PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Redirect Interaction Client\r\n     * @param correlationId\r\n     */\r\n    createRedirectClient(correlationId) {\r\n        return new _interaction_client_RedirectClient_mjs__WEBPACK_IMPORTED_MODULE_23__.RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent Iframe Interaction Client\r\n     * @param correlationId\r\n     */\r\n    createSilentIframeClient(correlationId) {\r\n        return new _interaction_client_SilentIframeClient_mjs__WEBPACK_IMPORTED_MODULE_24__.SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.ApiId.ssoSilent, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent Cache Interaction Client\r\n     */\r\n    createSilentCacheClient(correlationId) {\r\n        return new _interaction_client_SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_25__.SilentCacheClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent Refresh Interaction Client\r\n     */\r\n    createSilentRefreshClient(correlationId) {\r\n        return new _interaction_client_SilentRefreshClient_mjs__WEBPACK_IMPORTED_MODULE_26__.SilentRefreshClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent AuthCode Interaction Client\r\n     */\r\n    createSilentAuthCodeClient(correlationId) {\r\n        return new _interaction_client_SilentAuthCodeClient_mjs__WEBPACK_IMPORTED_MODULE_27__.SilentAuthCodeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.ApiId.acquireTokenByCode, this.performanceClient, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     */\r\n    addEventCallback(callback) {\r\n        return this.eventHandler.addEventCallback(callback);\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        this.eventHandler.removeEventCallback(callbackId);\r\n    }\r\n    /**\r\n     * Registers a callback to receive performance events.\r\n     *\r\n     * @param {PerformanceCallbackFunction} callback\r\n     * @returns {string}\r\n     */\r\n    addPerformanceCallback(callback) {\r\n        return this.performanceClient.addPerformanceCallback(callback);\r\n    }\r\n    /**\r\n     * Removes a callback registered with addPerformanceCallback.\r\n     *\r\n     * @param {string} callbackId\r\n     * @returns {boolean}\r\n     */\r\n    removePerformanceCallback(callbackId) {\r\n        return this.performanceClient.removePerformanceCallback(callbackId);\r\n    }\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    enableAccountStorageEvents() {\r\n        this.eventHandler.enableAccountStorageEvents();\r\n    }\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    disableAccountStorageEvents() {\r\n        this.eventHandler.disableAccountStorageEvents();\r\n    }\r\n    /**\r\n     * Gets the token cache for the application.\r\n     */\r\n    getTokenCache() {\r\n        return this.tokenCache;\r\n    }\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger) {\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\r\n     * @param sku\r\n     * @param version\r\n     */\r\n    initializeWrapperLibrary(sku, version) {\r\n        // Validate the SKU passed in is one we expect\r\n        this.browserStorage.setWrapperMetadata(sku, version);\r\n    }\r\n    /**\r\n     * Sets navigation client\r\n     * @param navigationClient\r\n     */\r\n    setNavigationClient(navigationClient) {\r\n        this.navigationClient = navigationClient;\r\n    }\r\n    /**\r\n     * Returns the configuration object\r\n     */\r\n    getConfiguration() {\r\n        return this.config;\r\n    }\r\n    /**\r\n     * Returns the performance client\r\n     */\r\n    getPerformanceClient() {\r\n        return this.performanceClient;\r\n    }\r\n    /**\r\n     * Returns the browser env indicator\r\n     */\r\n    isBrowserEnv() {\r\n        return this.isBrowserEnvironment;\r\n    }\r\n    /**\r\n     * Returns the event handler\r\n     */\r\n    getEventHandler() {\r\n        return this.eventHandler;\r\n    }\r\n    /**\r\n     * Generates a correlation id for a request if none is provided.\r\n     *\r\n     * @protected\r\n     * @param {?Partial<BaseAuthRequest>} [request]\r\n     * @returns {string}\r\n     */\r\n    getRequestCorrelationId(request) {\r\n        if (request?.correlationId) {\r\n            return request.correlationId;\r\n        }\r\n        if (this.isBrowserEnvironment) {\r\n            return (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_28__.createNewGuid)();\r\n        }\r\n        /*\r\n         * Included for fallback for non-browser environments,\r\n         * and to ensure this method always returns a string.\r\n         */\r\n        return _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_21__.Constants.EMPTY_STRING;\r\n    }\r\n    // #endregion\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    async loginRedirect(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"loginRedirect called\", correlationId);\r\n        return this.acquireTokenRedirect({\r\n            correlationId,\r\n            ...(request || _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_REQUEST),\r\n        });\r\n    }\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    loginPopup(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"loginPopup called\", correlationId);\r\n        return this.acquireTokenPopup({\r\n            correlationId,\r\n            ...(request || _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_REQUEST),\r\n        });\r\n    }\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async acquireTokenSilent(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const atsMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenSilent, correlationId);\r\n        atsMeasurement.add({\r\n            cacheLookupPolicy: request.cacheLookupPolicy,\r\n            scenarioId: request.scenarioId,\r\n        });\r\n        preflightCheck(this.initialized, atsMeasurement);\r\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\r\n        const account = request.account || this.getActiveAccount();\r\n        if (!account) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_15__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_16__.noAccountError);\r\n        }\r\n        atsMeasurement.add({ accountType: getAccountType(account) });\r\n        const thumbprint = {\r\n            clientId: this.config.auth.clientId,\r\n            authority: request.authority || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_21__.Constants.EMPTY_STRING,\r\n            scopes: request.scopes,\r\n            homeAccountIdentifier: account.homeAccountId,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n            shrOptions: request.shrOptions,\r\n        };\r\n        const silentRequestKey = JSON.stringify(thumbprint);\r\n        const cachedResponse = this.activeSilentTokenRequests.get(silentRequestKey);\r\n        if (typeof cachedResponse === \"undefined\") {\r\n            this.logger.verbose(\"acquireTokenSilent called for the first time, storing active request\", correlationId);\r\n            const response = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(this.acquireTokenSilentAsync.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenSilentAsync, this.logger, this.performanceClient, correlationId)({\r\n                ...request,\r\n                correlationId,\r\n            }, account)\r\n                .then((result) => {\r\n                this.activeSilentTokenRequests.delete(silentRequestKey);\r\n                atsMeasurement.end({\r\n                    success: true,\r\n                    fromCache: result.fromCache,\r\n                    isNativeBroker: result.fromNativeBroker,\r\n                    cacheLookupPolicy: request.cacheLookupPolicy,\r\n                    requestId: result.requestId,\r\n                    accessTokenSize: result.accessToken.length,\r\n                    idTokenSize: result.idToken.length,\r\n                });\r\n                return result;\r\n            })\r\n                .catch((error) => {\r\n                this.activeSilentTokenRequests.delete(silentRequestKey);\r\n                atsMeasurement.end({\r\n                    success: false,\r\n                }, error);\r\n                throw error;\r\n            });\r\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\r\n            return {\r\n                ...(await response),\r\n                state: request.state,\r\n            };\r\n        }\r\n        else {\r\n            this.logger.verbose(\"acquireTokenSilent has been called previously, returning the result from the first call\", correlationId);\r\n            // Discard measurements for memoized calls, as they are usually only a couple of ms and will artificially deflate metrics\r\n            atsMeasurement.discard();\r\n            return {\r\n                ...(await cachedResponse),\r\n                state: request.state,\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\r\n     * @param {@link (SilentRequest:type)}\r\n     * @param {@link (AccountInfo:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse}\r\n     */\r\n    async acquireTokenSilentAsync(request, account) {\r\n        const trackPageVisibility = () => this.trackPageVisibility(request.correlationId);\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenSilentAsync, request.correlationId);\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Silent, request);\r\n        if (request.correlationId) {\r\n            this.performanceClient.incrementFields({ visibilityChangeCount: 0 }, request.correlationId);\r\n        }\r\n        document.addEventListener(\"visibilitychange\", trackPageVisibility);\r\n        const silentRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(_request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_29__.initializeSilentRequest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.InitializeSilentRequest, this.logger, this.performanceClient, request.correlationId)(request, account, this.config, this.performanceClient, this.logger);\r\n        const cacheLookupPolicy = request.cacheLookupPolicy || _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.CacheLookupPolicy.Default;\r\n        const result = this.acquireTokenSilentNoIframe(silentRequest, cacheLookupPolicy).catch(async (refreshTokenError) => {\r\n            const shouldTryToResolveSilently = checkIfRefreshTokenErrorCanBeResolvedSilently(refreshTokenError, cacheLookupPolicy);\r\n            if (shouldTryToResolveSilently) {\r\n                if (!this.activeIframeRequest) {\r\n                    let _resolve;\r\n                    // Always set the active request tracker immediately after checking it to prevent races\r\n                    this.activeIframeRequest = [\r\n                        new Promise((resolve) => {\r\n                            _resolve = resolve;\r\n                        }),\r\n                        silentRequest.correlationId,\r\n                    ];\r\n                    this.logger.verbose(\"Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.\", silentRequest.correlationId);\r\n                    return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(this.acquireTokenBySilentIframe.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenBySilentIframe, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest)\r\n                        .then((iframeResult) => {\r\n                        _resolve(true);\r\n                        return iframeResult;\r\n                    })\r\n                        .catch((e) => {\r\n                        _resolve(false);\r\n                        throw e;\r\n                    })\r\n                        .finally(() => {\r\n                        this.activeIframeRequest = undefined;\r\n                    });\r\n                }\r\n                else if (cacheLookupPolicy !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.CacheLookupPolicy.Skip) {\r\n                    const [activePromise, activeCorrelationId] = this.activeIframeRequest;\r\n                    this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${activeCorrelationId}`, silentRequest.correlationId);\r\n                    const awaitConcurrentIframeMeasure = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AwaitConcurrentIframe, silentRequest.correlationId);\r\n                    awaitConcurrentIframeMeasure.add({\r\n                        awaitIframeCorrelationId: activeCorrelationId,\r\n                    });\r\n                    const activePromiseResult = await activePromise;\r\n                    awaitConcurrentIframeMeasure.end({\r\n                        success: activePromiseResult,\r\n                    });\r\n                    if (activePromiseResult) {\r\n                        this.logger.verbose(`Parallel iframe request with correlationId: ${activeCorrelationId} succeeded. Retrying cache and/or RT redemption`, silentRequest.correlationId);\r\n                        // Retry cache lookup and/or RT exchange after iframe completes\r\n                        return this.acquireTokenSilentNoIframe(silentRequest, cacheLookupPolicy);\r\n                    }\r\n                    else {\r\n                        this.logger.info(`Iframe request with correlationId: ${activeCorrelationId} failed. Interaction is required.`);\r\n                        // If previous iframe request failed, it's unlikely to succeed this time. Throw original error.\r\n                        throw refreshTokenError;\r\n                    }\r\n                }\r\n                else {\r\n                    // Cache policy set to skip and another iframe request is already in progress\r\n                    this.logger.warning(\"Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.\", silentRequest.correlationId);\r\n                    return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(this.acquireTokenBySilentIframe.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenBySilentIframe, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest);\r\n                }\r\n            }\r\n            else {\r\n                // Error cannot be silently resolved or iframe renewal is not allowed, interaction required\r\n                throw refreshTokenError;\r\n            }\r\n        });\r\n        return result\r\n            .then((response) => {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Silent, response);\r\n            if (request.correlationId) {\r\n                this.performanceClient.addFields({\r\n                    fromCache: response.fromCache,\r\n                    isNativeBroker: response.fromNativeBroker,\r\n                    requestId: response.requestId,\r\n                }, request.correlationId);\r\n            }\r\n            return response;\r\n        })\r\n            .catch((tokenRenewalError) => {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Silent, null, tokenRenewalError);\r\n            throw tokenRenewalError;\r\n        })\r\n            .finally(() => {\r\n            document.removeEventListener(\"visibilitychange\", trackPageVisibility);\r\n        });\r\n    }\r\n    /**\r\n     * AcquireTokenSilent without the iframe fallback. This is used to enable the correct fallbacks in cases where there's a potential for multiple silent requests to be made in parallel and prevent those requests from making concurrent iframe requests.\r\n     * @param silentRequest\r\n     * @param cacheLookupPolicy\r\n     * @returns\r\n     */\r\n    async acquireTokenSilentNoIframe(silentRequest, cacheLookupPolicy) {\r\n        if (_broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_10__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeExtensionProvider, silentRequest.authenticationScheme) &&\r\n            silentRequest.account.nativeAccountId) {\r\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from native platform\");\r\n            return this.acquireTokenNative(silentRequest, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.ApiId.acquireTokenSilent_silentFlow).catch(async (e) => {\r\n                // If native token acquisition fails for availability reasons fallback to web flow\r\n                if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.NativeAuthError && (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.isFatalNativeAuthError)(e)) {\r\n                    this.logger.verbose(\"acquireTokenSilent - native platform unavailable, falling back to web flow\");\r\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt\r\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\r\n                    throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_18__.tokenRefreshRequired);\r\n                }\r\n                throw e;\r\n            });\r\n        }\r\n        else {\r\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from web flow\");\r\n            return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(this.acquireTokenFromCache.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenFromCache, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest, cacheLookupPolicy).catch((cacheError) => {\r\n                if (cacheLookupPolicy === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.CacheLookupPolicy.AccessToken) {\r\n                    throw cacheError;\r\n                }\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_9__.EventType.ACQUIRE_TOKEN_NETWORK_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.InteractionType.Silent, silentRequest);\r\n                return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.invokeAsync)(this.acquireTokenByRefreshToken.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.PerformanceEvents.AcquireTokenByRefreshToken, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest, cacheLookupPolicy);\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Determines whether an error thrown by the refresh token endpoint can be resolved without interaction\r\n * @param refreshTokenError\r\n * @param silentRequest\r\n * @param cacheLookupPolicy\r\n * @returns\r\n */\r\nfunction checkIfRefreshTokenErrorCanBeResolvedSilently(refreshTokenError, cacheLookupPolicy) {\r\n    const noInteractionRequired = !(refreshTokenError instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_14__.InteractionRequiredAuthError &&\r\n        // For refresh token errors, bad_token does not always require interaction (silently resolvable)\r\n        refreshTokenError.subError !==\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_30__.badToken);\r\n    // Errors that result when the refresh token needs to be replaced\r\n    const refreshTokenRefreshRequired = refreshTokenError.errorCode === _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.BrowserConstants.INVALID_GRANT_ERROR ||\r\n        refreshTokenError.errorCode ===\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_18__.tokenRefreshRequired;\r\n    // Errors that may be resolved before falling back to interaction (through iframe renewal)\r\n    const isSilentlyResolvable = (noInteractionRequired && refreshTokenRefreshRequired) ||\r\n        refreshTokenError.errorCode ===\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_30__.noTokensFound ||\r\n        refreshTokenError.errorCode ===\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_30__.refreshTokenExpired;\r\n    // Only these policies allow for an iframe renewal attempt\r\n    const tryIframeRenewal = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_6__.iFrameRenewalPolicies.includes(cacheLookupPolicy);\r\n    return isSilentlyResolvable && tryIframeRenewal;\r\n}\n\n\n//# sourceMappingURL=StandardController.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNewGuid: () => (/* binding */ createNewGuid),\n/* harmony export */   exportJwk: () => (/* binding */ exportJwk),\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair),\n/* harmony export */   getRandomValues: () => (/* binding */ getRandomValues),\n/* harmony export */   hashString: () => (/* binding */ hashString),\n/* harmony export */   importJwk: () => (/* binding */ importJwk),\n/* harmony export */   sha256Digest: () => (/* binding */ sha256Digest),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   validateCryptoAvailable: () => (/* binding */ validateCryptoAvailable)\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../encode/Base64Encode.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This file defines functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\r\n/**\r\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\r\n */\r\n// RSA KeyGen Algorithm\r\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\r\n// SHA-256 hashing algorithm\r\nconst S256_HASH_ALG = \"SHA-256\";\r\n// MOD length for PoP tokens\r\nconst MODULUS_LENGTH = 2048;\r\n// Public Exponent\r\nconst PUBLIC_EXPONENT = new Uint8Array([0x01, 0x00, 0x01]);\r\n// UUID hex digits\r\nconst UUID_CHARS = \"0123456789abcdef\";\r\n// Array to store UINT32 random value\r\nconst UINT32_ARR = new Uint32Array(1);\r\nconst keygenAlgorithmOptions = {\r\n    name: PKCS1_V15_KEYGEN_ALG,\r\n    hash: S256_HASH_ALG,\r\n    modulusLength: MODULUS_LENGTH,\r\n    publicExponent: PUBLIC_EXPONENT,\r\n};\r\n/**\r\n * Check whether browser crypto is available.\r\n */\r\nfunction validateCryptoAvailable(logger) {\r\n    if (\"crypto\" in window) {\r\n        logger.verbose(\"BrowserCrypto: modern crypto interface available\");\r\n    }\r\n    else {\r\n        logger.error(\"BrowserCrypto: crypto interface is unavailable\");\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.cryptoNonExistent);\r\n    }\r\n}\r\n/**\r\n * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n * @param dataString {string} data string\r\n * @param performanceClient {?IPerformanceClient}\r\n * @param correlationId {?string} correlation id\r\n */\r\nasync function sha256Digest(dataString, performanceClient, correlationId) {\r\n    performanceClient?.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.Sha256Digest, correlationId);\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(dataString);\r\n    return window.crypto.subtle.digest(S256_HASH_ALG, data);\r\n}\r\n/**\r\n * Populates buffer with cryptographically random values.\r\n * @param dataBuffer\r\n */\r\nfunction getRandomValues(dataBuffer) {\r\n    return window.crypto.getRandomValues(dataBuffer);\r\n}\r\n/**\r\n * Returns random Uint32 value.\r\n * @returns {number}\r\n */\r\nfunction getRandomUint32() {\r\n    window.crypto.getRandomValues(UINT32_ARR);\r\n    return UINT32_ARR[0];\r\n}\r\n/**\r\n * Creates a UUID v7 from the current timestamp.\r\n * Implementation relies on the system clock to guarantee increasing order of generated identifiers.\r\n * @returns {number}\r\n */\r\nfunction createNewGuid() {\r\n    const currentTimestamp = Date.now();\r\n    const baseRand = getRandomUint32() * 0x400 + (getRandomUint32() & 0x3ff);\r\n    // Result byte array\r\n    const bytes = new Uint8Array(16);\r\n    // A 12-bit `rand_a` field value\r\n    const randA = Math.trunc(baseRand / 2 ** 30);\r\n    // The higher 30 bits of 62-bit `rand_b` field value\r\n    const randBHi = baseRand & (2 ** 30 - 1);\r\n    // The lower 32 bits of 62-bit `rand_b` field value\r\n    const randBLo = getRandomUint32();\r\n    bytes[0] = currentTimestamp / 2 ** 40;\r\n    bytes[1] = currentTimestamp / 2 ** 32;\r\n    bytes[2] = currentTimestamp / 2 ** 24;\r\n    bytes[3] = currentTimestamp / 2 ** 16;\r\n    bytes[4] = currentTimestamp / 2 ** 8;\r\n    bytes[5] = currentTimestamp;\r\n    bytes[6] = 0x70 | (randA >>> 8);\r\n    bytes[7] = randA;\r\n    bytes[8] = 0x80 | (randBHi >>> 24);\r\n    bytes[9] = randBHi >>> 16;\r\n    bytes[10] = randBHi >>> 8;\r\n    bytes[11] = randBHi;\r\n    bytes[12] = randBLo >>> 24;\r\n    bytes[13] = randBLo >>> 16;\r\n    bytes[14] = randBLo >>> 8;\r\n    bytes[15] = randBLo;\r\n    let text = \"\";\r\n    for (let i = 0; i < bytes.length; i++) {\r\n        text += UUID_CHARS.charAt(bytes[i] >>> 4);\r\n        text += UUID_CHARS.charAt(bytes[i] & 0xf);\r\n        if (i === 3 || i === 5 || i === 7 || i === 9) {\r\n            text += \"-\";\r\n        }\r\n    }\r\n    return text;\r\n}\r\n/**\r\n * Generates a keypair based on current keygen algorithm config.\r\n * @param extractable\r\n * @param usages\r\n */\r\nasync function generateKeyPair(extractable, usages) {\r\n    return window.crypto.subtle.generateKey(keygenAlgorithmOptions, extractable, usages);\r\n}\r\n/**\r\n * Export key as Json Web Key (JWK)\r\n * @param key\r\n */\r\nasync function exportJwk(key) {\r\n    return window.crypto.subtle.exportKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.KEY_FORMAT_JWK, key);\r\n}\r\n/**\r\n * Imports key as Json Web Key (JWK), can set extractable and usages.\r\n * @param key\r\n * @param extractable\r\n * @param usages\r\n */\r\nasync function importJwk(key, extractable, usages) {\r\n    return window.crypto.subtle.importKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.KEY_FORMAT_JWK, key, keygenAlgorithmOptions, extractable, usages);\r\n}\r\n/**\r\n * Signs given data with given key\r\n * @param key\r\n * @param data\r\n */\r\nasync function sign(key, data) {\r\n    return window.crypto.subtle.sign(keygenAlgorithmOptions, key, data);\r\n}\r\n/**\r\n * Returns the SHA-256 hash of an input string\r\n * @param plainText\r\n */\r\nasync function hashString(plainText) {\r\n    const hashBuffer = await sha256Digest(plainText);\r\n    const hashBytes = new Uint8Array(hashBuffer);\r\n    return (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_4__.urlEncodeArr)(hashBytes);\r\n}\n\n\n//# sourceMappingURL=BrowserCrypto.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CryptoOps: () => (/* binding */ CryptoOps)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs\");\n/* harmony import */ var _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../encode/Base64Encode.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\");\n/* harmony import */ var _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encode/Base64Decode.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\");\n/* harmony import */ var _BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BrowserCrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _cache_AsyncMemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cache/AsyncMemoryStorage.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\r\nclass CryptoOps {\r\n    constructor(logger, performanceClient) {\r\n        this.logger = logger;\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.validateCryptoAvailable)(logger);\r\n        this.cache = new _cache_AsyncMemoryStorage_mjs__WEBPACK_IMPORTED_MODULE_1__.AsyncMemoryStorage(this.logger);\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    createNewGuid() {\r\n        return (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.createNewGuid)();\r\n    }\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input\r\n     */\r\n    base64Encode(input) {\r\n        return (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.base64Encode)(input);\r\n    }\r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input\r\n     */\r\n    base64Decode(input) {\r\n        return (0,_encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_3__.base64Decode)(input);\r\n    }\r\n    /**\r\n     * Encodes input string to base64 URL safe string.\r\n     * @param input\r\n     */\r\n    base64UrlEncode(input) {\r\n        return (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncode)(input);\r\n    }\r\n    /**\r\n     * Stringifies and base64Url encodes input public key\r\n     * @param inputKid\r\n     * @returns Base64Url encoded public key\r\n     */\r\n    encodeKid(inputKid) {\r\n        return this.base64UrlEncode(JSON.stringify({ kid: inputKid }));\r\n    }\r\n    /**\r\n     * Generates a keypair, stores it and returns a thumbprint\r\n     * @param request\r\n     */\r\n    async getPublicKeyThumbprint(request) {\r\n        const publicKeyThumbMeasurement = this.performanceClient?.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.CryptoOptsGetPublicKeyThumbprint, request.correlationId);\r\n        // Generate Keypair\r\n        const keyPair = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.generateKeyPair)(CryptoOps.EXTRACTABLE, CryptoOps.POP_KEY_USAGES);\r\n        // Generate Thumbprint for Public Key\r\n        const publicKeyJwk = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.exportJwk)(keyPair.publicKey);\r\n        const pubKeyThumprintObj = {\r\n            e: publicKeyJwk.e,\r\n            kty: publicKeyJwk.kty,\r\n            n: publicKeyJwk.n,\r\n        };\r\n        const publicJwkString = getSortedObjectString(pubKeyThumprintObj);\r\n        const publicJwkHash = await this.hashString(publicJwkString);\r\n        // Generate Thumbprint for Private Key\r\n        const privateKeyJwk = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.exportJwk)(keyPair.privateKey);\r\n        // Re-import private key to make it unextractable\r\n        const unextractablePrivateKey = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.importJwk)(privateKeyJwk, false, [\"sign\"]);\r\n        // Store Keypair data in keystore\r\n        await this.cache.setItem(publicJwkHash, {\r\n            privateKey: unextractablePrivateKey,\r\n            publicKey: keyPair.publicKey,\r\n            requestMethod: request.resourceRequestMethod,\r\n            requestUri: request.resourceRequestUri,\r\n        });\r\n        if (publicKeyThumbMeasurement) {\r\n            publicKeyThumbMeasurement.end({\r\n                success: true,\r\n            });\r\n        }\r\n        return publicJwkHash;\r\n    }\r\n    /**\r\n     * Removes cryptographic keypair from key store matching the keyId passed in\r\n     * @param kid\r\n     */\r\n    async removeTokenBindingKey(kid) {\r\n        await this.cache.removeItem(kid);\r\n        const keyFound = await this.cache.containsKey(kid);\r\n        return !keyFound;\r\n    }\r\n    /**\r\n     * Removes all cryptographic keys from IndexedDB storage\r\n     */\r\n    async clearKeystore() {\r\n        // Delete in-memory keystores\r\n        this.cache.clearInMemory();\r\n        /**\r\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\r\n         * every persistent keystore\r\n         */\r\n        try {\r\n            await this.cache.clearPersistent();\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                this.logger.error(`Clearing keystore failed with error: ${e.message}`);\r\n            }\r\n            else {\r\n                this.logger.error(\"Clearing keystore failed with unknown error\");\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\r\n     * @param payload\r\n     * @param kid\r\n     */\r\n    async signJwt(payload, kid, shrOptions, correlationId) {\r\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.CryptoOptsSignJwt, correlationId);\r\n        const cachedKeyPair = await this.cache.getItem(kid);\r\n        if (!cachedKeyPair) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.cryptoKeyNotFound);\r\n        }\r\n        // Get public key as JWK\r\n        const publicKeyJwk = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.exportJwk)(cachedKeyPair.publicKey);\r\n        const publicKeyJwkString = getSortedObjectString(publicKeyJwk);\r\n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\r\n        const encodedKeyIdThumbprint = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncode)(JSON.stringify({ kid: kid }));\r\n        // Generate header\r\n        const shrHeader = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.JoseHeader.getShrHeaderString({\r\n            ...shrOptions?.header,\r\n            alg: publicKeyJwk.alg,\r\n            kid: encodedKeyIdThumbprint,\r\n        });\r\n        const encodedShrHeader = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncode)(shrHeader);\r\n        // Generate payload\r\n        payload.cnf = {\r\n            jwk: JSON.parse(publicKeyJwkString),\r\n        };\r\n        const encodedPayload = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncode)(JSON.stringify(payload));\r\n        // Form token string\r\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\r\n        // Sign token\r\n        const encoder = new TextEncoder();\r\n        const tokenBuffer = encoder.encode(tokenString);\r\n        const signatureBuffer = await (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.sign)(cachedKeyPair.privateKey, tokenBuffer);\r\n        const encodedSignature = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_2__.urlEncodeArr)(new Uint8Array(signatureBuffer));\r\n        const signedJwt = `${tokenString}.${encodedSignature}`;\r\n        if (signJwtMeasurement) {\r\n            signJwtMeasurement.end({\r\n                success: true,\r\n            });\r\n        }\r\n        return signedJwt;\r\n    }\r\n    /**\r\n     * Returns the SHA-256 hash of an input string\r\n     * @param plainText\r\n     */\r\n    async hashString(plainText) {\r\n        return (0,_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.hashString)(plainText);\r\n    }\r\n}\r\nCryptoOps.POP_KEY_USAGES = [\"sign\", \"verify\"];\r\nCryptoOps.EXTRACTABLE = true;\r\nfunction getSortedObjectString(obj) {\r\n    return JSON.stringify(obj, Object.keys(obj).sort());\r\n}\n\n\n//# sourceMappingURL=CryptoOps.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generatePkceCodes: () => (/* binding */ generatePkceCodes)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../encode/Base64Encode.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\");\n/* harmony import */ var _BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./BrowserCrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Constant byte array length\r\nconst RANDOM_BYTE_ARR_LENGTH = 32;\r\n/**\r\n * This file defines APIs to generate PKCE codes and code verifiers.\r\n */\r\n/**\r\n * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n */\r\nasync function generatePkceCodes(performanceClient, logger, correlationId) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.GeneratePkceCodes, correlationId);\r\n    const codeVerifier = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invoke)(generateCodeVerifier, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.GenerateCodeVerifier, logger, performanceClient, correlationId)(performanceClient, logger, correlationId);\r\n    const codeChallenge = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(generateCodeChallengeFromVerifier, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.GenerateCodeChallengeFromVerifier, logger, performanceClient, correlationId)(codeVerifier, performanceClient, logger, correlationId);\r\n    return {\r\n        verifier: codeVerifier,\r\n        challenge: codeChallenge,\r\n    };\r\n}\r\n/**\r\n * Generates a random 32 byte buffer and returns the base64\r\n * encoded string to be used as a PKCE Code Verifier\r\n */\r\nfunction generateCodeVerifier(performanceClient, logger, correlationId) {\r\n    try {\r\n        // Generate random values as utf-8\r\n        const buffer = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\r\n        (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invoke)(_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_2__.getRandomValues, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.GetRandomValues, logger, performanceClient, correlationId)(buffer);\r\n        // encode verifier as base64\r\n        const pkceCodeVerifierB64 = (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_3__.urlEncodeArr)(buffer);\r\n        return pkceCodeVerifierB64;\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.pkceNotCreated);\r\n    }\r\n}\r\n/**\r\n * Creates a base64 encoded PKCE Code Challenge string from the\r\n * hash created from the PKCE Code Verifier supplied\r\n */\r\nasync function generateCodeChallengeFromVerifier(pkceCodeVerifier, performanceClient, logger, correlationId) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.GenerateCodeChallengeFromVerifier, correlationId);\r\n    try {\r\n        // hashed verifier\r\n        const pkceHashedCodeVerifier = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_2__.sha256Digest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.Sha256Digest, logger, performanceClient, correlationId)(pkceCodeVerifier, performanceClient, correlationId);\r\n        // encode hash as base64\r\n        return (0,_encode_Base64Encode_mjs__WEBPACK_IMPORTED_MODULE_3__.urlEncodeArr)(new Uint8Array(pkceHashedCodeVerifier));\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.pkceNotCreated);\r\n    }\r\n}\n\n\n//# sourceMappingURL=PkceGenerator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NyeXB0by9Qa2NlR2VuZXJhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUN1RTtBQUNiO0FBQ2I7QUFDVTtBQUNBOztBQUVwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyx5RUFBaUI7QUFDM0QseUJBQXlCLGtFQUFNLHVCQUF1Qix5RUFBaUI7QUFDdkUsZ0NBQWdDLHVFQUFXLG9DQUFvQyx5RUFBaUI7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtFQUFNLENBQUMsK0RBQWUsRUFBRSx5RUFBaUI7QUFDakQ7QUFDQSxvQ0FBb0Msc0VBQVk7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtRkFBc0IsQ0FBQyw0RUFBYztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyx5RUFBaUI7QUFDM0Q7QUFDQTtBQUNBLDZDQUE2Qyx1RUFBVyxDQUFDLDREQUFZLEVBQUUseUVBQWlCO0FBQ3hGO0FBQ0EsZUFBZSxzRUFBWTtBQUMzQjtBQUNBO0FBQ0EsY0FBYyxtRkFBc0IsQ0FBQyw0RUFBYztBQUNuRDtBQUNBOztBQUU2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2NyeXB0by9Qa2NlR2VuZXJhdG9yLm1qcz9kZTgxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgUGVyZm9ybWFuY2VFdmVudHMsIGludm9rZSwgaW52b2tlQXN5bmMgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VyQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgdXJsRW5jb2RlQXJyIH0gZnJvbSAnLi4vZW5jb2RlL0Jhc2U2NEVuY29kZS5tanMnO1xuaW1wb3J0IHsgZ2V0UmFuZG9tVmFsdWVzLCBzaGEyNTZEaWdlc3QgfSBmcm9tICcuL0Jyb3dzZXJDcnlwdG8ubWpzJztcbmltcG9ydCB7IHBrY2VOb3RDcmVhdGVkIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vLyBDb25zdGFudCBieXRlIGFycmF5IGxlbmd0aFxyXG5jb25zdCBSQU5ET01fQllURV9BUlJfTEVOR1RIID0gMzI7XHJcbi8qKlxyXG4gKiBUaGlzIGZpbGUgZGVmaW5lcyBBUElzIHRvIGdlbmVyYXRlIFBLQ0UgY29kZXMgYW5kIGNvZGUgdmVyaWZpZXJzLlxyXG4gKi9cclxuLyoqXHJcbiAqIEdlbmVyYXRlcyBQS0NFIENvZGVzLiBTZWUgdGhlIFJGQyBmb3IgbW9yZSBpbmZvcm1hdGlvbjogaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzc2MzZcclxuICovXHJcbmFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlUGtjZUNvZGVzKHBlcmZvcm1hbmNlQ2xpZW50LCBsb2dnZXIsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgIHBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuR2VuZXJhdGVQa2NlQ29kZXMsIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgY29uc3QgY29kZVZlcmlmaWVyID0gaW52b2tlKGdlbmVyYXRlQ29kZVZlcmlmaWVyLCBQZXJmb3JtYW5jZUV2ZW50cy5HZW5lcmF0ZUNvZGVWZXJpZmllciwgbG9nZ2VyLCBwZXJmb3JtYW5jZUNsaWVudCwgY29ycmVsYXRpb25JZCkocGVyZm9ybWFuY2VDbGllbnQsIGxvZ2dlciwgY29ycmVsYXRpb25JZCk7XHJcbiAgICBjb25zdCBjb2RlQ2hhbGxlbmdlID0gYXdhaXQgaW52b2tlQXN5bmMoZ2VuZXJhdGVDb2RlQ2hhbGxlbmdlRnJvbVZlcmlmaWVyLCBQZXJmb3JtYW5jZUV2ZW50cy5HZW5lcmF0ZUNvZGVDaGFsbGVuZ2VGcm9tVmVyaWZpZXIsIGxvZ2dlciwgcGVyZm9ybWFuY2VDbGllbnQsIGNvcnJlbGF0aW9uSWQpKGNvZGVWZXJpZmllciwgcGVyZm9ybWFuY2VDbGllbnQsIGxvZ2dlciwgY29ycmVsYXRpb25JZCk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIHZlcmlmaWVyOiBjb2RlVmVyaWZpZXIsXHJcbiAgICAgICAgY2hhbGxlbmdlOiBjb2RlQ2hhbGxlbmdlLFxyXG4gICAgfTtcclxufVxyXG4vKipcclxuICogR2VuZXJhdGVzIGEgcmFuZG9tIDMyIGJ5dGUgYnVmZmVyIGFuZCByZXR1cm5zIHRoZSBiYXNlNjRcclxuICogZW5jb2RlZCBzdHJpbmcgdG8gYmUgdXNlZCBhcyBhIFBLQ0UgQ29kZSBWZXJpZmllclxyXG4gKi9cclxuZnVuY3Rpb24gZ2VuZXJhdGVDb2RlVmVyaWZpZXIocGVyZm9ybWFuY2VDbGllbnQsIGxvZ2dlciwgY29ycmVsYXRpb25JZCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICAvLyBHZW5lcmF0ZSByYW5kb20gdmFsdWVzIGFzIHV0Zi04XHJcbiAgICAgICAgY29uc3QgYnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkoUkFORE9NX0JZVEVfQVJSX0xFTkdUSCk7XHJcbiAgICAgICAgaW52b2tlKGdldFJhbmRvbVZhbHVlcywgUGVyZm9ybWFuY2VFdmVudHMuR2V0UmFuZG9tVmFsdWVzLCBsb2dnZXIsIHBlcmZvcm1hbmNlQ2xpZW50LCBjb3JyZWxhdGlvbklkKShidWZmZXIpO1xyXG4gICAgICAgIC8vIGVuY29kZSB2ZXJpZmllciBhcyBiYXNlNjRcclxuICAgICAgICBjb25zdCBwa2NlQ29kZVZlcmlmaWVyQjY0ID0gdXJsRW5jb2RlQXJyKGJ1ZmZlcik7XHJcbiAgICAgICAgcmV0dXJuIHBrY2VDb2RlVmVyaWZpZXJCNjQ7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IocGtjZU5vdENyZWF0ZWQpO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBDcmVhdGVzIGEgYmFzZTY0IGVuY29kZWQgUEtDRSBDb2RlIENoYWxsZW5nZSBzdHJpbmcgZnJvbSB0aGVcclxuICogaGFzaCBjcmVhdGVkIGZyb20gdGhlIFBLQ0UgQ29kZSBWZXJpZmllciBzdXBwbGllZFxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVDb2RlQ2hhbGxlbmdlRnJvbVZlcmlmaWVyKHBrY2VDb2RlVmVyaWZpZXIsIHBlcmZvcm1hbmNlQ2xpZW50LCBsb2dnZXIsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgIHBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuR2VuZXJhdGVDb2RlQ2hhbGxlbmdlRnJvbVZlcmlmaWVyLCBjb3JyZWxhdGlvbklkKTtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgLy8gaGFzaGVkIHZlcmlmaWVyXHJcbiAgICAgICAgY29uc3QgcGtjZUhhc2hlZENvZGVWZXJpZmllciA9IGF3YWl0IGludm9rZUFzeW5jKHNoYTI1NkRpZ2VzdCwgUGVyZm9ybWFuY2VFdmVudHMuU2hhMjU2RGlnZXN0LCBsb2dnZXIsIHBlcmZvcm1hbmNlQ2xpZW50LCBjb3JyZWxhdGlvbklkKShwa2NlQ29kZVZlcmlmaWVyLCBwZXJmb3JtYW5jZUNsaWVudCwgY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgLy8gZW5jb2RlIGhhc2ggYXMgYmFzZTY0XHJcbiAgICAgICAgcmV0dXJuIHVybEVuY29kZUFycihuZXcgVWludDhBcnJheShwa2NlSGFzaGVkQ29kZVZlcmlmaWVyKSk7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IocGtjZU5vdENyZWF0ZWQpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IGdlbmVyYXRlUGtjZUNvZGVzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qa2NlR2VuZXJhdG9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64Decode: () => (/* binding */ base64Decode)\n/* harmony export */ });\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\r\n */\r\n/**\r\n * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n * @param input\r\n */\r\nfunction base64Decode(input) {\r\n    return new TextDecoder().decode(base64DecToArr(input));\r\n}\r\n/**\r\n * Decodes base64 into Uint8Array\r\n * @param base64String\r\n */\r\nfunction base64DecToArr(base64String) {\r\n    let encodedString = base64String.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    switch (encodedString.length % 4) {\r\n        case 0:\r\n            break;\r\n        case 2:\r\n            encodedString += \"==\";\r\n            break;\r\n        case 3:\r\n            encodedString += \"=\";\r\n            break;\r\n        default:\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidBase64String);\r\n    }\r\n    const binString = atob(encodedString);\r\n    return Uint8Array.from(binString, (m) => m.codePointAt(0) || 0);\r\n}\n\n\n//# sourceMappingURL=Base64Decode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2VuY29kZS9CYXNlNjREZWNvZGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDMEQ7QUFDRTs7QUFFekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUZBQXNCLENBQUMsaUZBQW1CO0FBQzVEO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2VuY29kZS9CYXNlNjREZWNvZGUubWpzPzEwMWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjQuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VyQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgaW52YWxpZEJhc2U2NFN0cmluZyB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIENsYXNzIHdoaWNoIGV4cG9zZXMgQVBJcyB0byBkZWNvZGUgYmFzZTY0IHN0cmluZ3MgdG8gcGxhaW50ZXh0LiBTZWUgaGVyZSBmb3IgaW1wbGVtZW50YXRpb24gZGV0YWlsczpcclxuICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9HbG9zc2FyeS9CYXNlNjQjdGhlX3VuaWNvZGVfcHJvYmxlbVxyXG4gKi9cclxuLyoqXHJcbiAqIFJldHVybnMgYSBVUkwtc2FmZSBwbGFpbnRleHQgZGVjb2RlZCBzdHJpbmcgZnJvbSBiNjQgZW5jb2RlZCBpbnB1dC5cclxuICogQHBhcmFtIGlucHV0XHJcbiAqL1xyXG5mdW5jdGlvbiBiYXNlNjREZWNvZGUoaW5wdXQpIHtcclxuICAgIHJldHVybiBuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoYmFzZTY0RGVjVG9BcnIoaW5wdXQpKTtcclxufVxyXG4vKipcclxuICogRGVjb2RlcyBiYXNlNjQgaW50byBVaW50OEFycmF5XHJcbiAqIEBwYXJhbSBiYXNlNjRTdHJpbmdcclxuICovXHJcbmZ1bmN0aW9uIGJhc2U2NERlY1RvQXJyKGJhc2U2NFN0cmluZykge1xyXG4gICAgbGV0IGVuY29kZWRTdHJpbmcgPSBiYXNlNjRTdHJpbmcucmVwbGFjZSgvLS9nLCBcIitcIikucmVwbGFjZSgvXy9nLCBcIi9cIik7XHJcbiAgICBzd2l0Y2ggKGVuY29kZWRTdHJpbmcubGVuZ3RoICUgNCkge1xyXG4gICAgICAgIGNhc2UgMDpcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAyOlxyXG4gICAgICAgICAgICBlbmNvZGVkU3RyaW5nICs9IFwiPT1cIjtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgY2FzZSAzOlxyXG4gICAgICAgICAgICBlbmNvZGVkU3RyaW5nICs9IFwiPVwiO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKGludmFsaWRCYXNlNjRTdHJpbmcpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgYmluU3RyaW5nID0gYXRvYihlbmNvZGVkU3RyaW5nKTtcclxuICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oYmluU3RyaW5nLCAobSkgPT4gbS5jb2RlUG9pbnRBdCgwKSB8fCAwKTtcclxufVxuXG5leHBvcnQgeyBiYXNlNjREZWNvZGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2U2NERlY29kZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   base64Encode: () => (/* binding */ base64Encode),\n/* harmony export */   urlEncode: () => (/* binding */ urlEncode),\n/* harmony export */   urlEncodeArr: () => (/* binding */ urlEncodeArr)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\n/**\r\n * Returns URL Safe b64 encoded string from a plaintext string.\r\n * @param input\r\n */\r\nfunction urlEncode(input) {\r\n    return encodeURIComponent(base64Encode(input)\r\n        .replace(/=/g, \"\")\r\n        .replace(/\\+/g, \"-\")\r\n        .replace(/\\//g, \"_\"));\r\n}\r\n/**\r\n * Returns URL Safe b64 encoded string from an int8Array.\r\n * @param inputArr\r\n */\r\nfunction urlEncodeArr(inputArr) {\r\n    return base64EncArr(inputArr)\r\n        .replace(/=/g, \"\")\r\n        .replace(/\\+/g, \"-\")\r\n        .replace(/\\//g, \"_\");\r\n}\r\n/**\r\n * Returns b64 encoded string from plaintext string.\r\n * @param input\r\n */\r\nfunction base64Encode(input) {\r\n    return base64EncArr(new TextEncoder().encode(input));\r\n}\r\n/**\r\n * Base64 encode byte array\r\n * @param aBytes\r\n */\r\nfunction base64EncArr(aBytes) {\r\n    const binString = Array.from(aBytes, (x) => String.fromCodePoint(x)).join(\"\");\r\n    return btoa(binString);\r\n}\n\n\n//# sourceMappingURL=Base64Encode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2VuY29kZS9CYXNlNjRFbmNvZGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaUQ7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9lbmNvZGUvQmFzZTY0RW5jb2RlLm1qcz83NjZhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBDbGFzcyB3aGljaCBleHBvc2VzIEFQSXMgdG8gZW5jb2RlIHBsYWludGV4dCB0byBiYXNlNjQgZW5jb2RlZCBzdHJpbmcuIFNlZSBoZXJlIGZvciBpbXBsZW1lbnRhdGlvbiBkZXRhaWxzOlxyXG4gKiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvV2luZG93QmFzZTY0L0Jhc2U2NF9lbmNvZGluZ19hbmRfZGVjb2RpbmcjU29sdXRpb25fMl8lRTIlODAlOTNfSmF2YVNjcmlwdCdzX1VURi0xNl8lM0VfVVRGLThfJTNFX2Jhc2U2NFxyXG4gKi9cclxuLyoqXHJcbiAqIFJldHVybnMgVVJMIFNhZmUgYjY0IGVuY29kZWQgc3RyaW5nIGZyb20gYSBwbGFpbnRleHQgc3RyaW5nLlxyXG4gKiBAcGFyYW0gaW5wdXRcclxuICovXHJcbmZ1bmN0aW9uIHVybEVuY29kZShpbnB1dCkge1xyXG4gICAgcmV0dXJuIGVuY29kZVVSSUNvbXBvbmVudChiYXNlNjRFbmNvZGUoaW5wdXQpXHJcbiAgICAgICAgLnJlcGxhY2UoLz0vZywgXCJcIilcclxuICAgICAgICAucmVwbGFjZSgvXFwrL2csIFwiLVwiKVxyXG4gICAgICAgIC5yZXBsYWNlKC9cXC8vZywgXCJfXCIpKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyBVUkwgU2FmZSBiNjQgZW5jb2RlZCBzdHJpbmcgZnJvbSBhbiBpbnQ4QXJyYXkuXHJcbiAqIEBwYXJhbSBpbnB1dEFyclxyXG4gKi9cclxuZnVuY3Rpb24gdXJsRW5jb2RlQXJyKGlucHV0QXJyKSB7XHJcbiAgICByZXR1cm4gYmFzZTY0RW5jQXJyKGlucHV0QXJyKVxyXG4gICAgICAgIC5yZXBsYWNlKC89L2csIFwiXCIpXHJcbiAgICAgICAgLnJlcGxhY2UoL1xcKy9nLCBcIi1cIilcclxuICAgICAgICAucmVwbGFjZSgvXFwvL2csIFwiX1wiKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyBiNjQgZW5jb2RlZCBzdHJpbmcgZnJvbSBwbGFpbnRleHQgc3RyaW5nLlxyXG4gKiBAcGFyYW0gaW5wdXRcclxuICovXHJcbmZ1bmN0aW9uIGJhc2U2NEVuY29kZShpbnB1dCkge1xyXG4gICAgcmV0dXJuIGJhc2U2NEVuY0FycihuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoaW5wdXQpKTtcclxufVxyXG4vKipcclxuICogQmFzZTY0IGVuY29kZSBieXRlIGFycmF5XHJcbiAqIEBwYXJhbSBhQnl0ZXNcclxuICovXHJcbmZ1bmN0aW9uIGJhc2U2NEVuY0FycihhQnl0ZXMpIHtcclxuICAgIGNvbnN0IGJpblN0cmluZyA9IEFycmF5LmZyb20oYUJ5dGVzLCAoeCkgPT4gU3RyaW5nLmZyb21Db2RlUG9pbnQoeCkpLmpvaW4oXCJcIik7XHJcbiAgICByZXR1cm4gYnRvYShiaW5TdHJpbmcpO1xyXG59XG5cbmV4cG9ydCB7IGJhc2U2NEVuY29kZSwgdXJsRW5jb2RlLCB1cmxFbmNvZGVBcnIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2U2NEVuY29kZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserAuthError: () => (/* binding */ BrowserAuthError),\n/* harmony export */   BrowserAuthErrorCodes: () => (/* reexport module object */ _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   BrowserAuthErrorMessage: () => (/* binding */ BrowserAuthErrorMessage),\n/* harmony export */   BrowserAuthErrorMessages: () => (/* binding */ BrowserAuthErrorMessages),\n/* harmony export */   createBrowserAuthError: () => (/* binding */ createBrowserAuthError)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst ErrorLink = \"For more visit: aka.ms/msaljs/browser-errors\";\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst BrowserAuthErrorMessages = {\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceNotCreated]: \"The PKCE code challenge and verifier could not be generated.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoNonExistent]: \"The crypto object or function is not available.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyNavigateUri]: \"Navigation URI is empty. Please check stack trace for more info.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashEmptyError]: `Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noStateInHash]: \"Hash does not contain state. Please verify that the request originated from msal.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashDoesNotContainKnownProperties]: `Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseState]: \"Unable to parse state. Please verify that the request originated from msal.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateInteractionTypeMismatch]: \"Hash contains state but the interaction type does not match the caller.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.interactionInProgress]: `Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.popupWindowError]: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyWindowError]: \"window.open returned null or undefined window object.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCancelled]: \"User cancelled the flow.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorPopupTimeout]: `Token acquisition in popup failed due to timeout.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorWindowTimeout]: `Token acquisition in iframe failed due to timeout.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectInIframe]: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockIframeReload]: `Request was blocked inside an iframe because MSAL detected an authentication response.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockNestedPopups]: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.iframeClosedPrematurely]: \"The iframe being monitored was closed prematurely.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentLogoutUnsupported]: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountError]: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentPromptValueError]: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokenRequestCacheError]: \"No token request found in cache.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseTokenRequestCacheError]: \"The cached token request could not be parsed.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCachedAuthorityError]: \"No cached authority found.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authRequestNotSetError]: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheType]: \"Invalid cache type\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonBrowserEnvironment]: \"Login and token requests are not supported in non-browser environments.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseNotOpen]: \"Database is not open!\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity]: \"No network connectivity. Check your internet connection.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed]: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.getRequestFailed]: \"Network request failed. Please check the network trace to determine root cause.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.failedToParseResponse]: \"Failed to parse network response. Check network trace.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToLoadToken]: \"Error loading token to cache.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoKeyNotFound]: \"Cryptographic Key or Keypair not found in browser storage.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeRequired]: \"An authorization code must be provided (as the `code` property on the request) to this flow.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeOrNativeAccountIdRequired]: \"An authorization code or nativeAccountId must be provided to this flow.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.spaCodeAndNativeAccountIdPresent]: \"Request cannot contain both spa code and native account id.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseUnavailable]: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToAcquireTokenFromNativePlatform]: `Unable to acquire token from native platform.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeHandshakeTimeout]: \"Timed out while attempting to establish connection to browser extension\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeExtensionNotInstalled]: \"Native extension is not installed. If you think this is a mistake call the initialize function.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeConnectionNotEstablished]: `Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.uninitializedPublicClientApplication]: `You must call and await the initialize function before attempting to call any other MSAL API.  ${ErrorLink}`,\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativePromptNotSupported]: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidBase64String]: \"Invalid base64 encoded string.\",\r\n    [_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPopTokenRequest]: \"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.\",\r\n};\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use exported BrowserAuthErrorCodes instead.\r\n * In your app you can do :\r\n * ```\r\n * import { BrowserAuthErrorCodes } from \"@azure/msal-browser\";\r\n * ```\r\n */\r\nconst BrowserAuthErrorMessage = {\r\n    pkceNotGenerated: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceNotCreated,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceNotCreated],\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoNonExistent,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoNonExistent],\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyNavigateUri,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyNavigateUri],\r\n    },\r\n    hashEmptyError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashEmptyError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashEmptyError],\r\n    },\r\n    hashDoesNotContainStateError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noStateInHash,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noStateInHash],\r\n    },\r\n    hashDoesNotContainKnownPropertiesError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashDoesNotContainKnownProperties,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashDoesNotContainKnownProperties],\r\n    },\r\n    unableToParseStateError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseState,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseState],\r\n    },\r\n    stateInteractionTypeMismatchError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateInteractionTypeMismatch,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateInteractionTypeMismatch],\r\n    },\r\n    interactionInProgress: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.interactionInProgress,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.interactionInProgress],\r\n    },\r\n    popupWindowError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.popupWindowError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.popupWindowError],\r\n    },\r\n    emptyWindowError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyWindowError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyWindowError],\r\n    },\r\n    userCancelledError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCancelled,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCancelled],\r\n    },\r\n    monitorPopupTimeoutError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorPopupTimeout,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorPopupTimeout],\r\n    },\r\n    monitorIframeTimeoutError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorWindowTimeout,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.monitorWindowTimeout],\r\n    },\r\n    redirectInIframeError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectInIframe,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectInIframe],\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockIframeReload,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockIframeReload],\r\n    },\r\n    blockAcquireTokenInPopupsError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockNestedPopups,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.blockNestedPopups],\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.iframeClosedPrematurely,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.iframeClosedPrematurely],\r\n    },\r\n    silentLogoutUnsupportedError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentLogoutUnsupported,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentLogoutUnsupported],\r\n    },\r\n    noAccountError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountError],\r\n    },\r\n    silentPromptValueError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentPromptValueError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.silentPromptValueError],\r\n    },\r\n    noTokenRequestCacheError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokenRequestCacheError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokenRequestCacheError],\r\n    },\r\n    unableToParseTokenRequestCacheError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseTokenRequestCacheError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToParseTokenRequestCacheError],\r\n    },\r\n    noCachedAuthorityError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCachedAuthorityError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCachedAuthorityError],\r\n    },\r\n    authRequestNotSet: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authRequestNotSetError,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authRequestNotSetError],\r\n    },\r\n    invalidCacheType: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheType,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheType],\r\n    },\r\n    notInBrowserEnvironment: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonBrowserEnvironment,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonBrowserEnvironment],\r\n    },\r\n    databaseNotOpen: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseNotOpen,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseNotOpen],\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity],\r\n    },\r\n    postRequestFailed: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed],\r\n    },\r\n    getRequestFailed: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.getRequestFailed,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.getRequestFailed],\r\n    },\r\n    failedToParseNetworkResponse: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.failedToParseResponse,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.failedToParseResponse],\r\n    },\r\n    unableToLoadTokenError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToLoadToken,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToLoadToken],\r\n    },\r\n    signingKeyNotFoundInStorage: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoKeyNotFound,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cryptoKeyNotFound],\r\n    },\r\n    authCodeRequired: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeRequired,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeRequired],\r\n    },\r\n    authCodeOrNativeAccountRequired: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeOrNativeAccountIdRequired,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authCodeOrNativeAccountIdRequired],\r\n    },\r\n    spaCodeAndNativeAccountPresent: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.spaCodeAndNativeAccountIdPresent,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.spaCodeAndNativeAccountIdPresent],\r\n    },\r\n    databaseUnavailable: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseUnavailable,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.databaseUnavailable],\r\n    },\r\n    unableToAcquireTokenFromNativePlatform: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToAcquireTokenFromNativePlatform,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unableToAcquireTokenFromNativePlatform],\r\n    },\r\n    nativeHandshakeTimeout: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeHandshakeTimeout,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeHandshakeTimeout],\r\n    },\r\n    nativeExtensionNotInstalled: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeExtensionNotInstalled,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeExtensionNotInstalled],\r\n    },\r\n    nativeConnectionNotEstablished: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeConnectionNotEstablished,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeConnectionNotEstablished],\r\n    },\r\n    uninitializedPublicClientApplication: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.uninitializedPublicClientApplication,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.uninitializedPublicClientApplication],\r\n    },\r\n    nativePromptNotSupported: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativePromptNotSupported,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativePromptNotSupported],\r\n    },\r\n    invalidBase64StringError: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidBase64String,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidBase64String],\r\n    },\r\n    invalidPopTokenRequest: {\r\n        code: _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPopTokenRequest,\r\n        desc: BrowserAuthErrorMessages[_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPopTokenRequest],\r\n    },\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nclass BrowserAuthError extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode) {\r\n        super(errorCode, BrowserAuthErrorMessages[errorCode]);\r\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\r\n        this.name = \"BrowserAuthError\";\r\n    }\r\n}\r\nfunction createBrowserAuthError(errorCode) {\r\n    return new BrowserAuthError(errorCode);\r\n}\n\n\n//# sourceMappingURL=BrowserAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authCodeOrNativeAccountIdRequired: () => (/* binding */ authCodeOrNativeAccountIdRequired),\n/* harmony export */   authCodeRequired: () => (/* binding */ authCodeRequired),\n/* harmony export */   authRequestNotSetError: () => (/* binding */ authRequestNotSetError),\n/* harmony export */   blockIframeReload: () => (/* binding */ blockIframeReload),\n/* harmony export */   blockNestedPopups: () => (/* binding */ blockNestedPopups),\n/* harmony export */   cryptoKeyNotFound: () => (/* binding */ cryptoKeyNotFound),\n/* harmony export */   cryptoNonExistent: () => (/* binding */ cryptoNonExistent),\n/* harmony export */   databaseNotOpen: () => (/* binding */ databaseNotOpen),\n/* harmony export */   databaseUnavailable: () => (/* binding */ databaseUnavailable),\n/* harmony export */   emptyNavigateUri: () => (/* binding */ emptyNavigateUri),\n/* harmony export */   emptyWindowError: () => (/* binding */ emptyWindowError),\n/* harmony export */   failedToParseResponse: () => (/* binding */ failedToParseResponse),\n/* harmony export */   getRequestFailed: () => (/* binding */ getRequestFailed),\n/* harmony export */   hashDoesNotContainKnownProperties: () => (/* binding */ hashDoesNotContainKnownProperties),\n/* harmony export */   hashEmptyError: () => (/* binding */ hashEmptyError),\n/* harmony export */   iframeClosedPrematurely: () => (/* binding */ iframeClosedPrematurely),\n/* harmony export */   interactionInProgress: () => (/* binding */ interactionInProgress),\n/* harmony export */   invalidBase64String: () => (/* binding */ invalidBase64String),\n/* harmony export */   invalidCacheType: () => (/* binding */ invalidCacheType),\n/* harmony export */   invalidPopTokenRequest: () => (/* binding */ invalidPopTokenRequest),\n/* harmony export */   monitorPopupTimeout: () => (/* binding */ monitorPopupTimeout),\n/* harmony export */   monitorWindowTimeout: () => (/* binding */ monitorWindowTimeout),\n/* harmony export */   nativeConnectionNotEstablished: () => (/* binding */ nativeConnectionNotEstablished),\n/* harmony export */   nativeExtensionNotInstalled: () => (/* binding */ nativeExtensionNotInstalled),\n/* harmony export */   nativeHandshakeTimeout: () => (/* binding */ nativeHandshakeTimeout),\n/* harmony export */   nativePromptNotSupported: () => (/* binding */ nativePromptNotSupported),\n/* harmony export */   noAccountError: () => (/* binding */ noAccountError),\n/* harmony export */   noCachedAuthorityError: () => (/* binding */ noCachedAuthorityError),\n/* harmony export */   noNetworkConnectivity: () => (/* binding */ noNetworkConnectivity),\n/* harmony export */   noStateInHash: () => (/* binding */ noStateInHash),\n/* harmony export */   noTokenRequestCacheError: () => (/* binding */ noTokenRequestCacheError),\n/* harmony export */   nonBrowserEnvironment: () => (/* binding */ nonBrowserEnvironment),\n/* harmony export */   pkceNotCreated: () => (/* binding */ pkceNotCreated),\n/* harmony export */   popupWindowError: () => (/* binding */ popupWindowError),\n/* harmony export */   postRequestFailed: () => (/* binding */ postRequestFailed),\n/* harmony export */   redirectInIframe: () => (/* binding */ redirectInIframe),\n/* harmony export */   silentLogoutUnsupported: () => (/* binding */ silentLogoutUnsupported),\n/* harmony export */   silentPromptValueError: () => (/* binding */ silentPromptValueError),\n/* harmony export */   spaCodeAndNativeAccountIdPresent: () => (/* binding */ spaCodeAndNativeAccountIdPresent),\n/* harmony export */   stateInteractionTypeMismatch: () => (/* binding */ stateInteractionTypeMismatch),\n/* harmony export */   unableToAcquireTokenFromNativePlatform: () => (/* binding */ unableToAcquireTokenFromNativePlatform),\n/* harmony export */   unableToLoadToken: () => (/* binding */ unableToLoadToken),\n/* harmony export */   unableToParseState: () => (/* binding */ unableToParseState),\n/* harmony export */   unableToParseTokenRequestCacheError: () => (/* binding */ unableToParseTokenRequestCacheError),\n/* harmony export */   uninitializedPublicClientApplication: () => (/* binding */ uninitializedPublicClientApplication),\n/* harmony export */   userCancelled: () => (/* binding */ userCancelled)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst pkceNotCreated = \"pkce_not_created\";\r\nconst cryptoNonExistent = \"crypto_nonexistent\";\r\nconst emptyNavigateUri = \"empty_navigate_uri\";\r\nconst hashEmptyError = \"hash_empty_error\";\r\nconst noStateInHash = \"no_state_in_hash\";\r\nconst hashDoesNotContainKnownProperties = \"hash_does_not_contain_known_properties\";\r\nconst unableToParseState = \"unable_to_parse_state\";\r\nconst stateInteractionTypeMismatch = \"state_interaction_type_mismatch\";\r\nconst interactionInProgress = \"interaction_in_progress\";\r\nconst popupWindowError = \"popup_window_error\";\r\nconst emptyWindowError = \"empty_window_error\";\r\nconst userCancelled = \"user_cancelled\";\r\nconst monitorPopupTimeout = \"monitor_popup_timeout\";\r\nconst monitorWindowTimeout = \"monitor_window_timeout\";\r\nconst redirectInIframe = \"redirect_in_iframe\";\r\nconst blockIframeReload = \"block_iframe_reload\";\r\nconst blockNestedPopups = \"block_nested_popups\";\r\nconst iframeClosedPrematurely = \"iframe_closed_prematurely\";\r\nconst silentLogoutUnsupported = \"silent_logout_unsupported\";\r\nconst noAccountError = \"no_account_error\";\r\nconst silentPromptValueError = \"silent_prompt_value_error\";\r\nconst noTokenRequestCacheError = \"no_token_request_cache_error\";\r\nconst unableToParseTokenRequestCacheError = \"unable_to_parse_token_request_cache_error\";\r\nconst noCachedAuthorityError = \"no_cached_authority_error\";\r\nconst authRequestNotSetError = \"auth_request_not_set_error\";\r\nconst invalidCacheType = \"invalid_cache_type\";\r\nconst nonBrowserEnvironment = \"non_browser_environment\";\r\nconst databaseNotOpen = \"database_not_open\";\r\nconst noNetworkConnectivity = \"no_network_connectivity\";\r\nconst postRequestFailed = \"post_request_failed\";\r\nconst getRequestFailed = \"get_request_failed\";\r\nconst failedToParseResponse = \"failed_to_parse_response\";\r\nconst unableToLoadToken = \"unable_to_load_token\";\r\nconst cryptoKeyNotFound = \"crypto_key_not_found\";\r\nconst authCodeRequired = \"auth_code_required\";\r\nconst authCodeOrNativeAccountIdRequired = \"auth_code_or_nativeAccountId_required\";\r\nconst spaCodeAndNativeAccountIdPresent = \"spa_code_and_nativeAccountId_present\";\r\nconst databaseUnavailable = \"database_unavailable\";\r\nconst unableToAcquireTokenFromNativePlatform = \"unable_to_acquire_token_from_native_platform\";\r\nconst nativeHandshakeTimeout = \"native_handshake_timeout\";\r\nconst nativeExtensionNotInstalled = \"native_extension_not_installed\";\r\nconst nativeConnectionNotEstablished = \"native_connection_not_established\";\r\nconst uninitializedPublicClientApplication = \"uninitialized_public_client_application\";\r\nconst nativePromptNotSupported = \"native_prompt_not_supported\";\r\nconst invalidBase64String = \"invalid_base64_string\";\r\nconst invalidPopTokenRequest = \"invalid_pop_token_request\";\n\n\n//# sourceMappingURL=BrowserAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrakM7QUFDbGpDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvZXJyb3IvQnJvd3NlckF1dGhFcnJvckNvZGVzLm1qcz82OGU0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IHBrY2VOb3RDcmVhdGVkID0gXCJwa2NlX25vdF9jcmVhdGVkXCI7XHJcbmNvbnN0IGNyeXB0b05vbkV4aXN0ZW50ID0gXCJjcnlwdG9fbm9uZXhpc3RlbnRcIjtcclxuY29uc3QgZW1wdHlOYXZpZ2F0ZVVyaSA9IFwiZW1wdHlfbmF2aWdhdGVfdXJpXCI7XHJcbmNvbnN0IGhhc2hFbXB0eUVycm9yID0gXCJoYXNoX2VtcHR5X2Vycm9yXCI7XHJcbmNvbnN0IG5vU3RhdGVJbkhhc2ggPSBcIm5vX3N0YXRlX2luX2hhc2hcIjtcclxuY29uc3QgaGFzaERvZXNOb3RDb250YWluS25vd25Qcm9wZXJ0aWVzID0gXCJoYXNoX2RvZXNfbm90X2NvbnRhaW5fa25vd25fcHJvcGVydGllc1wiO1xyXG5jb25zdCB1bmFibGVUb1BhcnNlU3RhdGUgPSBcInVuYWJsZV90b19wYXJzZV9zdGF0ZVwiO1xyXG5jb25zdCBzdGF0ZUludGVyYWN0aW9uVHlwZU1pc21hdGNoID0gXCJzdGF0ZV9pbnRlcmFjdGlvbl90eXBlX21pc21hdGNoXCI7XHJcbmNvbnN0IGludGVyYWN0aW9uSW5Qcm9ncmVzcyA9IFwiaW50ZXJhY3Rpb25faW5fcHJvZ3Jlc3NcIjtcclxuY29uc3QgcG9wdXBXaW5kb3dFcnJvciA9IFwicG9wdXBfd2luZG93X2Vycm9yXCI7XHJcbmNvbnN0IGVtcHR5V2luZG93RXJyb3IgPSBcImVtcHR5X3dpbmRvd19lcnJvclwiO1xyXG5jb25zdCB1c2VyQ2FuY2VsbGVkID0gXCJ1c2VyX2NhbmNlbGxlZFwiO1xyXG5jb25zdCBtb25pdG9yUG9wdXBUaW1lb3V0ID0gXCJtb25pdG9yX3BvcHVwX3RpbWVvdXRcIjtcclxuY29uc3QgbW9uaXRvcldpbmRvd1RpbWVvdXQgPSBcIm1vbml0b3Jfd2luZG93X3RpbWVvdXRcIjtcclxuY29uc3QgcmVkaXJlY3RJbklmcmFtZSA9IFwicmVkaXJlY3RfaW5faWZyYW1lXCI7XHJcbmNvbnN0IGJsb2NrSWZyYW1lUmVsb2FkID0gXCJibG9ja19pZnJhbWVfcmVsb2FkXCI7XHJcbmNvbnN0IGJsb2NrTmVzdGVkUG9wdXBzID0gXCJibG9ja19uZXN0ZWRfcG9wdXBzXCI7XHJcbmNvbnN0IGlmcmFtZUNsb3NlZFByZW1hdHVyZWx5ID0gXCJpZnJhbWVfY2xvc2VkX3ByZW1hdHVyZWx5XCI7XHJcbmNvbnN0IHNpbGVudExvZ291dFVuc3VwcG9ydGVkID0gXCJzaWxlbnRfbG9nb3V0X3Vuc3VwcG9ydGVkXCI7XHJcbmNvbnN0IG5vQWNjb3VudEVycm9yID0gXCJub19hY2NvdW50X2Vycm9yXCI7XHJcbmNvbnN0IHNpbGVudFByb21wdFZhbHVlRXJyb3IgPSBcInNpbGVudF9wcm9tcHRfdmFsdWVfZXJyb3JcIjtcclxuY29uc3Qgbm9Ub2tlblJlcXVlc3RDYWNoZUVycm9yID0gXCJub190b2tlbl9yZXF1ZXN0X2NhY2hlX2Vycm9yXCI7XHJcbmNvbnN0IHVuYWJsZVRvUGFyc2VUb2tlblJlcXVlc3RDYWNoZUVycm9yID0gXCJ1bmFibGVfdG9fcGFyc2VfdG9rZW5fcmVxdWVzdF9jYWNoZV9lcnJvclwiO1xyXG5jb25zdCBub0NhY2hlZEF1dGhvcml0eUVycm9yID0gXCJub19jYWNoZWRfYXV0aG9yaXR5X2Vycm9yXCI7XHJcbmNvbnN0IGF1dGhSZXF1ZXN0Tm90U2V0RXJyb3IgPSBcImF1dGhfcmVxdWVzdF9ub3Rfc2V0X2Vycm9yXCI7XHJcbmNvbnN0IGludmFsaWRDYWNoZVR5cGUgPSBcImludmFsaWRfY2FjaGVfdHlwZVwiO1xyXG5jb25zdCBub25Ccm93c2VyRW52aXJvbm1lbnQgPSBcIm5vbl9icm93c2VyX2Vudmlyb25tZW50XCI7XHJcbmNvbnN0IGRhdGFiYXNlTm90T3BlbiA9IFwiZGF0YWJhc2Vfbm90X29wZW5cIjtcclxuY29uc3Qgbm9OZXR3b3JrQ29ubmVjdGl2aXR5ID0gXCJub19uZXR3b3JrX2Nvbm5lY3Rpdml0eVwiO1xyXG5jb25zdCBwb3N0UmVxdWVzdEZhaWxlZCA9IFwicG9zdF9yZXF1ZXN0X2ZhaWxlZFwiO1xyXG5jb25zdCBnZXRSZXF1ZXN0RmFpbGVkID0gXCJnZXRfcmVxdWVzdF9mYWlsZWRcIjtcclxuY29uc3QgZmFpbGVkVG9QYXJzZVJlc3BvbnNlID0gXCJmYWlsZWRfdG9fcGFyc2VfcmVzcG9uc2VcIjtcclxuY29uc3QgdW5hYmxlVG9Mb2FkVG9rZW4gPSBcInVuYWJsZV90b19sb2FkX3Rva2VuXCI7XHJcbmNvbnN0IGNyeXB0b0tleU5vdEZvdW5kID0gXCJjcnlwdG9fa2V5X25vdF9mb3VuZFwiO1xyXG5jb25zdCBhdXRoQ29kZVJlcXVpcmVkID0gXCJhdXRoX2NvZGVfcmVxdWlyZWRcIjtcclxuY29uc3QgYXV0aENvZGVPck5hdGl2ZUFjY291bnRJZFJlcXVpcmVkID0gXCJhdXRoX2NvZGVfb3JfbmF0aXZlQWNjb3VudElkX3JlcXVpcmVkXCI7XHJcbmNvbnN0IHNwYUNvZGVBbmROYXRpdmVBY2NvdW50SWRQcmVzZW50ID0gXCJzcGFfY29kZV9hbmRfbmF0aXZlQWNjb3VudElkX3ByZXNlbnRcIjtcclxuY29uc3QgZGF0YWJhc2VVbmF2YWlsYWJsZSA9IFwiZGF0YWJhc2VfdW5hdmFpbGFibGVcIjtcclxuY29uc3QgdW5hYmxlVG9BY3F1aXJlVG9rZW5Gcm9tTmF0aXZlUGxhdGZvcm0gPSBcInVuYWJsZV90b19hY3F1aXJlX3Rva2VuX2Zyb21fbmF0aXZlX3BsYXRmb3JtXCI7XHJcbmNvbnN0IG5hdGl2ZUhhbmRzaGFrZVRpbWVvdXQgPSBcIm5hdGl2ZV9oYW5kc2hha2VfdGltZW91dFwiO1xyXG5jb25zdCBuYXRpdmVFeHRlbnNpb25Ob3RJbnN0YWxsZWQgPSBcIm5hdGl2ZV9leHRlbnNpb25fbm90X2luc3RhbGxlZFwiO1xyXG5jb25zdCBuYXRpdmVDb25uZWN0aW9uTm90RXN0YWJsaXNoZWQgPSBcIm5hdGl2ZV9jb25uZWN0aW9uX25vdF9lc3RhYmxpc2hlZFwiO1xyXG5jb25zdCB1bmluaXRpYWxpemVkUHVibGljQ2xpZW50QXBwbGljYXRpb24gPSBcInVuaW5pdGlhbGl6ZWRfcHVibGljX2NsaWVudF9hcHBsaWNhdGlvblwiO1xyXG5jb25zdCBuYXRpdmVQcm9tcHROb3RTdXBwb3J0ZWQgPSBcIm5hdGl2ZV9wcm9tcHRfbm90X3N1cHBvcnRlZFwiO1xyXG5jb25zdCBpbnZhbGlkQmFzZTY0U3RyaW5nID0gXCJpbnZhbGlkX2Jhc2U2NF9zdHJpbmdcIjtcclxuY29uc3QgaW52YWxpZFBvcFRva2VuUmVxdWVzdCA9IFwiaW52YWxpZF9wb3BfdG9rZW5fcmVxdWVzdFwiO1xuXG5leHBvcnQgeyBhdXRoQ29kZU9yTmF0aXZlQWNjb3VudElkUmVxdWlyZWQsIGF1dGhDb2RlUmVxdWlyZWQsIGF1dGhSZXF1ZXN0Tm90U2V0RXJyb3IsIGJsb2NrSWZyYW1lUmVsb2FkLCBibG9ja05lc3RlZFBvcHVwcywgY3J5cHRvS2V5Tm90Rm91bmQsIGNyeXB0b05vbkV4aXN0ZW50LCBkYXRhYmFzZU5vdE9wZW4sIGRhdGFiYXNlVW5hdmFpbGFibGUsIGVtcHR5TmF2aWdhdGVVcmksIGVtcHR5V2luZG93RXJyb3IsIGZhaWxlZFRvUGFyc2VSZXNwb25zZSwgZ2V0UmVxdWVzdEZhaWxlZCwgaGFzaERvZXNOb3RDb250YWluS25vd25Qcm9wZXJ0aWVzLCBoYXNoRW1wdHlFcnJvciwgaWZyYW1lQ2xvc2VkUHJlbWF0dXJlbHksIGludGVyYWN0aW9uSW5Qcm9ncmVzcywgaW52YWxpZEJhc2U2NFN0cmluZywgaW52YWxpZENhY2hlVHlwZSwgaW52YWxpZFBvcFRva2VuUmVxdWVzdCwgbW9uaXRvclBvcHVwVGltZW91dCwgbW9uaXRvcldpbmRvd1RpbWVvdXQsIG5hdGl2ZUNvbm5lY3Rpb25Ob3RFc3RhYmxpc2hlZCwgbmF0aXZlRXh0ZW5zaW9uTm90SW5zdGFsbGVkLCBuYXRpdmVIYW5kc2hha2VUaW1lb3V0LCBuYXRpdmVQcm9tcHROb3RTdXBwb3J0ZWQsIG5vQWNjb3VudEVycm9yLCBub0NhY2hlZEF1dGhvcml0eUVycm9yLCBub05ldHdvcmtDb25uZWN0aXZpdHksIG5vU3RhdGVJbkhhc2gsIG5vVG9rZW5SZXF1ZXN0Q2FjaGVFcnJvciwgbm9uQnJvd3NlckVudmlyb25tZW50LCBwa2NlTm90Q3JlYXRlZCwgcG9wdXBXaW5kb3dFcnJvciwgcG9zdFJlcXVlc3RGYWlsZWQsIHJlZGlyZWN0SW5JZnJhbWUsIHNpbGVudExvZ291dFVuc3VwcG9ydGVkLCBzaWxlbnRQcm9tcHRWYWx1ZUVycm9yLCBzcGFDb2RlQW5kTmF0aXZlQWNjb3VudElkUHJlc2VudCwgc3RhdGVJbnRlcmFjdGlvblR5cGVNaXNtYXRjaCwgdW5hYmxlVG9BY3F1aXJlVG9rZW5Gcm9tTmF0aXZlUGxhdGZvcm0sIHVuYWJsZVRvTG9hZFRva2VuLCB1bmFibGVUb1BhcnNlU3RhdGUsIHVuYWJsZVRvUGFyc2VUb2tlblJlcXVlc3RDYWNoZUVycm9yLCB1bmluaXRpYWxpemVkUHVibGljQ2xpZW50QXBwbGljYXRpb24sIHVzZXJDYW5jZWxsZWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BrowserConfigurationAuthError: () => (/* binding */ BrowserConfigurationAuthError),\n/* harmony export */   BrowserConfigurationAuthErrorCodes: () => (/* reexport module object */ _BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   BrowserConfigurationAuthErrorMessage: () => (/* binding */ BrowserConfigurationAuthErrorMessage),\n/* harmony export */   BrowserConfigurationAuthErrorMessages: () => (/* binding */ BrowserConfigurationAuthErrorMessages),\n/* harmony export */   createBrowserConfigurationAuthError: () => (/* binding */ createBrowserConfigurationAuthError)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BrowserConfigurationAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst BrowserConfigurationAuthErrorMessages = {\r\n    [_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.storageNotSupported]: \"Given storage configuration option was not supported.\",\r\n    [_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stubbedPublicClientApplicationCalled]: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\r\n    [_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.inMemRedirectUnavailable]: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\r\n};\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use BrowserAuthErrorCodes instead\r\n */\r\nconst BrowserConfigurationAuthErrorMessage = {\r\n    storageNotSupportedError: {\r\n        code: _BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.storageNotSupported,\r\n        desc: BrowserConfigurationAuthErrorMessages[_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.storageNotSupported],\r\n    },\r\n    stubPcaInstanceCalled: {\r\n        code: _BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stubbedPublicClientApplicationCalled,\r\n        desc: BrowserConfigurationAuthErrorMessages[_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stubbedPublicClientApplicationCalled],\r\n    },\r\n    inMemRedirectUnavailable: {\r\n        code: _BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.inMemRedirectUnavailable,\r\n        desc: BrowserConfigurationAuthErrorMessages[_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.inMemRedirectUnavailable],\r\n    },\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nclass BrowserConfigurationAuthError extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode, errorMessage) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"BrowserConfigurationAuthError\";\r\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\r\n    }\r\n}\r\nfunction createBrowserConfigurationAuthError(errorCode) {\r\n    return new BrowserConfigurationAuthError(errorCode, BrowserConfigurationAuthErrorMessages[errorCode]);\r\n}\n\n\n//# sourceMappingURL=BrowserConfigurationAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL0Jyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUMwQztBQUN3RjtBQUNoRDtBQUNqRDs7QUFFOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssd0ZBQW1CO0FBQ3hCLEtBQUsseUdBQW9DO0FBQ3pDLEtBQUssNkZBQXdCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx3RkFBbUI7QUFDakMsb0RBQW9ELHdGQUFtQjtBQUN2RSxLQUFLO0FBQ0w7QUFDQSxjQUFjLHlHQUFvQztBQUNsRCxvREFBb0QseUdBQW9DO0FBQ3hGLEtBQUs7QUFDTDtBQUNBLGNBQWMsNkZBQXdCO0FBQ3RDLG9EQUFvRCw2RkFBd0I7QUFDNUUsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGlFQUFTO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMko7QUFDM0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9lcnJvci9Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5tanM/MjE3NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yNC4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IEF1dGhFcnJvciB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcbmltcG9ydCB7IHN0b3JhZ2VOb3RTdXBwb3J0ZWQsIHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCwgaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlIH0gZnJvbSAnLi9Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvckNvZGVzLm1qcyc7XG5pbXBvcnQgKiBhcyBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvckNvZGVzIGZyb20gJy4vQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JDb2Rlcy5tanMnO1xuZXhwb3J0IHsgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JDb2RlcyB9O1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JNZXNzYWdlcyA9IHtcclxuICAgIFtzdG9yYWdlTm90U3VwcG9ydGVkXTogXCJHaXZlbiBzdG9yYWdlIGNvbmZpZ3VyYXRpb24gb3B0aW9uIHdhcyBub3Qgc3VwcG9ydGVkLlwiLFxyXG4gICAgW3N0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZF06IFwiU3R1YiBpbnN0YW5jZSBvZiBQdWJsaWMgQ2xpZW50IEFwcGxpY2F0aW9uIHdhcyBjYWxsZWQuIElmIHVzaW5nIG1zYWwtcmVhY3QsIHBsZWFzZSBlbnN1cmUgY29udGV4dCBpcyBub3QgdXNlZCB3aXRob3V0IGEgcHJvdmlkZXIuIEZvciBtb3JlIHZpc2l0OiBha2EubXMvbXNhbGpzL2Jyb3dzZXItZXJyb3JzXCIsXHJcbiAgICBbaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlXTogXCJSZWRpcmVjdCBjYW5ub3QgYmUgc3VwcG9ydGVkLiBJbi1tZW1vcnkgc3RvcmFnZSB3YXMgc2VsZWN0ZWQgYW5kIHN0b3JlQXV0aFN0YXRlSW5Db29raWU9ZmFsc2UsIHdoaWNoIHdvdWxkIGNhdXNlIHRoZSBsaWJyYXJ5IHRvIGJlIHVuYWJsZSB0byBoYW5kbGUgdGhlIGluY29taW5nIGhhc2guIElmIHlvdSB3b3VsZCBsaWtlIHRvIHVzZSB0aGUgcmVkaXJlY3QgQVBJLCBwbGVhc2UgdXNlIHNlc3Npb24vbG9jYWxTdG9yYWdlIG9yIHNldCBzdG9yZUF1dGhTdGF0ZUluQ29va2llPXRydWUuXCIsXHJcbn07XHJcbi8qKlxyXG4gKiBCcm93c2VyQXV0aEVycm9yTWVzc2FnZSBjbGFzcyBjb250YWluaW5nIHN0cmluZyBjb25zdGFudHMgdXNlZCBieSBlcnJvciBjb2RlcyBhbmQgbWVzc2FnZXMuXHJcbiAqIEBkZXByZWNhdGVkIFVzZSBCcm93c2VyQXV0aEVycm9yQ29kZXMgaW5zdGVhZFxyXG4gKi9cclxuY29uc3QgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JNZXNzYWdlID0ge1xyXG4gICAgc3RvcmFnZU5vdFN1cHBvcnRlZEVycm9yOiB7XHJcbiAgICAgICAgY29kZTogc3RvcmFnZU5vdFN1cHBvcnRlZCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvck1lc3NhZ2VzW3N0b3JhZ2VOb3RTdXBwb3J0ZWRdLFxyXG4gICAgfSxcclxuICAgIHN0dWJQY2FJbnN0YW5jZUNhbGxlZDoge1xyXG4gICAgICAgIGNvZGU6IHN0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZCxcclxuICAgICAgICBkZXNjOiBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvck1lc3NhZ2VzW3N0dWJiZWRQdWJsaWNDbGllbnRBcHBsaWNhdGlvbkNhbGxlZF0sXHJcbiAgICB9LFxyXG4gICAgaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlOiB7XHJcbiAgICAgICAgY29kZTogaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlLFxyXG4gICAgICAgIGRlc2M6IEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yTWVzc2FnZXNbaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlXSxcclxuICAgIH0sXHJcbn07XHJcbi8qKlxyXG4gKiBCcm93c2VyIGxpYnJhcnkgZXJyb3IgY2xhc3MgdGhyb3duIGJ5IHRoZSBNU0FMLmpzIGxpYnJhcnkgZm9yIFNQQXNcclxuICovXHJcbmNsYXNzIEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICAgICAgc3VwZXIoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IFwiQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3JcIjtcclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IucHJvdG90eXBlKTtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBjcmVhdGVCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvcihlcnJvckNvZGUpIHtcclxuICAgIHJldHVybiBuZXcgQnJvd3NlckNvbmZpZ3VyYXRpb25BdXRoRXJyb3IoZXJyb3JDb2RlLCBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvck1lc3NhZ2VzW2Vycm9yQ29kZV0pO1xyXG59XG5cbmV4cG9ydCB7IEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yLCBCcm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvck1lc3NhZ2UsIEJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yTWVzc2FnZXMsIGNyZWF0ZUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inMemRedirectUnavailable: () => (/* binding */ inMemRedirectUnavailable),\n/* harmony export */   storageNotSupported: () => (/* binding */ storageNotSupported),\n/* harmony export */   stubbedPublicClientApplicationCalled: () => (/* binding */ stubbedPublicClientApplicationCalled)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst storageNotSupported = \"storage_not_supported\";\r\nconst stubbedPublicClientApplicationCalled = \"stubbed_public_client_application_called\";\r\nconst inMemRedirectUnavailable = \"in_mem_redirect_unavailable\";\n\n\n//# sourceMappingURL=BrowserConfigurationAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL0Jyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFK0Y7QUFDL0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9lcnJvci9Ccm93c2VyQ29uZmlndXJhdGlvbkF1dGhFcnJvckNvZGVzLm1qcz80Yzc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IHN0b3JhZ2VOb3RTdXBwb3J0ZWQgPSBcInN0b3JhZ2Vfbm90X3N1cHBvcnRlZFwiO1xyXG5jb25zdCBzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb25DYWxsZWQgPSBcInN0dWJiZWRfcHVibGljX2NsaWVudF9hcHBsaWNhdGlvbl9jYWxsZWRcIjtcclxuY29uc3QgaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlID0gXCJpbl9tZW1fcmVkaXJlY3RfdW5hdmFpbGFibGVcIjtcblxuZXhwb3J0IHsgaW5NZW1SZWRpcmVjdFVuYXZhaWxhYmxlLCBzdG9yYWdlTm90U3VwcG9ydGVkLCBzdHViYmVkUHVibGljQ2xpZW50QXBwbGljYXRpb25DYWxsZWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJyb3dzZXJDb25maWd1cmF0aW9uQXV0aEVycm9yQ29kZXMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NativeAuthError: () => (/* binding */ NativeAuthError),\n/* harmony export */   NativeAuthErrorMessages: () => (/* binding */ NativeAuthErrorMessages),\n/* harmony export */   createNativeAuthError: () => (/* binding */ createNativeAuthError),\n/* harmony export */   isFatalNativeAuthError: () => (/* binding */ isFatalNativeAuthError)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\");\n/* harmony import */ var _BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _NativeAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NativeAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../broker/nativeBroker/NativeStatusCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeStatusCodes.mjs\");\n/* harmony import */ var _BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst INVALID_METHOD_ERROR = -2147186943;\r\nconst NativeAuthErrorMessages = {\r\n    [_NativeAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userSwitch]: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\r\n};\r\nclass NativeAuthError extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode, description, ext) {\r\n        super(errorCode, description);\r\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\r\n        this.name = \"NativeAuthError\";\r\n        this.ext = ext;\r\n    }\r\n}\r\n/**\r\n * These errors should result in a fallback to the 'standard' browser based auth flow.\r\n */\r\nfunction isFatalNativeAuthError(error) {\r\n    if (error.ext &&\r\n        error.ext.status &&\r\n        (error.ext.status === _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.PERSISTENT_ERROR ||\r\n            error.ext.status === _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.DISABLED)) {\r\n        return true;\r\n    }\r\n    if (error.ext &&\r\n        error.ext.error &&\r\n        error.ext.error === INVALID_METHOD_ERROR) {\r\n        return true;\r\n    }\r\n    switch (error.errorCode) {\r\n        case _NativeAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.contentError:\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n/**\r\n * Create the appropriate error object based on the WAM status code.\r\n * @param code\r\n * @param description\r\n * @param ext\r\n * @returns\r\n */\r\nfunction createNativeAuthError(code, description, ext) {\r\n    if (ext && ext.status) {\r\n        switch (ext.status) {\r\n            case _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.ACCOUNT_UNAVAILABLE:\r\n                return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createInteractionRequiredAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.nativeAccountUnavailable);\r\n            case _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.USER_INTERACTION_REQUIRED:\r\n                return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.InteractionRequiredAuthError(code, description);\r\n            case _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.USER_CANCEL:\r\n                return (0,_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.createBrowserAuthError)(_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.userCancelled);\r\n            case _broker_nativeBroker_NativeStatusCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.NO_NETWORK:\r\n                return (0,_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.createBrowserAuthError)(_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.noNetworkConnectivity);\r\n        }\r\n    }\r\n    return new NativeAuthError(code, NativeAuthErrorMessages[code] || description, ext);\r\n}\n\n\n//# sourceMappingURL=NativeAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL05hdGl2ZUF1dGhFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQytJO0FBQzVGO0FBQ007QUFDNkY7QUFDaEY7O0FBRW5GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssaUVBQVU7QUFDZjtBQUNBLDhCQUE4QixpRUFBUztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix3RkFBZ0I7QUFDOUMsaUNBQWlDLGdGQUFRO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1FQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwyRkFBbUI7QUFDcEMsdUJBQXVCLDhGQUFrQyxDQUFDLGdGQUEwRDtBQUNwSCxpQkFBaUIsaUdBQXlCO0FBQzFDLDJCQUEyQixvRkFBNEI7QUFDdkQsaUJBQWlCLG1GQUFXO0FBQzVCLHVCQUF1Qiw2RUFBc0IsQ0FBQyxxRUFBYTtBQUMzRCxpQkFBaUIsa0ZBQVU7QUFDM0IsdUJBQXVCLDZFQUFzQixDQUFDLDZFQUFxQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTs7QUFFbUc7QUFDbkciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9lcnJvci9OYXRpdmVBdXRoRXJyb3IubWpzPzNmNDIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjQuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBBdXRoRXJyb3IsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IsIGNyZWF0ZUludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2RlcyB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IgfSBmcm9tICcuL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IGNvbnRlbnRFcnJvciwgdXNlclN3aXRjaCB9IGZyb20gJy4vTmF0aXZlQXV0aEVycm9yQ29kZXMubWpzJztcbmltcG9ydCB7IFBFUlNJU1RFTlRfRVJST1IsIERJU0FCTEVELCBOT19ORVRXT1JLLCBVU0VSX0NBTkNFTCwgVVNFUl9JTlRFUkFDVElPTl9SRVFVSVJFRCwgQUNDT1VOVF9VTkFWQUlMQUJMRSB9IGZyb20gJy4uL2Jyb2tlci9uYXRpdmVCcm9rZXIvTmF0aXZlU3RhdHVzQ29kZXMubWpzJztcbmltcG9ydCB7IG5vTmV0d29ya0Nvbm5lY3Rpdml0eSwgdXNlckNhbmNlbGxlZCB9IGZyb20gJy4vQnJvd3NlckF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBJTlZBTElEX01FVEhPRF9FUlJPUiA9IC0yMTQ3MTg2OTQzO1xyXG5jb25zdCBOYXRpdmVBdXRoRXJyb3JNZXNzYWdlcyA9IHtcclxuICAgIFt1c2VyU3dpdGNoXTogXCJVc2VyIGF0dGVtcHRlZCB0byBzd2l0Y2ggYWNjb3VudHMgaW4gdGhlIG5hdGl2ZSBicm9rZXIsIHdoaWNoIGlzIG5vdCBhbGxvd2VkLiBBbGwgbmV3IGFjY291bnRzIG11c3Qgc2lnbi1pbiB0aHJvdWdoIHRoZSBzdGFuZGFyZCB3ZWIgZmxvdyBmaXJzdCwgcGxlYXNlIHRyeSBhZ2Fpbi5cIixcclxufTtcclxuY2xhc3MgTmF0aXZlQXV0aEVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZSwgZGVzY3JpcHRpb24sIGV4dCkge1xyXG4gICAgICAgIHN1cGVyKGVycm9yQ29kZSwgZGVzY3JpcHRpb24pO1xyXG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBOYXRpdmVBdXRoRXJyb3IucHJvdG90eXBlKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIk5hdGl2ZUF1dGhFcnJvclwiO1xyXG4gICAgICAgIHRoaXMuZXh0ID0gZXh0O1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBUaGVzZSBlcnJvcnMgc2hvdWxkIHJlc3VsdCBpbiBhIGZhbGxiYWNrIHRvIHRoZSAnc3RhbmRhcmQnIGJyb3dzZXIgYmFzZWQgYXV0aCBmbG93LlxyXG4gKi9cclxuZnVuY3Rpb24gaXNGYXRhbE5hdGl2ZUF1dGhFcnJvcihlcnJvcikge1xyXG4gICAgaWYgKGVycm9yLmV4dCAmJlxyXG4gICAgICAgIGVycm9yLmV4dC5zdGF0dXMgJiZcclxuICAgICAgICAoZXJyb3IuZXh0LnN0YXR1cyA9PT0gUEVSU0lTVEVOVF9FUlJPUiB8fFxyXG4gICAgICAgICAgICBlcnJvci5leHQuc3RhdHVzID09PSBESVNBQkxFRCkpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIGlmIChlcnJvci5leHQgJiZcclxuICAgICAgICBlcnJvci5leHQuZXJyb3IgJiZcclxuICAgICAgICBlcnJvci5leHQuZXJyb3IgPT09IElOVkFMSURfTUVUSE9EX0VSUk9SKSB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBzd2l0Y2ggKGVycm9yLmVycm9yQ29kZSkge1xyXG4gICAgICAgIGNhc2UgY29udGVudEVycm9yOlxyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIENyZWF0ZSB0aGUgYXBwcm9wcmlhdGUgZXJyb3Igb2JqZWN0IGJhc2VkIG9uIHRoZSBXQU0gc3RhdHVzIGNvZGUuXHJcbiAqIEBwYXJhbSBjb2RlXHJcbiAqIEBwYXJhbSBkZXNjcmlwdGlvblxyXG4gKiBAcGFyYW0gZXh0XHJcbiAqIEByZXR1cm5zXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVOYXRpdmVBdXRoRXJyb3IoY29kZSwgZGVzY3JpcHRpb24sIGV4dCkge1xyXG4gICAgaWYgKGV4dCAmJiBleHQuc3RhdHVzKSB7XHJcbiAgICAgICAgc3dpdGNoIChleHQuc3RhdHVzKSB7XHJcbiAgICAgICAgICAgIGNhc2UgQUNDT1VOVF9VTkFWQUlMQUJMRTpcclxuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yKEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2Rlcy5uYXRpdmVBY2NvdW50VW5hdmFpbGFibGUpO1xyXG4gICAgICAgICAgICBjYXNlIFVTRVJfSU5URVJBQ1RJT05fUkVRVUlSRUQ6XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IoY29kZSwgZGVzY3JpcHRpb24pO1xyXG4gICAgICAgICAgICBjYXNlIFVTRVJfQ0FOQ0VMOlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IodXNlckNhbmNlbGxlZCk7XHJcbiAgICAgICAgICAgIGNhc2UgTk9fTkVUV09SSzpcclxuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVCcm93c2VyQXV0aEVycm9yKG5vTmV0d29ya0Nvbm5lY3Rpdml0eSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG5ldyBOYXRpdmVBdXRoRXJyb3IoY29kZSwgTmF0aXZlQXV0aEVycm9yTWVzc2FnZXNbY29kZV0gfHwgZGVzY3JpcHRpb24sIGV4dCk7XHJcbn1cblxuZXhwb3J0IHsgTmF0aXZlQXV0aEVycm9yLCBOYXRpdmVBdXRoRXJyb3JNZXNzYWdlcywgY3JlYXRlTmF0aXZlQXV0aEVycm9yLCBpc0ZhdGFsTmF0aXZlQXV0aEVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1OYXRpdmVBdXRoRXJyb3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   contentError: () => (/* binding */ contentError),\n/* harmony export */   userSwitch: () => (/* binding */ userSwitch)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst contentError = \"ContentError\";\r\nconst userSwitch = \"user_switch\";\n\n\n//# sourceMappingURL=NativeAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL05hdGl2ZUF1dGhFcnJvckNvZGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW9DO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvZXJyb3IvTmF0aXZlQXV0aEVycm9yQ29kZXMubWpzPzQ5YjIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjQuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgY29udGVudEVycm9yID0gXCJDb250ZW50RXJyb3JcIjtcclxuY29uc3QgdXNlclN3aXRjaCA9IFwidXNlcl9zd2l0Y2hcIjtcblxuZXhwb3J0IHsgY29udGVudEVycm9yLCB1c2VyU3dpdGNoIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1OYXRpdmVBdXRoRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/error/NestedAppAuthError.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/error/NestedAppAuthError.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NestedAppAuthError: () => (/* binding */ NestedAppAuthError),\n/* harmony export */   NestedAppAuthErrorMessage: () => (/* binding */ NestedAppAuthErrorMessage)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * NestedAppAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst NestedAppAuthErrorMessage = {\r\n    unsupportedMethod: {\r\n        code: \"unsupported_method\",\r\n        desc: \"This method is not supported in nested app environment.\",\r\n    },\r\n};\r\nclass NestedAppAuthError extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthError {\r\n    constructor(errorCode, errorMessage) {\r\n        super(errorCode, errorMessage);\r\n        Object.setPrototypeOf(this, NestedAppAuthError.prototype);\r\n        this.name = \"NestedAppAuthError\";\r\n    }\r\n    static createUnsupportedError() {\r\n        return new NestedAppAuthError(NestedAppAuthErrorMessage.unsupportedMethod.code, NestedAppAuthErrorMessage.unsupportedMethod.desc);\r\n    }\r\n}\n\n\n//# sourceMappingURL=NestedAppAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2Vycm9yL05lc3RlZEFwcEF1dGhFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUMwQzs7QUFFdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGlDQUFpQyxpRUFBUztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlEO0FBQ3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvZXJyb3IvTmVzdGVkQXBwQXV0aEVycm9yLm1qcz8wYThiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIE5lc3RlZEFwcEF1dGhFcnJvck1lc3NhZ2UgY2xhc3MgY29udGFpbmluZyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzLlxyXG4gKi9cclxuY29uc3QgTmVzdGVkQXBwQXV0aEVycm9yTWVzc2FnZSA9IHtcclxuICAgIHVuc3VwcG9ydGVkTWV0aG9kOiB7XHJcbiAgICAgICAgY29kZTogXCJ1bnN1cHBvcnRlZF9tZXRob2RcIixcclxuICAgICAgICBkZXNjOiBcIlRoaXMgbWV0aG9kIGlzIG5vdCBzdXBwb3J0ZWQgaW4gbmVzdGVkIGFwcCBlbnZpcm9ubWVudC5cIixcclxuICAgIH0sXHJcbn07XHJcbmNsYXNzIE5lc3RlZEFwcEF1dGhFcnJvciBleHRlbmRzIEF1dGhFcnJvciB7XHJcbiAgICBjb25zdHJ1Y3RvcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgICAgIHN1cGVyKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlKTtcclxuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgTmVzdGVkQXBwQXV0aEVycm9yLnByb3RvdHlwZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gXCJOZXN0ZWRBcHBBdXRoRXJyb3JcIjtcclxuICAgIH1cclxuICAgIHN0YXRpYyBjcmVhdGVVbnN1cHBvcnRlZEVycm9yKCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgTmVzdGVkQXBwQXV0aEVycm9yKE5lc3RlZEFwcEF1dGhFcnJvck1lc3NhZ2UudW5zdXBwb3J0ZWRNZXRob2QuY29kZSwgTmVzdGVkQXBwQXV0aEVycm9yTWVzc2FnZS51bnN1cHBvcnRlZE1ldGhvZC5kZXNjKTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBOZXN0ZWRBcHBBdXRoRXJyb3IsIE5lc3RlZEFwcEF1dGhFcnJvck1lc3NhZ2UgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5lc3RlZEFwcEF1dGhFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/error/NestedAppAuthError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventHandler: () => (/* binding */ EventHandler)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\");\n/* harmony import */ var _EventType_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EventType.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass EventHandler {\r\n    constructor(logger, browserCrypto) {\r\n        this.eventCallbacks = new Map();\r\n        this.logger = logger;\r\n        this.browserCrypto = browserCrypto;\r\n        this.listeningToStorageEvents = false;\r\n        this.handleAccountCacheChange =\r\n            this.handleAccountCacheChange.bind(this);\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     */\r\n    addEventCallback(callback) {\r\n        if (typeof window !== \"undefined\") {\r\n            const callbackId = (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.createNewGuid)();\r\n            this.eventCallbacks.set(callbackId, callback);\r\n            this.logger.verbose(`Event callback registered with id: ${callbackId}`);\r\n            return callbackId;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        this.eventCallbacks.delete(callbackId);\r\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\r\n    }\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    enableAccountStorageEvents() {\r\n        if (typeof window === \"undefined\") {\r\n            return;\r\n        }\r\n        if (!this.listeningToStorageEvents) {\r\n            this.logger.verbose(\"Adding account storage listener.\");\r\n            this.listeningToStorageEvents = true;\r\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\r\n        }\r\n        else {\r\n            this.logger.verbose(\"Account storage listener already registered.\");\r\n        }\r\n    }\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    disableAccountStorageEvents() {\r\n        if (typeof window === \"undefined\") {\r\n            return;\r\n        }\r\n        if (this.listeningToStorageEvents) {\r\n            this.logger.verbose(\"Removing account storage listener.\");\r\n            window.removeEventListener(\"storage\", this.handleAccountCacheChange);\r\n            this.listeningToStorageEvents = false;\r\n        }\r\n        else {\r\n            this.logger.verbose(\"No account storage listener registered.\");\r\n        }\r\n    }\r\n    /**\r\n     * Emits events by calling callback with event message\r\n     * @param eventType\r\n     * @param interactionType\r\n     * @param payload\r\n     * @param error\r\n     */\r\n    emitEvent(eventType, interactionType, payload, error) {\r\n        if (typeof window !== \"undefined\") {\r\n            const message = {\r\n                eventType: eventType,\r\n                interactionType: interactionType || null,\r\n                payload: payload || null,\r\n                error: error || null,\r\n                timestamp: Date.now(),\r\n            };\r\n            this.logger.info(`Emitting event: ${eventType}`);\r\n            this.eventCallbacks.forEach((callback, callbackId) => {\r\n                this.logger.verbose(`Emitting event to callback ${callbackId}: ${eventType}`);\r\n                callback.apply(null, [message]);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\r\n     */\r\n    handleAccountCacheChange(e) {\r\n        try {\r\n            // Handle active account filter change\r\n            if (e.key?.includes(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS)) {\r\n                // This event has no payload, it only signals cross-tab app instances that the results of calling getActiveAccount() will have changed\r\n                this.emitEvent(_EventType_mjs__WEBPACK_IMPORTED_MODULE_2__.EventType.ACTIVE_ACCOUNT_CHANGED);\r\n            }\r\n            // Handle account object change\r\n            const cacheValue = e.newValue || e.oldValue;\r\n            if (!cacheValue) {\r\n                return;\r\n            }\r\n            const parsedValue = JSON.parse(cacheValue);\r\n            if (typeof parsedValue !== \"object\" ||\r\n                !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AccountEntity.isAccountEntity(parsedValue)) {\r\n                return;\r\n            }\r\n            const accountEntity = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.CacheManager.toObject(new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AccountEntity(), parsedValue);\r\n            const accountInfo = accountEntity.getAccountInfo();\r\n            if (!e.oldValue && e.newValue) {\r\n                this.logger.info(\"Account was added to cache in a different window\");\r\n                this.emitEvent(_EventType_mjs__WEBPACK_IMPORTED_MODULE_2__.EventType.ACCOUNT_ADDED, undefined, accountInfo);\r\n            }\r\n            else if (!e.newValue && e.oldValue) {\r\n                this.logger.info(\"Account was removed from cache in a different window\");\r\n                this.emitEvent(_EventType_mjs__WEBPACK_IMPORTED_MODULE_2__.EventType.ACCOUNT_REMOVED, undefined, accountInfo);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return;\r\n        }\r\n    }\r\n}\n\n\n//# sourceMappingURL=EventHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2V2ZW50L0V2ZW50SGFuZGxlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNpRjtBQUNsRDtBQUNnQjs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isd0VBQWE7QUFDNUM7QUFDQSxzRUFBc0UsV0FBVztBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QyxZQUFZO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELFVBQVU7QUFDMUQ7QUFDQSxrRUFBa0UsV0FBVyxJQUFJLFVBQVU7QUFDM0Y7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQywyRUFBbUI7QUFDbkQ7QUFDQSwrQkFBK0IscURBQVM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixxRUFBYTtBQUM5QjtBQUNBO0FBQ0Esa0NBQWtDLG9FQUFZLGNBQWMscUVBQWE7QUFDekU7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHFEQUFTO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixxREFBUztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9ldmVudC9FdmVudEhhbmRsZXIubWpzP2Q2N2UiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjQuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBQZXJzaXN0ZW50Q2FjaGVLZXlzLCBBY2NvdW50RW50aXR5LCBDYWNoZU1hbmFnZXIgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBFdmVudFR5cGUgfSBmcm9tICcuL0V2ZW50VHlwZS5tanMnO1xuaW1wb3J0IHsgY3JlYXRlTmV3R3VpZCB9IGZyb20gJy4uL2NyeXB0by9Ccm93c2VyQ3J5cHRvLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBFdmVudEhhbmRsZXIge1xyXG4gICAgY29uc3RydWN0b3IobG9nZ2VyLCBicm93c2VyQ3J5cHRvKSB7XHJcbiAgICAgICAgdGhpcy5ldmVudENhbGxiYWNrcyA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLmxvZ2dlciA9IGxvZ2dlcjtcclxuICAgICAgICB0aGlzLmJyb3dzZXJDcnlwdG8gPSBicm93c2VyQ3J5cHRvO1xyXG4gICAgICAgIHRoaXMubGlzdGVuaW5nVG9TdG9yYWdlRXZlbnRzID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVBY2NvdW50Q2FjaGVDaGFuZ2UgPVxyXG4gICAgICAgICAgICB0aGlzLmhhbmRsZUFjY291bnRDYWNoZUNoYW5nZS5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBZGRzIGV2ZW50IGNhbGxiYWNrcyB0byBhcnJheVxyXG4gICAgICogQHBhcmFtIGNhbGxiYWNrXHJcbiAgICAgKi9cclxuICAgIGFkZEV2ZW50Q2FsbGJhY2soY2FsbGJhY2spIHtcclxuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgICAgICAgICBjb25zdCBjYWxsYmFja0lkID0gY3JlYXRlTmV3R3VpZCgpO1xyXG4gICAgICAgICAgICB0aGlzLmV2ZW50Q2FsbGJhY2tzLnNldChjYWxsYmFja0lkLCBjYWxsYmFjayk7XHJcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoYEV2ZW50IGNhbGxiYWNrIHJlZ2lzdGVyZWQgd2l0aCBpZDogJHtjYWxsYmFja0lkfWApO1xyXG4gICAgICAgICAgICByZXR1cm4gY2FsbGJhY2tJZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZXMgY2FsbGJhY2sgd2l0aCBwcm92aWRlZCBpZCBmcm9tIGNhbGxiYWNrIGFycmF5XHJcbiAgICAgKiBAcGFyYW0gY2FsbGJhY2tJZFxyXG4gICAgICovXHJcbiAgICByZW1vdmVFdmVudENhbGxiYWNrKGNhbGxiYWNrSWQpIHtcclxuICAgICAgICB0aGlzLmV2ZW50Q2FsbGJhY2tzLmRlbGV0ZShjYWxsYmFja0lkKTtcclxuICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKGBFdmVudCBjYWxsYmFjayAke2NhbGxiYWNrSWR9IHJlbW92ZWQuYCk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEFkZHMgZXZlbnQgbGlzdGVuZXIgdGhhdCBlbWl0cyBhbiBldmVudCB3aGVuIGEgdXNlciBhY2NvdW50IGlzIGFkZGVkIG9yIHJlbW92ZWQgZnJvbSBsb2NhbHN0b3JhZ2UgaW4gYSBkaWZmZXJlbnQgYnJvd3NlciB0YWIgb3Igd2luZG93XHJcbiAgICAgKi9cclxuICAgIGVuYWJsZUFjY291bnRTdG9yYWdlRXZlbnRzKCkge1xyXG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCF0aGlzLmxpc3RlbmluZ1RvU3RvcmFnZUV2ZW50cykge1xyXG4gICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiQWRkaW5nIGFjY291bnQgc3RvcmFnZSBsaXN0ZW5lci5cIik7XHJcbiAgICAgICAgICAgIHRoaXMubGlzdGVuaW5nVG9TdG9yYWdlRXZlbnRzID0gdHJ1ZTtcclxuICAgICAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJzdG9yYWdlXCIsIHRoaXMuaGFuZGxlQWNjb3VudENhY2hlQ2hhbmdlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJBY2NvdW50IHN0b3JhZ2UgbGlzdGVuZXIgYWxyZWFkeSByZWdpc3RlcmVkLlwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZXMgZXZlbnQgbGlzdGVuZXIgdGhhdCBlbWl0cyBhbiBldmVudCB3aGVuIGEgdXNlciBhY2NvdW50IGlzIGFkZGVkIG9yIHJlbW92ZWQgZnJvbSBsb2NhbHN0b3JhZ2UgaW4gYSBkaWZmZXJlbnQgYnJvd3NlciB0YWIgb3Igd2luZG93XHJcbiAgICAgKi9cclxuICAgIGRpc2FibGVBY2NvdW50U3RvcmFnZUV2ZW50cygpIHtcclxuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmxpc3RlbmluZ1RvU3RvcmFnZUV2ZW50cykge1xyXG4gICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiUmVtb3ZpbmcgYWNjb3VudCBzdG9yYWdlIGxpc3RlbmVyLlwiKTtcclxuICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzdG9yYWdlXCIsIHRoaXMuaGFuZGxlQWNjb3VudENhY2hlQ2hhbmdlKTtcclxuICAgICAgICAgICAgdGhpcy5saXN0ZW5pbmdUb1N0b3JhZ2VFdmVudHMgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJObyBhY2NvdW50IHN0b3JhZ2UgbGlzdGVuZXIgcmVnaXN0ZXJlZC5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBFbWl0cyBldmVudHMgYnkgY2FsbGluZyBjYWxsYmFjayB3aXRoIGV2ZW50IG1lc3NhZ2VcclxuICAgICAqIEBwYXJhbSBldmVudFR5cGVcclxuICAgICAqIEBwYXJhbSBpbnRlcmFjdGlvblR5cGVcclxuICAgICAqIEBwYXJhbSBwYXlsb2FkXHJcbiAgICAgKiBAcGFyYW0gZXJyb3JcclxuICAgICAqL1xyXG4gICAgZW1pdEV2ZW50KGV2ZW50VHlwZSwgaW50ZXJhY3Rpb25UeXBlLCBwYXlsb2FkLCBlcnJvcikge1xyXG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSB7XHJcbiAgICAgICAgICAgICAgICBldmVudFR5cGU6IGV2ZW50VHlwZSxcclxuICAgICAgICAgICAgICAgIGludGVyYWN0aW9uVHlwZTogaW50ZXJhY3Rpb25UeXBlIHx8IG51bGwsXHJcbiAgICAgICAgICAgICAgICBwYXlsb2FkOiBwYXlsb2FkIHx8IG51bGwsXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IgfHwgbnVsbCxcclxuICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKSxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhgRW1pdHRpbmcgZXZlbnQ6ICR7ZXZlbnRUeXBlfWApO1xyXG4gICAgICAgICAgICB0aGlzLmV2ZW50Q2FsbGJhY2tzLmZvckVhY2goKGNhbGxiYWNrLCBjYWxsYmFja0lkKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKGBFbWl0dGluZyBldmVudCB0byBjYWxsYmFjayAke2NhbGxiYWNrSWR9OiAke2V2ZW50VHlwZX1gKTtcclxuICAgICAgICAgICAgICAgIGNhbGxiYWNrLmFwcGx5KG51bGwsIFttZXNzYWdlXSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRW1pdCBhY2NvdW50IGFkZGVkL3JlbW92ZWQgZXZlbnRzIHdoZW4gY2FjaGVkIGFjY291bnRzIGFyZSBjaGFuZ2VkIGluIGEgZGlmZmVyZW50IHRhYiBvciBmcmFtZVxyXG4gICAgICovXHJcbiAgICBoYW5kbGVBY2NvdW50Q2FjaGVDaGFuZ2UoZSkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIC8vIEhhbmRsZSBhY3RpdmUgYWNjb3VudCBmaWx0ZXIgY2hhbmdlXHJcbiAgICAgICAgICAgIGlmIChlLmtleT8uaW5jbHVkZXMoUGVyc2lzdGVudENhY2hlS2V5cy5BQ1RJVkVfQUNDT1VOVF9GSUxURVJTKSkge1xyXG4gICAgICAgICAgICAgICAgLy8gVGhpcyBldmVudCBoYXMgbm8gcGF5bG9hZCwgaXQgb25seSBzaWduYWxzIGNyb3NzLXRhYiBhcHAgaW5zdGFuY2VzIHRoYXQgdGhlIHJlc3VsdHMgb2YgY2FsbGluZyBnZXRBY3RpdmVBY2NvdW50KCkgd2lsbCBoYXZlIGNoYW5nZWRcclxuICAgICAgICAgICAgICAgIHRoaXMuZW1pdEV2ZW50KEV2ZW50VHlwZS5BQ1RJVkVfQUNDT1VOVF9DSEFOR0VEKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBIYW5kbGUgYWNjb3VudCBvYmplY3QgY2hhbmdlXHJcbiAgICAgICAgICAgIGNvbnN0IGNhY2hlVmFsdWUgPSBlLm5ld1ZhbHVlIHx8IGUub2xkVmFsdWU7XHJcbiAgICAgICAgICAgIGlmICghY2FjaGVWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZFZhbHVlID0gSlNPTi5wYXJzZShjYWNoZVZhbHVlKTtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBwYXJzZWRWYWx1ZSAhPT0gXCJvYmplY3RcIiB8fFxyXG4gICAgICAgICAgICAgICAgIUFjY291bnRFbnRpdHkuaXNBY2NvdW50RW50aXR5KHBhcnNlZFZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IGFjY291bnRFbnRpdHkgPSBDYWNoZU1hbmFnZXIudG9PYmplY3QobmV3IEFjY291bnRFbnRpdHkoKSwgcGFyc2VkVmFsdWUpO1xyXG4gICAgICAgICAgICBjb25zdCBhY2NvdW50SW5mbyA9IGFjY291bnRFbnRpdHkuZ2V0QWNjb3VudEluZm8oKTtcclxuICAgICAgICAgICAgaWYgKCFlLm9sZFZhbHVlICYmIGUubmV3VmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJBY2NvdW50IHdhcyBhZGRlZCB0byBjYWNoZSBpbiBhIGRpZmZlcmVudCB3aW5kb3dcIik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVtaXRFdmVudChFdmVudFR5cGUuQUNDT1VOVF9BRERFRCwgdW5kZWZpbmVkLCBhY2NvdW50SW5mbyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoIWUubmV3VmFsdWUgJiYgZS5vbGRWYWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcIkFjY291bnQgd2FzIHJlbW92ZWQgZnJvbSBjYWNoZSBpbiBhIGRpZmZlcmVudCB3aW5kb3dcIik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmVtaXRFdmVudChFdmVudFR5cGUuQUNDT1VOVF9SRU1PVkVELCB1bmRlZmluZWQsIGFjY291bnRJbmZvKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IEV2ZW50SGFuZGxlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RXZlbnRIYW5kbGVyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/event/EventType.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/event/EventType.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventType: () => (/* binding */ EventType)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst EventType = {\r\n    INITIALIZE_START: \"msal:initializeStart\",\r\n    INITIALIZE_END: \"msal:initializeEnd\",\r\n    ACCOUNT_ADDED: \"msal:accountAdded\",\r\n    ACCOUNT_REMOVED: \"msal:accountRemoved\",\r\n    ACTIVE_ACCOUNT_CHANGED: \"msal:activeAccountChanged\",\r\n    LOGIN_START: \"msal:loginStart\",\r\n    LOGIN_SUCCESS: \"msal:loginSuccess\",\r\n    LOGIN_FAILURE: \"msal:loginFailure\",\r\n    ACQUIRE_TOKEN_START: \"msal:acquireTokenStart\",\r\n    ACQUIRE_TOKEN_SUCCESS: \"msal:acquireTokenSuccess\",\r\n    ACQUIRE_TOKEN_FAILURE: \"msal:acquireTokenFailure\",\r\n    ACQUIRE_TOKEN_NETWORK_START: \"msal:acquireTokenFromNetworkStart\",\r\n    SSO_SILENT_START: \"msal:ssoSilentStart\",\r\n    SSO_SILENT_SUCCESS: \"msal:ssoSilentSuccess\",\r\n    SSO_SILENT_FAILURE: \"msal:ssoSilentFailure\",\r\n    ACQUIRE_TOKEN_BY_CODE_START: \"msal:acquireTokenByCodeStart\",\r\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS: \"msal:acquireTokenByCodeSuccess\",\r\n    ACQUIRE_TOKEN_BY_CODE_FAILURE: \"msal:acquireTokenByCodeFailure\",\r\n    HANDLE_REDIRECT_START: \"msal:handleRedirectStart\",\r\n    HANDLE_REDIRECT_END: \"msal:handleRedirectEnd\",\r\n    POPUP_OPENED: \"msal:popupOpened\",\r\n    LOGOUT_START: \"msal:logoutStart\",\r\n    LOGOUT_SUCCESS: \"msal:logoutSuccess\",\r\n    LOGOUT_FAILURE: \"msal:logoutFailure\",\r\n    LOGOUT_END: \"msal:logoutEnd\",\r\n    RESTORE_FROM_BFCACHE: \"msal:restoreFromBFCache\",\r\n};\n\n\n//# sourceMappingURL=EventType.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2V2ZW50L0V2ZW50VHlwZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2V2ZW50L0V2ZW50VHlwZS5tanM/MDQ2MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yNC4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBFdmVudFR5cGUgPSB7XHJcbiAgICBJTklUSUFMSVpFX1NUQVJUOiBcIm1zYWw6aW5pdGlhbGl6ZVN0YXJ0XCIsXHJcbiAgICBJTklUSUFMSVpFX0VORDogXCJtc2FsOmluaXRpYWxpemVFbmRcIixcclxuICAgIEFDQ09VTlRfQURERUQ6IFwibXNhbDphY2NvdW50QWRkZWRcIixcclxuICAgIEFDQ09VTlRfUkVNT1ZFRDogXCJtc2FsOmFjY291bnRSZW1vdmVkXCIsXHJcbiAgICBBQ1RJVkVfQUNDT1VOVF9DSEFOR0VEOiBcIm1zYWw6YWN0aXZlQWNjb3VudENoYW5nZWRcIixcclxuICAgIExPR0lOX1NUQVJUOiBcIm1zYWw6bG9naW5TdGFydFwiLFxyXG4gICAgTE9HSU5fU1VDQ0VTUzogXCJtc2FsOmxvZ2luU3VjY2Vzc1wiLFxyXG4gICAgTE9HSU5fRkFJTFVSRTogXCJtc2FsOmxvZ2luRmFpbHVyZVwiLFxyXG4gICAgQUNRVUlSRV9UT0tFTl9TVEFSVDogXCJtc2FsOmFjcXVpcmVUb2tlblN0YXJ0XCIsXHJcbiAgICBBQ1FVSVJFX1RPS0VOX1NVQ0NFU1M6IFwibXNhbDphY3F1aXJlVG9rZW5TdWNjZXNzXCIsXHJcbiAgICBBQ1FVSVJFX1RPS0VOX0ZBSUxVUkU6IFwibXNhbDphY3F1aXJlVG9rZW5GYWlsdXJlXCIsXHJcbiAgICBBQ1FVSVJFX1RPS0VOX05FVFdPUktfU1RBUlQ6IFwibXNhbDphY3F1aXJlVG9rZW5Gcm9tTmV0d29ya1N0YXJ0XCIsXHJcbiAgICBTU09fU0lMRU5UX1NUQVJUOiBcIm1zYWw6c3NvU2lsZW50U3RhcnRcIixcclxuICAgIFNTT19TSUxFTlRfU1VDQ0VTUzogXCJtc2FsOnNzb1NpbGVudFN1Y2Nlc3NcIixcclxuICAgIFNTT19TSUxFTlRfRkFJTFVSRTogXCJtc2FsOnNzb1NpbGVudEZhaWx1cmVcIixcclxuICAgIEFDUVVJUkVfVE9LRU5fQllfQ09ERV9TVEFSVDogXCJtc2FsOmFjcXVpcmVUb2tlbkJ5Q29kZVN0YXJ0XCIsXHJcbiAgICBBQ1FVSVJFX1RPS0VOX0JZX0NPREVfU1VDQ0VTUzogXCJtc2FsOmFjcXVpcmVUb2tlbkJ5Q29kZVN1Y2Nlc3NcIixcclxuICAgIEFDUVVJUkVfVE9LRU5fQllfQ09ERV9GQUlMVVJFOiBcIm1zYWw6YWNxdWlyZVRva2VuQnlDb2RlRmFpbHVyZVwiLFxyXG4gICAgSEFORExFX1JFRElSRUNUX1NUQVJUOiBcIm1zYWw6aGFuZGxlUmVkaXJlY3RTdGFydFwiLFxyXG4gICAgSEFORExFX1JFRElSRUNUX0VORDogXCJtc2FsOmhhbmRsZVJlZGlyZWN0RW5kXCIsXHJcbiAgICBQT1BVUF9PUEVORUQ6IFwibXNhbDpwb3B1cE9wZW5lZFwiLFxyXG4gICAgTE9HT1VUX1NUQVJUOiBcIm1zYWw6bG9nb3V0U3RhcnRcIixcclxuICAgIExPR09VVF9TVUNDRVNTOiBcIm1zYWw6bG9nb3V0U3VjY2Vzc1wiLFxyXG4gICAgTE9HT1VUX0ZBSUxVUkU6IFwibXNhbDpsb2dvdXRGYWlsdXJlXCIsXHJcbiAgICBMT0dPVVRfRU5EOiBcIm1zYWw6bG9nb3V0RW5kXCIsXHJcbiAgICBSRVNUT1JFX0ZST01fQkZDQUNIRTogXCJtc2FsOnJlc3RvcmVGcm9tQkZDYWNoZVwiLFxyXG59O1xuXG5leHBvcnQgeyBFdmVudFR5cGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUV2ZW50VHlwZS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/event/EventType.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs":
/*!********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseInteractionClient: () => (/* binding */ BaseInteractionClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass BaseInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) {\r\n        this.config = config;\r\n        this.browserStorage = storageImpl;\r\n        this.browserCrypto = browserCrypto;\r\n        this.networkClient = this.config.system.networkClient;\r\n        this.eventHandler = eventHandler;\r\n        this.navigationClient = navigationClient;\r\n        this.nativeMessageHandler = nativeMessageHandler;\r\n        this.correlationId = correlationId || (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.createNewGuid)();\r\n        this.logger = logger.clone(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserConstants.MSAL_SKU, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.version, this.correlationId);\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    async clearCacheOnLogout(account) {\r\n        if (account) {\r\n            if (_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\r\n                this.logger.verbose(\"Setting active account to null\");\r\n                this.browserStorage.setActiveAccount(null);\r\n            }\r\n            // Clear given account.\r\n            try {\r\n                await this.browserStorage.removeAccount(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.AccountEntity.generateAccountCacheKey(account));\r\n                this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\r\n            }\r\n            catch (error) {\r\n                this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId);\r\n                // Clear all accounts and tokens\r\n                await this.browserStorage.clear();\r\n                // Clear any stray keys from IndexedDB\r\n                await this.browserCrypto.clearKeystore();\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * @param requestRedirectUri\r\n     * @returns Redirect URL\r\n     *\r\n     */\r\n    getRedirectUri(requestRedirectUri) {\r\n        this.logger.verbose(\"getRedirectUri called\");\r\n        const redirectUri = requestRedirectUri ||\r\n            this.config.auth.redirectUri ||\r\n            (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.getCurrentUri)();\r\n        return _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.UrlString.getAbsoluteUrl(redirectUri, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.getCurrentUri)());\r\n    }\r\n    /**\r\n     *\r\n     * @param apiId\r\n     * @param correlationId\r\n     * @param forceRefresh\r\n     */\r\n    initializeServerTelemetryManager(apiId, forceRefresh) {\r\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\r\n        const telemetryPayload = {\r\n            clientId: this.config.auth.clientId,\r\n            correlationId: this.correlationId,\r\n            apiId: apiId,\r\n            forceRefresh: forceRefresh || false,\r\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\r\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1],\r\n        };\r\n        return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.ServerTelemetryManager(telemetryPayload, this.browserStorage);\r\n    }\r\n    /**\r\n     * Used to get a discovered version of the default authority.\r\n     * @param params {\r\n     *         requestAuthority?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async getDiscoveredAuthority(params) {\r\n        const { account } = params;\r\n        const instanceAwareEQ = params.requestExtraQueryParameters &&\r\n            params.requestExtraQueryParameters.hasOwnProperty(\"instance_aware\")\r\n            ? params.requestExtraQueryParameters[\"instance_aware\"]\r\n            : undefined;\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.correlationId);\r\n        const authorityOptions = {\r\n            protocolMode: this.config.auth.protocolMode,\r\n            OIDCOptions: this.config.auth.OIDCOptions,\r\n            knownAuthorities: this.config.auth.knownAuthorities,\r\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n            authorityMetadata: this.config.auth.authorityMetadata,\r\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\r\n        };\r\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\r\n        const resolvedAuthority = params.requestAuthority || this.config.auth.authority;\r\n        const resolvedInstanceAware = instanceAwareEQ?.length\r\n            ? instanceAwareEQ === \"true\"\r\n            : this.config.auth.instanceAware;\r\n        const userAuthority = account && resolvedInstanceAware\r\n            ? this.config.auth.authority.replace(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.UrlString.getDomainFromUrl(resolvedAuthority), account.environment)\r\n            : resolvedAuthority;\r\n        // fall back to the authority from config\r\n        const builtAuthority = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.Authority.generateAuthority(userAuthority, params.requestAzureCloudOptions ||\r\n            this.config.auth.azureCloudOptions);\r\n        const discoveredAuthority = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.invokeAsync)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.createDiscoveredInstance, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, this.logger, this.performanceClient, this.correlationId)(builtAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger, this.correlationId, this.performanceClient);\r\n        if (account && !discoveredAuthority.isAlias(account.environment)) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.createClientConfigurationError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_12__.authorityMismatch);\r\n        }\r\n        return discoveredAuthority;\r\n    }\r\n}\n\n\n//# sourceMappingURL=BaseInteractionClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HybridSpaAuthorizationCodeClient: () => (/* binding */ HybridSpaAuthorizationCodeClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass HybridSpaAuthorizationCodeClient extends _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.AuthorizationCodeClient {\r\n    constructor(config) {\r\n        super(config);\r\n        this.includeRedirectUri = false;\r\n    }\r\n}\n\n\n//# sourceMappingURL=HybridSpaAuthorizationCodeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9IeWJyaWRTcGFBdXRob3JpemF0aW9uQ29kZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ3dEOztBQUVyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQywrRUFBdUI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9pbnRlcmFjdGlvbl9jbGllbnQvSHlicmlkU3BhQXV0aG9yaXphdGlvbkNvZGVDbGllbnQubWpzP2JmNzMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjQuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBBdXRob3JpemF0aW9uQ29kZUNsaWVudCB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIEh5YnJpZFNwYUF1dGhvcml6YXRpb25Db2RlQ2xpZW50IGV4dGVuZHMgQXV0aG9yaXphdGlvbkNvZGVDbGllbnQge1xyXG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XHJcbiAgICAgICAgc3VwZXIoY29uZmlnKTtcclxuICAgICAgICB0aGlzLmluY2x1ZGVSZWRpcmVjdFVyaSA9IGZhbHNlO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IEh5YnJpZFNwYUF1dGhvcml6YXRpb25Db2RlQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1IeWJyaWRTcGFBdXRob3JpemF0aW9uQ29kZUNsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NativeInteractionClient: () => (/* binding */ NativeInteractionClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/NativeAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SilentCacheClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs\");\n/* harmony import */ var _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../encode/Base64Decode.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/* harmony import */ var _error_NativeAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../error/NativeAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst BrokerServerParamKeys = {\r\n    BROKER_CLIENT_ID: \"brk_client_id\",\r\n    BROKER_REDIRECT_URI: \"brk_redirect_uri\",\r\n};\r\nclass NativeInteractionClient extends _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseInteractionClient {\r\n    constructor(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, provider, accountId, nativeStorageImpl, correlationId) {\r\n        super(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\r\n        this.apiId = apiId;\r\n        this.accountId = accountId;\r\n        this.nativeMessageHandler = provider;\r\n        this.nativeStorageManager = nativeStorageImpl;\r\n        this.silentCacheClient = new _SilentCacheClient_mjs__WEBPACK_IMPORTED_MODULE_1__.SilentCacheClient(config, this.nativeStorageManager, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\r\n        this.serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n        const extensionName = this.nativeMessageHandler.getExtensionId() ===\r\n            _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.NativeConstants.PREFERRED_EXTENSION_ID\r\n            ? \"chrome\"\r\n            : this.nativeMessageHandler.getExtensionId()?.length\r\n                ? \"unknown\"\r\n                : undefined;\r\n        this.skus = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ServerTelemetryManager.makeExtraSkuString({\r\n            libraryName: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.MSAL_SKU,\r\n            libraryVersion: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__.version,\r\n            extensionName: extensionName,\r\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\r\n        });\r\n    }\r\n    /**\r\n     * Adds SKUs to request extra query parameters\r\n     * @param request {NativeTokenRequest}\r\n     * @private\r\n     */\r\n    addRequestSKUs(request) {\r\n        request.extraParameters = {\r\n            ...request.extraParameters,\r\n            [_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.X_CLIENT_EXTRA_SKU]: this.skus,\r\n        };\r\n    }\r\n    /**\r\n     * Acquire token from native platform via browser extension\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\r\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\r\n        // start the perf measurement\r\n        const nativeATMeasurement = this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\r\n        const reqTimestamp = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.nowSeconds();\r\n        try {\r\n            // initialize native request\r\n            const nativeRequest = await this.initializeNativeRequest(request);\r\n            // check if the tokens can be retrieved from internal cache\r\n            try {\r\n                const result = await this.acquireTokensFromCache(this.accountId, nativeRequest);\r\n                nativeATMeasurement.end({\r\n                    success: true,\r\n                    isNativeBroker: false,\r\n                    fromCache: true,\r\n                });\r\n                return result;\r\n            }\r\n            catch (e) {\r\n                // continue with a native call for any and all errors\r\n                this.logger.info(\"MSAL internal Cache does not contain tokens, proceed to make a native call\");\r\n            }\r\n            const { ...nativeTokenRequest } = nativeRequest;\r\n            // fall back to native calls\r\n            const messageBody = {\r\n                method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.NativeExtensionMethod.GetToken,\r\n                request: nativeTokenRequest,\r\n            };\r\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\r\n            const validatedResponse = this.validateNativeResponse(response);\r\n            return await this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp)\r\n                .then((result) => {\r\n                nativeATMeasurement.end({\r\n                    success: true,\r\n                    isNativeBroker: true,\r\n                    requestId: result.requestId,\r\n                });\r\n                this.serverTelemetryManager.clearNativeBrokerErrorCode();\r\n                return result;\r\n            })\r\n                .catch((error) => {\r\n                nativeATMeasurement.end({\r\n                    success: false,\r\n                    errorCode: error.errorCode,\r\n                    subErrorCode: error.subError,\r\n                    isNativeBroker: true,\r\n                });\r\n                throw error;\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NativeAuthError) {\r\n                this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Creates silent flow request\r\n     * @param request\r\n     * @param cachedAccount\r\n     * @returns CommonSilentFlowRequest\r\n     */\r\n    createSilentCacheRequest(request, cachedAccount) {\r\n        return {\r\n            authority: request.authority,\r\n            correlationId: this.correlationId,\r\n            scopes: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.ScopeSet.fromString(request.scope).asArray(),\r\n            account: cachedAccount,\r\n            forceRefresh: false,\r\n        };\r\n    }\r\n    /**\r\n     * Fetches the tokens from the cache if un-expired\r\n     * @param nativeAccountId\r\n     * @param request\r\n     * @returns authenticationResult\r\n     */\r\n    async acquireTokensFromCache(nativeAccountId, request) {\r\n        if (!nativeAccountId) {\r\n            this.logger.warning(\"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\");\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.noAccountFound);\r\n        }\r\n        // fetch the account from browser cache\r\n        const account = this.browserStorage.getBaseAccountInfo({\r\n            nativeAccountId,\r\n        });\r\n        if (!account) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.noAccountFound);\r\n        }\r\n        // leverage silent flow for cached tokens retrieval\r\n        try {\r\n            const silentRequest = this.createSilentCacheRequest(request, account);\r\n            const result = await this.silentCacheClient.acquireToken(silentRequest);\r\n            const fullAccount = {\r\n                ...account,\r\n                idTokenClaims: result?.idTokenClaims,\r\n                idToken: result?.idToken,\r\n            };\r\n            return {\r\n                ...result,\r\n                account: fullAccount,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\r\n     * @param {RedirectRequest} request\r\n     * @param {InProgressPerformanceEvent} rootMeasurement\r\n     */\r\n    async acquireTokenRedirect(request, rootMeasurement) {\r\n        this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\r\n        const { ...remainingParameters } = request;\r\n        delete remainingParameters.onRedirectNavigate;\r\n        const nativeRequest = await this.initializeNativeRequest(remainingParameters);\r\n        const messageBody = {\r\n            method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.NativeExtensionMethod.GetToken,\r\n            request: nativeRequest,\r\n        };\r\n        try {\r\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\r\n            this.validateNativeResponse(response);\r\n        }\r\n        catch (e) {\r\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\r\n            if (e instanceof _error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.NativeAuthError) {\r\n                this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode);\r\n                if ((0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.isFatalNativeAuthError)(e)) {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\r\n        const navigationOptions = {\r\n            apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenRedirect,\r\n            timeout: this.config.system.redirectNavigationTimeout,\r\n            noHistory: false,\r\n        };\r\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl\r\n            ? window.location.href\r\n            : this.getRedirectUri(request.redirectUri);\r\n        rootMeasurement.end({ success: true });\r\n        await this.navigationClient.navigateExternal(redirectUri, navigationOptions); // Need to treat this as external to ensure handleRedirectPromise is run again\r\n    }\r\n    /**\r\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\r\n     * @param performanceClient {IPerformanceClient?}\r\n     * @param correlationId {string?} correlation identifier\r\n     */\r\n    async handleRedirectPromise(performanceClient, correlationId) {\r\n        this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\r\n        if (!this.browserStorage.isInteractionInProgress(true)) {\r\n            this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\r\n            return null;\r\n        }\r\n        // remove prompt from the request to prevent WAM from prompting twice\r\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\r\n        if (!cachedRequest) {\r\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\r\n            if (performanceClient && correlationId) {\r\n                performanceClient?.addFields({ errorCode: \"no_cached_request\" }, correlationId);\r\n            }\r\n            return null;\r\n        }\r\n        const { prompt, ...request } = cachedRequest;\r\n        if (prompt) {\r\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\");\r\n        }\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.TemporaryCacheKeys.NATIVE_REQUEST));\r\n        const messageBody = {\r\n            method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.NativeExtensionMethod.GetToken,\r\n            request: request,\r\n        };\r\n        const reqTimestamp = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.nowSeconds();\r\n        try {\r\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\r\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\r\n            this.validateNativeResponse(response);\r\n            const result = this.handleNativeResponse(response, request, reqTimestamp);\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            const res = await result;\r\n            this.serverTelemetryManager.clearNativeBrokerErrorCode();\r\n            return res;\r\n        }\r\n        catch (e) {\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Logout from native platform via browser extension\r\n     * @param request\r\n     */\r\n    logout() {\r\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\r\n        return Promise.reject(\"Logout not implemented yet\");\r\n    }\r\n    /**\r\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\r\n     * @param response\r\n     * @param request\r\n     * @param reqTimestamp\r\n     */\r\n    async handleNativeResponse(response, request, reqTimestamp) {\r\n        this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\r\n        // generate identifiers\r\n        const idTokenClaims = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_12__.extractTokenClaims(response.id_token, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_13__.base64Decode);\r\n        const homeAccountIdentifier = this.createHomeAccountIdentifier(response, idTokenClaims);\r\n        const cachedhomeAccountId = this.browserStorage.getAccountInfoFilteredBy({\r\n            nativeAccountId: request.accountId,\r\n        })?.homeAccountId;\r\n        if (homeAccountIdentifier !== cachedhomeAccountId &&\r\n            response.account.id !== request.accountId) {\r\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\r\n            throw (0,_error_NativeAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createNativeAuthError)(_error_NativeAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_14__.userSwitch);\r\n        }\r\n        // Get the preferred_cache domain for the given authority\r\n        const authority = await this.getDiscoveredAuthority({\r\n            requestAuthority: request.authority,\r\n        });\r\n        const baseAccount = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_15__.buildAccountToCache)(this.browserStorage, authority, homeAccountIdentifier, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_13__.base64Decode, idTokenClaims, response.client_info, undefined, // environment\r\n        idTokenClaims.tid, undefined, // auth code payload\r\n        response.account.id, this.logger);\r\n        // generate authenticationResult\r\n        const result = await this.generateAuthenticationResult(response, request, idTokenClaims, baseAccount, authority.canonicalAuthority, reqTimestamp);\r\n        // cache accounts and tokens in the appropriate storage\r\n        this.cacheAccount(baseAccount);\r\n        this.cacheNativeTokens(response, request, homeAccountIdentifier, idTokenClaims, response.access_token, result.tenantId, reqTimestamp);\r\n        return result;\r\n    }\r\n    /**\r\n     * creates an homeAccountIdentifier for the account\r\n     * @param response\r\n     * @param idTokenObj\r\n     * @returns\r\n     */\r\n    createHomeAccountIdentifier(response, idTokenClaims) {\r\n        // Save account in browser storage\r\n        const homeAccountIdentifier = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_16__.AccountEntity.generateHomeAccountId(response.client_info || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.Constants.EMPTY_STRING, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_18__.AuthorityType.Default, this.logger, this.browserCrypto, idTokenClaims);\r\n        return homeAccountIdentifier;\r\n    }\r\n    /**\r\n     * Helper to generate scopes\r\n     * @param response\r\n     * @param request\r\n     * @returns\r\n     */\r\n    generateScopes(response, request) {\r\n        return response.scope\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.ScopeSet.fromString(response.scope)\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.ScopeSet.fromString(request.scope);\r\n    }\r\n    /**\r\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\r\n     * @param request\r\n     * @param response\r\n     */\r\n    async generatePopAccessToken(response, request) {\r\n        if (request.tokenType === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.AuthenticationScheme.POP &&\r\n            request.signPopToken) {\r\n            /**\r\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\r\n             * is still received, SHR is calculated locally\r\n             */\r\n            // Check if native layer returned an SHR token\r\n            if (response.shr) {\r\n                this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\r\n                return response.shr;\r\n            }\r\n            // Generate SHR in msal js if WAM does not compute it when POP is enabled\r\n            const popTokenGenerator = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.PopTokenGenerator(this.browserCrypto);\r\n            const shrParameters = {\r\n                resourceRequestMethod: request.resourceRequestMethod,\r\n                resourceRequestUri: request.resourceRequestUri,\r\n                shrClaims: request.shrClaims,\r\n                shrNonce: request.shrNonce,\r\n            };\r\n            /**\r\n             * KeyID must be present in the native request from when the PoP key was generated in order for\r\n             * PopTokenGenerator to query the full key for signing\r\n             */\r\n            if (!request.keyId) {\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.keyIdMissing);\r\n            }\r\n            return popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters);\r\n        }\r\n        else {\r\n            return response.access_token;\r\n        }\r\n    }\r\n    /**\r\n     * Generates authentication result\r\n     * @param response\r\n     * @param request\r\n     * @param idTokenObj\r\n     * @param accountEntity\r\n     * @param authority\r\n     * @param reqTimestamp\r\n     * @returns\r\n     */\r\n    async generateAuthenticationResult(response, request, idTokenClaims, accountEntity, authority, reqTimestamp) {\r\n        // Add Native Broker fields to Telemetry\r\n        const mats = this.addTelemetryFromNativeResponse(response);\r\n        // If scopes not returned in server response, use request scopes\r\n        const responseScopes = response.scope\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.ScopeSet.fromString(response.scope)\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.ScopeSet.fromString(request.scope);\r\n        const accountProperties = response.account.properties || {};\r\n        const uid = accountProperties[\"UID\"] ||\r\n            idTokenClaims.oid ||\r\n            idTokenClaims.sub ||\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.Constants.EMPTY_STRING;\r\n        const tid = accountProperties[\"TenantId\"] ||\r\n            idTokenClaims.tid ||\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.Constants.EMPTY_STRING;\r\n        const accountInfo = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_20__.updateAccountTenantProfileData)(accountEntity.getAccountInfo(), undefined, // tenantProfile optional\r\n        idTokenClaims, response.id_token);\r\n        /**\r\n         * In pairwise broker flows, this check prevents the broker's native account id\r\n         * from being returned over the embedded app's account id.\r\n         */\r\n        if (accountInfo.nativeAccountId !== response.account.id) {\r\n            accountInfo.nativeAccountId = response.account.id;\r\n        }\r\n        // generate PoP token as needed\r\n        const responseAccessToken = await this.generatePopAccessToken(response, request);\r\n        const tokenType = request.tokenType === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.AuthenticationScheme.POP\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.AuthenticationScheme.POP\r\n            : _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.AuthenticationScheme.BEARER;\r\n        const result = {\r\n            authority: authority,\r\n            uniqueId: uid,\r\n            tenantId: tid,\r\n            scopes: responseScopes.asArray(),\r\n            account: accountInfo,\r\n            idToken: response.id_token,\r\n            idTokenClaims: idTokenClaims,\r\n            accessToken: responseAccessToken,\r\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\r\n            expiresOn: new Date(Number(reqTimestamp + response.expires_in) * 1000),\r\n            tokenType: tokenType,\r\n            correlationId: this.correlationId,\r\n            state: response.state,\r\n            fromNativeBroker: true,\r\n        };\r\n        return result;\r\n    }\r\n    /**\r\n     * cache the account entity in browser storage\r\n     * @param accountEntity\r\n     */\r\n    cacheAccount(accountEntity) {\r\n        // Store the account info and hence `nativeAccountId` in browser cache\r\n        this.browserStorage.setAccount(accountEntity);\r\n        // Remove any existing cached tokens for this account in browser storage\r\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\r\n            this.logger.error(`Error occurred while removing account context from browser storage. ${e}`);\r\n        });\r\n    }\r\n    /**\r\n     * Stores the access_token and id_token in inmemory storage\r\n     * @param response\r\n     * @param request\r\n     * @param homeAccountIdentifier\r\n     * @param idTokenObj\r\n     * @param responseAccessToken\r\n     * @param tenantId\r\n     * @param reqTimestamp\r\n     */\r\n    cacheNativeTokens(response, request, homeAccountIdentifier, idTokenClaims, responseAccessToken, tenantId, reqTimestamp) {\r\n        const cachedIdToken = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_21__.createIdTokenEntity(homeAccountIdentifier, request.authority, response.id_token || \"\", request.clientId, idTokenClaims.tid || \"\");\r\n        // cache accessToken in inmemory storage\r\n        const expiresIn = request.tokenType === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.AuthenticationScheme.POP\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.Constants.SHR_NONCE_VALIDITY\r\n            : (typeof response.expires_in === \"string\"\r\n                ? parseInt(response.expires_in, 10)\r\n                : response.expires_in) || 0;\r\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n        const responseScopes = this.generateScopes(response, request);\r\n        const cachedAccessToken = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_21__.createAccessTokenEntity(homeAccountIdentifier, request.authority, responseAccessToken, request.clientId, idTokenClaims.tid || tenantId, responseScopes.printScopes(), tokenExpirationSeconds, 0, _encode_Base64Decode_mjs__WEBPACK_IMPORTED_MODULE_13__.base64Decode, undefined, request.tokenType, undefined, request.keyId);\r\n        const nativeCacheRecord = {\r\n            idToken: cachedIdToken,\r\n            accessToken: cachedAccessToken,\r\n        };\r\n        void this.nativeStorageManager.saveCacheRecord(nativeCacheRecord, request.storeInCache);\r\n    }\r\n    addTelemetryFromNativeResponse(response) {\r\n        const mats = this.getMATSFromResponse(response);\r\n        if (!mats) {\r\n            return null;\r\n        }\r\n        this.performanceClient.addFields({\r\n            extensionId: this.nativeMessageHandler.getExtensionId(),\r\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\r\n            matsBrokerVersion: mats.broker_version,\r\n            matsAccountJoinOnStart: mats.account_join_on_start,\r\n            matsAccountJoinOnEnd: mats.account_join_on_end,\r\n            matsDeviceJoin: mats.device_join,\r\n            matsPromptBehavior: mats.prompt_behavior,\r\n            matsApiErrorCode: mats.api_error_code,\r\n            matsUiVisible: mats.ui_visible,\r\n            matsSilentCode: mats.silent_code,\r\n            matsSilentBiSubCode: mats.silent_bi_sub_code,\r\n            matsSilentMessage: mats.silent_message,\r\n            matsSilentStatus: mats.silent_status,\r\n            matsHttpStatus: mats.http_status,\r\n            matsHttpEventCount: mats.http_event_count,\r\n        }, this.correlationId);\r\n        return mats;\r\n    }\r\n    /**\r\n     * Validates native platform response before processing\r\n     * @param response\r\n     */\r\n    validateNativeResponse(response) {\r\n        if (response.hasOwnProperty(\"access_token\") &&\r\n            response.hasOwnProperty(\"id_token\") &&\r\n            response.hasOwnProperty(\"client_info\") &&\r\n            response.hasOwnProperty(\"account\") &&\r\n            response.hasOwnProperty(\"scope\") &&\r\n            response.hasOwnProperty(\"expires_in\")) {\r\n            return response;\r\n        }\r\n        else {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_22__.createAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_23__.unexpectedError, \"Response missing expected properties.\");\r\n        }\r\n    }\r\n    /**\r\n     * Gets MATS telemetry from native response\r\n     * @param response\r\n     * @returns\r\n     */\r\n    getMATSFromResponse(response) {\r\n        if (response.properties.MATS) {\r\n            try {\r\n                return JSON.parse(response.properties.MATS);\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns whether or not response came from native cache\r\n     * @param response\r\n     * @returns\r\n     */\r\n    isResponseFromCache(mats) {\r\n        if (typeof mats.is_cached === \"undefined\") {\r\n            this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\r\n            return false;\r\n        }\r\n        return !!mats.is_cached;\r\n    }\r\n    /**\r\n     * Translates developer provided request object into NativeRequest object\r\n     * @param request\r\n     */\r\n    async initializeNativeRequest(request) {\r\n        this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\r\n        const requestAuthority = request.authority || this.config.auth.authority;\r\n        if (request.account) {\r\n            // validate authority\r\n            await this.getDiscoveredAuthority({\r\n                requestAuthority,\r\n                requestAzureCloudOptions: request.azureCloudOptions,\r\n                account: request.account,\r\n            });\r\n        }\r\n        const canonicalAuthority = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_24__.UrlString(requestAuthority);\r\n        canonicalAuthority.validateAsUri();\r\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\r\n        const { scopes, ...remainingProperties } = request;\r\n        const scopeSet = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.ScopeSet(scopes || []);\r\n        scopeSet.appendScopes(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.OIDC_DEFAULT_SCOPES);\r\n        const getPrompt = () => {\r\n            // If request is silent, prompt is always none\r\n            switch (this.apiId) {\r\n                case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.ssoSilent:\r\n                case _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenSilent_silentFlow:\r\n                    this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\r\n                    return _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.PromptValue.NONE;\r\n            }\r\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\r\n            if (!request.prompt) {\r\n                this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\r\n                return undefined;\r\n            }\r\n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\r\n            switch (request.prompt) {\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.PromptValue.NONE:\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.PromptValue.CONSENT:\r\n                case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.PromptValue.LOGIN:\r\n                    this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\r\n                    return request.prompt;\r\n                default:\r\n                    this.logger.trace(`initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`);\r\n                    throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_25__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_26__.nativePromptNotSupported);\r\n            }\r\n        };\r\n        const validatedRequest = {\r\n            ...remainingProperties,\r\n            accountId: this.accountId,\r\n            clientId: this.config.auth.clientId,\r\n            authority: canonicalAuthority.urlString,\r\n            scope: scopeSet.printScopes(),\r\n            redirectUri: this.getRedirectUri(request.redirectUri),\r\n            prompt: getPrompt(),\r\n            correlationId: this.correlationId,\r\n            tokenType: request.authenticationScheme,\r\n            windowTitleSubstring: document.title,\r\n            extraParameters: {\r\n                ...request.extraQueryParameters,\r\n                ...request.tokenQueryParameters,\r\n            },\r\n            extendedExpiryToken: false,\r\n            keyId: request.popKid,\r\n        };\r\n        // Check for PoP token requests: signPopToken should only be set to true if popKid is not set\r\n        if (validatedRequest.signPopToken && !!request.popKid) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_25__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_26__.invalidPopTokenRequest);\r\n        }\r\n        this.handleExtraBrokerParams(validatedRequest);\r\n        validatedRequest.extraParameters =\r\n            validatedRequest.extraParameters || {};\r\n        validatedRequest.extraParameters.telemetry =\r\n            _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.NativeConstants.MATS_TELEMETRY;\r\n        if (request.authenticationScheme === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.AuthenticationScheme.POP) {\r\n            // add POP request type\r\n            const shrParameters = {\r\n                resourceRequestUri: request.resourceRequestUri,\r\n                resourceRequestMethod: request.resourceRequestMethod,\r\n                shrClaims: request.shrClaims,\r\n                shrNonce: request.shrNonce,\r\n            };\r\n            const popTokenGenerator = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_19__.PopTokenGenerator(this.browserCrypto);\r\n            // generate reqCnf if not provided in the request\r\n            let reqCnfData;\r\n            if (!validatedRequest.keyId) {\r\n                const generatedReqCnfData = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_27__.invokeAsync)(popTokenGenerator.generateCnf.bind(popTokenGenerator), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(shrParameters, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n                validatedRequest.keyId = generatedReqCnfData.kid;\r\n                validatedRequest.signPopToken = true;\r\n            }\r\n            else {\r\n                reqCnfData = this.browserCrypto.base64UrlEncode(JSON.stringify({ kid: validatedRequest.keyId }));\r\n                validatedRequest.signPopToken = false;\r\n            }\r\n            // SPAs require whole string to be passed to broker\r\n            validatedRequest.reqCnf = reqCnfData;\r\n        }\r\n        this.addRequestSKUs(validatedRequest);\r\n        return validatedRequest;\r\n    }\r\n    /**\r\n     * Handles extra broker request parameters\r\n     * @param request {NativeTokenRequest}\r\n     * @private\r\n     */\r\n    handleExtraBrokerParams(request) {\r\n        if (!request.extraParameters) {\r\n            return;\r\n        }\r\n        if (request.extraParameters.hasOwnProperty(BrokerServerParamKeys.BROKER_CLIENT_ID) &&\r\n            request.extraParameters.hasOwnProperty(BrokerServerParamKeys.BROKER_REDIRECT_URI) &&\r\n            request.extraParameters.hasOwnProperty(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.CLIENT_ID)) {\r\n            const child_client_id = request.extraParameters[_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.CLIENT_ID];\r\n            const child_redirect_uri = request.redirectUri;\r\n            const brk_redirect_uri = request.extraParameters[BrokerServerParamKeys.BROKER_REDIRECT_URI];\r\n            request.extraParameters = {\r\n                child_client_id,\r\n                child_redirect_uri,\r\n            };\r\n            request.redirectUri = brk_redirect_uri;\r\n        }\r\n    }\r\n}\n\n\n//# sourceMappingURL=NativeInteractionClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9OYXRpdmVJbnRlcmFjdGlvbkNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQzJaO0FBQ3BXO0FBQ2dFO0FBQ3RCO0FBQ3ZDO0FBQ1g7QUFDRjtBQUNUO0FBQ3FEO0FBQ3ZDOztBQUUvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLDZFQUFxQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMscUVBQWlCO0FBQ3REO0FBQ0E7QUFDQSxZQUFZLHdFQUFlO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDhFQUFzQjtBQUMxQyx5QkFBeUIseUVBQWdCO0FBQ3pDLDRCQUE0Qix5REFBTztBQUNuQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSwwRUFBcUM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQseUVBQWlCO0FBQ3BFO0FBQ0E7QUFDQSw0RUFBNEUseUVBQWlCO0FBQzdGLDZCQUE2QixrRUFBb0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHdCQUF3QjtBQUM1QztBQUNBO0FBQ0Esd0JBQXdCLDhFQUFxQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsNkJBQTZCLHVFQUFlO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnRUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixrRkFBcUIsQ0FBQyx1RUFBbUM7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxrQkFBa0Isa0ZBQXFCLENBQUMsdUVBQW1DO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUJBQWlCO0FBQ2hDLGVBQWUsNEJBQTRCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix5QkFBeUI7QUFDekM7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDhFQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHVFQUFlO0FBQzVDO0FBQ0Esb0JBQW9CLGtGQUFzQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QywyRUFBa0I7QUFDaEU7QUFDQSxtQkFBbUIsOERBQUs7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGVBQWU7QUFDN0Msc0ZBQXNGO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQyw2QkFBNkIsU0FBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsZ0NBQWdDO0FBQy9FO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxQkFBcUI7QUFDckM7QUFDQTtBQUNBO0FBQ0EsNEVBQTRFLDJFQUFrQjtBQUM5RjtBQUNBLG9CQUFvQiw4RUFBcUI7QUFDekM7QUFDQTtBQUNBLDZCQUE2QixrRUFBb0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwyRUFBNEIsb0JBQW9CLG1FQUFZO0FBQzFGO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUZBQXFCLENBQUMsd0VBQVU7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsNEJBQTRCLGdGQUFtQix3REFBd0QsbUVBQVk7QUFDbkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxzRUFBYSwrQ0FBK0Msa0VBQVMsZUFBZSxzRUFBYTtBQUN2STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZ0VBQVE7QUFDdEIsY0FBYyxnRUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyw2RUFBb0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQywwRUFBaUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixrRkFBcUIsQ0FBQyxxRUFBaUM7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdFQUFRO0FBQ3RCLGNBQWMsZ0VBQVE7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGtFQUFTO0FBQ3JCO0FBQ0E7QUFDQSxZQUFZLGtFQUFTO0FBQ3JCLDRCQUE0QiwyRkFBOEI7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsNkVBQW9CO0FBQ3BFLGNBQWMsNkVBQW9CO0FBQ2xDLGNBQWMsNkVBQW9CO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFHQUFxRyxFQUFFO0FBQ3ZHLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsNEVBQWdDO0FBQzlEO0FBQ0EsZ0RBQWdELDZFQUFvQjtBQUNwRSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsZ0ZBQW9DLDBLQUEwSyxtRUFBWTtBQUM1UDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNEVBQWUsQ0FBQyx3RUFBOEI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSx1Q0FBdUMsa0VBQVM7QUFDaEQ7QUFDQTtBQUNBLGdCQUFnQixpQ0FBaUM7QUFDakQsNkJBQTZCLGdFQUFRO0FBQ3JDLDhCQUE4Qiw0RUFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDhEQUFLO0FBQzFCLHFCQUFxQiw4REFBSztBQUMxQjtBQUNBLDJCQUEyQixvRUFBVztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLG9FQUFXO0FBQ2hDLHFCQUFxQixvRUFBVztBQUNoQyxxQkFBcUIsb0VBQVc7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLGdCQUFnQjtBQUMzRiwwQkFBMEIsb0ZBQXNCLENBQUMsdUZBQXdCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isb0ZBQXNCLENBQUMscUZBQXNCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHdFQUFlO0FBQzNCLDZDQUE2Qyw2RUFBb0I7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsMEVBQWlCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCx3RUFBVyx3REFBd0QseUVBQWlCO0FBQ3RJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsNkJBQTZCO0FBQzlHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsaUVBQTRCO0FBQy9FLDREQUE0RCxpRUFBNEI7QUFDeEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW1DO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvaW50ZXJhY3Rpb25fY2xpZW50L05hdGl2ZUludGVyYWN0aW9uQ2xpZW50Lm1qcz9iMWRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgU2VydmVyVGVsZW1ldHJ5TWFuYWdlciwgQUFEU2VydmVyUGFyYW1LZXlzLCBQZXJmb3JtYW5jZUV2ZW50cywgVGltZVV0aWxzLCBTY29wZVNldCwgY3JlYXRlQ2xpZW50QXV0aEVycm9yLCBDbGllbnRBdXRoRXJyb3JDb2RlcywgQXV0aFRva2VuLCBidWlsZEFjY291bnRUb0NhY2hlLCBBY2NvdW50RW50aXR5LCBDb25zdGFudHMsIEF1dGhvcml0eVR5cGUsIEF1dGhlbnRpY2F0aW9uU2NoZW1lLCBQb3BUb2tlbkdlbmVyYXRvciwgdXBkYXRlQWNjb3VudFRlbmFudFByb2ZpbGVEYXRhLCBDYWNoZUhlbHBlcnMsIGNyZWF0ZUF1dGhFcnJvciwgQXV0aEVycm9yQ29kZXMsIFVybFN0cmluZywgT0lEQ19ERUZBVUxUX1NDT1BFUywgaW52b2tlQXN5bmMsIFByb21wdFZhbHVlIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuaW1wb3J0IHsgQmFzZUludGVyYWN0aW9uQ2xpZW50IH0gZnJvbSAnLi9CYXNlSW50ZXJhY3Rpb25DbGllbnQubWpzJztcbmltcG9ydCB7IE5hdGl2ZUNvbnN0YW50cywgQnJvd3NlckNvbnN0YW50cywgTmF0aXZlRXh0ZW5zaW9uTWV0aG9kLCBUZW1wb3JhcnlDYWNoZUtleXMsIEFwaUlkIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgTmF0aXZlQXV0aEVycm9yLCBpc0ZhdGFsTmF0aXZlQXV0aEVycm9yLCBjcmVhdGVOYXRpdmVBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9OYXRpdmVBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBTaWxlbnRDYWNoZUNsaWVudCB9IGZyb20gJy4vU2lsZW50Q2FjaGVDbGllbnQubWpzJztcbmltcG9ydCB7IGJhc2U2NERlY29kZSB9IGZyb20gJy4uL2VuY29kZS9CYXNlNjREZWNvZGUubWpzJztcbmltcG9ydCB7IHZlcnNpb24gfSBmcm9tICcuLi9wYWNrYWdlTWV0YWRhdGEubWpzJztcbmltcG9ydCB7IGludmFsaWRQb3BUb2tlblJlcXVlc3QsIG5hdGl2ZVByb21wdE5vdFN1cHBvcnRlZCB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMnO1xuaW1wb3J0IHsgdXNlclN3aXRjaCB9IGZyb20gJy4uL2Vycm9yL05hdGl2ZUF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBCcm9rZXJTZXJ2ZXJQYXJhbUtleXMgPSB7XHJcbiAgICBCUk9LRVJfQ0xJRU5UX0lEOiBcImJya19jbGllbnRfaWRcIixcclxuICAgIEJST0tFUl9SRURJUkVDVF9VUkk6IFwiYnJrX3JlZGlyZWN0X3VyaVwiLFxyXG59O1xyXG5jbGFzcyBOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCBleHRlbmRzIEJhc2VJbnRlcmFjdGlvbkNsaWVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcsIGJyb3dzZXJTdG9yYWdlLCBicm93c2VyQ3J5cHRvLCBsb2dnZXIsIGV2ZW50SGFuZGxlciwgbmF2aWdhdGlvbkNsaWVudCwgYXBpSWQsIHBlcmZvcm1hbmNlQ2xpZW50LCBwcm92aWRlciwgYWNjb3VudElkLCBuYXRpdmVTdG9yYWdlSW1wbCwgY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgIHN1cGVyKGNvbmZpZywgYnJvd3NlclN0b3JhZ2UsIGJyb3dzZXJDcnlwdG8sIGxvZ2dlciwgZXZlbnRIYW5kbGVyLCBuYXZpZ2F0aW9uQ2xpZW50LCBwZXJmb3JtYW5jZUNsaWVudCwgcHJvdmlkZXIsIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIHRoaXMuYXBpSWQgPSBhcGlJZDtcclxuICAgICAgICB0aGlzLmFjY291bnRJZCA9IGFjY291bnRJZDtcclxuICAgICAgICB0aGlzLm5hdGl2ZU1lc3NhZ2VIYW5kbGVyID0gcHJvdmlkZXI7XHJcbiAgICAgICAgdGhpcy5uYXRpdmVTdG9yYWdlTWFuYWdlciA9IG5hdGl2ZVN0b3JhZ2VJbXBsO1xyXG4gICAgICAgIHRoaXMuc2lsZW50Q2FjaGVDbGllbnQgPSBuZXcgU2lsZW50Q2FjaGVDbGllbnQoY29uZmlnLCB0aGlzLm5hdGl2ZVN0b3JhZ2VNYW5hZ2VyLCBicm93c2VyQ3J5cHRvLCBsb2dnZXIsIGV2ZW50SGFuZGxlciwgbmF2aWdhdGlvbkNsaWVudCwgcGVyZm9ybWFuY2VDbGllbnQsIHByb3ZpZGVyLCBjb3JyZWxhdGlvbklkKTtcclxuICAgICAgICB0aGlzLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIgPSB0aGlzLmluaXRpYWxpemVTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyKHRoaXMuYXBpSWQpO1xyXG4gICAgICAgIGNvbnN0IGV4dGVuc2lvbk5hbWUgPSB0aGlzLm5hdGl2ZU1lc3NhZ2VIYW5kbGVyLmdldEV4dGVuc2lvbklkKCkgPT09XHJcbiAgICAgICAgICAgIE5hdGl2ZUNvbnN0YW50cy5QUkVGRVJSRURfRVhURU5TSU9OX0lEXHJcbiAgICAgICAgICAgID8gXCJjaHJvbWVcIlxyXG4gICAgICAgICAgICA6IHRoaXMubmF0aXZlTWVzc2FnZUhhbmRsZXIuZ2V0RXh0ZW5zaW9uSWQoKT8ubGVuZ3RoXHJcbiAgICAgICAgICAgICAgICA/IFwidW5rbm93blwiXHJcbiAgICAgICAgICAgICAgICA6IHVuZGVmaW5lZDtcclxuICAgICAgICB0aGlzLnNrdXMgPSBTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLm1ha2VFeHRyYVNrdVN0cmluZyh7XHJcbiAgICAgICAgICAgIGxpYnJhcnlOYW1lOiBCcm93c2VyQ29uc3RhbnRzLk1TQUxfU0tVLFxyXG4gICAgICAgICAgICBsaWJyYXJ5VmVyc2lvbjogdmVyc2lvbixcclxuICAgICAgICAgICAgZXh0ZW5zaW9uTmFtZTogZXh0ZW5zaW9uTmFtZSxcclxuICAgICAgICAgICAgZXh0ZW5zaW9uVmVyc2lvbjogdGhpcy5uYXRpdmVNZXNzYWdlSGFuZGxlci5nZXRFeHRlbnNpb25WZXJzaW9uKCksXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEFkZHMgU0tVcyB0byByZXF1ZXN0IGV4dHJhIHF1ZXJ5IHBhcmFtZXRlcnNcclxuICAgICAqIEBwYXJhbSByZXF1ZXN0IHtOYXRpdmVUb2tlblJlcXVlc3R9XHJcbiAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICovXHJcbiAgICBhZGRSZXF1ZXN0U0tVcyhyZXF1ZXN0KSB7XHJcbiAgICAgICAgcmVxdWVzdC5leHRyYVBhcmFtZXRlcnMgPSB7XHJcbiAgICAgICAgICAgIC4uLnJlcXVlc3QuZXh0cmFQYXJhbWV0ZXJzLFxyXG4gICAgICAgICAgICBbQUFEU2VydmVyUGFyYW1LZXlzLlhfQ0xJRU5UX0VYVFJBX1NLVV06IHRoaXMuc2t1cyxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBY3F1aXJlIHRva2VuIGZyb20gbmF0aXZlIHBsYXRmb3JtIHZpYSBicm93c2VyIGV4dGVuc2lvblxyXG4gICAgICogQHBhcmFtIHJlcXVlc3RcclxuICAgICAqL1xyXG4gICAgYXN5bmMgYWNxdWlyZVRva2VuKHJlcXVlc3QpIHtcclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuTmF0aXZlSW50ZXJhY3Rpb25DbGllbnRBY3F1aXJlVG9rZW4sIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIudHJhY2UoXCJOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCAtIGFjcXVpcmVUb2tlbiBjYWxsZWQuXCIpO1xyXG4gICAgICAgIC8vIHN0YXJ0IHRoZSBwZXJmIG1lYXN1cmVtZW50XHJcbiAgICAgICAgY29uc3QgbmF0aXZlQVRNZWFzdXJlbWVudCA9IHRoaXMucGVyZm9ybWFuY2VDbGllbnQuc3RhcnRNZWFzdXJlbWVudChQZXJmb3JtYW5jZUV2ZW50cy5OYXRpdmVJbnRlcmFjdGlvbkNsaWVudEFjcXVpcmVUb2tlbiwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBjb25zdCByZXFUaW1lc3RhbXAgPSBUaW1lVXRpbHMubm93U2Vjb25kcygpO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIC8vIGluaXRpYWxpemUgbmF0aXZlIHJlcXVlc3RcclxuICAgICAgICAgICAgY29uc3QgbmF0aXZlUmVxdWVzdCA9IGF3YWl0IHRoaXMuaW5pdGlhbGl6ZU5hdGl2ZVJlcXVlc3QocmVxdWVzdCk7XHJcbiAgICAgICAgICAgIC8vIGNoZWNrIGlmIHRoZSB0b2tlbnMgY2FuIGJlIHJldHJpZXZlZCBmcm9tIGludGVybmFsIGNhY2hlXHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLmFjcXVpcmVUb2tlbnNGcm9tQ2FjaGUodGhpcy5hY2NvdW50SWQsIG5hdGl2ZVJlcXVlc3QpO1xyXG4gICAgICAgICAgICAgICAgbmF0aXZlQVRNZWFzdXJlbWVudC5lbmQoe1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgaXNOYXRpdmVCcm9rZXI6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIGZyb21DYWNoZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgLy8gY29udGludWUgd2l0aCBhIG5hdGl2ZSBjYWxsIGZvciBhbnkgYW5kIGFsbCBlcnJvcnNcclxuICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLmluZm8oXCJNU0FMIGludGVybmFsIENhY2hlIGRvZXMgbm90IGNvbnRhaW4gdG9rZW5zLCBwcm9jZWVkIHRvIG1ha2UgYSBuYXRpdmUgY2FsbFwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zdCB7IC4uLm5hdGl2ZVRva2VuUmVxdWVzdCB9ID0gbmF0aXZlUmVxdWVzdDtcclxuICAgICAgICAgICAgLy8gZmFsbCBiYWNrIHRvIG5hdGl2ZSBjYWxsc1xyXG4gICAgICAgICAgICBjb25zdCBtZXNzYWdlQm9keSA9IHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogTmF0aXZlRXh0ZW5zaW9uTWV0aG9kLkdldFRva2VuLFxyXG4gICAgICAgICAgICAgICAgcmVxdWVzdDogbmF0aXZlVG9rZW5SZXF1ZXN0LFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMubmF0aXZlTWVzc2FnZUhhbmRsZXIuc2VuZE1lc3NhZ2UobWVzc2FnZUJvZHkpO1xyXG4gICAgICAgICAgICBjb25zdCB2YWxpZGF0ZWRSZXNwb25zZSA9IHRoaXMudmFsaWRhdGVOYXRpdmVSZXNwb25zZShyZXNwb25zZSk7XHJcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmhhbmRsZU5hdGl2ZVJlc3BvbnNlKHZhbGlkYXRlZFJlc3BvbnNlLCBuYXRpdmVSZXF1ZXN0LCByZXFUaW1lc3RhbXApXHJcbiAgICAgICAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBuYXRpdmVBVE1lYXN1cmVtZW50LmVuZCh7XHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICBpc05hdGl2ZUJyb2tlcjogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0SWQ6IHJlc3VsdC5yZXF1ZXN0SWQsXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VydmVyVGVsZW1ldHJ5TWFuYWdlci5jbGVhck5hdGl2ZUJyb2tlckVycm9yQ29kZSgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICAgICAgICAgIG5hdGl2ZUFUTWVhc3VyZW1lbnQuZW5kKHtcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBlcnJvckNvZGU6IGVycm9yLmVycm9yQ29kZSxcclxuICAgICAgICAgICAgICAgICAgICBzdWJFcnJvckNvZGU6IGVycm9yLnN1YkVycm9yLFxyXG4gICAgICAgICAgICAgICAgICAgIGlzTmF0aXZlQnJva2VyOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgTmF0aXZlQXV0aEVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNlcnZlclRlbGVtZXRyeU1hbmFnZXIuc2V0TmF0aXZlQnJva2VyRXJyb3JDb2RlKGUuZXJyb3JDb2RlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aHJvdyBlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyBzaWxlbnQgZmxvdyByZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICogQHBhcmFtIGNhY2hlZEFjY291bnRcclxuICAgICAqIEByZXR1cm5zIENvbW1vblNpbGVudEZsb3dSZXF1ZXN0XHJcbiAgICAgKi9cclxuICAgIGNyZWF0ZVNpbGVudENhY2hlUmVxdWVzdChyZXF1ZXN0LCBjYWNoZWRBY2NvdW50KSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgYXV0aG9yaXR5OiByZXF1ZXN0LmF1dGhvcml0eSxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogdGhpcy5jb3JyZWxhdGlvbklkLFxyXG4gICAgICAgICAgICBzY29wZXM6IFNjb3BlU2V0LmZyb21TdHJpbmcocmVxdWVzdC5zY29wZSkuYXNBcnJheSgpLFxyXG4gICAgICAgICAgICBhY2NvdW50OiBjYWNoZWRBY2NvdW50LFxyXG4gICAgICAgICAgICBmb3JjZVJlZnJlc2g6IGZhbHNlLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEZldGNoZXMgdGhlIHRva2VucyBmcm9tIHRoZSBjYWNoZSBpZiB1bi1leHBpcmVkXHJcbiAgICAgKiBAcGFyYW0gbmF0aXZlQWNjb3VudElkXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICogQHJldHVybnMgYXV0aGVudGljYXRpb25SZXN1bHRcclxuICAgICAqL1xyXG4gICAgYXN5bmMgYWNxdWlyZVRva2Vuc0Zyb21DYWNoZShuYXRpdmVBY2NvdW50SWQsIHJlcXVlc3QpIHtcclxuICAgICAgICBpZiAoIW5hdGl2ZUFjY291bnRJZCkge1xyXG4gICAgICAgICAgICB0aGlzLmxvZ2dlci53YXJuaW5nKFwiTmF0aXZlSW50ZXJhY3Rpb25DbGllbnQ6YWNxdWlyZVRva2Vuc0Zyb21DYWNoZSAtIE5vIG5hdGl2ZUFjY291bnRJZCBwcm92aWRlZFwiKTtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvckNvZGVzLm5vQWNjb3VudEZvdW5kKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gZmV0Y2ggdGhlIGFjY291bnQgZnJvbSBicm93c2VyIGNhY2hlXHJcbiAgICAgICAgY29uc3QgYWNjb3VudCA9IHRoaXMuYnJvd3NlclN0b3JhZ2UuZ2V0QmFzZUFjY291bnRJbmZvKHtcclxuICAgICAgICAgICAgbmF0aXZlQWNjb3VudElkLFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmICghYWNjb3VudCkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yQ29kZXMubm9BY2NvdW50Rm91bmQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBsZXZlcmFnZSBzaWxlbnQgZmxvdyBmb3IgY2FjaGVkIHRva2VucyByZXRyaWV2YWxcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCBzaWxlbnRSZXF1ZXN0ID0gdGhpcy5jcmVhdGVTaWxlbnRDYWNoZVJlcXVlc3QocmVxdWVzdCwgYWNjb3VudCk7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuc2lsZW50Q2FjaGVDbGllbnQuYWNxdWlyZVRva2VuKHNpbGVudFJlcXVlc3QpO1xyXG4gICAgICAgICAgICBjb25zdCBmdWxsQWNjb3VudCA9IHtcclxuICAgICAgICAgICAgICAgIC4uLmFjY291bnQsXHJcbiAgICAgICAgICAgICAgICBpZFRva2VuQ2xhaW1zOiByZXN1bHQ/LmlkVG9rZW5DbGFpbXMsXHJcbiAgICAgICAgICAgICAgICBpZFRva2VuOiByZXN1bHQ/LmlkVG9rZW4sXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAuLi5yZXN1bHQsXHJcbiAgICAgICAgICAgICAgICBhY2NvdW50OiBmdWxsQWNjb3VudCxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEFjcXVpcmVzIGEgdG9rZW4gZnJvbSBuYXRpdmUgcGxhdGZvcm0gdGhlbiByZWRpcmVjdHMgdG8gdGhlIHJlZGlyZWN0VXJpIGluc3RlYWQgb2YgcmV0dXJuaW5nIHRoZSByZXNwb25zZVxyXG4gICAgICogQHBhcmFtIHtSZWRpcmVjdFJlcXVlc3R9IHJlcXVlc3RcclxuICAgICAqIEBwYXJhbSB7SW5Qcm9ncmVzc1BlcmZvcm1hbmNlRXZlbnR9IHJvb3RNZWFzdXJlbWVudFxyXG4gICAgICovXHJcbiAgICBhc3luYyBhY3F1aXJlVG9rZW5SZWRpcmVjdChyZXF1ZXN0LCByb290TWVhc3VyZW1lbnQpIHtcclxuICAgICAgICB0aGlzLmxvZ2dlci50cmFjZShcIk5hdGl2ZUludGVyYWN0aW9uQ2xpZW50IC0gYWNxdWlyZVRva2VuUmVkaXJlY3QgY2FsbGVkLlwiKTtcclxuICAgICAgICBjb25zdCB7IC4uLnJlbWFpbmluZ1BhcmFtZXRlcnMgfSA9IHJlcXVlc3Q7XHJcbiAgICAgICAgZGVsZXRlIHJlbWFpbmluZ1BhcmFtZXRlcnMub25SZWRpcmVjdE5hdmlnYXRlO1xyXG4gICAgICAgIGNvbnN0IG5hdGl2ZVJlcXVlc3QgPSBhd2FpdCB0aGlzLmluaXRpYWxpemVOYXRpdmVSZXF1ZXN0KHJlbWFpbmluZ1BhcmFtZXRlcnMpO1xyXG4gICAgICAgIGNvbnN0IG1lc3NhZ2VCb2R5ID0ge1xyXG4gICAgICAgICAgICBtZXRob2Q6IE5hdGl2ZUV4dGVuc2lvbk1ldGhvZC5HZXRUb2tlbixcclxuICAgICAgICAgICAgcmVxdWVzdDogbmF0aXZlUmVxdWVzdCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5uYXRpdmVNZXNzYWdlSGFuZGxlci5zZW5kTWVzc2FnZShtZXNzYWdlQm9keSk7XHJcbiAgICAgICAgICAgIHRoaXMudmFsaWRhdGVOYXRpdmVSZXNwb25zZShyZXNwb25zZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIC8vIE9ubHkgdGhyb3cgZmF0YWwgZXJyb3JzIGhlcmUgdG8gYWxsb3cgYXBwbGljYXRpb24gdG8gZmFsbGJhY2sgdG8gcmVndWxhciByZWRpcmVjdC4gT3RoZXJ3aXNlIHByb2NlZWQgYW5kIHRoZSBlcnJvciB3aWxsIGJlIHRocm93biBpbiBoYW5kbGVSZWRpcmVjdFByb21pc2VcclxuICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBOYXRpdmVBdXRoRXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VydmVyVGVsZW1ldHJ5TWFuYWdlci5zZXROYXRpdmVCcm9rZXJFcnJvckNvZGUoZS5lcnJvckNvZGUpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGlzRmF0YWxOYXRpdmVBdXRoRXJyb3IoZSkpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYnJvd3NlclN0b3JhZ2Uuc2V0VGVtcG9yYXJ5Q2FjaGUoVGVtcG9yYXJ5Q2FjaGVLZXlzLk5BVElWRV9SRVFVRVNULCBKU09OLnN0cmluZ2lmeShuYXRpdmVSZXF1ZXN0KSwgdHJ1ZSk7XHJcbiAgICAgICAgY29uc3QgbmF2aWdhdGlvbk9wdGlvbnMgPSB7XHJcbiAgICAgICAgICAgIGFwaUlkOiBBcGlJZC5hY3F1aXJlVG9rZW5SZWRpcmVjdCxcclxuICAgICAgICAgICAgdGltZW91dDogdGhpcy5jb25maWcuc3lzdGVtLnJlZGlyZWN0TmF2aWdhdGlvblRpbWVvdXQsXHJcbiAgICAgICAgICAgIG5vSGlzdG9yeTogZmFsc2UsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCByZWRpcmVjdFVyaSA9IHRoaXMuY29uZmlnLmF1dGgubmF2aWdhdGVUb0xvZ2luUmVxdWVzdFVybFxyXG4gICAgICAgICAgICA/IHdpbmRvdy5sb2NhdGlvbi5ocmVmXHJcbiAgICAgICAgICAgIDogdGhpcy5nZXRSZWRpcmVjdFVyaShyZXF1ZXN0LnJlZGlyZWN0VXJpKTtcclxuICAgICAgICByb290TWVhc3VyZW1lbnQuZW5kKHsgc3VjY2VzczogdHJ1ZSB9KTtcclxuICAgICAgICBhd2FpdCB0aGlzLm5hdmlnYXRpb25DbGllbnQubmF2aWdhdGVFeHRlcm5hbChyZWRpcmVjdFVyaSwgbmF2aWdhdGlvbk9wdGlvbnMpOyAvLyBOZWVkIHRvIHRyZWF0IHRoaXMgYXMgZXh0ZXJuYWwgdG8gZW5zdXJlIGhhbmRsZVJlZGlyZWN0UHJvbWlzZSBpcyBydW4gYWdhaW5cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogSWYgdGhlIHByZXZpb3VzIHBhZ2UgY2FsbGVkIG5hdGl2ZSBwbGF0Zm9ybSBmb3IgYSB0b2tlbiB1c2luZyByZWRpcmVjdCBBUElzLCBzZW5kIHRoZSBzYW1lIHJlcXVlc3QgYWdhaW4gYW5kIHJldHVybiB0aGUgcmVzcG9uc2VcclxuICAgICAqIEBwYXJhbSBwZXJmb3JtYW5jZUNsaWVudCB7SVBlcmZvcm1hbmNlQ2xpZW50P31cclxuICAgICAqIEBwYXJhbSBjb3JyZWxhdGlvbklkIHtzdHJpbmc/fSBjb3JyZWxhdGlvbiBpZGVudGlmaWVyXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGhhbmRsZVJlZGlyZWN0UHJvbWlzZShwZXJmb3JtYW5jZUNsaWVudCwgY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgIHRoaXMubG9nZ2VyLnRyYWNlKFwiTmF0aXZlSW50ZXJhY3Rpb25DbGllbnQgLSBoYW5kbGVSZWRpcmVjdFByb21pc2UgY2FsbGVkLlwiKTtcclxuICAgICAgICBpZiAoIXRoaXMuYnJvd3NlclN0b3JhZ2UuaXNJbnRlcmFjdGlvbkluUHJvZ3Jlc3ModHJ1ZSkpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mbyhcImhhbmRsZVJlZGlyZWN0UHJvbWlzZSBjYWxsZWQgYnV0IHRoZXJlIGlzIG5vIGludGVyYWN0aW9uIGluIHByb2dyZXNzLCByZXR1cm5pbmcgbnVsbC5cIik7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyByZW1vdmUgcHJvbXB0IGZyb20gdGhlIHJlcXVlc3QgdG8gcHJldmVudCBXQU0gZnJvbSBwcm9tcHRpbmcgdHdpY2VcclxuICAgICAgICBjb25zdCBjYWNoZWRSZXF1ZXN0ID0gdGhpcy5icm93c2VyU3RvcmFnZS5nZXRDYWNoZWROYXRpdmVSZXF1ZXN0KCk7XHJcbiAgICAgICAgaWYgKCFjYWNoZWRSZXF1ZXN0KSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCAtIGhhbmRsZVJlZGlyZWN0UHJvbWlzZSBjYWxsZWQgYnV0IHRoZXJlIGlzIG5vIGNhY2hlZCByZXF1ZXN0LCByZXR1cm5pbmcgbnVsbC5cIik7XHJcbiAgICAgICAgICAgIGlmIChwZXJmb3JtYW5jZUNsaWVudCAmJiBjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgICAgICAgICBwZXJmb3JtYW5jZUNsaWVudD8uYWRkRmllbGRzKHsgZXJyb3JDb2RlOiBcIm5vX2NhY2hlZF9yZXF1ZXN0XCIgfSwgY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHsgcHJvbXB0LCAuLi5yZXF1ZXN0IH0gPSBjYWNoZWRSZXF1ZXN0O1xyXG4gICAgICAgIGlmIChwcm9tcHQpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcIk5hdGl2ZUludGVyYWN0aW9uQ2xpZW50IC0gaGFuZGxlUmVkaXJlY3RQcm9taXNlIGNhbGxlZCBhbmQgcHJvbXB0IHdhcyBpbmNsdWRlZCBpbiB0aGUgb3JpZ2luYWwgcmVxdWVzdCwgcmVtb3ZpbmcgcHJvbXB0IGZyb20gY2FjaGVkIHJlcXVlc3QgdG8gcHJldmVudCBzZWNvbmQgaW50ZXJhY3Rpb24gd2l0aCBuYXRpdmUgYnJva2VyIHdpbmRvdy5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuYnJvd3NlclN0b3JhZ2UucmVtb3ZlSXRlbSh0aGlzLmJyb3dzZXJTdG9yYWdlLmdlbmVyYXRlQ2FjaGVLZXkoVGVtcG9yYXJ5Q2FjaGVLZXlzLk5BVElWRV9SRVFVRVNUKSk7XHJcbiAgICAgICAgY29uc3QgbWVzc2FnZUJvZHkgPSB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogTmF0aXZlRXh0ZW5zaW9uTWV0aG9kLkdldFRva2VuLFxyXG4gICAgICAgICAgICByZXF1ZXN0OiByZXF1ZXN0LFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgY29uc3QgcmVxVGltZXN0YW1wID0gVGltZVV0aWxzLm5vd1NlY29uZHMoKTtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICB0aGlzLmxvZ2dlci52ZXJib3NlKFwiTmF0aXZlSW50ZXJhY3Rpb25DbGllbnQgLSBoYW5kbGVSZWRpcmVjdFByb21pc2Ugc2VuZGluZyBtZXNzYWdlIHRvIG5hdGl2ZSBicm9rZXIuXCIpO1xyXG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMubmF0aXZlTWVzc2FnZUhhbmRsZXIuc2VuZE1lc3NhZ2UobWVzc2FnZUJvZHkpO1xyXG4gICAgICAgICAgICB0aGlzLnZhbGlkYXRlTmF0aXZlUmVzcG9uc2UocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLmhhbmRsZU5hdGl2ZVJlc3BvbnNlKHJlc3BvbnNlLCByZXF1ZXN0LCByZXFUaW1lc3RhbXApO1xyXG4gICAgICAgICAgICB0aGlzLmJyb3dzZXJTdG9yYWdlLnNldEludGVyYWN0aW9uSW5Qcm9ncmVzcyhmYWxzZSk7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHJlc3VsdDtcclxuICAgICAgICAgICAgdGhpcy5zZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLmNsZWFyTmF0aXZlQnJva2VyRXJyb3JDb2RlKCk7XHJcbiAgICAgICAgICAgIHJldHVybiByZXM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnJvd3NlclN0b3JhZ2Uuc2V0SW50ZXJhY3Rpb25JblByb2dyZXNzKGZhbHNlKTtcclxuICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIExvZ291dCBmcm9tIG5hdGl2ZSBwbGF0Zm9ybSB2aWEgYnJvd3NlciBleHRlbnNpb25cclxuICAgICAqIEBwYXJhbSByZXF1ZXN0XHJcbiAgICAgKi9cclxuICAgIGxvZ291dCgpIHtcclxuICAgICAgICB0aGlzLmxvZ2dlci50cmFjZShcIk5hdGl2ZUludGVyYWN0aW9uQ2xpZW50IC0gbG9nb3V0IGNhbGxlZC5cIik7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KFwiTG9nb3V0IG5vdCBpbXBsZW1lbnRlZCB5ZXRcIik7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRyYW5zZm9ybSByZXNwb25zZSBmcm9tIG5hdGl2ZSBwbGF0Zm9ybSBpbnRvIEF1dGhlbnRpY2F0aW9uUmVzdWx0IG9iamVjdCB3aGljaCB3aWxsIGJlIHJldHVybmVkIHRvIHRoZSBlbmQgdXNlclxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICogQHBhcmFtIHJlcVRpbWVzdGFtcFxyXG4gICAgICovXHJcbiAgICBhc3luYyBoYW5kbGVOYXRpdmVSZXNwb25zZShyZXNwb25zZSwgcmVxdWVzdCwgcmVxVGltZXN0YW1wKSB7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIudHJhY2UoXCJOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCAtIGhhbmRsZU5hdGl2ZVJlc3BvbnNlIGNhbGxlZC5cIik7XHJcbiAgICAgICAgLy8gZ2VuZXJhdGUgaWRlbnRpZmllcnNcclxuICAgICAgICBjb25zdCBpZFRva2VuQ2xhaW1zID0gQXV0aFRva2VuLmV4dHJhY3RUb2tlbkNsYWltcyhyZXNwb25zZS5pZF90b2tlbiwgYmFzZTY0RGVjb2RlKTtcclxuICAgICAgICBjb25zdCBob21lQWNjb3VudElkZW50aWZpZXIgPSB0aGlzLmNyZWF0ZUhvbWVBY2NvdW50SWRlbnRpZmllcihyZXNwb25zZSwgaWRUb2tlbkNsYWltcyk7XHJcbiAgICAgICAgY29uc3QgY2FjaGVkaG9tZUFjY291bnRJZCA9IHRoaXMuYnJvd3NlclN0b3JhZ2UuZ2V0QWNjb3VudEluZm9GaWx0ZXJlZEJ5KHtcclxuICAgICAgICAgICAgbmF0aXZlQWNjb3VudElkOiByZXF1ZXN0LmFjY291bnRJZCxcclxuICAgICAgICB9KT8uaG9tZUFjY291bnRJZDtcclxuICAgICAgICBpZiAoaG9tZUFjY291bnRJZGVudGlmaWVyICE9PSBjYWNoZWRob21lQWNjb3VudElkICYmXHJcbiAgICAgICAgICAgIHJlc3BvbnNlLmFjY291bnQuaWQgIT09IHJlcXVlc3QuYWNjb3VudElkKSB7XHJcbiAgICAgICAgICAgIC8vIFVzZXIgc3dpdGNoIGluIG5hdGl2ZSBicm9rZXIgcHJvbXB0IGlzIG5vdCBzdXBwb3J0ZWQuIEFsbCB1c2VycyBtdXN0IGZpcnN0IHNpZ24gaW4gdGhyb3VnaCB3ZWIgZmxvdyB0byBlbnN1cmUgc2VydmVyIHN0YXRlIGlzIGluIHN5bmNcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlTmF0aXZlQXV0aEVycm9yKHVzZXJTd2l0Y2gpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBHZXQgdGhlIHByZWZlcnJlZF9jYWNoZSBkb21haW4gZm9yIHRoZSBnaXZlbiBhdXRob3JpdHlcclxuICAgICAgICBjb25zdCBhdXRob3JpdHkgPSBhd2FpdCB0aGlzLmdldERpc2NvdmVyZWRBdXRob3JpdHkoe1xyXG4gICAgICAgICAgICByZXF1ZXN0QXV0aG9yaXR5OiByZXF1ZXN0LmF1dGhvcml0eSxcclxuICAgICAgICB9KTtcclxuICAgICAgICBjb25zdCBiYXNlQWNjb3VudCA9IGJ1aWxkQWNjb3VudFRvQ2FjaGUodGhpcy5icm93c2VyU3RvcmFnZSwgYXV0aG9yaXR5LCBob21lQWNjb3VudElkZW50aWZpZXIsIGJhc2U2NERlY29kZSwgaWRUb2tlbkNsYWltcywgcmVzcG9uc2UuY2xpZW50X2luZm8sIHVuZGVmaW5lZCwgLy8gZW52aXJvbm1lbnRcclxuICAgICAgICBpZFRva2VuQ2xhaW1zLnRpZCwgdW5kZWZpbmVkLCAvLyBhdXRoIGNvZGUgcGF5bG9hZFxyXG4gICAgICAgIHJlc3BvbnNlLmFjY291bnQuaWQsIHRoaXMubG9nZ2VyKTtcclxuICAgICAgICAvLyBnZW5lcmF0ZSBhdXRoZW50aWNhdGlvblJlc3VsdFxyXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuZ2VuZXJhdGVBdXRoZW50aWNhdGlvblJlc3VsdChyZXNwb25zZSwgcmVxdWVzdCwgaWRUb2tlbkNsYWltcywgYmFzZUFjY291bnQsIGF1dGhvcml0eS5jYW5vbmljYWxBdXRob3JpdHksIHJlcVRpbWVzdGFtcCk7XHJcbiAgICAgICAgLy8gY2FjaGUgYWNjb3VudHMgYW5kIHRva2VucyBpbiB0aGUgYXBwcm9wcmlhdGUgc3RvcmFnZVxyXG4gICAgICAgIHRoaXMuY2FjaGVBY2NvdW50KGJhc2VBY2NvdW50KTtcclxuICAgICAgICB0aGlzLmNhY2hlTmF0aXZlVG9rZW5zKHJlc3BvbnNlLCByZXF1ZXN0LCBob21lQWNjb3VudElkZW50aWZpZXIsIGlkVG9rZW5DbGFpbXMsIHJlc3BvbnNlLmFjY2Vzc190b2tlbiwgcmVzdWx0LnRlbmFudElkLCByZXFUaW1lc3RhbXApO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIGNyZWF0ZXMgYW4gaG9tZUFjY291bnRJZGVudGlmaWVyIGZvciB0aGUgYWNjb3VudFxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKiBAcGFyYW0gaWRUb2tlbk9ialxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgY3JlYXRlSG9tZUFjY291bnRJZGVudGlmaWVyKHJlc3BvbnNlLCBpZFRva2VuQ2xhaW1zKSB7XHJcbiAgICAgICAgLy8gU2F2ZSBhY2NvdW50IGluIGJyb3dzZXIgc3RvcmFnZVxyXG4gICAgICAgIGNvbnN0IGhvbWVBY2NvdW50SWRlbnRpZmllciA9IEFjY291bnRFbnRpdHkuZ2VuZXJhdGVIb21lQWNjb3VudElkKHJlc3BvbnNlLmNsaWVudF9pbmZvIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsIEF1dGhvcml0eVR5cGUuRGVmYXVsdCwgdGhpcy5sb2dnZXIsIHRoaXMuYnJvd3NlckNyeXB0bywgaWRUb2tlbkNsYWltcyk7XHJcbiAgICAgICAgcmV0dXJuIGhvbWVBY2NvdW50SWRlbnRpZmllcjtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogSGVscGVyIHRvIGdlbmVyYXRlIHNjb3Blc1xyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgZ2VuZXJhdGVTY29wZXMocmVzcG9uc2UsIHJlcXVlc3QpIHtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2Uuc2NvcGVcclxuICAgICAgICAgICAgPyBTY29wZVNldC5mcm9tU3RyaW5nKHJlc3BvbnNlLnNjb3BlKVxyXG4gICAgICAgICAgICA6IFNjb3BlU2V0LmZyb21TdHJpbmcocmVxdWVzdC5zY29wZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIElmIFBvUCB0b2tlbiBpcyByZXF1ZXNyZWQsIHJlY29yZHMgdGhlIFBvUCB0b2tlbiBpZiByZXR1cm5lZCBmcm9tIHRoZSBXQU0sIGVsc2UgZ2VuZXJhdGVzIG9uZSBpbiB0aGUgYnJvd3NlclxyXG4gICAgICogQHBhcmFtIHJlcXVlc3RcclxuICAgICAqIEBwYXJhbSByZXNwb25zZVxyXG4gICAgICovXHJcbiAgICBhc3luYyBnZW5lcmF0ZVBvcEFjY2Vzc1Rva2VuKHJlc3BvbnNlLCByZXF1ZXN0KSB7XHJcbiAgICAgICAgaWYgKHJlcXVlc3QudG9rZW5UeXBlID09PSBBdXRoZW50aWNhdGlvblNjaGVtZS5QT1AgJiZcclxuICAgICAgICAgICAgcmVxdWVzdC5zaWduUG9wVG9rZW4pIHtcclxuICAgICAgICAgICAgLyoqXHJcbiAgICAgICAgICAgICAqIFRoaXMgY29kZSBwcmlvcml0aXplcyBTSFIgcmV0dXJuZWQgZnJvbSB0aGUgbmF0aXZlIGxheWVyLiBJbiBjYXNlIG9mIGVycm9yL1NIUiBub3QgY2FsY3VsYXRlZCBmcm9tIFdBTSBhbmQgdGhlIEFUXHJcbiAgICAgICAgICAgICAqIGlzIHN0aWxsIHJlY2VpdmVkLCBTSFIgaXMgY2FsY3VsYXRlZCBsb2NhbGx5XHJcbiAgICAgICAgICAgICAqL1xyXG4gICAgICAgICAgICAvLyBDaGVjayBpZiBuYXRpdmUgbGF5ZXIgcmV0dXJuZWQgYW4gU0hSIHRva2VuXHJcbiAgICAgICAgICAgIGlmIChyZXNwb25zZS5zaHIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubG9nZ2VyLnRyYWNlKFwiaGFuZGxlTmF0aXZlU2VydmVyUmVzcG9uc2U6IFNIUiBpcyBlbmFibGVkIGluIG5hdGl2ZSBsYXllclwiKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5zaHI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gR2VuZXJhdGUgU0hSIGluIG1zYWwganMgaWYgV0FNIGRvZXMgbm90IGNvbXB1dGUgaXQgd2hlbiBQT1AgaXMgZW5hYmxlZFxyXG4gICAgICAgICAgICBjb25zdCBwb3BUb2tlbkdlbmVyYXRvciA9IG5ldyBQb3BUb2tlbkdlbmVyYXRvcih0aGlzLmJyb3dzZXJDcnlwdG8pO1xyXG4gICAgICAgICAgICBjb25zdCBzaHJQYXJhbWV0ZXJzID0ge1xyXG4gICAgICAgICAgICAgICAgcmVzb3VyY2VSZXF1ZXN0TWV0aG9kOiByZXF1ZXN0LnJlc291cmNlUmVxdWVzdE1ldGhvZCxcclxuICAgICAgICAgICAgICAgIHJlc291cmNlUmVxdWVzdFVyaTogcmVxdWVzdC5yZXNvdXJjZVJlcXVlc3RVcmksXHJcbiAgICAgICAgICAgICAgICBzaHJDbGFpbXM6IHJlcXVlc3Quc2hyQ2xhaW1zLFxyXG4gICAgICAgICAgICAgICAgc2hyTm9uY2U6IHJlcXVlc3Quc2hyTm9uY2UsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIC8qKlxyXG4gICAgICAgICAgICAgKiBLZXlJRCBtdXN0IGJlIHByZXNlbnQgaW4gdGhlIG5hdGl2ZSByZXF1ZXN0IGZyb20gd2hlbiB0aGUgUG9QIGtleSB3YXMgZ2VuZXJhdGVkIGluIG9yZGVyIGZvclxyXG4gICAgICAgICAgICAgKiBQb3BUb2tlbkdlbmVyYXRvciB0byBxdWVyeSB0aGUgZnVsbCBrZXkgZm9yIHNpZ25pbmdcclxuICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC5rZXlJZCkge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKENsaWVudEF1dGhFcnJvckNvZGVzLmtleUlkTWlzc2luZyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHBvcFRva2VuR2VuZXJhdG9yLnNpZ25Qb3BUb2tlbihyZXNwb25zZS5hY2Nlc3NfdG9rZW4sIHJlcXVlc3Qua2V5SWQsIHNoclBhcmFtZXRlcnMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmFjY2Vzc190b2tlbjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdlbmVyYXRlcyBhdXRoZW50aWNhdGlvbiByZXN1bHRcclxuICAgICAqIEBwYXJhbSByZXNwb25zZVxyXG4gICAgICogQHBhcmFtIHJlcXVlc3RcclxuICAgICAqIEBwYXJhbSBpZFRva2VuT2JqXHJcbiAgICAgKiBAcGFyYW0gYWNjb3VudEVudGl0eVxyXG4gICAgICogQHBhcmFtIGF1dGhvcml0eVxyXG4gICAgICogQHBhcmFtIHJlcVRpbWVzdGFtcFxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgYXN5bmMgZ2VuZXJhdGVBdXRoZW50aWNhdGlvblJlc3VsdChyZXNwb25zZSwgcmVxdWVzdCwgaWRUb2tlbkNsYWltcywgYWNjb3VudEVudGl0eSwgYXV0aG9yaXR5LCByZXFUaW1lc3RhbXApIHtcclxuICAgICAgICAvLyBBZGQgTmF0aXZlIEJyb2tlciBmaWVsZHMgdG8gVGVsZW1ldHJ5XHJcbiAgICAgICAgY29uc3QgbWF0cyA9IHRoaXMuYWRkVGVsZW1ldHJ5RnJvbU5hdGl2ZVJlc3BvbnNlKHJlc3BvbnNlKTtcclxuICAgICAgICAvLyBJZiBzY29wZXMgbm90IHJldHVybmVkIGluIHNlcnZlciByZXNwb25zZSwgdXNlIHJlcXVlc3Qgc2NvcGVzXHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2VTY29wZXMgPSByZXNwb25zZS5zY29wZVxyXG4gICAgICAgICAgICA/IFNjb3BlU2V0LmZyb21TdHJpbmcocmVzcG9uc2Uuc2NvcGUpXHJcbiAgICAgICAgICAgIDogU2NvcGVTZXQuZnJvbVN0cmluZyhyZXF1ZXN0LnNjb3BlKTtcclxuICAgICAgICBjb25zdCBhY2NvdW50UHJvcGVydGllcyA9IHJlc3BvbnNlLmFjY291bnQucHJvcGVydGllcyB8fCB7fTtcclxuICAgICAgICBjb25zdCB1aWQgPSBhY2NvdW50UHJvcGVydGllc1tcIlVJRFwiXSB8fFxyXG4gICAgICAgICAgICBpZFRva2VuQ2xhaW1zLm9pZCB8fFxyXG4gICAgICAgICAgICBpZFRva2VuQ2xhaW1zLnN1YiB8fFxyXG4gICAgICAgICAgICBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xyXG4gICAgICAgIGNvbnN0IHRpZCA9IGFjY291bnRQcm9wZXJ0aWVzW1wiVGVuYW50SWRcIl0gfHxcclxuICAgICAgICAgICAgaWRUb2tlbkNsYWltcy50aWQgfHxcclxuICAgICAgICAgICAgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICBjb25zdCBhY2NvdW50SW5mbyA9IHVwZGF0ZUFjY291bnRUZW5hbnRQcm9maWxlRGF0YShhY2NvdW50RW50aXR5LmdldEFjY291bnRJbmZvKCksIHVuZGVmaW5lZCwgLy8gdGVuYW50UHJvZmlsZSBvcHRpb25hbFxyXG4gICAgICAgIGlkVG9rZW5DbGFpbXMsIHJlc3BvbnNlLmlkX3Rva2VuKTtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBJbiBwYWlyd2lzZSBicm9rZXIgZmxvd3MsIHRoaXMgY2hlY2sgcHJldmVudHMgdGhlIGJyb2tlcidzIG5hdGl2ZSBhY2NvdW50IGlkXHJcbiAgICAgICAgICogZnJvbSBiZWluZyByZXR1cm5lZCBvdmVyIHRoZSBlbWJlZGRlZCBhcHAncyBhY2NvdW50IGlkLlxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGlmIChhY2NvdW50SW5mby5uYXRpdmVBY2NvdW50SWQgIT09IHJlc3BvbnNlLmFjY291bnQuaWQpIHtcclxuICAgICAgICAgICAgYWNjb3VudEluZm8ubmF0aXZlQWNjb3VudElkID0gcmVzcG9uc2UuYWNjb3VudC5pZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gZ2VuZXJhdGUgUG9QIHRva2VuIGFzIG5lZWRlZFxyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlQWNjZXNzVG9rZW4gPSBhd2FpdCB0aGlzLmdlbmVyYXRlUG9wQWNjZXNzVG9rZW4ocmVzcG9uc2UsIHJlcXVlc3QpO1xyXG4gICAgICAgIGNvbnN0IHRva2VuVHlwZSA9IHJlcXVlc3QudG9rZW5UeXBlID09PSBBdXRoZW50aWNhdGlvblNjaGVtZS5QT1BcclxuICAgICAgICAgICAgPyBBdXRoZW50aWNhdGlvblNjaGVtZS5QT1BcclxuICAgICAgICAgICAgOiBBdXRoZW50aWNhdGlvblNjaGVtZS5CRUFSRVI7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgICAgICAgICBhdXRob3JpdHk6IGF1dGhvcml0eSxcclxuICAgICAgICAgICAgdW5pcXVlSWQ6IHVpZCxcclxuICAgICAgICAgICAgdGVuYW50SWQ6IHRpZCxcclxuICAgICAgICAgICAgc2NvcGVzOiByZXNwb25zZVNjb3Blcy5hc0FycmF5KCksXHJcbiAgICAgICAgICAgIGFjY291bnQ6IGFjY291bnRJbmZvLFxyXG4gICAgICAgICAgICBpZFRva2VuOiByZXNwb25zZS5pZF90b2tlbixcclxuICAgICAgICAgICAgaWRUb2tlbkNsYWltczogaWRUb2tlbkNsYWltcyxcclxuICAgICAgICAgICAgYWNjZXNzVG9rZW46IHJlc3BvbnNlQWNjZXNzVG9rZW4sXHJcbiAgICAgICAgICAgIGZyb21DYWNoZTogbWF0cyA/IHRoaXMuaXNSZXNwb25zZUZyb21DYWNoZShtYXRzKSA6IGZhbHNlLFxyXG4gICAgICAgICAgICBleHBpcmVzT246IG5ldyBEYXRlKE51bWJlcihyZXFUaW1lc3RhbXAgKyByZXNwb25zZS5leHBpcmVzX2luKSAqIDEwMDApLFxyXG4gICAgICAgICAgICB0b2tlblR5cGU6IHRva2VuVHlwZSxcclxuICAgICAgICAgICAgY29ycmVsYXRpb25JZDogdGhpcy5jb3JyZWxhdGlvbklkLFxyXG4gICAgICAgICAgICBzdGF0ZTogcmVzcG9uc2Uuc3RhdGUsXHJcbiAgICAgICAgICAgIGZyb21OYXRpdmVCcm9rZXI6IHRydWUsXHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBjYWNoZSB0aGUgYWNjb3VudCBlbnRpdHkgaW4gYnJvd3NlciBzdG9yYWdlXHJcbiAgICAgKiBAcGFyYW0gYWNjb3VudEVudGl0eVxyXG4gICAgICovXHJcbiAgICBjYWNoZUFjY291bnQoYWNjb3VudEVudGl0eSkge1xyXG4gICAgICAgIC8vIFN0b3JlIHRoZSBhY2NvdW50IGluZm8gYW5kIGhlbmNlIGBuYXRpdmVBY2NvdW50SWRgIGluIGJyb3dzZXIgY2FjaGVcclxuICAgICAgICB0aGlzLmJyb3dzZXJTdG9yYWdlLnNldEFjY291bnQoYWNjb3VudEVudGl0eSk7XHJcbiAgICAgICAgLy8gUmVtb3ZlIGFueSBleGlzdGluZyBjYWNoZWQgdG9rZW5zIGZvciB0aGlzIGFjY291bnQgaW4gYnJvd3NlciBzdG9yYWdlXHJcbiAgICAgICAgdGhpcy5icm93c2VyU3RvcmFnZS5yZW1vdmVBY2NvdW50Q29udGV4dChhY2NvdW50RW50aXR5KS5jYXRjaCgoZSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvcihgRXJyb3Igb2NjdXJyZWQgd2hpbGUgcmVtb3ZpbmcgYWNjb3VudCBjb250ZXh0IGZyb20gYnJvd3NlciBzdG9yYWdlLiAke2V9YCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFN0b3JlcyB0aGUgYWNjZXNzX3Rva2VuIGFuZCBpZF90b2tlbiBpbiBpbm1lbW9yeSBzdG9yYWdlXHJcbiAgICAgKiBAcGFyYW0gcmVzcG9uc2VcclxuICAgICAqIEBwYXJhbSByZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gaG9tZUFjY291bnRJZGVudGlmaWVyXHJcbiAgICAgKiBAcGFyYW0gaWRUb2tlbk9ialxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlQWNjZXNzVG9rZW5cclxuICAgICAqIEBwYXJhbSB0ZW5hbnRJZFxyXG4gICAgICogQHBhcmFtIHJlcVRpbWVzdGFtcFxyXG4gICAgICovXHJcbiAgICBjYWNoZU5hdGl2ZVRva2VucyhyZXNwb25zZSwgcmVxdWVzdCwgaG9tZUFjY291bnRJZGVudGlmaWVyLCBpZFRva2VuQ2xhaW1zLCByZXNwb25zZUFjY2Vzc1Rva2VuLCB0ZW5hbnRJZCwgcmVxVGltZXN0YW1wKSB7XHJcbiAgICAgICAgY29uc3QgY2FjaGVkSWRUb2tlbiA9IENhY2hlSGVscGVycy5jcmVhdGVJZFRva2VuRW50aXR5KGhvbWVBY2NvdW50SWRlbnRpZmllciwgcmVxdWVzdC5hdXRob3JpdHksIHJlc3BvbnNlLmlkX3Rva2VuIHx8IFwiXCIsIHJlcXVlc3QuY2xpZW50SWQsIGlkVG9rZW5DbGFpbXMudGlkIHx8IFwiXCIpO1xyXG4gICAgICAgIC8vIGNhY2hlIGFjY2Vzc1Rva2VuIGluIGlubWVtb3J5IHN0b3JhZ2VcclxuICAgICAgICBjb25zdCBleHBpcmVzSW4gPSByZXF1ZXN0LnRva2VuVHlwZSA9PT0gQXV0aGVudGljYXRpb25TY2hlbWUuUE9QXHJcbiAgICAgICAgICAgID8gQ29uc3RhbnRzLlNIUl9OT05DRV9WQUxJRElUWVxyXG4gICAgICAgICAgICA6ICh0eXBlb2YgcmVzcG9uc2UuZXhwaXJlc19pbiA9PT0gXCJzdHJpbmdcIlxyXG4gICAgICAgICAgICAgICAgPyBwYXJzZUludChyZXNwb25zZS5leHBpcmVzX2luLCAxMClcclxuICAgICAgICAgICAgICAgIDogcmVzcG9uc2UuZXhwaXJlc19pbikgfHwgMDtcclxuICAgICAgICBjb25zdCB0b2tlbkV4cGlyYXRpb25TZWNvbmRzID0gcmVxVGltZXN0YW1wICsgZXhwaXJlc0luO1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlU2NvcGVzID0gdGhpcy5nZW5lcmF0ZVNjb3BlcyhyZXNwb25zZSwgcmVxdWVzdCk7XHJcbiAgICAgICAgY29uc3QgY2FjaGVkQWNjZXNzVG9rZW4gPSBDYWNoZUhlbHBlcnMuY3JlYXRlQWNjZXNzVG9rZW5FbnRpdHkoaG9tZUFjY291bnRJZGVudGlmaWVyLCByZXF1ZXN0LmF1dGhvcml0eSwgcmVzcG9uc2VBY2Nlc3NUb2tlbiwgcmVxdWVzdC5jbGllbnRJZCwgaWRUb2tlbkNsYWltcy50aWQgfHwgdGVuYW50SWQsIHJlc3BvbnNlU2NvcGVzLnByaW50U2NvcGVzKCksIHRva2VuRXhwaXJhdGlvblNlY29uZHMsIDAsIGJhc2U2NERlY29kZSwgdW5kZWZpbmVkLCByZXF1ZXN0LnRva2VuVHlwZSwgdW5kZWZpbmVkLCByZXF1ZXN0LmtleUlkKTtcclxuICAgICAgICBjb25zdCBuYXRpdmVDYWNoZVJlY29yZCA9IHtcclxuICAgICAgICAgICAgaWRUb2tlbjogY2FjaGVkSWRUb2tlbixcclxuICAgICAgICAgICAgYWNjZXNzVG9rZW46IGNhY2hlZEFjY2Vzc1Rva2VuLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgdm9pZCB0aGlzLm5hdGl2ZVN0b3JhZ2VNYW5hZ2VyLnNhdmVDYWNoZVJlY29yZChuYXRpdmVDYWNoZVJlY29yZCwgcmVxdWVzdC5zdG9yZUluQ2FjaGUpO1xyXG4gICAgfVxyXG4gICAgYWRkVGVsZW1ldHJ5RnJvbU5hdGl2ZVJlc3BvbnNlKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgY29uc3QgbWF0cyA9IHRoaXMuZ2V0TUFUU0Zyb21SZXNwb25zZShyZXNwb25zZSk7XHJcbiAgICAgICAgaWYgKCFtYXRzKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LmFkZEZpZWxkcyh7XHJcbiAgICAgICAgICAgIGV4dGVuc2lvbklkOiB0aGlzLm5hdGl2ZU1lc3NhZ2VIYW5kbGVyLmdldEV4dGVuc2lvbklkKCksXHJcbiAgICAgICAgICAgIGV4dGVuc2lvblZlcnNpb246IHRoaXMubmF0aXZlTWVzc2FnZUhhbmRsZXIuZ2V0RXh0ZW5zaW9uVmVyc2lvbigpLFxyXG4gICAgICAgICAgICBtYXRzQnJva2VyVmVyc2lvbjogbWF0cy5icm9rZXJfdmVyc2lvbixcclxuICAgICAgICAgICAgbWF0c0FjY291bnRKb2luT25TdGFydDogbWF0cy5hY2NvdW50X2pvaW5fb25fc3RhcnQsXHJcbiAgICAgICAgICAgIG1hdHNBY2NvdW50Sm9pbk9uRW5kOiBtYXRzLmFjY291bnRfam9pbl9vbl9lbmQsXHJcbiAgICAgICAgICAgIG1hdHNEZXZpY2VKb2luOiBtYXRzLmRldmljZV9qb2luLFxyXG4gICAgICAgICAgICBtYXRzUHJvbXB0QmVoYXZpb3I6IG1hdHMucHJvbXB0X2JlaGF2aW9yLFxyXG4gICAgICAgICAgICBtYXRzQXBpRXJyb3JDb2RlOiBtYXRzLmFwaV9lcnJvcl9jb2RlLFxyXG4gICAgICAgICAgICBtYXRzVWlWaXNpYmxlOiBtYXRzLnVpX3Zpc2libGUsXHJcbiAgICAgICAgICAgIG1hdHNTaWxlbnRDb2RlOiBtYXRzLnNpbGVudF9jb2RlLFxyXG4gICAgICAgICAgICBtYXRzU2lsZW50QmlTdWJDb2RlOiBtYXRzLnNpbGVudF9iaV9zdWJfY29kZSxcclxuICAgICAgICAgICAgbWF0c1NpbGVudE1lc3NhZ2U6IG1hdHMuc2lsZW50X21lc3NhZ2UsXHJcbiAgICAgICAgICAgIG1hdHNTaWxlbnRTdGF0dXM6IG1hdHMuc2lsZW50X3N0YXR1cyxcclxuICAgICAgICAgICAgbWF0c0h0dHBTdGF0dXM6IG1hdHMuaHR0cF9zdGF0dXMsXHJcbiAgICAgICAgICAgIG1hdHNIdHRwRXZlbnRDb3VudDogbWF0cy5odHRwX2V2ZW50X2NvdW50LFxyXG4gICAgICAgIH0sIHRoaXMuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgcmV0dXJuIG1hdHM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFZhbGlkYXRlcyBuYXRpdmUgcGxhdGZvcm0gcmVzcG9uc2UgYmVmb3JlIHByb2Nlc3NpbmdcclxuICAgICAqIEBwYXJhbSByZXNwb25zZVxyXG4gICAgICovXHJcbiAgICB2YWxpZGF0ZU5hdGl2ZVJlc3BvbnNlKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwiYWNjZXNzX3Rva2VuXCIpICYmXHJcbiAgICAgICAgICAgIHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwiaWRfdG9rZW5cIikgJiZcclxuICAgICAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJjbGllbnRfaW5mb1wiKSAmJlxyXG4gICAgICAgICAgICByZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcImFjY291bnRcIikgJiZcclxuICAgICAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJzY29wZVwiKSAmJlxyXG4gICAgICAgICAgICByZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcImV4cGlyZXNfaW5cIikpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQXV0aEVycm9yKEF1dGhFcnJvckNvZGVzLnVuZXhwZWN0ZWRFcnJvciwgXCJSZXNwb25zZSBtaXNzaW5nIGV4cGVjdGVkIHByb3BlcnRpZXMuXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyBNQVRTIHRlbGVtZXRyeSBmcm9tIG5hdGl2ZSByZXNwb25zZVxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBnZXRNQVRTRnJvbVJlc3BvbnNlKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLnByb3BlcnRpZXMuTUFUUykge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UocmVzcG9uc2UucHJvcGVydGllcy5NQVRTKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoXCJOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCAtIEVycm9yIHBhcnNpbmcgTUFUUyB0ZWxlbWV0cnksIHJldHVybmluZyBudWxsIGluc3RlYWRcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgd2hldGhlciBvciBub3QgcmVzcG9uc2UgY2FtZSBmcm9tIG5hdGl2ZSBjYWNoZVxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBpc1Jlc3BvbnNlRnJvbUNhY2hlKG1hdHMpIHtcclxuICAgICAgICBpZiAodHlwZW9mIG1hdHMuaXNfY2FjaGVkID09PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJOYXRpdmVJbnRlcmFjdGlvbkNsaWVudCAtIE1BVFMgdGVsZW1ldHJ5IGRvZXMgbm90IGNvbnRhaW4gZmllbGQgaW5kaWNhdGluZyBpZiByZXNwb25zZSB3YXMgc2VydmVkIGZyb20gY2FjaGUuIFJldHVybmluZyBmYWxzZS5cIik7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuICEhbWF0cy5pc19jYWNoZWQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFRyYW5zbGF0ZXMgZGV2ZWxvcGVyIHByb3ZpZGVkIHJlcXVlc3Qgb2JqZWN0IGludG8gTmF0aXZlUmVxdWVzdCBvYmplY3RcclxuICAgICAqIEBwYXJhbSByZXF1ZXN0XHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGluaXRpYWxpemVOYXRpdmVSZXF1ZXN0KHJlcXVlc3QpIHtcclxuICAgICAgICB0aGlzLmxvZ2dlci50cmFjZShcIk5hdGl2ZUludGVyYWN0aW9uQ2xpZW50IC0gaW5pdGlhbGl6ZU5hdGl2ZVJlcXVlc3QgY2FsbGVkXCIpO1xyXG4gICAgICAgIGNvbnN0IHJlcXVlc3RBdXRob3JpdHkgPSByZXF1ZXN0LmF1dGhvcml0eSB8fCB0aGlzLmNvbmZpZy5hdXRoLmF1dGhvcml0eTtcclxuICAgICAgICBpZiAocmVxdWVzdC5hY2NvdW50KSB7XHJcbiAgICAgICAgICAgIC8vIHZhbGlkYXRlIGF1dGhvcml0eVxyXG4gICAgICAgICAgICBhd2FpdCB0aGlzLmdldERpc2NvdmVyZWRBdXRob3JpdHkoe1xyXG4gICAgICAgICAgICAgICAgcmVxdWVzdEF1dGhvcml0eSxcclxuICAgICAgICAgICAgICAgIHJlcXVlc3RBenVyZUNsb3VkT3B0aW9uczogcmVxdWVzdC5henVyZUNsb3VkT3B0aW9ucyxcclxuICAgICAgICAgICAgICAgIGFjY291bnQ6IHJlcXVlc3QuYWNjb3VudCxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGNhbm9uaWNhbEF1dGhvcml0eSA9IG5ldyBVcmxTdHJpbmcocmVxdWVzdEF1dGhvcml0eSk7XHJcbiAgICAgICAgY2Fub25pY2FsQXV0aG9yaXR5LnZhbGlkYXRlQXNVcmkoKTtcclxuICAgICAgICAvLyBzY29wZXMgYXJlIGV4cGVjdGVkIHRvIGJlIHJlY2VpdmVkIGJ5IHRoZSBuYXRpdmUgYnJva2VyIGFzIFwic2NvcGVcIiBhbmQgd2lsbCBiZSBhZGRlZCB0byB0aGUgcmVxdWVzdCBiZWxvdy4gT3RoZXIgcHJvcGVydGllcyB0aGF0IHNob3VsZCBiZSBkcm9wcGVkIGZyb20gdGhlIHJlcXVlc3QgdG8gdGhlIG5hdGl2ZSBicm9rZXIgY2FuIGJlIGluY2x1ZGVkIGluIHRoZSBvYmplY3QgZGVzdHJ1Y3R1cmluZyBoZXJlLlxyXG4gICAgICAgIGNvbnN0IHsgc2NvcGVzLCAuLi5yZW1haW5pbmdQcm9wZXJ0aWVzIH0gPSByZXF1ZXN0O1xyXG4gICAgICAgIGNvbnN0IHNjb3BlU2V0ID0gbmV3IFNjb3BlU2V0KHNjb3BlcyB8fCBbXSk7XHJcbiAgICAgICAgc2NvcGVTZXQuYXBwZW5kU2NvcGVzKE9JRENfREVGQVVMVF9TQ09QRVMpO1xyXG4gICAgICAgIGNvbnN0IGdldFByb21wdCA9ICgpID0+IHtcclxuICAgICAgICAgICAgLy8gSWYgcmVxdWVzdCBpcyBzaWxlbnQsIHByb21wdCBpcyBhbHdheXMgbm9uZVxyXG4gICAgICAgICAgICBzd2l0Y2ggKHRoaXMuYXBpSWQpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgQXBpSWQuc3NvU2lsZW50OlxyXG4gICAgICAgICAgICAgICAgY2FzZSBBcGlJZC5hY3F1aXJlVG9rZW5TaWxlbnRfc2lsZW50RmxvdzpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci50cmFjZShcImluaXRpYWxpemVOYXRpdmVSZXF1ZXN0OiBzaWxlbnQgcmVxdWVzdCBzZXRzIHByb21wdCB0byBub25lXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBQcm9tcHRWYWx1ZS5OT05FO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIFByb21wdCBub3QgcHJvdmlkZWQsIHJlcXVlc3QgbWF5IHByb2NlZWQgYW5kIG5hdGl2ZSBicm9rZXIgZGVjaWRlcyBpZiBpdCBuZWVkcyB0byBwcm9tcHRcclxuICAgICAgICAgICAgaWYgKCFyZXF1ZXN0LnByb21wdCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIudHJhY2UoXCJpbml0aWFsaXplTmF0aXZlUmVxdWVzdDogcHJvbXB0IHdhcyBub3QgcHJvdmlkZWRcIik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIElmIHJlcXVlc3QgaXMgaW50ZXJhY3RpdmUsIGNoZWNrIGlmIHByb21wdCBwcm92aWRlZCBpcyBhbGxvd2VkIHRvIGdvIGRpcmVjdGx5IHRvIG5hdGl2ZSBicm9rZXJcclxuICAgICAgICAgICAgc3dpdGNoIChyZXF1ZXN0LnByb21wdCkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSBQcm9tcHRWYWx1ZS5OT05FOlxyXG4gICAgICAgICAgICAgICAgY2FzZSBQcm9tcHRWYWx1ZS5DT05TRU5UOlxyXG4gICAgICAgICAgICAgICAgY2FzZSBQcm9tcHRWYWx1ZS5MT0dJTjpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZ2dlci50cmFjZShcImluaXRpYWxpemVOYXRpdmVSZXF1ZXN0OiBwcm9tcHQgaXMgY29tcGF0aWJsZSB3aXRoIG5hdGl2ZSBmbG93XCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXF1ZXN0LnByb21wdDtcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIudHJhY2UoYGluaXRpYWxpemVOYXRpdmVSZXF1ZXN0OiBwcm9tcHQgPSAke3JlcXVlc3QucHJvbXB0fSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIG5hdGl2ZSBmbG93YCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcihuYXRpdmVQcm9tcHROb3RTdXBwb3J0ZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICBjb25zdCB2YWxpZGF0ZWRSZXF1ZXN0ID0ge1xyXG4gICAgICAgICAgICAuLi5yZW1haW5pbmdQcm9wZXJ0aWVzLFxyXG4gICAgICAgICAgICBhY2NvdW50SWQ6IHRoaXMuYWNjb3VudElkLFxyXG4gICAgICAgICAgICBjbGllbnRJZDogdGhpcy5jb25maWcuYXV0aC5jbGllbnRJZCxcclxuICAgICAgICAgICAgYXV0aG9yaXR5OiBjYW5vbmljYWxBdXRob3JpdHkudXJsU3RyaW5nLFxyXG4gICAgICAgICAgICBzY29wZTogc2NvcGVTZXQucHJpbnRTY29wZXMoKSxcclxuICAgICAgICAgICAgcmVkaXJlY3RVcmk6IHRoaXMuZ2V0UmVkaXJlY3RVcmkocmVxdWVzdC5yZWRpcmVjdFVyaSksXHJcbiAgICAgICAgICAgIHByb21wdDogZ2V0UHJvbXB0KCksXHJcbiAgICAgICAgICAgIGNvcnJlbGF0aW9uSWQ6IHRoaXMuY29ycmVsYXRpb25JZCxcclxuICAgICAgICAgICAgdG9rZW5UeXBlOiByZXF1ZXN0LmF1dGhlbnRpY2F0aW9uU2NoZW1lLFxyXG4gICAgICAgICAgICB3aW5kb3dUaXRsZVN1YnN0cmluZzogZG9jdW1lbnQudGl0bGUsXHJcbiAgICAgICAgICAgIGV4dHJhUGFyYW1ldGVyczoge1xyXG4gICAgICAgICAgICAgICAgLi4ucmVxdWVzdC5leHRyYVF1ZXJ5UGFyYW1ldGVycyxcclxuICAgICAgICAgICAgICAgIC4uLnJlcXVlc3QudG9rZW5RdWVyeVBhcmFtZXRlcnMsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGV4dGVuZGVkRXhwaXJ5VG9rZW46IGZhbHNlLFxyXG4gICAgICAgICAgICBrZXlJZDogcmVxdWVzdC5wb3BLaWQsXHJcbiAgICAgICAgfTtcclxuICAgICAgICAvLyBDaGVjayBmb3IgUG9QIHRva2VuIHJlcXVlc3RzOiBzaWduUG9wVG9rZW4gc2hvdWxkIG9ubHkgYmUgc2V0IHRvIHRydWUgaWYgcG9wS2lkIGlzIG5vdCBzZXRcclxuICAgICAgICBpZiAodmFsaWRhdGVkUmVxdWVzdC5zaWduUG9wVG9rZW4gJiYgISFyZXF1ZXN0LnBvcEtpZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKGludmFsaWRQb3BUb2tlblJlcXVlc3QpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmhhbmRsZUV4dHJhQnJva2VyUGFyYW1zKHZhbGlkYXRlZFJlcXVlc3QpO1xyXG4gICAgICAgIHZhbGlkYXRlZFJlcXVlc3QuZXh0cmFQYXJhbWV0ZXJzID1cclxuICAgICAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5leHRyYVBhcmFtZXRlcnMgfHwge307XHJcbiAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5leHRyYVBhcmFtZXRlcnMudGVsZW1ldHJ5ID1cclxuICAgICAgICAgICAgTmF0aXZlQ29uc3RhbnRzLk1BVFNfVEVMRU1FVFJZO1xyXG4gICAgICAgIGlmIChyZXF1ZXN0LmF1dGhlbnRpY2F0aW9uU2NoZW1lID09PSBBdXRoZW50aWNhdGlvblNjaGVtZS5QT1ApIHtcclxuICAgICAgICAgICAgLy8gYWRkIFBPUCByZXF1ZXN0IHR5cGVcclxuICAgICAgICAgICAgY29uc3Qgc2hyUGFyYW1ldGVycyA9IHtcclxuICAgICAgICAgICAgICAgIHJlc291cmNlUmVxdWVzdFVyaTogcmVxdWVzdC5yZXNvdXJjZVJlcXVlc3RVcmksXHJcbiAgICAgICAgICAgICAgICByZXNvdXJjZVJlcXVlc3RNZXRob2Q6IHJlcXVlc3QucmVzb3VyY2VSZXF1ZXN0TWV0aG9kLFxyXG4gICAgICAgICAgICAgICAgc2hyQ2xhaW1zOiByZXF1ZXN0LnNockNsYWltcyxcclxuICAgICAgICAgICAgICAgIHNock5vbmNlOiByZXF1ZXN0LnNock5vbmNlLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICBjb25zdCBwb3BUb2tlbkdlbmVyYXRvciA9IG5ldyBQb3BUb2tlbkdlbmVyYXRvcih0aGlzLmJyb3dzZXJDcnlwdG8pO1xyXG4gICAgICAgICAgICAvLyBnZW5lcmF0ZSByZXFDbmYgaWYgbm90IHByb3ZpZGVkIGluIHRoZSByZXF1ZXN0XHJcbiAgICAgICAgICAgIGxldCByZXFDbmZEYXRhO1xyXG4gICAgICAgICAgICBpZiAoIXZhbGlkYXRlZFJlcXVlc3Qua2V5SWQpIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGdlbmVyYXRlZFJlcUNuZkRhdGEgPSBhd2FpdCBpbnZva2VBc3luYyhwb3BUb2tlbkdlbmVyYXRvci5nZW5lcmF0ZUNuZi5iaW5kKHBvcFRva2VuR2VuZXJhdG9yKSwgUGVyZm9ybWFuY2VFdmVudHMuUG9wVG9rZW5HZW5lcmF0ZUNuZiwgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQsIHJlcXVlc3QuY29ycmVsYXRpb25JZCkoc2hyUGFyYW1ldGVycywgdGhpcy5sb2dnZXIpO1xyXG4gICAgICAgICAgICAgICAgcmVxQ25mRGF0YSA9IGdlbmVyYXRlZFJlcUNuZkRhdGEucmVxQ25mU3RyaW5nO1xyXG4gICAgICAgICAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5rZXlJZCA9IGdlbmVyYXRlZFJlcUNuZkRhdGEua2lkO1xyXG4gICAgICAgICAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5zaWduUG9wVG9rZW4gPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgcmVxQ25mRGF0YSA9IHRoaXMuYnJvd3NlckNyeXB0by5iYXNlNjRVcmxFbmNvZGUoSlNPTi5zdHJpbmdpZnkoeyBraWQ6IHZhbGlkYXRlZFJlcXVlc3Qua2V5SWQgfSkpO1xyXG4gICAgICAgICAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5zaWduUG9wVG9rZW4gPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBTUEFzIHJlcXVpcmUgd2hvbGUgc3RyaW5nIHRvIGJlIHBhc3NlZCB0byBicm9rZXJcclxuICAgICAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5yZXFDbmYgPSByZXFDbmZEYXRhO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmFkZFJlcXVlc3RTS1VzKHZhbGlkYXRlZFJlcXVlc3QpO1xyXG4gICAgICAgIHJldHVybiB2YWxpZGF0ZWRSZXF1ZXN0O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBIYW5kbGVzIGV4dHJhIGJyb2tlciByZXF1ZXN0IHBhcmFtZXRlcnNcclxuICAgICAqIEBwYXJhbSByZXF1ZXN0IHtOYXRpdmVUb2tlblJlcXVlc3R9XHJcbiAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICovXHJcbiAgICBoYW5kbGVFeHRyYUJyb2tlclBhcmFtcyhyZXF1ZXN0KSB7XHJcbiAgICAgICAgaWYgKCFyZXF1ZXN0LmV4dHJhUGFyYW1ldGVycykge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChyZXF1ZXN0LmV4dHJhUGFyYW1ldGVycy5oYXNPd25Qcm9wZXJ0eShCcm9rZXJTZXJ2ZXJQYXJhbUtleXMuQlJPS0VSX0NMSUVOVF9JRCkgJiZcclxuICAgICAgICAgICAgcmVxdWVzdC5leHRyYVBhcmFtZXRlcnMuaGFzT3duUHJvcGVydHkoQnJva2VyU2VydmVyUGFyYW1LZXlzLkJST0tFUl9SRURJUkVDVF9VUkkpICYmXHJcbiAgICAgICAgICAgIHJlcXVlc3QuZXh0cmFQYXJhbWV0ZXJzLmhhc093blByb3BlcnR5KEFBRFNlcnZlclBhcmFtS2V5cy5DTElFTlRfSUQpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGNoaWxkX2NsaWVudF9pZCA9IHJlcXVlc3QuZXh0cmFQYXJhbWV0ZXJzW0FBRFNlcnZlclBhcmFtS2V5cy5DTElFTlRfSURdO1xyXG4gICAgICAgICAgICBjb25zdCBjaGlsZF9yZWRpcmVjdF91cmkgPSByZXF1ZXN0LnJlZGlyZWN0VXJpO1xyXG4gICAgICAgICAgICBjb25zdCBicmtfcmVkaXJlY3RfdXJpID0gcmVxdWVzdC5leHRyYVBhcmFtZXRlcnNbQnJva2VyU2VydmVyUGFyYW1LZXlzLkJST0tFUl9SRURJUkVDVF9VUkldO1xyXG4gICAgICAgICAgICByZXF1ZXN0LmV4dHJhUGFyYW1ldGVycyA9IHtcclxuICAgICAgICAgICAgICAgIGNoaWxkX2NsaWVudF9pZCxcclxuICAgICAgICAgICAgICAgIGNoaWxkX3JlZGlyZWN0X3VyaSxcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgcmVxdWVzdC5yZWRpcmVjdFVyaSA9IGJya19yZWRpcmVjdF91cmk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IE5hdGl2ZUludGVyYWN0aW9uQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1OYXRpdmVJbnRlcmFjdGlvbkNsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PopupClient: () => (/* binding */ PopupClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../event/EventType.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./NativeInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../interaction_handler/InteractionHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass PopupClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        // Properly sets this reference for the unload event.\r\n        this.unloadWindow = this.unloadWindow.bind(this);\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n    /**\r\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n     * @param request\r\n     */\r\n    acquireToken(request) {\r\n        try {\r\n            const popupName = this.generatePopupName(request.scopes || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority);\r\n            const popupParams = {\r\n                popupName,\r\n                popupWindowAttributes: request.popupWindowAttributes || {},\r\n                popupWindowParent: request.popupWindowParent ?? window,\r\n            };\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.acquireTokenPopupAsync(request, popupParams);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\r\n                popupParams.popup = this.openSizedPopup(\"about:blank\", popupParams);\r\n                return this.acquireTokenPopupAsync(request, popupParams);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logout(logoutRequest) {\r\n        try {\r\n            this.logger.verbose(\"logoutPopup called\");\r\n            const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n            const popupParams = {\r\n                popupName: this.generateLogoutPopupName(validLogoutRequest),\r\n                popupWindowAttributes: logoutRequest?.popupWindowAttributes || {},\r\n                popupWindowParent: logoutRequest?.popupWindowParent ?? window,\r\n            };\r\n            const authority = logoutRequest && logoutRequest.authority;\r\n            const mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.logoutPopupAsync(validLogoutRequest, popupParams, authority, mainWindowRedirectUri);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before logging out.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\r\n                popupParams.popup = this.openSizedPopup(\"about:blank\", popupParams);\r\n                return this.logoutPopupAsync(validLogoutRequest, popupParams, authority, mainWindowRedirectUri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Since this function is synchronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    /**\r\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param popup\r\n     * @param popupWindowAttributes\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenPopupAsync(request, popupParams) {\r\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenPopup);\r\n        const validRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.initializeAuthorizationRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, this.correlationId)(request, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_5__.preconnect)(validRequest.authority);\r\n        try {\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.initializeAuthorizationCodeRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, this.correlationId)(validRequest);\r\n            // Initialize the client\r\n            const authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: validRequest.authority,\r\n                requestAzureCloudOptions: validRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: validRequest.extraQueryParameters,\r\n                account: validRequest.account,\r\n            });\r\n            const isNativeBroker = _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_6__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme);\r\n            // Start measurement for server calls with native brokering enabled\r\n            let fetchNativeAccountIdMeasurement;\r\n            if (isNativeBroker) {\r\n                fetchNativeAccountIdMeasurement =\r\n                    this.performanceClient.startMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.FetchAccountIdWithNativeBroker, request.correlationId);\r\n            }\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl({\r\n                ...validRequest,\r\n                nativeBroker: isNativeBroker,\r\n            });\r\n            // Create popup interaction handler.\r\n            const interactionHandler = new _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n            // Show the UI once the url has been created. Get the window handle for the popup.\r\n            const popupWindow = this.initiateAuthRequest(navigateUrl, popupParams);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_8__.EventType.POPUP_OPENED, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, { popupWindow }, null);\r\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n            const responseString = await this.monitorPopupForHash(popupWindow, popupParams.popupWindowParent);\r\n            const serverParams = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invoke)(_response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_9__.deserializeResponse, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.DeserializeResponse, this.logger, this.performanceClient, this.correlationId)(responseString, this.config.auth.OIDCOptions.serverResponseType, this.logger);\r\n            // Remove throttle if it exists\r\n            _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\r\n            if (serverParams.accountId) {\r\n                this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n                // end measurement for server call with native brokering enabled\r\n                if (fetchNativeAccountIdMeasurement) {\r\n                    fetchNativeAccountIdMeasurement.end({\r\n                        success: true,\r\n                        isNativeBroker: true,\r\n                    });\r\n                }\r\n                if (!this.nativeMessageHandler) {\r\n                    throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__.nativeConnectionNotEstablished);\r\n                }\r\n                const nativeInteractionClient = new _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_13__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, validRequest.correlationId);\r\n                const { userRequestState } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_14__.ProtocolUtils.parseRequestState(this.browserCrypto, validRequest.state);\r\n                return await nativeInteractionClient.acquireToken({\r\n                    ...validRequest,\r\n                    state: userRequestState,\r\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\r\n                });\r\n            }\r\n            // Handle response from hash string.\r\n            const result = await interactionHandler.handleCodeResponse(serverParams, validRequest);\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n            popupParams.popup?.close();\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_15__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param requestAuthority\r\n     * @param popup\r\n     * @param mainWindowRedirectUri\r\n     * @param popupWindowAttributes\r\n     */\r\n    async logoutPopupAsync(validRequest, popupParams, requestAuthority, mainWindowRedirectUri) {\r\n        this.logger.verbose(\"logoutPopupAsync called\");\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_8__.EventType.LOGOUT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, validRequest);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logoutPopup);\r\n        try {\r\n            // Clear cache on logout\r\n            await this.clearCacheOnLogout(validRequest.account);\r\n            // Initialize the client\r\n            const authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: requestAuthority,\r\n                account: validRequest.account || undefined,\r\n            });\r\n            try {\r\n                authClient.authority.endSessionEndpoint;\r\n            }\r\n            catch {\r\n                if (validRequest.account?.homeAccountId &&\r\n                    validRequest.postLogoutRedirectUri &&\r\n                    authClient.authority.protocolMode === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_16__.ProtocolMode.OIDC) {\r\n                    void this.browserStorage.removeAccount(validRequest.account?.homeAccountId);\r\n                    this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_8__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, validRequest);\r\n                    if (mainWindowRedirectUri) {\r\n                        const navigationOptions = {\r\n                            apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logoutPopup,\r\n                            timeout: this.config.system.redirectNavigationTimeout,\r\n                            noHistory: false,\r\n                        };\r\n                        const absoluteUrl = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.UrlString.getAbsoluteUrl(mainWindowRedirectUri, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_5__.getCurrentUri)());\r\n                        await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\r\n                    }\r\n                    popupParams.popup?.close();\r\n                    return;\r\n                }\r\n            }\r\n            // Create logout string and navigate user window to logout.\r\n            const logoutUri = authClient.getLogoutUri(validRequest);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_8__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, validRequest);\r\n            // Open the popup window to requestUrl.\r\n            const popupWindow = this.openPopup(logoutUri, popupParams);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_8__.EventType.POPUP_OPENED, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, { popupWindow }, null);\r\n            await this.monitorPopupForHash(popupWindow, popupParams.popupWindowParent).catch(() => {\r\n                // Swallow any errors related to monitoring the window. Server logout is best effort\r\n            });\r\n            if (mainWindowRedirectUri) {\r\n                const navigationOptions = {\r\n                    apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.logoutPopup,\r\n                    timeout: this.config.system.redirectNavigationTimeout,\r\n                    noHistory: false,\r\n                };\r\n                const absoluteUrl = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.UrlString.getAbsoluteUrl(mainWindowRedirectUri, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_5__.getCurrentUri)());\r\n                this.logger.verbose(\"Redirecting main window to url specified in the request\");\r\n                this.logger.verbosePii(`Redirecting main window to: ${absoluteUrl}`);\r\n                await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\r\n            }\r\n            else {\r\n                this.logger.verbose(\"No main window navigation requested\");\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n            popupParams.popup?.close();\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_15__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_8__.EventType.LOGOUT_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup, null, e);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_8__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\r\n            throw e;\r\n        }\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_8__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\r\n    }\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    initiateAuthRequest(requestUrl, params) {\r\n        // Check that request url is not empty.\r\n        if (requestUrl) {\r\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\r\n            // Open the popup window to requestUrl.\r\n            return this.openPopup(requestUrl, params);\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.logger.error(\"Navigate url is empty\");\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__.emptyNavigateUri);\r\n        }\r\n    }\r\n    /**\r\n     * Monitors a window until it loads a url with the same origin.\r\n     * @param popupWindow - window that is being monitored\r\n     * @param timeout - timeout for processing hash once popup is redirected back to application\r\n     */\r\n    monitorPopupForHash(popupWindow, popupWindowParent) {\r\n        return new Promise((resolve, reject) => {\r\n            this.logger.verbose(\"PopupHandler.monitorPopupForHash - polling started\");\r\n            const intervalId = setInterval(() => {\r\n                // Window is closed\r\n                if (popupWindow.closed) {\r\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - window closed\");\r\n                    clearInterval(intervalId);\r\n                    reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__.userCancelled));\r\n                    return;\r\n                }\r\n                let href = \"\";\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = popupWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                // Don't process blank pages or cross domain\r\n                if (!href || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n                clearInterval(intervalId);\r\n                let responseString = \"\";\r\n                const responseType = this.config.auth.OIDCOptions.serverResponseType;\r\n                if (popupWindow) {\r\n                    if (responseType === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ServerResponseType.QUERY) {\r\n                        responseString = popupWindow.location.search;\r\n                    }\r\n                    else {\r\n                        responseString = popupWindow.location.hash;\r\n                    }\r\n                }\r\n                this.logger.verbose(\"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\");\r\n                resolve(responseString);\r\n            }, this.config.system.pollIntervalMilliseconds);\r\n        }).finally(() => {\r\n            this.cleanPopup(popupWindow, popupWindowParent);\r\n        });\r\n    }\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @param popupWindowAttributes\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    openPopup(urlNavigate, popupParams) {\r\n        try {\r\n            let popupWindow;\r\n            // Popup window passed in, setting url to navigate to\r\n            if (popupParams.popup) {\r\n                popupWindow = popupParams.popup;\r\n                this.logger.verbosePii(`Navigating popup window to: ${urlNavigate}`);\r\n                popupWindow.location.assign(urlNavigate);\r\n            }\r\n            else if (typeof popupParams.popup === \"undefined\") {\r\n                // Popup will be undefined if it was not passed in\r\n                this.logger.verbosePii(`Opening popup window to: ${urlNavigate}`);\r\n                popupWindow = this.openSizedPopup(urlNavigate, popupParams);\r\n            }\r\n            // Popup will be null if popups are blocked\r\n            if (!popupWindow) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__.emptyWindowError);\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            popupParams.popupWindowParent.addEventListener(\"beforeunload\", this.unloadWindow);\r\n            return popupWindow;\r\n        }\r\n        catch (e) {\r\n            this.logger.error(\"error opening popup \" + e.message);\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_11__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_12__.popupWindowError);\r\n        }\r\n    }\r\n    /**\r\n     * Helper function to set popup window dimensions and position\r\n     * @param urlNavigate\r\n     * @param popupName\r\n     * @param popupWindowAttributes\r\n     * @returns\r\n     */\r\n    openSizedPopup(urlNavigate, { popupName, popupWindowAttributes, popupWindowParent }) {\r\n        /**\r\n         * adding winLeft and winTop to account for dual monitor\r\n         * using screenLeft and screenTop for IE8 and earlier\r\n         */\r\n        const winLeft = popupWindowParent.screenLeft\r\n            ? popupWindowParent.screenLeft\r\n            : popupWindowParent.screenX;\r\n        const winTop = popupWindowParent.screenTop\r\n            ? popupWindowParent.screenTop\r\n            : popupWindowParent.screenY;\r\n        /**\r\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n         * using document.documentElement.clientWidth for IE8 and earlier\r\n         */\r\n        const winWidth = popupWindowParent.innerWidth ||\r\n            document.documentElement.clientWidth ||\r\n            document.body.clientWidth;\r\n        const winHeight = popupWindowParent.innerHeight ||\r\n            document.documentElement.clientHeight ||\r\n            document.body.clientHeight;\r\n        let width = popupWindowAttributes.popupSize?.width;\r\n        let height = popupWindowAttributes.popupSize?.height;\r\n        let top = popupWindowAttributes.popupPosition?.top;\r\n        let left = popupWindowAttributes.popupPosition?.left;\r\n        if (!width || width < 0 || width > winWidth) {\r\n            this.logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\r\n            width = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_WIDTH;\r\n        }\r\n        if (!height || height < 0 || height > winHeight) {\r\n            this.logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\r\n            height = _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_HEIGHT;\r\n        }\r\n        if (!top || top < 0 || top > winHeight) {\r\n            this.logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\r\n            top = Math.max(0, winHeight / 2 - _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_HEIGHT / 2 + winTop);\r\n        }\r\n        if (!left || left < 0 || left > winWidth) {\r\n            this.logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\r\n            left = Math.max(0, winWidth / 2 - _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_WIDTH / 2 + winLeft);\r\n        }\r\n        return popupWindowParent.open(urlNavigate, popupName, `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`);\r\n    }\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    unloadWindow(e) {\r\n        this.browserStorage.cleanRequestByInteractionType(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionType.Popup);\r\n        if (this.currentWindow) {\r\n            this.currentWindow.close();\r\n        }\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        e.preventDefault();\r\n    }\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    cleanPopup(popupWindow, popupWindowParent) {\r\n        // Close window.\r\n        popupWindow.close();\r\n        // Remove window unload function\r\n        popupWindowParent.removeEventListener(\"beforeunload\", this.unloadWindow);\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.setInteractionInProgress(false);\r\n    }\r\n    /**\r\n     * Generates the name for the popup based on the client id and request\r\n     * @param clientId\r\n     * @param request\r\n     */\r\n    generatePopupName(scopes, authority) {\r\n        return `${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\r\n    }\r\n    /**\r\n     * Generates the name for the popup based on the client id and request for logouts\r\n     * @param clientId\r\n     * @param request\r\n     */\r\n    generateLogoutPopupName(request) {\r\n        const homeAccountId = request.account && request.account.homeAccountId;\r\n        return `${_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\r\n    }\r\n}\n\n\n//# sourceMappingURL=PopupClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectClient: () => (/* binding */ RedirectClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _interaction_handler_RedirectHandler_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../interaction_handler/RedirectHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _event_EventType_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../event/EventType.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/event/EventType.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./NativeInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass RedirectClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n    /**\r\n     * Redirects the page to the /authorize endpoint of the IDP\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        const validRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.initializeAuthorizationRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, this.correlationId)(request, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Redirect);\r\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || \"\", validRequest.account || null);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.acquireTokenRedirect);\r\n        const handleBackButton = (event) => {\r\n            // Clear temporary cache if the back button is clicked during the redirect flow.\r\n            if (event.persisted) {\r\n                this.logger.verbose(\"Page was restored from back/forward cache. Clearing temporary cache.\");\r\n                this.browserStorage.cleanRequestByState(validRequest.state);\r\n                this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_4__.EventType.RESTORE_FROM_BFCACHE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Redirect);\r\n            }\r\n        };\r\n        try {\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.initializeAuthorizationCodeRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, this.correlationId)(validRequest);\r\n            // Initialize the client\r\n            const authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: validRequest.authority,\r\n                requestAzureCloudOptions: validRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: validRequest.extraQueryParameters,\r\n                account: validRequest.account,\r\n            });\r\n            // Create redirect interaction handler.\r\n            const interactionHandler = new _interaction_handler_RedirectHandler_mjs__WEBPACK_IMPORTED_MODULE_5__.RedirectHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl({\r\n                ...validRequest,\r\n                nativeBroker: _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_6__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme),\r\n            });\r\n            const redirectStartPage = this.getRedirectStartPage(request.redirectStartPage);\r\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\r\n            // Clear temporary cache if the back button is clicked during the redirect flow.\r\n            window.addEventListener(\"pageshow\", handleBackButton);\r\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\r\n                navigationClient: this.navigationClient,\r\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\r\n                redirectStartPage: redirectStartPage,\r\n                onRedirectNavigate: request.onRedirectNavigate ||\r\n                    this.config.auth.onRedirectNavigate,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            window.removeEventListener(\"pageshow\", handleBackButton);\r\n            this.browserStorage.cleanRequestByState(validRequest.state);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Checks if navigateToLoginRequestUrl is set, and:\r\n     * - if true, performs logic to cache and navigate\r\n     * - if false, handles hash string and parses response\r\n     * @param hash {string} url hash\r\n     * @param parentMeasurement {InProgressPerformanceEvent} parent measurement\r\n     */\r\n    async handleRedirectPromise(hash = \"\", parentMeasurement) {\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.handleRedirectPromise);\r\n        try {\r\n            if (!this.browserStorage.isInteractionInProgress(true)) {\r\n                this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\r\n                return null;\r\n            }\r\n            const [serverParams, responseString] = this.getRedirectResponse(hash || \"\");\r\n            if (!serverParams) {\r\n                // Not a recognized server response hash or hash not associated with a redirect request\r\n                this.logger.info(\"handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache.\");\r\n                this.browserStorage.cleanRequestByInteractionType(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Redirect);\r\n                parentMeasurement.event.errorCode = \"no_server_response\";\r\n                return null;\r\n            }\r\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\r\n            const loginRequestUrl = this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.ORIGIN_URI, true) || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.Constants.EMPTY_STRING;\r\n            const loginRequestUrlNormalized = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.UrlString.removeHashFromUrl(loginRequestUrl);\r\n            const currentUrlNormalized = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.UrlString.removeHashFromUrl(window.location.href);\r\n            if (loginRequestUrlNormalized === currentUrlNormalized &&\r\n                this.config.auth.navigateToLoginRequestUrl) {\r\n                // We are on the page we need to navigate to - handle hash\r\n                this.logger.verbose(\"Current page is loginRequestUrl, handling response\");\r\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\r\n                    // Replace current hash with non-msal hash, if present\r\n                    (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_10__.replaceHash)(loginRequestUrl);\r\n                }\r\n                const handleHashResult = await this.handleResponse(serverParams, serverTelemetryManager);\r\n                return handleHashResult;\r\n            }\r\n            else if (!this.config.auth.navigateToLoginRequestUrl) {\r\n                this.logger.verbose(\"NavigateToLoginRequestUrl set to false, handling response\");\r\n                return await this.handleResponse(serverParams, serverTelemetryManager);\r\n            }\r\n            else if (!(0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_10__.isInIframe)() ||\r\n                this.config.system.allowRedirectInIframe) {\r\n                /*\r\n                 * Returned from authority using redirect - need to perform navigation before processing response\r\n                 * Cache the hash to be retrieved after the next redirect\r\n                 */\r\n                this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.URL_HASH, responseString, true);\r\n                const navigationOptions = {\r\n                    apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.handleRedirectPromise,\r\n                    timeout: this.config.system.redirectNavigationTimeout,\r\n                    noHistory: true,\r\n                };\r\n                /**\r\n                 * Default behavior is to redirect to the start page and not process the hash now.\r\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\r\n                 */\r\n                let processHashOnRedirect = true;\r\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\r\n                    // Redirect to home page if login request url is null (real null or the string null)\r\n                    const homepage = (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_10__.getHomepage)();\r\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\r\n                    this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.ORIGIN_URI, homepage, true);\r\n                    this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                    processHashOnRedirect =\r\n                        await this.navigationClient.navigateInternal(homepage, navigationOptions);\r\n                }\r\n                else {\r\n                    // Navigate to page that initiated the redirect request\r\n                    this.logger.verbose(`Navigating to loginRequestUrl: ${loginRequestUrl}`);\r\n                    processHashOnRedirect =\r\n                        await this.navigationClient.navigateInternal(loginRequestUrl, navigationOptions);\r\n                }\r\n                // If navigateInternal implementation returns false, handle the hash now\r\n                if (!processHashOnRedirect) {\r\n                    return await this.handleResponse(serverParams, serverTelemetryManager);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.browserStorage.cleanRequestByInteractionType(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Redirect);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Gets the response hash for a redirect request\r\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\r\n     * @param hash\r\n     */\r\n    getRedirectResponse(userProvidedResponse) {\r\n        this.logger.verbose(\"getRedirectResponseHash called\");\r\n        // Get current location hash from window or cache.\r\n        let responseString = userProvidedResponse;\r\n        if (!responseString) {\r\n            if (this.config.auth.OIDCOptions.serverResponseType ===\r\n                _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.ServerResponseType.QUERY) {\r\n                responseString = window.location.search;\r\n            }\r\n            else {\r\n                responseString = window.location.hash;\r\n            }\r\n        }\r\n        let response = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.getDeserializedResponse(responseString);\r\n        if (response) {\r\n            try {\r\n                (0,_response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_12__.validateInteractionType)(response, this.browserCrypto, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Redirect);\r\n            }\r\n            catch (e) {\r\n                if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.AuthError) {\r\n                    this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`);\r\n                }\r\n                return [null, \"\"];\r\n            }\r\n            (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_10__.clearHash)(window);\r\n            this.logger.verbose(\"Hash contains known properties, returning response hash\");\r\n            return [response, responseString];\r\n        }\r\n        const cachedHash = this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.URL_HASH, true);\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.TemporaryCacheKeys.URL_HASH));\r\n        if (cachedHash) {\r\n            response = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.getDeserializedResponse(cachedHash);\r\n            if (response) {\r\n                this.logger.verbose(\"Hash does not contain known properties, returning cached hash\");\r\n                return [response, cachedHash];\r\n            }\r\n        }\r\n        return [null, \"\"];\r\n    }\r\n    /**\r\n     * Checks if hash exists and handles in window.\r\n     * @param hash\r\n     * @param state\r\n     */\r\n    async handleResponse(serverParams, serverTelemetryManager) {\r\n        const state = serverParams.state;\r\n        if (!state) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_14__.noStateInHash);\r\n        }\r\n        const cachedRequest = this.browserStorage.getCachedRequest(state);\r\n        this.logger.verbose(\"handleResponse called, retrieved cached request\");\r\n        if (serverParams.accountId) {\r\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n            if (!this.nativeMessageHandler) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_14__.nativeConnectionNotEstablished);\r\n            }\r\n            const nativeInteractionClient = new _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_15__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, cachedRequest.correlationId);\r\n            const { userRequestState } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_16__.ProtocolUtils.parseRequestState(this.browserCrypto, state);\r\n            return nativeInteractionClient\r\n                .acquireToken({\r\n                ...cachedRequest,\r\n                state: userRequestState,\r\n                prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\r\n            })\r\n                .finally(() => {\r\n                this.browserStorage.cleanRequestByState(state);\r\n            });\r\n        }\r\n        // Hash contains known properties - handle and return in callback\r\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\r\n        if (!currentAuthority) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_13__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_14__.noCachedAuthorityError);\r\n        }\r\n        const authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({ serverTelemetryManager, requestAuthority: currentAuthority });\r\n        _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_17__.ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, cachedRequest);\r\n        const interactionHandler = new _interaction_handler_RedirectHandler_mjs__WEBPACK_IMPORTED_MODULE_5__.RedirectHandler(authClient, this.browserStorage, cachedRequest, this.logger, this.performanceClient);\r\n        return interactionHandler.handleCodeResponse(serverParams, state);\r\n    }\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    async logout(logoutRequest) {\r\n        this.logger.verbose(\"logoutRedirect called\");\r\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.logout);\r\n        try {\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_4__.EventType.LOGOUT_START, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Redirect, logoutRequest);\r\n            // Clear cache on logout\r\n            await this.clearCacheOnLogout(validLogoutRequest.account);\r\n            const navigationOptions = {\r\n                apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.ApiId.logout,\r\n                timeout: this.config.system.redirectNavigationTimeout,\r\n                noHistory: false,\r\n            };\r\n            const authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: logoutRequest && logoutRequest.authority,\r\n                requestExtraQueryParameters: logoutRequest?.extraQueryParameters,\r\n                account: (logoutRequest && logoutRequest.account) || undefined,\r\n            });\r\n            if (authClient.authority.protocolMode === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_18__.ProtocolMode.OIDC) {\r\n                try {\r\n                    authClient.authority.endSessionEndpoint;\r\n                }\r\n                catch {\r\n                    if (validLogoutRequest.account?.homeAccountId) {\r\n                        void this.browserStorage.removeAccount(validLogoutRequest.account?.homeAccountId);\r\n                        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_4__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Redirect, validLogoutRequest);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            // Create logout string and navigate user window to logout.\r\n            const logoutUri = authClient.getLogoutUri(validLogoutRequest);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_4__.EventType.LOGOUT_SUCCESS, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Redirect, validLogoutRequest);\r\n            // Check if onRedirectNavigate is implemented, and invoke it if so\r\n            if (logoutRequest &&\r\n                typeof logoutRequest.onRedirectNavigate === \"function\") {\r\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\r\n                if (navigate !== false) {\r\n                    this.logger.verbose(\"Logout onRedirectNavigate did not return false, navigating\");\r\n                    // Ensure interaction is in progress\r\n                    if (!this.browserStorage.getInteractionInProgress()) {\r\n                        this.browserStorage.setInteractionInProgress(true);\r\n                    }\r\n                    await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\r\n                    return;\r\n                }\r\n                else {\r\n                    // Ensure interaction is not in progress\r\n                    this.browserStorage.setInteractionInProgress(false);\r\n                    this.logger.verbose(\"Logout onRedirectNavigate returned false, stopping navigation\");\r\n                }\r\n            }\r\n            else {\r\n                // Ensure interaction is in progress\r\n                if (!this.browserStorage.getInteractionInProgress()) {\r\n                    this.browserStorage.setInteractionInProgress(true);\r\n                }\r\n                await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\r\n                return;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_4__.EventType.LOGOUT_FAILURE, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Redirect, null, e);\r\n            this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_4__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Redirect);\r\n            throw e;\r\n        }\r\n        this.eventHandler.emitEvent(_event_EventType_mjs__WEBPACK_IMPORTED_MODULE_4__.EventType.LOGOUT_END, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_3__.InteractionType.Redirect);\r\n    }\r\n    /**\r\n     * Use to get the redirectStartPage either from request or use current window\r\n     * @param requestStartPage\r\n     */\r\n    getRedirectStartPage(requestStartPage) {\r\n        const redirectStartPage = requestStartPage || window.location.href;\r\n        return _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.UrlString.getAbsoluteUrl(redirectStartPage, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_10__.getCurrentUri)());\r\n    }\r\n}\n\n\n//# sourceMappingURL=RedirectClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentAuthCodeClient: () => (/* binding */ SilentAuthCodeClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _HybridSpaAuthorizationCodeClient_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./HybridSpaAuthorizationCodeClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs\");\n/* harmony import */ var _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../interaction_handler/InteractionHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentAuthCodeClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        this.apiId = apiId;\r\n    }\r\n    /**\r\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        // Auth code payload is required\r\n        if (!request.code) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.authCodeRequired);\r\n        }\r\n        // Create silent request\r\n        const silentRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.initializeAuthorizationRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)(request, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_5__.InteractionType.Silent);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n        try {\r\n            // Create auth code request (PKCE not needed)\r\n            const authCodeRequest = {\r\n                ...silentRequest,\r\n                code: request.code,\r\n            };\r\n            // Initialize the client\r\n            const clientConfig = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.getClientConfiguration.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, request.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: silentRequest.authority,\r\n                requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: silentRequest.extraQueryParameters,\r\n                account: silentRequest.account,\r\n            });\r\n            const authClient = new _HybridSpaAuthorizationCodeClient_mjs__WEBPACK_IMPORTED_MODULE_6__.HybridSpaAuthorizationCodeClient(clientConfig);\r\n            this.logger.verbose(\"Auth code client created\");\r\n            // Create silent handler\r\n            const interactionHandler = new _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_7__.InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n            // Handle auth code parameters from request\r\n            return await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(interactionHandler.handleCodeResponseFromServer.bind(interactionHandler), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.PerformanceEvents.HandleCodeResponseFromServer, this.logger, this.performanceClient, request.correlationId)({\r\n                code: request.code,\r\n                msgraph_host: request.msGraphHost,\r\n                cloud_graph_host_name: request.cloudGraphHostName,\r\n                cloud_instance_host_name: request.cloudInstanceHostName,\r\n            }, silentRequest, false);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout() {\r\n        // Synchronous so we must reject\r\n        return Promise.reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.silentLogoutUnsupported));\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentAuthCodeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRBdXRoQ29kZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDMEU7QUFDWDtBQUNMO0FBQ1A7QUFDMEI7QUFDUDtBQUNZOztBQUUvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxxRkFBeUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtRkFBc0IsQ0FBQyw4RUFBZ0I7QUFDekQ7QUFDQTtBQUNBLG9DQUFvQyx1RUFBVyxpREFBaUQseUVBQWlCLCtIQUErSCx3RUFBZTtBQUMvUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLHVFQUFXLHlDQUF5Qyx5RUFBaUI7QUFDNUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixtQ0FBbUMsbUdBQWdDO0FBQ25FO0FBQ0E7QUFDQSwyQ0FBMkMsMkZBQWtCO0FBQzdEO0FBQ0EseUJBQXlCLHVFQUFXLDJFQUEyRSx5RUFBaUI7QUFDaEk7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLDZCQUE2QixpRUFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLG1GQUFzQixDQUFDLHFGQUF1QjtBQUM1RTtBQUNBOztBQUVnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRBdXRoQ29kZUNsaWVudC5tanM/MmM1YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yNC4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGludm9rZUFzeW5jLCBQZXJmb3JtYW5jZUV2ZW50cywgQXV0aEVycm9yIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuaW1wb3J0IHsgU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudCB9IGZyb20gJy4vU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudC5tanMnO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3NlckF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IEludGVyYWN0aW9uVHlwZSB9IGZyb20gJy4uL3V0aWxzL0Jyb3dzZXJDb25zdGFudHMubWpzJztcbmltcG9ydCB7IEh5YnJpZFNwYUF1dGhvcml6YXRpb25Db2RlQ2xpZW50IH0gZnJvbSAnLi9IeWJyaWRTcGFBdXRob3JpemF0aW9uQ29kZUNsaWVudC5tanMnO1xuaW1wb3J0IHsgSW50ZXJhY3Rpb25IYW5kbGVyIH0gZnJvbSAnLi4vaW50ZXJhY3Rpb25faGFuZGxlci9JbnRlcmFjdGlvbkhhbmRsZXIubWpzJztcbmltcG9ydCB7IGF1dGhDb2RlUmVxdWlyZWQsIHNpbGVudExvZ291dFVuc3VwcG9ydGVkIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBTaWxlbnRBdXRoQ29kZUNsaWVudCBleHRlbmRzIFN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQge1xyXG4gICAgY29uc3RydWN0b3IoY29uZmlnLCBzdG9yYWdlSW1wbCwgYnJvd3NlckNyeXB0bywgbG9nZ2VyLCBldmVudEhhbmRsZXIsIG5hdmlnYXRpb25DbGllbnQsIGFwaUlkLCBwZXJmb3JtYW5jZUNsaWVudCwgbmF0aXZlTWVzc2FnZUhhbmRsZXIsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgICAgICBzdXBlcihjb25maWcsIHN0b3JhZ2VJbXBsLCBicm93c2VyQ3J5cHRvLCBsb2dnZXIsIGV2ZW50SGFuZGxlciwgbmF2aWdhdGlvbkNsaWVudCwgcGVyZm9ybWFuY2VDbGllbnQsIG5hdGl2ZU1lc3NhZ2VIYW5kbGVyLCBjb3JyZWxhdGlvbklkKTtcclxuICAgICAgICB0aGlzLmFwaUlkID0gYXBpSWQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEFjcXVpcmVzIGEgdG9rZW4gc2lsZW50bHkgYnkgcmVkZWVtaW5nIGFuIGF1dGhvcml6YXRpb24gY29kZSBhZ2FpbnN0IHRoZSAvdG9rZW4gZW5kcG9pbnRcclxuICAgICAqIEBwYXJhbSByZXF1ZXN0XHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGFjcXVpcmVUb2tlbihyZXF1ZXN0KSB7XHJcbiAgICAgICAgLy8gQXV0aCBjb2RlIHBheWxvYWQgaXMgcmVxdWlyZWRcclxuICAgICAgICBpZiAoIXJlcXVlc3QuY29kZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKGF1dGhDb2RlUmVxdWlyZWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBDcmVhdGUgc2lsZW50IHJlcXVlc3RcclxuICAgICAgICBjb25zdCBzaWxlbnRSZXF1ZXN0ID0gYXdhaXQgaW52b2tlQXN5bmModGhpcy5pbml0aWFsaXplQXV0aG9yaXphdGlvblJlcXVlc3QuYmluZCh0aGlzKSwgUGVyZm9ybWFuY2VFdmVudHMuU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudEluaXRpYWxpemVBdXRob3JpemF0aW9uUmVxdWVzdCwgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQsIHJlcXVlc3QuY29ycmVsYXRpb25JZCkocmVxdWVzdCwgSW50ZXJhY3Rpb25UeXBlLlNpbGVudCk7XHJcbiAgICAgICAgY29uc3Qgc2VydmVyVGVsZW1ldHJ5TWFuYWdlciA9IHRoaXMuaW5pdGlhbGl6ZVNlcnZlclRlbGVtZXRyeU1hbmFnZXIodGhpcy5hcGlJZCk7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgLy8gQ3JlYXRlIGF1dGggY29kZSByZXF1ZXN0IChQS0NFIG5vdCBuZWVkZWQpXHJcbiAgICAgICAgICAgIGNvbnN0IGF1dGhDb2RlUmVxdWVzdCA9IHtcclxuICAgICAgICAgICAgICAgIC4uLnNpbGVudFJlcXVlc3QsXHJcbiAgICAgICAgICAgICAgICBjb2RlOiByZXF1ZXN0LmNvZGUsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIC8vIEluaXRpYWxpemUgdGhlIGNsaWVudFxyXG4gICAgICAgICAgICBjb25zdCBjbGllbnRDb25maWcgPSBhd2FpdCBpbnZva2VBc3luYyh0aGlzLmdldENsaWVudENvbmZpZ3VyYXRpb24uYmluZCh0aGlzKSwgUGVyZm9ybWFuY2VFdmVudHMuU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudEdldENsaWVudENvbmZpZ3VyYXRpb24sIHRoaXMubG9nZ2VyLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpKHtcclxuICAgICAgICAgICAgICAgIHNlcnZlclRlbGVtZXRyeU1hbmFnZXIsXHJcbiAgICAgICAgICAgICAgICByZXF1ZXN0QXV0aG9yaXR5OiBzaWxlbnRSZXF1ZXN0LmF1dGhvcml0eSxcclxuICAgICAgICAgICAgICAgIHJlcXVlc3RBenVyZUNsb3VkT3B0aW9uczogc2lsZW50UmVxdWVzdC5henVyZUNsb3VkT3B0aW9ucyxcclxuICAgICAgICAgICAgICAgIHJlcXVlc3RFeHRyYVF1ZXJ5UGFyYW1ldGVyczogc2lsZW50UmVxdWVzdC5leHRyYVF1ZXJ5UGFyYW1ldGVycyxcclxuICAgICAgICAgICAgICAgIGFjY291bnQ6IHNpbGVudFJlcXVlc3QuYWNjb3VudCxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGNvbnN0IGF1dGhDbGllbnQgPSBuZXcgSHlicmlkU3BhQXV0aG9yaXphdGlvbkNvZGVDbGllbnQoY2xpZW50Q29uZmlnKTtcclxuICAgICAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcIkF1dGggY29kZSBjbGllbnQgY3JlYXRlZFwiKTtcclxuICAgICAgICAgICAgLy8gQ3JlYXRlIHNpbGVudCBoYW5kbGVyXHJcbiAgICAgICAgICAgIGNvbnN0IGludGVyYWN0aW9uSGFuZGxlciA9IG5ldyBJbnRlcmFjdGlvbkhhbmRsZXIoYXV0aENsaWVudCwgdGhpcy5icm93c2VyU3RvcmFnZSwgYXV0aENvZGVSZXF1ZXN0LCB0aGlzLmxvZ2dlciwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCk7XHJcbiAgICAgICAgICAgIC8vIEhhbmRsZSBhdXRoIGNvZGUgcGFyYW1ldGVycyBmcm9tIHJlcXVlc3RcclxuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGludm9rZUFzeW5jKGludGVyYWN0aW9uSGFuZGxlci5oYW5kbGVDb2RlUmVzcG9uc2VGcm9tU2VydmVyLmJpbmQoaW50ZXJhY3Rpb25IYW5kbGVyKSwgUGVyZm9ybWFuY2VFdmVudHMuSGFuZGxlQ29kZVJlc3BvbnNlRnJvbVNlcnZlciwgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQsIHJlcXVlc3QuY29ycmVsYXRpb25JZCkoe1xyXG4gICAgICAgICAgICAgICAgY29kZTogcmVxdWVzdC5jb2RlLFxyXG4gICAgICAgICAgICAgICAgbXNncmFwaF9ob3N0OiByZXF1ZXN0Lm1zR3JhcGhIb3N0LFxyXG4gICAgICAgICAgICAgICAgY2xvdWRfZ3JhcGhfaG9zdF9uYW1lOiByZXF1ZXN0LmNsb3VkR3JhcGhIb3N0TmFtZSxcclxuICAgICAgICAgICAgICAgIGNsb3VkX2luc3RhbmNlX2hvc3RfbmFtZTogcmVxdWVzdC5jbG91ZEluc3RhbmNlSG9zdE5hbWUsXHJcbiAgICAgICAgICAgIH0sIHNpbGVudFJlcXVlc3QsIGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBBdXRoRXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGUuc2V0Q29ycmVsYXRpb25JZCh0aGlzLmNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgICAgICAgICAgc2VydmVyVGVsZW1ldHJ5TWFuYWdlci5jYWNoZUZhaWxlZFJlcXVlc3QoZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEN1cnJlbnRseSBVbnN1cHBvcnRlZFxyXG4gICAgICovXHJcbiAgICBsb2dvdXQoKSB7XHJcbiAgICAgICAgLy8gU3luY2hyb25vdXMgc28gd2UgbXVzdCByZWplY3RcclxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoY3JlYXRlQnJvd3NlckF1dGhFcnJvcihzaWxlbnRMb2dvdXRVbnN1cHBvcnRlZCkpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IFNpbGVudEF1dGhDb2RlQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TaWxlbnRBdXRoQ29kZUNsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs":
/*!****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentCacheClient: () => (/* binding */ SilentCacheClient)\n/* harmony export */ });\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentCacheClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    /**\r\n     * Returns unexpired tokens from the cache, if available\r\n     * @param silentRequest\r\n     */\r\n    async acquireToken(silentRequest) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentCacheClientAcquireToken, silentRequest.correlationId);\r\n        // Telemetry manager only used to increment cacheHits here\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.ApiId.acquireTokenSilent_silentFlow);\r\n        const clientConfig = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.getClientConfiguration.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)({\r\n            serverTelemetryManager,\r\n            requestAuthority: silentRequest.authority,\r\n            requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n            account: silentRequest.account,\r\n        });\r\n        const silentAuthClient = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.SilentFlowClient(clientConfig, this.performanceClient);\r\n        this.logger.verbose(\"Silent auth client created\");\r\n        try {\r\n            const response = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(silentAuthClient.acquireCachedToken.bind(silentAuthClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentFlowClientAcquireCachedToken, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest);\r\n            const authResponse = response[0];\r\n            this.performanceClient.addFields({\r\n                fromCache: true,\r\n            }, silentRequest.correlationId);\r\n            return authResponse;\r\n        }\r\n        catch (error) {\r\n            if (error instanceof _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.BrowserAuthError &&\r\n                error.errorCode === _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.cryptoKeyNotFound) {\r\n                this.logger.verbose(\"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\");\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * API to silenty clear the browser cache.\r\n     * @param logoutRequest\r\n     */\r\n    logout(logoutRequest) {\r\n        this.logger.verbose(\"logoutRedirect called\");\r\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n        return this.clearCacheOnLogout(validLogoutRequest?.account);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentCacheClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRDYWNoZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQytEO0FBQ2tCO0FBQ3hDO0FBQ1c7QUFDTTs7QUFFdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MscUZBQXlCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQseUVBQWlCO0FBQ3BFO0FBQ0EsNkVBQTZFLDhEQUFLO0FBQ2xGLG1DQUFtQyx1RUFBVyx5Q0FBeUMseUVBQWlCO0FBQ3hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULHFDQUFxQyx3RUFBZ0I7QUFDckQ7QUFDQTtBQUNBLG1DQUFtQyx1RUFBVyw2REFBNkQseUVBQWlCO0FBQzVIO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMseUVBQWdCO0FBQ2pELG9DQUFvQywrRUFBaUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRDYWNoZUNsaWVudC5tanM/N2ExNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yNC4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQgfSBmcm9tICcuL1N0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQubWpzJztcbmltcG9ydCB7IFBlcmZvcm1hbmNlRXZlbnRzLCBpbnZva2VBc3luYywgU2lsZW50Rmxvd0NsaWVudCB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcbmltcG9ydCB7IEFwaUlkIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgQnJvd3NlckF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IGNyeXB0b0tleU5vdEZvdW5kIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBTaWxlbnRDYWNoZUNsaWVudCBleHRlbmRzIFN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQge1xyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHVuZXhwaXJlZCB0b2tlbnMgZnJvbSB0aGUgY2FjaGUsIGlmIGF2YWlsYWJsZVxyXG4gICAgICogQHBhcmFtIHNpbGVudFJlcXVlc3RcclxuICAgICAqL1xyXG4gICAgYXN5bmMgYWNxdWlyZVRva2VuKHNpbGVudFJlcXVlc3QpIHtcclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuU2lsZW50Q2FjaGVDbGllbnRBY3F1aXJlVG9rZW4sIHNpbGVudFJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgLy8gVGVsZW1ldHJ5IG1hbmFnZXIgb25seSB1c2VkIHRvIGluY3JlbWVudCBjYWNoZUhpdHMgaGVyZVxyXG4gICAgICAgIGNvbnN0IHNlcnZlclRlbGVtZXRyeU1hbmFnZXIgPSB0aGlzLmluaXRpYWxpemVTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyKEFwaUlkLmFjcXVpcmVUb2tlblNpbGVudF9zaWxlbnRGbG93KTtcclxuICAgICAgICBjb25zdCBjbGllbnRDb25maWcgPSBhd2FpdCBpbnZva2VBc3luYyh0aGlzLmdldENsaWVudENvbmZpZ3VyYXRpb24uYmluZCh0aGlzKSwgUGVyZm9ybWFuY2VFdmVudHMuU3RhbmRhcmRJbnRlcmFjdGlvbkNsaWVudEdldENsaWVudENvbmZpZ3VyYXRpb24sIHRoaXMubG9nZ2VyLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCB0aGlzLmNvcnJlbGF0aW9uSWQpKHtcclxuICAgICAgICAgICAgc2VydmVyVGVsZW1ldHJ5TWFuYWdlcixcclxuICAgICAgICAgICAgcmVxdWVzdEF1dGhvcml0eTogc2lsZW50UmVxdWVzdC5hdXRob3JpdHksXHJcbiAgICAgICAgICAgIHJlcXVlc3RBenVyZUNsb3VkT3B0aW9uczogc2lsZW50UmVxdWVzdC5henVyZUNsb3VkT3B0aW9ucyxcclxuICAgICAgICAgICAgYWNjb3VudDogc2lsZW50UmVxdWVzdC5hY2NvdW50LFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNvbnN0IHNpbGVudEF1dGhDbGllbnQgPSBuZXcgU2lsZW50Rmxvd0NsaWVudChjbGllbnRDb25maWcsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQpO1xyXG4gICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJTaWxlbnQgYXV0aCBjbGllbnQgY3JlYXRlZFwiKTtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGludm9rZUFzeW5jKHNpbGVudEF1dGhDbGllbnQuYWNxdWlyZUNhY2hlZFRva2VuLmJpbmQoc2lsZW50QXV0aENsaWVudCksIFBlcmZvcm1hbmNlRXZlbnRzLlNpbGVudEZsb3dDbGllbnRBY3F1aXJlQ2FjaGVkVG9rZW4sIHRoaXMubG9nZ2VyLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCBzaWxlbnRSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpKHNpbGVudFJlcXVlc3QpO1xyXG4gICAgICAgICAgICBjb25zdCBhdXRoUmVzcG9uc2UgPSByZXNwb25zZVswXTtcclxuICAgICAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudC5hZGRGaWVsZHMoe1xyXG4gICAgICAgICAgICAgICAgZnJvbUNhY2hlOiB0cnVlLFxyXG4gICAgICAgICAgICB9LCBzaWxlbnRSZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgICAgICByZXR1cm4gYXV0aFJlc3BvbnNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgQnJvd3NlckF1dGhFcnJvciAmJlxyXG4gICAgICAgICAgICAgICAgZXJyb3IuZXJyb3JDb2RlID09PSBjcnlwdG9LZXlOb3RGb3VuZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sb2dnZXIudmVyYm9zZShcIlNpZ25pbmcga2V5cGFpciBmb3IgYm91bmQgYWNjZXNzIHRva2VuIG5vdCBmb3VuZC4gUmVmcmVzaGluZyBib3VuZCBhY2Nlc3MgdG9rZW4gYW5kIGdlbmVyYXRpbmcgYSBuZXcgY3J5cHRvIGtleXBhaXIuXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRocm93IGVycm9yO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQVBJIHRvIHNpbGVudHkgY2xlYXIgdGhlIGJyb3dzZXIgY2FjaGUuXHJcbiAgICAgKiBAcGFyYW0gbG9nb3V0UmVxdWVzdFxyXG4gICAgICovXHJcbiAgICBsb2dvdXQobG9nb3V0UmVxdWVzdCkge1xyXG4gICAgICAgIHRoaXMubG9nZ2VyLnZlcmJvc2UoXCJsb2dvdXRSZWRpcmVjdCBjYWxsZWRcIik7XHJcbiAgICAgICAgY29uc3QgdmFsaWRMb2dvdXRSZXF1ZXN0ID0gdGhpcy5pbml0aWFsaXplTG9nb3V0UmVxdWVzdChsb2dvdXRSZXF1ZXN0KTtcclxuICAgICAgICByZXR1cm4gdGhpcy5jbGVhckNhY2hlT25Mb2dvdXQodmFsaWRMb2dvdXRSZXF1ZXN0Py5hY2NvdW50KTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBTaWxlbnRDYWNoZUNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2lsZW50Q2FjaGVDbGllbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentIframeClient: () => (/* binding */ SilentIframeClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _interaction_handler_SilentHandler_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../interaction_handler/SilentHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs\");\n/* harmony import */ var _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../broker/nativeBroker/NativeMessageHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs\");\n/* harmony import */ var _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./NativeInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs\");\n/* harmony import */ var _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../interaction_handler/InteractionHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentIframeClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        this.apiId = apiId;\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n    /**\r\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\r\n        // Check that we have some SSO data\r\n        if (!request.loginHint &&\r\n            !request.sid &&\r\n            (!request.account || !request.account.username)) {\r\n            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\r\n        }\r\n        // Check the prompt value\r\n        const inputRequest = { ...request };\r\n        if (inputRequest.prompt) {\r\n            if (inputRequest.prompt !== _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PromptValue.NONE &&\r\n                inputRequest.prompt !== _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PromptValue.NO_SESSION) {\r\n                this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${inputRequest.prompt} with ${_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PromptValue.NONE}`);\r\n                inputRequest.prompt = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PromptValue.NONE;\r\n            }\r\n        }\r\n        else {\r\n            inputRequest.prompt = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PromptValue.NONE;\r\n        }\r\n        // Create silent request\r\n        const silentRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.initializeAuthorizationRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)(inputRequest, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent);\r\n        (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_5__.preconnect)(silentRequest.authority);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n        let authClient;\r\n        try {\r\n            // Initialize the client\r\n            authClient = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.createAuthCodeClient.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, request.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: silentRequest.authority,\r\n                requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: silentRequest.extraQueryParameters,\r\n                account: silentRequest.account,\r\n            });\r\n            return await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.silentTokenHelper.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientTokenHelper, this.logger, this.performanceClient, request.correlationId)(authClient, silentRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            if (!authClient ||\r\n                !(e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.AuthError) ||\r\n                e.errorCode !== _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.BrowserConstants.INVALID_GRANT_ERROR) {\r\n                throw e;\r\n            }\r\n            this.performanceClient.addFields({\r\n                retryError: e.errorCode,\r\n            }, this.correlationId);\r\n            const retrySilentRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.initializeAuthorizationRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)(inputRequest, _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.InteractionType.Silent);\r\n            return await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.silentTokenHelper.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientTokenHelper, this.logger, this.performanceClient, this.correlationId)(authClient, retrySilentRequest);\r\n        }\r\n    }\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout() {\r\n        // Synchronous so we must reject\r\n        return Promise.reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_8__.silentLogoutUnsupported));\r\n    }\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    async silentTokenHelper(authClient, silentRequest) {\r\n        const correlationId = silentRequest.correlationId;\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentIframeClientTokenHelper, correlationId);\r\n        // Create auth code request and generate PKCE params\r\n        const authCodeRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.initializeAuthorizationCodeRequest.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, correlationId)(silentRequest);\r\n        // Create authorize request url\r\n        const navigateUrl = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(authClient.getAuthCodeUrl.bind(authClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.GetAuthCodeUrl, this.logger, this.performanceClient, correlationId)({\r\n            ...silentRequest,\r\n            nativeBroker: _broker_nativeBroker_NativeMessageHandler_mjs__WEBPACK_IMPORTED_MODULE_9__.NativeMessageHandler.isNativeAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme),\r\n        });\r\n        // Create silent handler\r\n        const interactionHandler = new _interaction_handler_InteractionHandler_mjs__WEBPACK_IMPORTED_MODULE_10__.InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n        // Get the frame handle for the silent request\r\n        const msalFrame = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(_interaction_handler_SilentHandler_mjs__WEBPACK_IMPORTED_MODULE_11__.initiateAuthRequest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentHandlerInitiateAuthRequest, this.logger, this.performanceClient, correlationId)(navigateUrl, this.performanceClient, this.logger, correlationId, this.config.system.navigateFrameWait);\r\n        const responseType = this.config.auth.OIDCOptions.serverResponseType;\r\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n        const responseString = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(_interaction_handler_SilentHandler_mjs__WEBPACK_IMPORTED_MODULE_11__.monitorIframeForHash, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentHandlerMonitorIframeForHash, this.logger, this.performanceClient, correlationId)(msalFrame, this.config.system.iframeHashTimeout, this.config.system.pollIntervalMilliseconds, this.performanceClient, this.logger, correlationId, responseType);\r\n        const serverParams = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invoke)(_response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_12__.deserializeResponse, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.DeserializeResponse, this.logger, this.performanceClient, this.correlationId)(responseString, responseType, this.logger);\r\n        if (serverParams.accountId) {\r\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n            if (!this.nativeMessageHandler) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_7__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_8__.nativeConnectionNotEstablished);\r\n            }\r\n            const nativeInteractionClient = new _NativeInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_13__.NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, correlationId);\r\n            const { userRequestState } = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_14__.ProtocolUtils.parseRequestState(this.browserCrypto, silentRequest.state);\r\n            return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(nativeInteractionClient.acquireToken.bind(nativeInteractionClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.NativeInteractionClientAcquireToken, this.logger, this.performanceClient, correlationId)({\r\n                ...silentRequest,\r\n                state: userRequestState,\r\n                prompt: silentRequest.prompt || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.PromptValue.NONE,\r\n            });\r\n        }\r\n        // Handle response from hash string\r\n        return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(interactionHandler.handleCodeResponse.bind(interactionHandler), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.HandleCodeResponse, this.logger, this.performanceClient, correlationId)(serverParams, silentRequest);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentIframeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentRefreshClient: () => (/* binding */ SilentRefreshClient)\n/* harmony export */ });\n/* harmony import */ var _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StandardInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../request/RequestHelpers.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentRefreshClient extends _StandardInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.StandardInteractionClient {\r\n    /**\r\n     * Exchanges the refresh token for new tokens\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.SilentRefreshClientAcquireToken, request.correlationId);\r\n        const baseRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(_request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_3__.initializeBaseRequest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, request.correlationId)(request, this.config, this.performanceClient, this.logger);\r\n        const silentRequest = {\r\n            ...request,\r\n            ...baseRequest,\r\n        };\r\n        if (request.redirectUri) {\r\n            // Make sure any passed redirectUri is converted to an absolute URL - redirectUri is not a required parameter for refresh token redemption so only include if explicitly provided\r\n            silentRequest.redirectUri = this.getRedirectUri(request.redirectUri);\r\n        }\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_4__.ApiId.acquireTokenSilent_silentFlow);\r\n        const refreshTokenClient = await this.createRefreshTokenClient({\r\n            serverTelemetryManager,\r\n            authorityUrl: silentRequest.authority,\r\n            azureCloudOptions: silentRequest.azureCloudOptions,\r\n            account: silentRequest.account,\r\n        });\r\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\r\n        return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(refreshTokenClient.acquireTokenByRefreshToken.bind(refreshTokenClient), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, this.logger, this.performanceClient, request.correlationId)(silentRequest).catch((e) => {\r\n            e.setCorrelationId(this.correlationId);\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            throw e;\r\n        });\r\n    }\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout() {\r\n        // Synchronous so we must reject\r\n        return Promise.reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.silentLogoutUnsupported));\r\n    }\r\n    /**\r\n     * Creates a Refresh Client with the given authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         authorityUrl?: string;\r\n     *         azureCloudOptions?: AzureCloudOptions;\r\n     *         extraQueryParams?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async createRefreshTokenClient(params) {\r\n        // Create auth module.\r\n        const clientConfig = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.getClientConfiguration.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)({\r\n            serverTelemetryManager: params.serverTelemetryManager,\r\n            requestAuthority: params.authorityUrl,\r\n            requestAzureCloudOptions: params.azureCloudOptions,\r\n            requestExtraQueryParameters: params.extraQueryParameters,\r\n            account: params.account,\r\n        });\r\n        return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.RefreshTokenClient(clientConfig, this.performanceClient);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentRefreshClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2NsaWVudC9TaWxlbnRSZWZyZXNoQ2xpZW50Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQytEO0FBQ29CO0FBQzFDO0FBQ2lCO0FBQ0Q7QUFDTzs7QUFFN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MscUZBQXlCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQseUVBQWlCO0FBQ3BFLGtDQUFrQyx1RUFBVyxDQUFDLDhFQUFxQixFQUFFLHlFQUFpQjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLDhEQUFLO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxlQUFlLHVFQUFXLHlFQUF5RSx5RUFBaUI7QUFDcEg7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixtRkFBc0IsQ0FBQyxxRkFBdUI7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsdUVBQVcseUNBQXlDLHlFQUFpQjtBQUN4RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULG1CQUFtQiwwRUFBa0I7QUFDckM7QUFDQTs7QUFFK0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9pbnRlcmFjdGlvbl9jbGllbnQvU2lsZW50UmVmcmVzaENsaWVudC5tanM/ZjAzMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yNC4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFN0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQgfSBmcm9tICcuL1N0YW5kYXJkSW50ZXJhY3Rpb25DbGllbnQubWpzJztcbmltcG9ydCB7IFBlcmZvcm1hbmNlRXZlbnRzLCBpbnZva2VBc3luYywgUmVmcmVzaFRva2VuQ2xpZW50IH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuaW1wb3J0IHsgQXBpSWQgfSBmcm9tICcuLi91dGlscy9Ccm93c2VyQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VyQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgaW5pdGlhbGl6ZUJhc2VSZXF1ZXN0IH0gZnJvbSAnLi4vcmVxdWVzdC9SZXF1ZXN0SGVscGVycy5tanMnO1xuaW1wb3J0IHsgc2lsZW50TG9nb3V0VW5zdXBwb3J0ZWQgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIFNpbGVudFJlZnJlc2hDbGllbnQgZXh0ZW5kcyBTdGFuZGFyZEludGVyYWN0aW9uQ2xpZW50IHtcclxuICAgIC8qKlxyXG4gICAgICogRXhjaGFuZ2VzIHRoZSByZWZyZXNoIHRva2VuIGZvciBuZXcgdG9rZW5zXHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICovXHJcbiAgICBhc3luYyBhY3F1aXJlVG9rZW4ocmVxdWVzdCkge1xyXG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQuYWRkUXVldWVNZWFzdXJlbWVudChQZXJmb3JtYW5jZUV2ZW50cy5TaWxlbnRSZWZyZXNoQ2xpZW50QWNxdWlyZVRva2VuLCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIGNvbnN0IGJhc2VSZXF1ZXN0ID0gYXdhaXQgaW52b2tlQXN5bmMoaW5pdGlhbGl6ZUJhc2VSZXF1ZXN0LCBQZXJmb3JtYW5jZUV2ZW50cy5Jbml0aWFsaXplQmFzZVJlcXVlc3QsIHRoaXMubG9nZ2VyLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpKHJlcXVlc3QsIHRoaXMuY29uZmlnLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCB0aGlzLmxvZ2dlcik7XHJcbiAgICAgICAgY29uc3Qgc2lsZW50UmVxdWVzdCA9IHtcclxuICAgICAgICAgICAgLi4ucmVxdWVzdCxcclxuICAgICAgICAgICAgLi4uYmFzZVJlcXVlc3QsXHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAocmVxdWVzdC5yZWRpcmVjdFVyaSkge1xyXG4gICAgICAgICAgICAvLyBNYWtlIHN1cmUgYW55IHBhc3NlZCByZWRpcmVjdFVyaSBpcyBjb252ZXJ0ZWQgdG8gYW4gYWJzb2x1dGUgVVJMIC0gcmVkaXJlY3RVcmkgaXMgbm90IGEgcmVxdWlyZWQgcGFyYW1ldGVyIGZvciByZWZyZXNoIHRva2VuIHJlZGVtcHRpb24gc28gb25seSBpbmNsdWRlIGlmIGV4cGxpY2l0bHkgcHJvdmlkZWRcclxuICAgICAgICAgICAgc2lsZW50UmVxdWVzdC5yZWRpcmVjdFVyaSA9IHRoaXMuZ2V0UmVkaXJlY3RVcmkocmVxdWVzdC5yZWRpcmVjdFVyaSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHNlcnZlclRlbGVtZXRyeU1hbmFnZXIgPSB0aGlzLmluaXRpYWxpemVTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyKEFwaUlkLmFjcXVpcmVUb2tlblNpbGVudF9zaWxlbnRGbG93KTtcclxuICAgICAgICBjb25zdCByZWZyZXNoVG9rZW5DbGllbnQgPSBhd2FpdCB0aGlzLmNyZWF0ZVJlZnJlc2hUb2tlbkNsaWVudCh7XHJcbiAgICAgICAgICAgIHNlcnZlclRlbGVtZXRyeU1hbmFnZXIsXHJcbiAgICAgICAgICAgIGF1dGhvcml0eVVybDogc2lsZW50UmVxdWVzdC5hdXRob3JpdHksXHJcbiAgICAgICAgICAgIGF6dXJlQ2xvdWRPcHRpb25zOiBzaWxlbnRSZXF1ZXN0LmF6dXJlQ2xvdWRPcHRpb25zLFxyXG4gICAgICAgICAgICBhY2NvdW50OiBzaWxlbnRSZXF1ZXN0LmFjY291bnQsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gU2VuZCByZXF1ZXN0IHRvIHJlbmV3IHRva2VuLiBBdXRoIG1vZHVsZSB3aWxsIHRocm93IGVycm9ycyBpZiB0b2tlbiBjYW5ub3QgYmUgcmVuZXdlZC5cclxuICAgICAgICByZXR1cm4gaW52b2tlQXN5bmMocmVmcmVzaFRva2VuQ2xpZW50LmFjcXVpcmVUb2tlbkJ5UmVmcmVzaFRva2VuLmJpbmQocmVmcmVzaFRva2VuQ2xpZW50KSwgUGVyZm9ybWFuY2VFdmVudHMuUmVmcmVzaFRva2VuQ2xpZW50QWNxdWlyZVRva2VuQnlSZWZyZXNoVG9rZW4sIHRoaXMubG9nZ2VyLCB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpKHNpbGVudFJlcXVlc3QpLmNhdGNoKChlKSA9PiB7XHJcbiAgICAgICAgICAgIGUuc2V0Q29ycmVsYXRpb25JZCh0aGlzLmNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgICAgICBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLmNhY2hlRmFpbGVkUmVxdWVzdChlKTtcclxuICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ3VycmVudGx5IFVuc3VwcG9ydGVkXHJcbiAgICAgKi9cclxuICAgIGxvZ291dCgpIHtcclxuICAgICAgICAvLyBTeW5jaHJvbm91cyBzbyB3ZSBtdXN0IHJlamVjdFxyXG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChjcmVhdGVCcm93c2VyQXV0aEVycm9yKHNpbGVudExvZ291dFVuc3VwcG9ydGVkKSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENyZWF0ZXMgYSBSZWZyZXNoIENsaWVudCB3aXRoIHRoZSBnaXZlbiBhdXRob3JpdHksIG9yIHRoZSBkZWZhdWx0IGF1dGhvcml0eS5cclxuICAgICAqIEBwYXJhbSBwYXJhbXMge1xyXG4gICAgICogICAgICAgICBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyOiBTZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyO1xyXG4gICAgICogICAgICAgICBhdXRob3JpdHlVcmw/OiBzdHJpbmc7XHJcbiAgICAgKiAgICAgICAgIGF6dXJlQ2xvdWRPcHRpb25zPzogQXp1cmVDbG91ZE9wdGlvbnM7XHJcbiAgICAgKiAgICAgICAgIGV4dHJhUXVlcnlQYXJhbXM/OiBTdHJpbmdEaWN0O1xyXG4gICAgICogICAgICAgICBhY2NvdW50PzogQWNjb3VudEluZm87XHJcbiAgICAgKiAgICAgICAgfVxyXG4gICAgICovXHJcbiAgICBhc3luYyBjcmVhdGVSZWZyZXNoVG9rZW5DbGllbnQocGFyYW1zKSB7XHJcbiAgICAgICAgLy8gQ3JlYXRlIGF1dGggbW9kdWxlLlxyXG4gICAgICAgIGNvbnN0IGNsaWVudENvbmZpZyA9IGF3YWl0IGludm9rZUFzeW5jKHRoaXMuZ2V0Q2xpZW50Q29uZmlndXJhdGlvbi5iaW5kKHRoaXMpLCBQZXJmb3JtYW5jZUV2ZW50cy5TdGFuZGFyZEludGVyYWN0aW9uQ2xpZW50R2V0Q2xpZW50Q29uZmlndXJhdGlvbiwgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQsIHRoaXMuY29ycmVsYXRpb25JZCkoe1xyXG4gICAgICAgICAgICBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyOiBwYXJhbXMuc2VydmVyVGVsZW1ldHJ5TWFuYWdlcixcclxuICAgICAgICAgICAgcmVxdWVzdEF1dGhvcml0eTogcGFyYW1zLmF1dGhvcml0eVVybCxcclxuICAgICAgICAgICAgcmVxdWVzdEF6dXJlQ2xvdWRPcHRpb25zOiBwYXJhbXMuYXp1cmVDbG91ZE9wdGlvbnMsXHJcbiAgICAgICAgICAgIHJlcXVlc3RFeHRyYVF1ZXJ5UGFyYW1ldGVyczogcGFyYW1zLmV4dHJhUXVlcnlQYXJhbWV0ZXJzLFxyXG4gICAgICAgICAgICBhY2NvdW50OiBwYXJhbXMuYWNjb3VudCxcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gbmV3IFJlZnJlc2hUb2tlbkNsaWVudChjbGllbnRDb25maWcsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IFNpbGVudFJlZnJlc2hDbGllbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNpbGVudFJlZnJlc2hDbGllbnQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardInteractionClient: () => (/* binding */ StandardInteractionClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseInteractionClient.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/BrowserUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\");\n/* harmony import */ var _crypto_PkceGenerator_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../crypto/PkceGenerator.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../request/RequestHelpers.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\r\n */\r\nclass StandardInteractionClient extends _BaseInteractionClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseInteractionClient {\r\n    /**\r\n     * Generates an auth code request tied to the url request.\r\n     * @param request\r\n     */\r\n    async initializeAuthorizationCodeRequest(request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.correlationId);\r\n        const generatedPkceParams = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(_crypto_PkceGenerator_mjs__WEBPACK_IMPORTED_MODULE_3__.generatePkceCodes, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.GeneratePkceCodes, this.logger, this.performanceClient, this.correlationId)(this.performanceClient, this.logger, this.correlationId);\r\n        const authCodeRequest = {\r\n            ...request,\r\n            redirectUri: request.redirectUri,\r\n            code: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            codeVerifier: generatedPkceParams.verifier,\r\n        };\r\n        request.codeChallenge = generatedPkceParams.challenge;\r\n        request.codeChallengeMethod = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.S256_CODE_CHALLENGE_METHOD;\r\n        return authCodeRequest;\r\n    }\r\n    /**\r\n     * Initializer for the logout request.\r\n     * @param logoutRequest\r\n     */\r\n    initializeLogoutRequest(logoutRequest) {\r\n        this.logger.verbose(\"initializeLogoutRequest called\", logoutRequest?.correlationId);\r\n        const validLogoutRequest = {\r\n            correlationId: this.correlationId || (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_5__.createNewGuid)(),\r\n            ...logoutRequest,\r\n        };\r\n        /**\r\n         * Set logout_hint to be login_hint from ID Token Claims if present\r\n         * and logoutHint attribute wasn't manually set in logout request\r\n         */\r\n        if (logoutRequest) {\r\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\r\n            if (!logoutRequest.logoutHint) {\r\n                if (logoutRequest.account) {\r\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(logoutRequest.account);\r\n                    if (logoutHint) {\r\n                        this.logger.verbose(\"Setting logoutHint to login_hint ID Token Claim value for the account provided\");\r\n                        validLogoutRequest.logoutHint = logoutHint;\r\n                    }\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\");\r\n                }\r\n            }\r\n            else {\r\n                this.logger.verbose(\"logoutHint has already been set in logoutRequest\");\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"logoutHint will not be set since no logout request was configured\");\r\n        }\r\n        /*\r\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\r\n         * Otherwise, use passed uri, config, or current page.\r\n         */\r\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\r\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to uri set on logout request\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.UrlString.getAbsoluteUrl(logoutRequest.postLogoutRedirectUri, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.getCurrentUri)());\r\n            }\r\n            else if (this.config.auth.postLogoutRedirectUri === null) {\r\n                this.logger.verbose(\"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\", validLogoutRequest.correlationId);\r\n            }\r\n            else if (this.config.auth.postLogoutRedirectUri) {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to configured uri\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.UrlString.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri, (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.getCurrentUri)());\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to current page\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.UrlString.getAbsoluteUrl((0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.getCurrentUri)(), (0,_utils_BrowserUtils_mjs__WEBPACK_IMPORTED_MODULE_7__.getCurrentUri)());\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"postLogoutRedirectUri passed as null, not setting post logout redirect uri\", validLogoutRequest.correlationId);\r\n        }\r\n        return validLogoutRequest;\r\n    }\r\n    /**\r\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\r\n     * logout_hint in end session request.\r\n     * @param account\r\n     */\r\n    getLogoutHintFromIdTokenClaims(account) {\r\n        const idTokenClaims = account.idTokenClaims;\r\n        if (idTokenClaims) {\r\n            if (idTokenClaims.login_hint) {\r\n                return idTokenClaims.login_hint;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\");\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\");\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Creates an Authorization Code Client with the given authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         authorityUrl?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async createAuthCodeClient(params) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.correlationId);\r\n        // Create auth module.\r\n        const clientConfig = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.getClientConfiguration.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)(params);\r\n        return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_8__.AuthorizationCodeClient(clientConfig, this.performanceClient);\r\n    }\r\n    /**\r\n     * Creates a Client Configuration object with the given request authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         requestAuthority?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: boolean;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async getClientConfiguration(params) {\r\n        const { serverTelemetryManager, requestAuthority, requestAzureCloudOptions, requestExtraQueryParameters, account, } = params;\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\r\n        const discoveredAuthority = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.getDiscoveredAuthority.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.logger, this.performanceClient, this.correlationId)({\r\n            requestAuthority,\r\n            requestAzureCloudOptions,\r\n            requestExtraQueryParameters,\r\n            account,\r\n        });\r\n        const logger = this.config.system.loggerOptions;\r\n        return {\r\n            authOptions: {\r\n                clientId: this.config.auth.clientId,\r\n                authority: discoveredAuthority,\r\n                clientCapabilities: this.config.auth.clientCapabilities,\r\n            },\r\n            systemOptions: {\r\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\r\n                preventCorsPreflight: true,\r\n            },\r\n            loggerOptions: {\r\n                loggerCallback: logger.loggerCallback,\r\n                piiLoggingEnabled: logger.piiLoggingEnabled,\r\n                logLevel: logger.logLevel,\r\n                correlationId: this.correlationId,\r\n            },\r\n            cacheOptions: {\r\n                claimsBasedCachingEnabled: this.config.cache.claimsBasedCachingEnabled,\r\n            },\r\n            cryptoInterface: this.browserCrypto,\r\n            networkInterface: this.networkClient,\r\n            storageInterface: this.browserStorage,\r\n            serverTelemetryManager: serverTelemetryManager,\r\n            libraryInfo: {\r\n                sku: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_9__.BrowserConstants.MSAL_SKU,\r\n                version: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_10__.version,\r\n                cpu: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n                os: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            },\r\n            telemetry: this.config.telemetry,\r\n        };\r\n    }\r\n    /**\r\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\r\n     * @param request\r\n     * @param interactionType\r\n     */\r\n    async initializeAuthorizationRequest(request, interactionType) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.correlationId);\r\n        const redirectUri = this.getRedirectUri(request.redirectUri);\r\n        const browserState = {\r\n            interactionType: interactionType,\r\n        };\r\n        const state = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.ProtocolUtils.setRequestState(this.browserCrypto, (request && request.state) || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, browserState);\r\n        const baseRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(_request_RequestHelpers_mjs__WEBPACK_IMPORTED_MODULE_12__.initializeBaseRequest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, this.correlationId)({ ...request, correlationId: this.correlationId }, this.config, this.performanceClient, this.logger);\r\n        const validatedRequest = {\r\n            ...baseRequest,\r\n            redirectUri: redirectUri,\r\n            state: state,\r\n            nonce: request.nonce || (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_5__.createNewGuid)(),\r\n            responseMode: this.config.auth.OIDCOptions\r\n                .serverResponseType,\r\n        };\r\n        const account = request.account || this.browserStorage.getActiveAccount();\r\n        if (account) {\r\n            this.logger.verbose(\"Setting validated request account\", this.correlationId);\r\n            this.logger.verbosePii(`Setting validated request account: ${account.homeAccountId}`, this.correlationId);\r\n            validatedRequest.account = account;\r\n        }\r\n        // Check for ADAL/MSAL v1 SSO\r\n        if (!validatedRequest.loginHint && !account) {\r\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\r\n            if (legacyLoginHint) {\r\n                validatedRequest.loginHint = legacyLoginHint;\r\n            }\r\n        }\r\n        return validatedRequest;\r\n    }\r\n}\n\n\n//# sourceMappingURL=StandardInteractionClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractionHandler: () => (/* binding */ InteractionHandler)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\r\nclass InteractionHandler {\r\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n        this.authCodeRequest = authCodeRequest;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    async handleCodeResponse(response, request) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.HandleCodeResponse, request.correlationId);\r\n        let authCodeResponse;\r\n        try {\r\n            authCodeResponse = this.authModule.handleFragmentResponse(response, request.state);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.ServerError &&\r\n                e.subError === _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.userCancelled) {\r\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.userCancelled);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.invokeAsync)(this.handleCodeResponseFromServer.bind(this), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.HandleCodeResponseFromServer, this.logger, this.performanceClient, request.correlationId)(authCodeResponse, request);\r\n    }\r\n    /**\r\n     * Process auth code response from AAD\r\n     * @param authCodeResponse\r\n     * @param state\r\n     * @param authority\r\n     * @param networkModule\r\n     * @returns\r\n     */\r\n    async handleCodeResponseFromServer(authCodeResponse, request, validateNonce = true) {\r\n        this.performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.HandleCodeResponseFromServer, request.correlationId);\r\n        this.logger.trace(\"InteractionHandler.handleCodeResponseFromServer called\");\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCodeResponse.code;\r\n        // Check for new cloud instance\r\n        if (authCodeResponse.cloud_instance_host_name) {\r\n            await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.invokeAsync)(this.authModule.updateAuthority.bind(this.authModule), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.UpdateTokenEndpointAuthority, this.logger, this.performanceClient, request.correlationId)(authCodeResponse.cloud_instance_host_name, request.correlationId);\r\n        }\r\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\r\n        if (validateNonce) {\r\n            // TODO: Assigning \"response nonce\" to \"request nonce\" is confusing. Refactor the function doing validation to accept request nonce directly\r\n            authCodeResponse.nonce = request.nonce || undefined;\r\n        }\r\n        authCodeResponse.state = request.state;\r\n        // Add CCS parameters if available\r\n        if (authCodeResponse.client_info) {\r\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n        }\r\n        else {\r\n            const ccsCred = this.createCcsCredentials(request);\r\n            if (ccsCred) {\r\n                this.authCodeRequest.ccsCredential = ccsCred;\r\n            }\r\n        }\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = (await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.invokeAsync)(this.authModule.acquireToken.bind(this.authModule), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.AuthClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(this.authCodeRequest, authCodeResponse));\r\n        return tokenResponse;\r\n    }\r\n    /**\r\n     * Build ccs creds if available\r\n     */\r\n    createCcsCredentials(request) {\r\n        if (request.account) {\r\n            return {\r\n                credential: request.account.homeAccountId,\r\n                type: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.CcsCredentialType.HOME_ACCOUNT_ID,\r\n            };\r\n        }\r\n        else if (request.loginHint) {\r\n            return {\r\n                credential: request.loginHint,\r\n                type: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.CcsCredentialType.UPN,\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\n\n\n//# sourceMappingURL=InteractionHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2hhbmRsZXIvSW50ZXJhY3Rpb25IYW5kbGVyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUMrRjtBQUNyQztBQUNKOztBQUVuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHlFQUFpQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLG1FQUFXO0FBQ3hDLCtCQUErQiwyRUFBYTtBQUM1QztBQUNBLHNCQUFzQixtRkFBc0IsQ0FBQywyRUFBYTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSx1RUFBVywrQ0FBK0MseUVBQWlCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHlFQUFpQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVFQUFXLHdEQUF3RCx5RUFBaUI7QUFDdEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHVFQUFXLHFEQUFxRCx5RUFBaUI7QUFDdEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlFQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlFQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L2ludGVyYWN0aW9uX2hhbmRsZXIvSW50ZXJhY3Rpb25IYW5kbGVyLm1qcz8wOTQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgUGVyZm9ybWFuY2VFdmVudHMsIFNlcnZlckVycm9yLCBpbnZva2VBc3luYywgQ2NzQ3JlZGVudGlhbFR5cGUgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VyQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgdXNlckNhbmNlbGxlZCB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEFic3RyYWN0IGNsYXNzIHdoaWNoIGRlZmluZXMgb3BlcmF0aW9ucyBmb3IgYSBicm93c2VyIGludGVyYWN0aW9uIGhhbmRsaW5nIGNsYXNzLlxyXG4gKi9cclxuY2xhc3MgSW50ZXJhY3Rpb25IYW5kbGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKGF1dGhDb2RlTW9kdWxlLCBzdG9yYWdlSW1wbCwgYXV0aENvZGVSZXF1ZXN0LCBsb2dnZXIsIHBlcmZvcm1hbmNlQ2xpZW50KSB7XHJcbiAgICAgICAgdGhpcy5hdXRoTW9kdWxlID0gYXV0aENvZGVNb2R1bGU7XHJcbiAgICAgICAgdGhpcy5icm93c2VyU3RvcmFnZSA9IHN0b3JhZ2VJbXBsO1xyXG4gICAgICAgIHRoaXMuYXV0aENvZGVSZXF1ZXN0ID0gYXV0aENvZGVSZXF1ZXN0O1xyXG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyO1xyXG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQgPSBwZXJmb3JtYW5jZUNsaWVudDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRnVuY3Rpb24gdG8gaGFuZGxlIHJlc3BvbnNlIHBhcmFtZXRlcnMgZnJvbSBoYXNoLlxyXG4gICAgICogQHBhcmFtIGxvY2F0aW9uSGFzaFxyXG4gICAgICovXHJcbiAgICBhc3luYyBoYW5kbGVDb2RlUmVzcG9uc2UocmVzcG9uc2UsIHJlcXVlc3QpIHtcclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuSGFuZGxlQ29kZVJlc3BvbnNlLCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIGxldCBhdXRoQ29kZVJlc3BvbnNlO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGF1dGhDb2RlUmVzcG9uc2UgPSB0aGlzLmF1dGhNb2R1bGUuaGFuZGxlRnJhZ21lbnRSZXNwb25zZShyZXNwb25zZSwgcmVxdWVzdC5zdGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIGlmIChlIGluc3RhbmNlb2YgU2VydmVyRXJyb3IgJiZcclxuICAgICAgICAgICAgICAgIGUuc3ViRXJyb3IgPT09IHVzZXJDYW5jZWxsZWQpIHtcclxuICAgICAgICAgICAgICAgIC8vIFRyYW5zbGF0ZSBzZXJ2ZXIgZXJyb3IgY2F1c2VkIGJ5IHVzZXIgY2xvc2luZyBuYXRpdmUgcHJvbXB0IHRvIGNvcnJlc3BvbmRpbmcgZmlyc3QgY2xhc3MgTVNBTCBlcnJvclxyXG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcih1c2VyQ2FuY2VsbGVkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRocm93IGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGludm9rZUFzeW5jKHRoaXMuaGFuZGxlQ29kZVJlc3BvbnNlRnJvbVNlcnZlci5iaW5kKHRoaXMpLCBQZXJmb3JtYW5jZUV2ZW50cy5IYW5kbGVDb2RlUmVzcG9uc2VGcm9tU2VydmVyLCB0aGlzLmxvZ2dlciwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKShhdXRoQ29kZVJlc3BvbnNlLCByZXF1ZXN0KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUHJvY2VzcyBhdXRoIGNvZGUgcmVzcG9uc2UgZnJvbSBBQURcclxuICAgICAqIEBwYXJhbSBhdXRoQ29kZVJlc3BvbnNlXHJcbiAgICAgKiBAcGFyYW0gc3RhdGVcclxuICAgICAqIEBwYXJhbSBhdXRob3JpdHlcclxuICAgICAqIEBwYXJhbSBuZXR3b3JrTW9kdWxlXHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBhc3luYyBoYW5kbGVDb2RlUmVzcG9uc2VGcm9tU2VydmVyKGF1dGhDb2RlUmVzcG9uc2UsIHJlcXVlc3QsIHZhbGlkYXRlTm9uY2UgPSB0cnVlKSB7XHJcbiAgICAgICAgdGhpcy5wZXJmb3JtYW5jZUNsaWVudC5hZGRRdWV1ZU1lYXN1cmVtZW50KFBlcmZvcm1hbmNlRXZlbnRzLkhhbmRsZUNvZGVSZXNwb25zZUZyb21TZXJ2ZXIsIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgdGhpcy5sb2dnZXIudHJhY2UoXCJJbnRlcmFjdGlvbkhhbmRsZXIuaGFuZGxlQ29kZVJlc3BvbnNlRnJvbVNlcnZlciBjYWxsZWRcIik7XHJcbiAgICAgICAgLy8gQXNzaWduIGNvZGUgdG8gcmVxdWVzdFxyXG4gICAgICAgIHRoaXMuYXV0aENvZGVSZXF1ZXN0LmNvZGUgPSBhdXRoQ29kZVJlc3BvbnNlLmNvZGU7XHJcbiAgICAgICAgLy8gQ2hlY2sgZm9yIG5ldyBjbG91ZCBpbnN0YW5jZVxyXG4gICAgICAgIGlmIChhdXRoQ29kZVJlc3BvbnNlLmNsb3VkX2luc3RhbmNlX2hvc3RfbmFtZSkge1xyXG4gICAgICAgICAgICBhd2FpdCBpbnZva2VBc3luYyh0aGlzLmF1dGhNb2R1bGUudXBkYXRlQXV0aG9yaXR5LmJpbmQodGhpcy5hdXRoTW9kdWxlKSwgUGVyZm9ybWFuY2VFdmVudHMuVXBkYXRlVG9rZW5FbmRwb2ludEF1dGhvcml0eSwgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQsIHJlcXVlc3QuY29ycmVsYXRpb25JZCkoYXV0aENvZGVSZXNwb25zZS5jbG91ZF9pbnN0YW5jZV9ob3N0X25hbWUsIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIE5vbmNlIHZhbGlkYXRpb24gbm90IG5lZWRlZCB3aGVuIHJlZGlyZWN0IG5vdCBpbnZvbHZlZCAoZS5nLiBoeWJyaWQgc3BhLCByZW5ld2luZyB0b2tlbiB2aWEgcnQpXHJcbiAgICAgICAgaWYgKHZhbGlkYXRlTm9uY2UpIHtcclxuICAgICAgICAgICAgLy8gVE9ETzogQXNzaWduaW5nIFwicmVzcG9uc2Ugbm9uY2VcIiB0byBcInJlcXVlc3Qgbm9uY2VcIiBpcyBjb25mdXNpbmcuIFJlZmFjdG9yIHRoZSBmdW5jdGlvbiBkb2luZyB2YWxpZGF0aW9uIHRvIGFjY2VwdCByZXF1ZXN0IG5vbmNlIGRpcmVjdGx5XHJcbiAgICAgICAgICAgIGF1dGhDb2RlUmVzcG9uc2Uubm9uY2UgPSByZXF1ZXN0Lm5vbmNlIHx8IHVuZGVmaW5lZDtcclxuICAgICAgICB9XHJcbiAgICAgICAgYXV0aENvZGVSZXNwb25zZS5zdGF0ZSA9IHJlcXVlc3Quc3RhdGU7XHJcbiAgICAgICAgLy8gQWRkIENDUyBwYXJhbWV0ZXJzIGlmIGF2YWlsYWJsZVxyXG4gICAgICAgIGlmIChhdXRoQ29kZVJlc3BvbnNlLmNsaWVudF9pbmZvKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYXV0aENvZGVSZXF1ZXN0LmNsaWVudEluZm8gPSBhdXRoQ29kZVJlc3BvbnNlLmNsaWVudF9pbmZvO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY29uc3QgY2NzQ3JlZCA9IHRoaXMuY3JlYXRlQ2NzQ3JlZGVudGlhbHMocmVxdWVzdCk7XHJcbiAgICAgICAgICAgIGlmIChjY3NDcmVkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmF1dGhDb2RlUmVxdWVzdC5jY3NDcmVkZW50aWFsID0gY2NzQ3JlZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBBY3F1aXJlIHRva2VuIHdpdGggcmV0cmlldmVkIGNvZGUuXHJcbiAgICAgICAgY29uc3QgdG9rZW5SZXNwb25zZSA9IChhd2FpdCBpbnZva2VBc3luYyh0aGlzLmF1dGhNb2R1bGUuYWNxdWlyZVRva2VuLmJpbmQodGhpcy5hdXRoTW9kdWxlKSwgUGVyZm9ybWFuY2VFdmVudHMuQXV0aENsaWVudEFjcXVpcmVUb2tlbiwgdGhpcy5sb2dnZXIsIHRoaXMucGVyZm9ybWFuY2VDbGllbnQsIHJlcXVlc3QuY29ycmVsYXRpb25JZCkodGhpcy5hdXRoQ29kZVJlcXVlc3QsIGF1dGhDb2RlUmVzcG9uc2UpKTtcclxuICAgICAgICByZXR1cm4gdG9rZW5SZXNwb25zZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQnVpbGQgY2NzIGNyZWRzIGlmIGF2YWlsYWJsZVxyXG4gICAgICovXHJcbiAgICBjcmVhdGVDY3NDcmVkZW50aWFscyhyZXF1ZXN0KSB7XHJcbiAgICAgICAgaWYgKHJlcXVlc3QuYWNjb3VudCkge1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgY3JlZGVudGlhbDogcmVxdWVzdC5hY2NvdW50LmhvbWVBY2NvdW50SWQsXHJcbiAgICAgICAgICAgICAgICB0eXBlOiBDY3NDcmVkZW50aWFsVHlwZS5IT01FX0FDQ09VTlRfSUQsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHJlcXVlc3QubG9naW5IaW50KSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBjcmVkZW50aWFsOiByZXF1ZXN0LmxvZ2luSGludCxcclxuICAgICAgICAgICAgICAgIHR5cGU6IENjc0NyZWRlbnRpYWxUeXBlLlVQTixcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgSW50ZXJhY3Rpb25IYW5kbGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbnRlcmFjdGlvbkhhbmRsZXIubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs":
/*!***************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectHandler: () => (/* binding */ RedirectHandler)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass RedirectHandler {\r\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n        this.authCodeRequest = authCodeRequest;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    async initiateAuthRequest(requestUrl, params) {\r\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\r\n        // Navigate if valid URL\r\n        if (requestUrl) {\r\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\r\n            if (params.redirectStartPage) {\r\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\r\n                this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\r\n            }\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\r\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest);\r\n            this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`);\r\n            const navigationOptions = {\r\n                apiId: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.ApiId.acquireTokenRedirect,\r\n                timeout: params.redirectTimeout,\r\n                noHistory: false,\r\n            };\r\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\r\n            if (typeof params.onRedirectNavigate === \"function\") {\r\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\r\n                const navigate = params.onRedirectNavigate(requestUrl);\r\n                // Returning false from onRedirectNavigate will stop navigation\r\n                if (navigate !== false) {\r\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\r\n                    await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\r\n                    return;\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                // Navigate window to request URL\r\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\r\n                await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.emptyNavigateUri);\r\n        }\r\n    }\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    async handleCodeResponse(response, state) {\r\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.setInteractionInProgress(false);\r\n        // Handle code response.\r\n        const stateKey = this.browserStorage.generateStateKey(state);\r\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\r\n        if (!requestState) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.stateNotFound, \"Cached State\");\r\n        }\r\n        let authCodeResponse;\r\n        try {\r\n            authCodeResponse = this.authModule.handleFragmentResponse(response, requestState);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.ServerError &&\r\n                e.subError === _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.userCancelled) {\r\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.userCancelled);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        // Get cached items\r\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\r\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCodeResponse.code;\r\n        // Check for new cloud instance\r\n        if (authCodeResponse.cloud_instance_host_name) {\r\n            await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.invokeAsync)(this.authModule.updateAuthority.bind(this.authModule), _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.UpdateTokenEndpointAuthority, this.logger, this.performanceClient, this.authCodeRequest.correlationId)(authCodeResponse.cloud_instance_host_name, this.authCodeRequest.correlationId);\r\n        }\r\n        authCodeResponse.nonce = cachedNonce || undefined;\r\n        authCodeResponse.state = requestState;\r\n        // Add CCS parameters if available\r\n        if (authCodeResponse.client_info) {\r\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n        }\r\n        else {\r\n            const cachedCcsCred = this.checkCcsCredentials();\r\n            if (cachedCcsCred) {\r\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\r\n            }\r\n        }\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = (await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse));\r\n        this.browserStorage.cleanRequestByState(state);\r\n        return tokenResponse;\r\n    }\r\n    /**\r\n     * Looks up ccs creds in the cache\r\n     */\r\n    checkCcsCredentials() {\r\n        // Look up ccs credential in temp cache\r\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.TemporaryCacheKeys.CCS_CREDENTIAL, true);\r\n        if (cachedCcsCred) {\r\n            try {\r\n                return JSON.parse(cachedCcsCred);\r\n            }\r\n            catch (e) {\r\n                this.authModule.logger.error(\"Cache credential could not be parsed\");\r\n                this.authModule.logger.errorPii(`Cache credential could not be parsed: ${cachedCcsCred}`);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\n\n\n//# sourceMappingURL=RedirectHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initiateAuthRequest: () => (/* binding */ initiateAuthRequest),\n/* harmony export */   monitorIframeForHash: () => (/* binding */ monitorIframeForHash)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../config/Configuration.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/config/Configuration.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n * @param urlNavigate\r\n * @param userRequestScopes\r\n */\r\nasync function initiateAuthRequest(requestUrl, performanceClient, logger, correlationId, navigateFrameWait) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.SilentHandlerInitiateAuthRequest, correlationId);\r\n    if (!requestUrl) {\r\n        // Throw error if request URL is empty.\r\n        logger.info(\"Navigate url is empty\");\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.emptyNavigateUri);\r\n    }\r\n    if (navigateFrameWait) {\r\n        return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(loadFrame, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.SilentHandlerLoadFrame, logger, performanceClient, correlationId)(requestUrl, navigateFrameWait, performanceClient, correlationId);\r\n    }\r\n    return (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invoke)(loadFrameSync, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.SilentHandlerLoadFrameSync, logger, performanceClient, correlationId)(requestUrl);\r\n}\r\n/**\r\n * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n * @param iframe\r\n * @param timeout\r\n */\r\nasync function monitorIframeForHash(iframe, timeout, pollIntervalMilliseconds, performanceClient, logger, correlationId, responseType) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.SilentHandlerMonitorIframeForHash, correlationId);\r\n    return new Promise((resolve, reject) => {\r\n        if (timeout < _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_IFRAME_TIMEOUT_MS) {\r\n            logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${_config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_4__.DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\r\n        }\r\n        /*\r\n         * Polling for iframes can be purely timing based,\r\n         * since we don't need to account for interaction.\r\n         */\r\n        const timeoutId = window.setTimeout(() => {\r\n            window.clearInterval(intervalId);\r\n            reject((0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.monitorWindowTimeout));\r\n        }, timeout);\r\n        const intervalId = window.setInterval(() => {\r\n            let href = \"\";\r\n            const contentWindow = iframe.contentWindow;\r\n            try {\r\n                /*\r\n                 * Will throw if cross origin,\r\n                 * which should be caught and ignored\r\n                 * since we need the interval to keep running while on STS UI.\r\n                 */\r\n                href = contentWindow ? contentWindow.location.href : \"\";\r\n            }\r\n            catch (e) { }\r\n            if (!href || href === \"about:blank\") {\r\n                return;\r\n            }\r\n            let responseString = \"\";\r\n            if (contentWindow) {\r\n                if (responseType === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.ServerResponseType.QUERY) {\r\n                    responseString = contentWindow.location.search;\r\n                }\r\n                else {\r\n                    responseString = contentWindow.location.hash;\r\n                }\r\n            }\r\n            window.clearTimeout(timeoutId);\r\n            window.clearInterval(intervalId);\r\n            resolve(responseString);\r\n        }, pollIntervalMilliseconds);\r\n    }).finally(() => {\r\n        (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.invoke)(removeHiddenIframe, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RemoveHiddenIframe, logger, performanceClient, correlationId)(iframe);\r\n    });\r\n}\r\n/**\r\n * @hidden\r\n * Loads iframe with authorization endpoint URL\r\n * @ignore\r\n * @deprecated\r\n */\r\nfunction loadFrame(urlNavigate, navigateFrameWait, performanceClient, correlationId) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.SilentHandlerLoadFrame, correlationId);\r\n    /*\r\n     * This trick overcomes iframe navigation in IE\r\n     * IE does not load the page consistently in iframe\r\n     */\r\n    return new Promise((resolve, reject) => {\r\n        const frameHandle = createHiddenIframe();\r\n        window.setTimeout(() => {\r\n            if (!frameHandle) {\r\n                reject(\"Unable to load iframe\");\r\n                return;\r\n            }\r\n            frameHandle.src = urlNavigate;\r\n            resolve(frameHandle);\r\n        }, navigateFrameWait);\r\n    });\r\n}\r\n/**\r\n * @hidden\r\n * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n * @param urlNavigate\r\n * @param frameName\r\n * @param logger\r\n */\r\nfunction loadFrameSync(urlNavigate) {\r\n    const frameHandle = createHiddenIframe();\r\n    frameHandle.src = urlNavigate;\r\n    return frameHandle;\r\n}\r\n/**\r\n * @hidden\r\n * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n * @ignore\r\n */\r\nfunction createHiddenIframe() {\r\n    const authFrame = document.createElement(\"iframe\");\r\n    authFrame.className = \"msalSilentIframe\";\r\n    authFrame.style.visibility = \"hidden\";\r\n    authFrame.style.position = \"absolute\";\r\n    authFrame.style.width = authFrame.style.height = \"0\";\r\n    authFrame.style.border = \"0\";\r\n    authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n    document.body.appendChild(authFrame);\r\n    return authFrame;\r\n}\r\n/**\r\n * @hidden\r\n * Removes a hidden iframe from the page.\r\n * @ignore\r\n */\r\nfunction removeHiddenIframe(iframe) {\r\n    if (document.body === iframe.parentNode) {\r\n        document.body.removeChild(iframe);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/naa/BridgeError.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/naa/BridgeError.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBridgeError: () => (/* binding */ isBridgeError)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isBridgeError(error) {\r\n    return error.status !== undefined;\r\n}\n\n\n//# sourceMappingURL=BridgeError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25hYS9CcmlkZ2VFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9uYWEvQnJpZGdlRXJyb3IubWpzPzQ4NTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjQuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuZnVuY3Rpb24gaXNCcmlkZ2VFcnJvcihlcnJvcikge1xyXG4gICAgcmV0dXJuIGVycm9yLnN0YXR1cyAhPT0gdW5kZWZpbmVkO1xyXG59XG5cbmV4cG9ydCB7IGlzQnJpZGdlRXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJyaWRnZUVycm9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/naa/BridgeError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/naa/BridgeProxy.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/naa/BridgeProxy.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BridgeProxy: () => (/* binding */ BridgeProxy),\n/* harmony export */   \"default\": () => (/* binding */ BridgeProxy)\n/* harmony export */ });\n/* harmony import */ var _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./BridgeStatusCode.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * BridgeProxy\r\n * Provides a proxy for accessing a bridge to a host app and/or\r\n * platform broker\r\n */\r\nclass BridgeProxy {\r\n    /**\r\n     * initializeNestedAppAuthBridge - Initializes the bridge to the host app\r\n     * @returns a promise that resolves to an InitializeBridgeResponse or rejects with an Error\r\n     * @remarks This method will be called by the create factory method\r\n     * @remarks If the bridge is not available, this method will throw an error\r\n     */\r\n    static async initializeNestedAppAuthBridge() {\r\n        if (window === undefined) {\r\n            throw new Error(\"window is undefined\");\r\n        }\r\n        if (window.nestedAppAuthBridge === undefined) {\r\n            throw new Error(\"window.nestedAppAuthBridge is undefined\");\r\n        }\r\n        try {\r\n            window.nestedAppAuthBridge.addEventListener(\"message\", (response) => {\r\n                const responsePayload = typeof response === \"string\" ? response : response.data;\r\n                const responseEnvelope = JSON.parse(responsePayload);\r\n                const request = BridgeProxy.bridgeRequests.find((element) => element.requestId === responseEnvelope.requestId);\r\n                if (request !== undefined) {\r\n                    BridgeProxy.bridgeRequests.splice(BridgeProxy.bridgeRequests.indexOf(request), 1);\r\n                    if (responseEnvelope.success) {\r\n                        request.resolve(responseEnvelope);\r\n                    }\r\n                    else {\r\n                        request.reject(responseEnvelope.error);\r\n                    }\r\n                }\r\n            });\r\n            const bridgeResponse = await new Promise((resolve, reject) => {\r\n                const message = BridgeProxy.buildRequest(\"GetInitContext\");\r\n                const request = {\r\n                    requestId: message.requestId,\r\n                    method: message.method,\r\n                    resolve: resolve,\r\n                    reject: reject,\r\n                };\r\n                BridgeProxy.bridgeRequests.push(request);\r\n                window.nestedAppAuthBridge.postMessage(JSON.stringify(message));\r\n            });\r\n            return BridgeProxy.validateBridgeResultOrThrow(bridgeResponse.initContext);\r\n        }\r\n        catch (error) {\r\n            window.console.log(error);\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * getTokenInteractive - Attempts to get a token interactively from the bridge\r\n     * @param request A token request\r\n     * @returns a promise that resolves to an auth result or rejects with a BridgeError\r\n     */\r\n    getTokenInteractive(request) {\r\n        return this.getToken(\"GetTokenPopup\", request);\r\n    }\r\n    /**\r\n     * getTokenSilent Attempts to get a token silently from the bridge\r\n     * @param request A token request\r\n     * @returns a promise that resolves to an auth result or rejects with a BridgeError\r\n     */\r\n    getTokenSilent(request) {\r\n        return this.getToken(\"GetToken\", request);\r\n    }\r\n    async getToken(requestType, request) {\r\n        const result = await this.sendRequest(requestType, {\r\n            tokenParams: request,\r\n        });\r\n        return {\r\n            token: BridgeProxy.validateBridgeResultOrThrow(result.token),\r\n            account: BridgeProxy.validateBridgeResultOrThrow(result.account),\r\n        };\r\n    }\r\n    getHostCapabilities() {\r\n        return this.capabilities ?? null;\r\n    }\r\n    getAccountContext() {\r\n        return this.accountContext ? this.accountContext : null;\r\n    }\r\n    static buildRequest(method, requestParams) {\r\n        return {\r\n            messageType: \"NestedAppAuthRequest\",\r\n            method: method,\r\n            requestId: (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_0__.createNewGuid)(),\r\n            sendTime: Date.now(),\r\n            clientLibrary: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserConstants.MSAL_SKU,\r\n            clientLibraryVersion: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.version,\r\n            ...requestParams,\r\n        };\r\n    }\r\n    /**\r\n     * A method used to send a request to the bridge\r\n     * @param request A token request\r\n     * @returns a promise that resolves to a response of provided type or rejects with a BridgeError\r\n     */\r\n    sendRequest(method, requestParams) {\r\n        const message = BridgeProxy.buildRequest(method, requestParams);\r\n        const promise = new Promise((resolve, reject) => {\r\n            const request = {\r\n                requestId: message.requestId,\r\n                method: message.method,\r\n                resolve: resolve,\r\n                reject: reject,\r\n            };\r\n            BridgeProxy.bridgeRequests.push(request);\r\n            window.nestedAppAuthBridge.postMessage(JSON.stringify(message));\r\n        });\r\n        return promise;\r\n    }\r\n    static validateBridgeResultOrThrow(input) {\r\n        if (input === undefined) {\r\n            const bridgeError = {\r\n                status: _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_3__.BridgeStatusCode.NestedAppAuthUnavailable,\r\n            };\r\n            throw bridgeError;\r\n        }\r\n        return input;\r\n    }\r\n    /**\r\n     * Private constructor for BridgeProxy\r\n     * @param sdkName The name of the SDK being used to make requests on behalf of the app\r\n     * @param sdkVersion The version of the SDK being used to make requests on behalf of the app\r\n     * @param capabilities The capabilities of the bridge / SDK / platform broker\r\n     */\r\n    constructor(sdkName, sdkVersion, accountContext, capabilities) {\r\n        this.sdkName = sdkName;\r\n        this.sdkVersion = sdkVersion;\r\n        this.accountContext = accountContext;\r\n        this.capabilities = capabilities;\r\n    }\r\n    /**\r\n     * Factory method for creating an implementation of IBridgeProxy\r\n     * @returns A promise that resolves to a BridgeProxy implementation\r\n     */\r\n    static async create() {\r\n        const response = await BridgeProxy.initializeNestedAppAuthBridge();\r\n        return new BridgeProxy(response.sdkName, response.sdkVersion, response.accountContext, response.capabilities);\r\n    }\r\n}\r\nBridgeProxy.bridgeRequests = [];\n\n\n//# sourceMappingURL=BridgeProxy.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/naa/BridgeProxy.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BridgeStatusCode: () => (/* binding */ BridgeStatusCode)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst BridgeStatusCode = {\r\n    UserInteractionRequired: \"USER_INTERACTION_REQUIRED\",\r\n    UserCancel: \"USER_CANCEL\",\r\n    NoNetwork: \"NO_NETWORK\",\r\n    TransientError: \"TRANSIENT_ERROR\",\r\n    PersistentError: \"PERSISTENT_ERROR\",\r\n    Disabled: \"DISABLED\",\r\n    AccountUnavailable: \"ACCOUNT_UNAVAILABLE\",\r\n    NestedAppAuthUnavailable: \"NESTED_APP_AUTH_UNAVAILABLE\", // NAA is unavailable in the current context, can retry with standard browser based auth\r\n};\n\n\n//# sourceMappingURL=BridgeStatusCode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25hYS9CcmlkZ2VTdGF0dXNDb2RlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvbmFhL0JyaWRnZVN0YXR1c0NvZGUubWpzPzE1NjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjQuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgQnJpZGdlU3RhdHVzQ29kZSA9IHtcclxuICAgIFVzZXJJbnRlcmFjdGlvblJlcXVpcmVkOiBcIlVTRVJfSU5URVJBQ1RJT05fUkVRVUlSRURcIixcclxuICAgIFVzZXJDYW5jZWw6IFwiVVNFUl9DQU5DRUxcIixcclxuICAgIE5vTmV0d29yazogXCJOT19ORVRXT1JLXCIsXHJcbiAgICBUcmFuc2llbnRFcnJvcjogXCJUUkFOU0lFTlRfRVJST1JcIixcclxuICAgIFBlcnNpc3RlbnRFcnJvcjogXCJQRVJTSVNURU5UX0VSUk9SXCIsXHJcbiAgICBEaXNhYmxlZDogXCJESVNBQkxFRFwiLFxyXG4gICAgQWNjb3VudFVuYXZhaWxhYmxlOiBcIkFDQ09VTlRfVU5BVkFJTEFCTEVcIixcclxuICAgIE5lc3RlZEFwcEF1dGhVbmF2YWlsYWJsZTogXCJORVNURURfQVBQX0FVVEhfVU5BVkFJTEFCTEVcIiwgLy8gTkFBIGlzIHVuYXZhaWxhYmxlIGluIHRoZSBjdXJyZW50IGNvbnRleHQsIGNhbiByZXRyeSB3aXRoIHN0YW5kYXJkIGJyb3dzZXIgYmFzZWQgYXV0aFxyXG59O1xuXG5leHBvcnQgeyBCcmlkZ2VTdGF0dXNDb2RlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1CcmlkZ2VTdGF0dXNDb2RlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/naa/mapping/NestedAppAuthAdapter.mjs":
/*!************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/naa/mapping/NestedAppAuthAdapter.mjs ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NestedAppAuthAdapter: () => (/* binding */ NestedAppAuthAdapter)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _BridgeError_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../BridgeError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/naa/BridgeError.mjs\");\n/* harmony import */ var _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../BridgeStatusCode.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/naa/BridgeStatusCode.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NestedAppAuthAdapter {\r\n    constructor(clientId, clientCapabilities, crypto, logger) {\r\n        this.clientId = clientId;\r\n        this.clientCapabilities = clientCapabilities;\r\n        this.crypto = crypto;\r\n        this.logger = logger;\r\n    }\r\n    toNaaTokenRequest(request) {\r\n        let extraParams;\r\n        if (request.extraQueryParameters === undefined) {\r\n            extraParams = new Map();\r\n        }\r\n        else {\r\n            extraParams = new Map(Object.entries(request.extraQueryParameters));\r\n        }\r\n        const requestBuilder = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.RequestParameterBuilder();\r\n        const claims = requestBuilder.addClientCapabilitiesToClaims(request.claims, this.clientCapabilities);\r\n        const scopes = request.scopes || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.OIDC_DEFAULT_SCOPES;\r\n        const tokenRequest = {\r\n            platformBrokerId: request.account?.homeAccountId,\r\n            clientId: this.clientId,\r\n            authority: request.authority,\r\n            scope: scopes.join(\" \"),\r\n            correlationId: request.correlationId !== undefined\r\n                ? request.correlationId\r\n                : this.crypto.createNewGuid(),\r\n            claims: !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.StringUtils.isEmptyObj(claims) ? claims : undefined,\r\n            state: request.state,\r\n            authenticationScheme: request.authenticationScheme || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.BEARER,\r\n            extraParameters: extraParams,\r\n        };\r\n        return tokenRequest;\r\n    }\r\n    fromNaaTokenResponse(request, response, reqTimestamp) {\r\n        if (!response.token.id_token || !response.token.access_token) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.nullOrEmptyToken);\r\n        }\r\n        const expiresOn = new Date((reqTimestamp + (response.token.expires_in || 0)) * 1000);\r\n        const idTokenClaims = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.extractTokenClaims(response.token.id_token, this.crypto.base64Decode);\r\n        const account = this.fromNaaAccountInfo(response.account, response.token.id_token, idTokenClaims);\r\n        const scopes = response.token.scope || request.scope;\r\n        const authenticationResult = {\r\n            authority: response.token.authority || account.environment,\r\n            uniqueId: account.localAccountId,\r\n            tenantId: account.tenantId,\r\n            scopes: scopes.split(\" \"),\r\n            account,\r\n            idToken: response.token.id_token,\r\n            idTokenClaims,\r\n            accessToken: response.token.access_token,\r\n            fromCache: false,\r\n            expiresOn: expiresOn,\r\n            tokenType: request.authenticationScheme || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.BEARER,\r\n            correlationId: request.correlationId,\r\n            extExpiresOn: expiresOn,\r\n            state: request.state,\r\n        };\r\n        return authenticationResult;\r\n    }\r\n    /*\r\n     *  export type AccountInfo = {\r\n     *     homeAccountId: string;\r\n     *     environment: string;\r\n     *     tenantId: string;\r\n     *     username: string;\r\n     *     localAccountId: string;\r\n     *     name?: string;\r\n     *     idToken?: string;\r\n     *     idTokenClaims?: TokenClaims & {\r\n     *         [key: string]:\r\n     *             | string\r\n     *             | number\r\n     *             | string[]\r\n     *             | object\r\n     *             | undefined\r\n     *             | unknown;\r\n     *     };\r\n     *     nativeAccountId?: string;\r\n     *     authorityType?: string;\r\n     * };\r\n     */\r\n    fromNaaAccountInfo(fromAccount, idToken, idTokenClaims) {\r\n        const effectiveIdTokenClaims = idTokenClaims || fromAccount.idTokenClaims;\r\n        const localAccountId = fromAccount.localAccountId ||\r\n            effectiveIdTokenClaims?.oid ||\r\n            effectiveIdTokenClaims?.sub ||\r\n            \"\";\r\n        const tenantId = fromAccount.tenantId || effectiveIdTokenClaims?.tid || \"\";\r\n        const homeAccountId = fromAccount.homeAccountId || `${localAccountId}.${tenantId}`;\r\n        const username = fromAccount.username ||\r\n            effectiveIdTokenClaims?.preferred_username ||\r\n            \"\";\r\n        const name = fromAccount.name || effectiveIdTokenClaims?.name;\r\n        const tenantProfiles = new Map();\r\n        const tenantProfile = (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.buildTenantProfile)(homeAccountId, localAccountId, tenantId, effectiveIdTokenClaims);\r\n        tenantProfiles.set(tenantId, tenantProfile);\r\n        const account = {\r\n            homeAccountId,\r\n            environment: fromAccount.environment,\r\n            tenantId,\r\n            username,\r\n            localAccountId,\r\n            name,\r\n            idToken: idToken,\r\n            idTokenClaims: effectiveIdTokenClaims,\r\n            tenantProfiles,\r\n        };\r\n        return account;\r\n    }\r\n    /**\r\n     *\r\n     * @param error BridgeError\r\n     * @returns AuthError, ClientAuthError, ClientConfigurationError, ServerError, InteractionRequiredError\r\n     */\r\n    fromBridgeError(error) {\r\n        if ((0,_BridgeError_mjs__WEBPACK_IMPORTED_MODULE_7__.isBridgeError)(error)) {\r\n            switch (error.status) {\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_8__.BridgeStatusCode.UserCancel:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.userCanceled);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_8__.BridgeStatusCode.NoNetwork:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.noNetworkConnectivity);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_8__.BridgeStatusCode.AccountUnavailable:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.noAccountFound);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_8__.BridgeStatusCode.Disabled:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.nestedAppAuthBridgeDisabled);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_8__.BridgeStatusCode.NestedAppAuthUnavailable:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError(error.code ||\r\n                        _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.nestedAppAuthBridgeDisabled, error.description);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_8__.BridgeStatusCode.TransientError:\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_8__.BridgeStatusCode.PersistentError:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_9__.ServerError(error.code, error.description);\r\n                case _BridgeStatusCode_mjs__WEBPACK_IMPORTED_MODULE_8__.BridgeStatusCode.UserInteractionRequired:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_10__.InteractionRequiredAuthError(error.code, error.description);\r\n                default:\r\n                    return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.AuthError(error.code, error.description);\r\n            }\r\n        }\r\n        else {\r\n            return new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_11__.AuthError(\"unknown_error\", \"An unknown error occurred\");\r\n        }\r\n    }\r\n    /**\r\n     * Returns an AuthenticationResult from the given cache items\r\n     *\r\n     * @param account\r\n     * @param idToken\r\n     * @param accessToken\r\n     * @param reqTimestamp\r\n     * @returns\r\n     */\r\n    toAuthenticationResultFromCache(account, idToken, accessToken, request, correlationId) {\r\n        if (!idToken || !accessToken) {\r\n            throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.nullOrEmptyToken);\r\n        }\r\n        const idTokenClaims = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_5__.extractTokenClaims(idToken.secret, this.crypto.base64Decode);\r\n        const scopes = accessToken.target || request.scopes.join(\" \");\r\n        const authenticationResult = {\r\n            authority: accessToken.environment || account.environment,\r\n            uniqueId: account.localAccountId,\r\n            tenantId: account.tenantId,\r\n            scopes: scopes.split(\" \"),\r\n            account,\r\n            idToken: idToken.secret,\r\n            idTokenClaims: idTokenClaims || {},\r\n            accessToken: accessToken.secret,\r\n            fromCache: true,\r\n            expiresOn: new Date(Number(accessToken.expiresOn) * 1000),\r\n            tokenType: request.authenticationScheme || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.BEARER,\r\n            correlationId,\r\n            extExpiresOn: new Date(Number(accessToken.extendedExpiresOn) * 1000),\r\n            state: request.state,\r\n        };\r\n        return authenticationResult;\r\n    }\r\n}\n\n\n//# sourceMappingURL=NestedAppAuthAdapter.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/naa/mapping/NestedAppAuthAdapter.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NavigationClient: () => (/* binding */ NavigationClient)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NavigationClient {\r\n    /**\r\n     * Navigates to other pages within the same web application\r\n     * @param url\r\n     * @param options\r\n     */\r\n    navigateInternal(url, options) {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n    /**\r\n     * Navigates to other pages outside the web application i.e. the Identity Provider\r\n     * @param url\r\n     * @param options\r\n     */\r\n    navigateExternal(url, options) {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n    /**\r\n     * Default navigation implementation invoked by the internal and external functions\r\n     * @param url\r\n     * @param options\r\n     */\r\n    static defaultNavigateWindow(url, options) {\r\n        if (options.noHistory) {\r\n            window.location.replace(url);\r\n        }\r\n        else {\r\n            window.location.assign(url);\r\n        }\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(true);\r\n            }, options.timeout);\r\n        });\r\n    }\r\n}\n\n\n//# sourceMappingURL=NavigationClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25hdmlnYXRpb24vTmF2aWdhdGlvbkNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7O0FBRTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3QvbmF2aWdhdGlvbi9OYXZpZ2F0aW9uQ2xpZW50Lm1qcz9kNDI1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNsYXNzIE5hdmlnYXRpb25DbGllbnQge1xyXG4gICAgLyoqXHJcbiAgICAgKiBOYXZpZ2F0ZXMgdG8gb3RoZXIgcGFnZXMgd2l0aGluIHRoZSBzYW1lIHdlYiBhcHBsaWNhdGlvblxyXG4gICAgICogQHBhcmFtIHVybFxyXG4gICAgICogQHBhcmFtIG9wdGlvbnNcclxuICAgICAqL1xyXG4gICAgbmF2aWdhdGVJbnRlcm5hbCh1cmwsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXR1cm4gTmF2aWdhdGlvbkNsaWVudC5kZWZhdWx0TmF2aWdhdGVXaW5kb3codXJsLCBvcHRpb25zKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogTmF2aWdhdGVzIHRvIG90aGVyIHBhZ2VzIG91dHNpZGUgdGhlIHdlYiBhcHBsaWNhdGlvbiBpLmUuIHRoZSBJZGVudGl0eSBQcm92aWRlclxyXG4gICAgICogQHBhcmFtIHVybFxyXG4gICAgICogQHBhcmFtIG9wdGlvbnNcclxuICAgICAqL1xyXG4gICAgbmF2aWdhdGVFeHRlcm5hbCh1cmwsIG9wdGlvbnMpIHtcclxuICAgICAgICByZXR1cm4gTmF2aWdhdGlvbkNsaWVudC5kZWZhdWx0TmF2aWdhdGVXaW5kb3codXJsLCBvcHRpb25zKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRGVmYXVsdCBuYXZpZ2F0aW9uIGltcGxlbWVudGF0aW9uIGludm9rZWQgYnkgdGhlIGludGVybmFsIGFuZCBleHRlcm5hbCBmdW5jdGlvbnNcclxuICAgICAqIEBwYXJhbSB1cmxcclxuICAgICAqIEBwYXJhbSBvcHRpb25zXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBkZWZhdWx0TmF2aWdhdGVXaW5kb3codXJsLCBvcHRpb25zKSB7XHJcbiAgICAgICAgaWYgKG9wdGlvbnMubm9IaXN0b3J5KSB7XHJcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKHVybCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uYXNzaWduKHVybCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHJlc29sdmUodHJ1ZSk7XHJcbiAgICAgICAgICAgIH0sIG9wdGlvbnMudGltZW91dCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgTmF2aWdhdGlvbkNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9TmF2aWdhdGlvbkNsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FetchClient: () => (/* binding */ FetchClient)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nclass FetchClient {\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    async sendGetRequestAsync(url, options) {\r\n        let response;\r\n        try {\r\n            response = await fetch(url, {\r\n                method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.GET,\r\n                headers: this.getFetchHeaders(options),\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (window.navigator.onLine) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.getRequestFailed);\r\n            }\r\n            else {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noNetworkConnectivity);\r\n            }\r\n        }\r\n        try {\r\n            return {\r\n                headers: this.getHeaderDict(response.headers),\r\n                body: (await response.json()),\r\n                status: response.status,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.failedToParseResponse);\r\n        }\r\n    }\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    async sendPostRequestAsync(url, options) {\r\n        const reqBody = (options && options.body) || _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.Constants.EMPTY_STRING;\r\n        let response;\r\n        try {\r\n            response = await fetch(url, {\r\n                method: _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_0__.HTTP_REQUEST_TYPE.POST,\r\n                headers: this.getFetchHeaders(options),\r\n                body: reqBody,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (window.navigator.onLine) {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.postRequestFailed);\r\n            }\r\n            else {\r\n                throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noNetworkConnectivity);\r\n            }\r\n        }\r\n        try {\r\n            return {\r\n                headers: this.getHeaderDict(response.headers),\r\n                body: (await response.json()),\r\n                status: response.status,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.failedToParseResponse);\r\n        }\r\n    }\r\n    /**\r\n     * Get Fetch API Headers object from string map\r\n     * @param inputHeaders\r\n     */\r\n    getFetchHeaders(options) {\r\n        const headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        const optionsHeaders = options.headers;\r\n        Object.keys(optionsHeaders).forEach((key) => {\r\n            headers.append(key, optionsHeaders[key]);\r\n        });\r\n        return headers;\r\n    }\r\n    getHeaderDict(headers) {\r\n        const headerDict = {};\r\n        headers.forEach((value, key) => {\r\n            headerDict[key] = value;\r\n        });\r\n        return headerDict;\r\n    }\r\n}\n\n\n//# sourceMappingURL=FetchClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25ldHdvcmsvRmV0Y2hDbGllbnQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDYTtBQUMwQztBQUNnQjtBQUNMO0FBQ3FFOztBQUV2STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMEVBQWlCO0FBQ3pDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixtRkFBc0IsQ0FBQyw4RUFBZ0I7QUFDN0Q7QUFDQTtBQUNBLHNCQUFzQixtRkFBc0IsQ0FBQyxtRkFBcUI7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUZBQXNCLENBQUMsbUZBQXFCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxpRUFBUztBQUM5RDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMEVBQWlCO0FBQ3pDO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLG1GQUFzQixDQUFDLCtFQUFpQjtBQUM5RDtBQUNBO0FBQ0Esc0JBQXNCLG1GQUFzQixDQUFDLG1GQUFxQjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtRkFBc0IsQ0FBQyxtRkFBcUI7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L25ldHdvcmsvRmV0Y2hDbGllbnQubWpzPzJmMTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWJyb3dzZXIgdjMuMjQuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBDb25zdGFudHMgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBjcmVhdGVCcm93c2VyQXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQnJvd3NlckF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgSFRUUF9SRVFVRVNUX1RZUEUgfSBmcm9tICcuLi91dGlscy9Ccm93c2VyQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBnZXRSZXF1ZXN0RmFpbGVkLCBub05ldHdvcmtDb25uZWN0aXZpdHksIGZhaWxlZFRvUGFyc2VSZXNwb25zZSwgcG9zdFJlcXVlc3RGYWlsZWQgfSBmcm9tICcuLi9lcnJvci9Ccm93c2VyQXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBUaGlzIGNsYXNzIGltcGxlbWVudHMgdGhlIEZldGNoIEFQSSBmb3IgR0VUIGFuZCBQT1NUIHJlcXVlc3RzLiBTZWUgbW9yZSBoZXJlOiBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRmV0Y2hfQVBJXHJcbiAqL1xyXG5jbGFzcyBGZXRjaENsaWVudCB7XHJcbiAgICAvKipcclxuICAgICAqIEZldGNoIENsaWVudCBmb3IgUkVTVCBlbmRwb2ludHMgLSBHZXQgcmVxdWVzdFxyXG4gICAgICogQHBhcmFtIHVybFxyXG4gICAgICogQHBhcmFtIGhlYWRlcnNcclxuICAgICAqIEBwYXJhbSBib2R5XHJcbiAgICAgKi9cclxuICAgIGFzeW5jIHNlbmRHZXRSZXF1ZXN0QXN5bmModXJsLCBvcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IHJlc3BvbnNlO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsLCB7XHJcbiAgICAgICAgICAgICAgICBtZXRob2Q6IEhUVFBfUkVRVUVTVF9UWVBFLkdFVCxcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuZ2V0RmV0Y2hIZWFkZXJzKG9wdGlvbnMpLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgaWYgKHdpbmRvdy5uYXZpZ2F0b3Iub25MaW5lKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKGdldFJlcXVlc3RGYWlsZWQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcihub05ldHdvcmtDb25uZWN0aXZpdHkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmdldEhlYWRlckRpY3QocmVzcG9uc2UuaGVhZGVycyksXHJcbiAgICAgICAgICAgICAgICBib2R5OiAoYXdhaXQgcmVzcG9uc2UuanNvbigpKSxcclxuICAgICAgICAgICAgICAgIHN0YXR1czogcmVzcG9uc2Uuc3RhdHVzLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKGZhaWxlZFRvUGFyc2VSZXNwb25zZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBGZXRjaCBDbGllbnQgZm9yIFJFU1QgZW5kcG9pbnRzIC0gUG9zdCByZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gdXJsXHJcbiAgICAgKiBAcGFyYW0gaGVhZGVyc1xyXG4gICAgICogQHBhcmFtIGJvZHlcclxuICAgICAqL1xyXG4gICAgYXN5bmMgc2VuZFBvc3RSZXF1ZXN0QXN5bmModXJsLCBvcHRpb25zKSB7XHJcbiAgICAgICAgY29uc3QgcmVxQm9keSA9IChvcHRpb25zICYmIG9wdGlvbnMuYm9keSkgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICBsZXQgcmVzcG9uc2U7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwsIHtcclxuICAgICAgICAgICAgICAgIG1ldGhvZDogSFRUUF9SRVFVRVNUX1RZUEUuUE9TVCxcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuZ2V0RmV0Y2hIZWFkZXJzKG9wdGlvbnMpLFxyXG4gICAgICAgICAgICAgICAgYm9keTogcmVxQm9keSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIGlmICh3aW5kb3cubmF2aWdhdG9yLm9uTGluZSkge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcihwb3N0UmVxdWVzdEZhaWxlZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKG5vTmV0d29ya0Nvbm5lY3Rpdml0eSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuZ2V0SGVhZGVyRGljdChyZXNwb25zZS5oZWFkZXJzKSxcclxuICAgICAgICAgICAgICAgIGJvZHk6IChhd2FpdCByZXNwb25zZS5qc29uKCkpLFxyXG4gICAgICAgICAgICAgICAgc3RhdHVzOiByZXNwb25zZS5zdGF0dXMsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IoZmFpbGVkVG9QYXJzZVJlc3BvbnNlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdldCBGZXRjaCBBUEkgSGVhZGVycyBvYmplY3QgZnJvbSBzdHJpbmcgbWFwXHJcbiAgICAgKiBAcGFyYW0gaW5wdXRIZWFkZXJzXHJcbiAgICAgKi9cclxuICAgIGdldEZldGNoSGVhZGVycyhvcHRpb25zKSB7XHJcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IG5ldyBIZWFkZXJzKCk7XHJcbiAgICAgICAgaWYgKCEob3B0aW9ucyAmJiBvcHRpb25zLmhlYWRlcnMpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBoZWFkZXJzO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBvcHRpb25zSGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycztcclxuICAgICAgICBPYmplY3Qua2V5cyhvcHRpb25zSGVhZGVycykuZm9yRWFjaCgoa2V5KSA9PiB7XHJcbiAgICAgICAgICAgIGhlYWRlcnMuYXBwZW5kKGtleSwgb3B0aW9uc0hlYWRlcnNba2V5XSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIGhlYWRlcnM7XHJcbiAgICB9XHJcbiAgICBnZXRIZWFkZXJEaWN0KGhlYWRlcnMpIHtcclxuICAgICAgICBjb25zdCBoZWFkZXJEaWN0ID0ge307XHJcbiAgICAgICAgaGVhZGVycy5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XHJcbiAgICAgICAgICAgIGhlYWRlckRpY3Rba2V5XSA9IHZhbHVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBoZWFkZXJEaWN0O1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IEZldGNoQ2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1GZXRjaENsaWVudC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseOperatingContext: () => (/* binding */ BaseOperatingContext)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config/Configuration.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/config/Configuration.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\");\n/* harmony import */ var _utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base class for operating context\r\n * Operating contexts are contexts in which MSAL.js is being run\r\n * More than one operating context may be available at a time\r\n * It's important from a logging and telemetry point of view for us to be able to identify the operating context.\r\n * For example: Some operating contexts will pre-cache tokens impacting performance telemetry\r\n */\r\nclass BaseOperatingContext {\r\n    static loggerCallback(level, message) {\r\n        switch (level) {\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Error:\r\n                // eslint-disable-next-line no-console\r\n                console.error(message);\r\n                return;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Info:\r\n                // eslint-disable-next-line no-console\r\n                console.info(message);\r\n                return;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Verbose:\r\n                // eslint-disable-next-line no-console\r\n                console.debug(message);\r\n                return;\r\n            case _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Warning:\r\n                // eslint-disable-next-line no-console\r\n                console.warn(message);\r\n                return;\r\n            default:\r\n                // eslint-disable-next-line no-console\r\n                console.log(message);\r\n                return;\r\n        }\r\n    }\r\n    constructor(config) {\r\n        /*\r\n         * If loaded in an environment where window is not available,\r\n         * set internal flag to false so that further requests fail.\r\n         * This is to support server-side rendering environments.\r\n         */\r\n        this.browserEnvironment = typeof window !== \"undefined\";\r\n        this.config = (0,_config_Configuration_mjs__WEBPACK_IMPORTED_MODULE_1__.buildConfiguration)(config, this.browserEnvironment);\r\n        let sessionStorage;\r\n        try {\r\n            sessionStorage = window[_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.BrowserCacheLocation.SessionStorage];\r\n            // Mute errors if it's a non-browser environment or cookies are blocked.\r\n        }\r\n        catch (e) { }\r\n        const logLevelKey = sessionStorage?.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.LOG_LEVEL_CACHE_KEY);\r\n        const piiLoggingKey = sessionStorage\r\n            ?.getItem(_utils_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_2__.LOG_PII_CACHE_KEY)\r\n            ?.toLowerCase();\r\n        const piiLoggingEnabled = piiLoggingKey === \"true\"\r\n            ? true\r\n            : piiLoggingKey === \"false\"\r\n                ? false\r\n                : undefined;\r\n        const loggerOptions = { ...this.config.system.loggerOptions };\r\n        const logLevel = logLevelKey && Object.keys(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel).includes(logLevelKey)\r\n            ? _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.LogLevel[logLevelKey]\r\n            : undefined;\r\n        if (logLevel) {\r\n            loggerOptions.loggerCallback = BaseOperatingContext.loggerCallback;\r\n            loggerOptions.logLevel = logLevel;\r\n        }\r\n        if (piiLoggingEnabled !== undefined) {\r\n            loggerOptions.piiLoggingEnabled = piiLoggingEnabled;\r\n        }\r\n        this.logger = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.Logger(loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_3__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_3__.version);\r\n        this.available = false;\r\n    }\r\n    /**\r\n     * Return the MSAL config\r\n     * @returns BrowserConfiguration\r\n     */\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n    /**\r\n     * Returns the MSAL Logger\r\n     * @returns Logger\r\n     */\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n    isAvailable() {\r\n        return this.available;\r\n    }\r\n    isBrowserEnvironment() {\r\n        return this.browserEnvironment;\r\n    }\r\n}\n\n\n//# sourceMappingURL=BaseOperatingContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvQmFzZU9wZXJhdGluZ0NvbnRleHQubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNpRDtBQUNHO0FBQ1Y7QUFDc0Q7O0FBRTdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0VBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGdFQUFRO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixnRUFBUTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0VBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNkVBQWtCO0FBQ3hDO0FBQ0E7QUFDQSxvQ0FBb0MsNkVBQW9CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCw0RUFBbUI7QUFDdkU7QUFDQSxzQkFBc0IsMEVBQWlCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQyxvREFBb0QsZ0VBQVE7QUFDNUQsY0FBYyxnRUFBUTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLDhEQUFNLGdCQUFnQixzREFBSSxFQUFFLHlEQUFPO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3Qvb3BlcmF0aW5nY29udGV4dC9CYXNlT3BlcmF0aW5nQ29udGV4dC5tanM/ZDdmZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yNC4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IExvZ0xldmVsLCBMb2dnZXIgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBidWlsZENvbmZpZ3VyYXRpb24gfSBmcm9tICcuLi9jb25maWcvQ29uZmlndXJhdGlvbi5tanMnO1xuaW1wb3J0IHsgbmFtZSwgdmVyc2lvbiB9IGZyb20gJy4uL3BhY2thZ2VNZXRhZGF0YS5tanMnO1xuaW1wb3J0IHsgQnJvd3NlckNhY2hlTG9jYXRpb24sIExPR19MRVZFTF9DQUNIRV9LRVksIExPR19QSUlfQ0FDSEVfS0VZIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlckNvbnN0YW50cy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEJhc2UgY2xhc3MgZm9yIG9wZXJhdGluZyBjb250ZXh0XHJcbiAqIE9wZXJhdGluZyBjb250ZXh0cyBhcmUgY29udGV4dHMgaW4gd2hpY2ggTVNBTC5qcyBpcyBiZWluZyBydW5cclxuICogTW9yZSB0aGFuIG9uZSBvcGVyYXRpbmcgY29udGV4dCBtYXkgYmUgYXZhaWxhYmxlIGF0IGEgdGltZVxyXG4gKiBJdCdzIGltcG9ydGFudCBmcm9tIGEgbG9nZ2luZyBhbmQgdGVsZW1ldHJ5IHBvaW50IG9mIHZpZXcgZm9yIHVzIHRvIGJlIGFibGUgdG8gaWRlbnRpZnkgdGhlIG9wZXJhdGluZyBjb250ZXh0LlxyXG4gKiBGb3IgZXhhbXBsZTogU29tZSBvcGVyYXRpbmcgY29udGV4dHMgd2lsbCBwcmUtY2FjaGUgdG9rZW5zIGltcGFjdGluZyBwZXJmb3JtYW5jZSB0ZWxlbWV0cnlcclxuICovXHJcbmNsYXNzIEJhc2VPcGVyYXRpbmdDb250ZXh0IHtcclxuICAgIHN0YXRpYyBsb2dnZXJDYWxsYmFjayhsZXZlbCwgbWVzc2FnZSkge1xyXG4gICAgICAgIHN3aXRjaCAobGV2ZWwpIHtcclxuICAgICAgICAgICAgY2FzZSBMb2dMZXZlbC5FcnJvcjpcclxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICBjYXNlIExvZ0xldmVsLkluZm86XHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5pbmZvKG1lc3NhZ2UpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICBjYXNlIExvZ0xldmVsLlZlcmJvc2U6XHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhtZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgY2FzZSBMb2dMZXZlbC5XYXJuaW5nOlxyXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihtZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcclxuICAgICAgICAvKlxyXG4gICAgICAgICAqIElmIGxvYWRlZCBpbiBhbiBlbnZpcm9ubWVudCB3aGVyZSB3aW5kb3cgaXMgbm90IGF2YWlsYWJsZSxcclxuICAgICAgICAgKiBzZXQgaW50ZXJuYWwgZmxhZyB0byBmYWxzZSBzbyB0aGF0IGZ1cnRoZXIgcmVxdWVzdHMgZmFpbC5cclxuICAgICAgICAgKiBUaGlzIGlzIHRvIHN1cHBvcnQgc2VydmVyLXNpZGUgcmVuZGVyaW5nIGVudmlyb25tZW50cy5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLmJyb3dzZXJFbnZpcm9ubWVudCA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCI7XHJcbiAgICAgICAgdGhpcy5jb25maWcgPSBidWlsZENvbmZpZ3VyYXRpb24oY29uZmlnLCB0aGlzLmJyb3dzZXJFbnZpcm9ubWVudCk7XHJcbiAgICAgICAgbGV0IHNlc3Npb25TdG9yYWdlO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHNlc3Npb25TdG9yYWdlID0gd2luZG93W0Jyb3dzZXJDYWNoZUxvY2F0aW9uLlNlc3Npb25TdG9yYWdlXTtcclxuICAgICAgICAgICAgLy8gTXV0ZSBlcnJvcnMgaWYgaXQncyBhIG5vbi1icm93c2VyIGVudmlyb25tZW50IG9yIGNvb2tpZXMgYXJlIGJsb2NrZWQuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7IH1cclxuICAgICAgICBjb25zdCBsb2dMZXZlbEtleSA9IHNlc3Npb25TdG9yYWdlPy5nZXRJdGVtKExPR19MRVZFTF9DQUNIRV9LRVkpO1xyXG4gICAgICAgIGNvbnN0IHBpaUxvZ2dpbmdLZXkgPSBzZXNzaW9uU3RvcmFnZVxyXG4gICAgICAgICAgICA/LmdldEl0ZW0oTE9HX1BJSV9DQUNIRV9LRVkpXHJcbiAgICAgICAgICAgID8udG9Mb3dlckNhc2UoKTtcclxuICAgICAgICBjb25zdCBwaWlMb2dnaW5nRW5hYmxlZCA9IHBpaUxvZ2dpbmdLZXkgPT09IFwidHJ1ZVwiXHJcbiAgICAgICAgICAgID8gdHJ1ZVxyXG4gICAgICAgICAgICA6IHBpaUxvZ2dpbmdLZXkgPT09IFwiZmFsc2VcIlxyXG4gICAgICAgICAgICAgICAgPyBmYWxzZVxyXG4gICAgICAgICAgICAgICAgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgY29uc3QgbG9nZ2VyT3B0aW9ucyA9IHsgLi4udGhpcy5jb25maWcuc3lzdGVtLmxvZ2dlck9wdGlvbnMgfTtcclxuICAgICAgICBjb25zdCBsb2dMZXZlbCA9IGxvZ0xldmVsS2V5ICYmIE9iamVjdC5rZXlzKExvZ0xldmVsKS5pbmNsdWRlcyhsb2dMZXZlbEtleSlcclxuICAgICAgICAgICAgPyBMb2dMZXZlbFtsb2dMZXZlbEtleV1cclxuICAgICAgICAgICAgOiB1bmRlZmluZWQ7XHJcbiAgICAgICAgaWYgKGxvZ0xldmVsKSB7XHJcbiAgICAgICAgICAgIGxvZ2dlck9wdGlvbnMubG9nZ2VyQ2FsbGJhY2sgPSBCYXNlT3BlcmF0aW5nQ29udGV4dC5sb2dnZXJDYWxsYmFjaztcclxuICAgICAgICAgICAgbG9nZ2VyT3B0aW9ucy5sb2dMZXZlbCA9IGxvZ0xldmVsO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocGlpTG9nZ2luZ0VuYWJsZWQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBsb2dnZXJPcHRpb25zLnBpaUxvZ2dpbmdFbmFibGVkID0gcGlpTG9nZ2luZ0VuYWJsZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubG9nZ2VyID0gbmV3IExvZ2dlcihsb2dnZXJPcHRpb25zLCBuYW1lLCB2ZXJzaW9uKTtcclxuICAgICAgICB0aGlzLmF2YWlsYWJsZSA9IGZhbHNlO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm4gdGhlIE1TQUwgY29uZmlnXHJcbiAgICAgKiBAcmV0dXJucyBCcm93c2VyQ29uZmlndXJhdGlvblxyXG4gICAgICovXHJcbiAgICBnZXRDb25maWcoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uZmlnO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIHRoZSBNU0FMIExvZ2dlclxyXG4gICAgICogQHJldHVybnMgTG9nZ2VyXHJcbiAgICAgKi9cclxuICAgIGdldExvZ2dlcigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5sb2dnZXI7XHJcbiAgICB9XHJcbiAgICBpc0F2YWlsYWJsZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5hdmFpbGFibGU7XHJcbiAgICB9XHJcbiAgICBpc0Jyb3dzZXJFbnZpcm9ubWVudCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5icm93c2VyRW52aXJvbm1lbnQ7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgQmFzZU9wZXJhdGluZ0NvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUJhc2VPcGVyYXRpbmdDb250ZXh0Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/NestedAppOperatingContext.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/operatingcontext/NestedAppOperatingContext.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NestedAppOperatingContext: () => (/* binding */ NestedAppOperatingContext)\n/* harmony export */ });\n/* harmony import */ var _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseOperatingContext.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs\");\n/* harmony import */ var _naa_BridgeProxy_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../naa/BridgeProxy.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/naa/BridgeProxy.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NestedAppOperatingContext extends _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseOperatingContext {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.bridgeProxy = undefined;\r\n        this.accountContext = null;\r\n    }\r\n    /**\r\n     * Return the module name.  Intended for use with import() to enable dynamic import\r\n     * of the implementation associated with this operating context\r\n     * @returns\r\n     */\r\n    getModuleName() {\r\n        return NestedAppOperatingContext.MODULE_NAME;\r\n    }\r\n    /**\r\n     * Returns the unique identifier for this operating context\r\n     * @returns string\r\n     */\r\n    getId() {\r\n        return NestedAppOperatingContext.ID;\r\n    }\r\n    /**\r\n     * Returns the current BridgeProxy\r\n     * @returns IBridgeProxy | undefined\r\n     */\r\n    getBridgeProxy() {\r\n        return this.bridgeProxy;\r\n    }\r\n    /**\r\n     * Checks whether the operating context is available.\r\n     * Confirms that the code is running a browser rather.  This is required.\r\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\r\n     */\r\n    async initialize() {\r\n        try {\r\n            if (typeof window !== \"undefined\") {\r\n                if (typeof window.__initializeNestedAppAuth === \"function\") {\r\n                    await window.__initializeNestedAppAuth();\r\n                }\r\n                const bridgeProxy = await _naa_BridgeProxy_mjs__WEBPACK_IMPORTED_MODULE_1__.BridgeProxy.create();\r\n                /*\r\n                 * Because we want single sign on we expect the host app to provide the account context\r\n                 * with a min set of params that can be used to identify the account\r\n                 * this.account = nestedApp.getAccountByFilter(bridgeProxy.getAccountContext());\r\n                 */\r\n                this.accountContext = bridgeProxy.getAccountContext();\r\n                this.bridgeProxy = bridgeProxy;\r\n                this.available = bridgeProxy !== undefined;\r\n            }\r\n        }\r\n        catch (ex) {\r\n            this.logger.infoPii(`Could not initialize Nested App Auth bridge (${ex})`);\r\n        }\r\n        this.logger.info(`Nested App Auth Bridge available: ${this.available}`);\r\n        return this.available;\r\n    }\r\n}\r\n/*\r\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\r\n * containing the implementation for this operating context\r\n */\r\nNestedAppOperatingContext.MODULE_NAME = \"\";\r\n/**\r\n * Unique identifier for the operating context\r\n */\r\nNestedAppOperatingContext.ID = \"NestedAppOperatingContext\";\n\n\n//# sourceMappingURL=NestedAppOperatingContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvTmVzdGVkQXBwT3BlcmF0aW5nQ29udGV4dC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNxRDtBQUNiOztBQUVyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QywyRUFBb0I7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyw2REFBVztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0ZBQWdGLEdBQUc7QUFDbkY7QUFDQSw4REFBOEQsZUFBZTtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXFDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1icm93c2VyL2Rpc3Qvb3BlcmF0aW5nY29udGV4dC9OZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0Lm1qcz8wOTkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQmFzZU9wZXJhdGluZ0NvbnRleHQgfSBmcm9tICcuL0Jhc2VPcGVyYXRpbmdDb250ZXh0Lm1qcyc7XG5pbXBvcnQgeyBCcmlkZ2VQcm94eSB9IGZyb20gJy4uL25hYS9CcmlkZ2VQcm94eS5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY2xhc3MgTmVzdGVkQXBwT3BlcmF0aW5nQ29udGV4dCBleHRlbmRzIEJhc2VPcGVyYXRpbmdDb250ZXh0IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcbiAgICAgICAgdGhpcy5icmlkZ2VQcm94eSA9IHVuZGVmaW5lZDtcclxuICAgICAgICB0aGlzLmFjY291bnRDb250ZXh0ID0gbnVsbDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIHRoZSBtb2R1bGUgbmFtZS4gIEludGVuZGVkIGZvciB1c2Ugd2l0aCBpbXBvcnQoKSB0byBlbmFibGUgZHluYW1pYyBpbXBvcnRcclxuICAgICAqIG9mIHRoZSBpbXBsZW1lbnRhdGlvbiBhc3NvY2lhdGVkIHdpdGggdGhpcyBvcGVyYXRpbmcgY29udGV4dFxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgZ2V0TW9kdWxlTmFtZSgpIHtcclxuICAgICAgICByZXR1cm4gTmVzdGVkQXBwT3BlcmF0aW5nQ29udGV4dC5NT0RVTEVfTkFNRTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgb3BlcmF0aW5nIGNvbnRleHRcclxuICAgICAqIEByZXR1cm5zIHN0cmluZ1xyXG4gICAgICovXHJcbiAgICBnZXRJZCgpIHtcclxuICAgICAgICByZXR1cm4gTmVzdGVkQXBwT3BlcmF0aW5nQ29udGV4dC5JRDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgY3VycmVudCBCcmlkZ2VQcm94eVxyXG4gICAgICogQHJldHVybnMgSUJyaWRnZVByb3h5IHwgdW5kZWZpbmVkXHJcbiAgICAgKi9cclxuICAgIGdldEJyaWRnZVByb3h5KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmJyaWRnZVByb3h5O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgb3BlcmF0aW5nIGNvbnRleHQgaXMgYXZhaWxhYmxlLlxyXG4gICAgICogQ29uZmlybXMgdGhhdCB0aGUgY29kZSBpcyBydW5uaW5nIGEgYnJvd3NlciByYXRoZXIuICBUaGlzIGlzIHJlcXVpcmVkLlxyXG4gICAgICogQHJldHVybnMgUHJvbWlzZTxib29sZWFuPiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhpcyBvcGVyYXRpbmcgY29udGV4dCBpcyBjdXJyZW50bHkgYXZhaWxhYmxlLlxyXG4gICAgICovXHJcbiAgICBhc3luYyBpbml0aWFsaXplKCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHdpbmRvdy5fX2luaXRpYWxpemVOZXN0ZWRBcHBBdXRoID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICBhd2FpdCB3aW5kb3cuX19pbml0aWFsaXplTmVzdGVkQXBwQXV0aCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29uc3QgYnJpZGdlUHJveHkgPSBhd2FpdCBCcmlkZ2VQcm94eS5jcmVhdGUoKTtcclxuICAgICAgICAgICAgICAgIC8qXHJcbiAgICAgICAgICAgICAgICAgKiBCZWNhdXNlIHdlIHdhbnQgc2luZ2xlIHNpZ24gb24gd2UgZXhwZWN0IHRoZSBob3N0IGFwcCB0byBwcm92aWRlIHRoZSBhY2NvdW50IGNvbnRleHRcclxuICAgICAgICAgICAgICAgICAqIHdpdGggYSBtaW4gc2V0IG9mIHBhcmFtcyB0aGF0IGNhbiBiZSB1c2VkIHRvIGlkZW50aWZ5IHRoZSBhY2NvdW50XHJcbiAgICAgICAgICAgICAgICAgKiB0aGlzLmFjY291bnQgPSBuZXN0ZWRBcHAuZ2V0QWNjb3VudEJ5RmlsdGVyKGJyaWRnZVByb3h5LmdldEFjY291bnRDb250ZXh0KCkpO1xyXG4gICAgICAgICAgICAgICAgICovXHJcbiAgICAgICAgICAgICAgICB0aGlzLmFjY291bnRDb250ZXh0ID0gYnJpZGdlUHJveHkuZ2V0QWNjb3VudENvbnRleHQoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYnJpZGdlUHJveHkgPSBicmlkZ2VQcm94eTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYXZhaWxhYmxlID0gYnJpZGdlUHJveHkgIT09IHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXgpIHtcclxuICAgICAgICAgICAgdGhpcy5sb2dnZXIuaW5mb1BpaShgQ291bGQgbm90IGluaXRpYWxpemUgTmVzdGVkIEFwcCBBdXRoIGJyaWRnZSAoJHtleH0pYCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubG9nZ2VyLmluZm8oYE5lc3RlZCBBcHAgQXV0aCBCcmlkZ2UgYXZhaWxhYmxlOiAke3RoaXMuYXZhaWxhYmxlfWApO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmF2YWlsYWJsZTtcclxuICAgIH1cclxufVxyXG4vKlxyXG4gKiBUT0RPOiBPbmNlIHdlIGhhdmUgZGV0ZXJtaW5lIHRoZSBidW5kbGluZyBjb2RlIHJldHVybiBoZXJlIHRvIHNwZWNpZnkgdGhlIG5hbWUgb2YgdGhlIGJ1bmRsZVxyXG4gKiBjb250YWluaW5nIHRoZSBpbXBsZW1lbnRhdGlvbiBmb3IgdGhpcyBvcGVyYXRpbmcgY29udGV4dFxyXG4gKi9cclxuTmVzdGVkQXBwT3BlcmF0aW5nQ29udGV4dC5NT0RVTEVfTkFNRSA9IFwiXCI7XHJcbi8qKlxyXG4gKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIG9wZXJhdGluZyBjb250ZXh0XHJcbiAqL1xyXG5OZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0LklEID0gXCJOZXN0ZWRBcHBPcGVyYXRpbmdDb250ZXh0XCI7XG5cbmV4cG9ydCB7IE5lc3RlZEFwcE9wZXJhdGluZ0NvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5lc3RlZEFwcE9wZXJhdGluZ0NvbnRleHQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/NestedAppOperatingContext.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardOperatingContext: () => (/* binding */ StandardOperatingContext)\n/* harmony export */ });\n/* harmony import */ var _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseOperatingContext.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass StandardOperatingContext extends _BaseOperatingContext_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseOperatingContext {\r\n    /**\r\n     * Return the module name.  Intended for use with import() to enable dynamic import\r\n     * of the implementation associated with this operating context\r\n     * @returns\r\n     */\r\n    getModuleName() {\r\n        return StandardOperatingContext.MODULE_NAME;\r\n    }\r\n    /**\r\n     * Returns the unique identifier for this operating context\r\n     * @returns string\r\n     */\r\n    getId() {\r\n        return StandardOperatingContext.ID;\r\n    }\r\n    /**\r\n     * Checks whether the operating context is available.\r\n     * Confirms that the code is running a browser rather.  This is required.\r\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\r\n     */\r\n    async initialize() {\r\n        this.available = typeof window !== \"undefined\";\r\n        return this.available;\r\n        /*\r\n         * NOTE: The standard context is available as long as there is a window.  If/when we split out WAM from Browser\r\n         * We can move the current contents of the initialize method to here and verify that the WAM extension is available\r\n         */\r\n    }\r\n}\r\n/*\r\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\r\n * containing the implementation for this operating context\r\n */\r\nStandardOperatingContext.MODULE_NAME = \"\";\r\n/**\r\n * Unique identifier for the operating context\r\n */\r\nStandardOperatingContext.ID = \"StandardOperatingContext\";\n\n\n//# sourceMappingURL=StandardOperatingContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0Lm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDcUQ7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLDJFQUFvQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVvQztBQUNwQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L29wZXJhdGluZ2NvbnRleHQvU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0Lm1qcz8yMTY4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQmFzZU9wZXJhdGluZ0NvbnRleHQgfSBmcm9tICcuL0Jhc2VPcGVyYXRpbmdDb250ZXh0Lm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQgZXh0ZW5kcyBCYXNlT3BlcmF0aW5nQ29udGV4dCB7XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybiB0aGUgbW9kdWxlIG5hbWUuICBJbnRlbmRlZCBmb3IgdXNlIHdpdGggaW1wb3J0KCkgdG8gZW5hYmxlIGR5bmFtaWMgaW1wb3J0XHJcbiAgICAgKiBvZiB0aGUgaW1wbGVtZW50YXRpb24gYXNzb2NpYXRlZCB3aXRoIHRoaXMgb3BlcmF0aW5nIGNvbnRleHRcclxuICAgICAqIEByZXR1cm5zXHJcbiAgICAgKi9cclxuICAgIGdldE1vZHVsZU5hbWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIFN0YW5kYXJkT3BlcmF0aW5nQ29udGV4dC5NT0RVTEVfTkFNRTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgdW5pcXVlIGlkZW50aWZpZXIgZm9yIHRoaXMgb3BlcmF0aW5nIGNvbnRleHRcclxuICAgICAqIEByZXR1cm5zIHN0cmluZ1xyXG4gICAgICovXHJcbiAgICBnZXRJZCgpIHtcclxuICAgICAgICByZXR1cm4gU3RhbmRhcmRPcGVyYXRpbmdDb250ZXh0LklEO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVja3Mgd2hldGhlciB0aGUgb3BlcmF0aW5nIGNvbnRleHQgaXMgYXZhaWxhYmxlLlxyXG4gICAgICogQ29uZmlybXMgdGhhdCB0aGUgY29kZSBpcyBydW5uaW5nIGEgYnJvd3NlciByYXRoZXIuICBUaGlzIGlzIHJlcXVpcmVkLlxyXG4gICAgICogQHJldHVybnMgUHJvbWlzZTxib29sZWFuPiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhpcyBvcGVyYXRpbmcgY29udGV4dCBpcyBjdXJyZW50bHkgYXZhaWxhYmxlLlxyXG4gICAgICovXHJcbiAgICBhc3luYyBpbml0aWFsaXplKCkge1xyXG4gICAgICAgIHRoaXMuYXZhaWxhYmxlID0gdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIjtcclxuICAgICAgICByZXR1cm4gdGhpcy5hdmFpbGFibGU7XHJcbiAgICAgICAgLypcclxuICAgICAgICAgKiBOT1RFOiBUaGUgc3RhbmRhcmQgY29udGV4dCBpcyBhdmFpbGFibGUgYXMgbG9uZyBhcyB0aGVyZSBpcyBhIHdpbmRvdy4gIElmL3doZW4gd2Ugc3BsaXQgb3V0IFdBTSBmcm9tIEJyb3dzZXJcclxuICAgICAgICAgKiBXZSBjYW4gbW92ZSB0aGUgY3VycmVudCBjb250ZW50cyBvZiB0aGUgaW5pdGlhbGl6ZSBtZXRob2QgdG8gaGVyZSBhbmQgdmVyaWZ5IHRoYXQgdGhlIFdBTSBleHRlbnNpb24gaXMgYXZhaWxhYmxlXHJcbiAgICAgICAgICovXHJcbiAgICB9XHJcbn1cclxuLypcclxuICogVE9ETzogT25jZSB3ZSBoYXZlIGRldGVybWluZSB0aGUgYnVuZGxpbmcgY29kZSByZXR1cm4gaGVyZSB0byBzcGVjaWZ5IHRoZSBuYW1lIG9mIHRoZSBidW5kbGVcclxuICogY29udGFpbmluZyB0aGUgaW1wbGVtZW50YXRpb24gZm9yIHRoaXMgb3BlcmF0aW5nIGNvbnRleHRcclxuICovXHJcblN0YW5kYXJkT3BlcmF0aW5nQ29udGV4dC5NT0RVTEVfTkFNRSA9IFwiXCI7XHJcbi8qKlxyXG4gKiBVbmlxdWUgaWRlbnRpZmllciBmb3IgdGhlIG9wZXJhdGluZyBjb250ZXh0XHJcbiAqL1xyXG5TdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQuSUQgPSBcIlN0YW5kYXJkT3BlcmF0aW5nQ29udGV4dFwiO1xuXG5leHBvcnQgeyBTdGFuZGFyZE9wZXJhdGluZ0NvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN0YW5kYXJkT3BlcmF0aW5nQ29udGV4dC5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/packageMetadata.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/packageMetadata.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n/* eslint-disable header/header */\r\nconst name = \"@azure/msal-browser\";\r\nconst version = \"3.24.0\";\n\n\n//# sourceMappingURL=packageMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3BhY2thZ2VNZXRhZGF0YS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3BhY2thZ2VNZXRhZGF0YS5tanM/OGQ3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yNC4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIGhlYWRlci9oZWFkZXIgKi9cclxuY29uc3QgbmFtZSA9IFwiQGF6dXJlL21zYWwtYnJvd3NlclwiO1xyXG5jb25zdCB2ZXJzaW9uID0gXCIzLjI0LjBcIjtcblxuZXhwb3J0IHsgbmFtZSwgdmVyc2lvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFja2FnZU1ldGFkYXRhLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/packageMetadata.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeBaseRequest: () => (/* binding */ initializeBaseRequest),\n/* harmony export */   initializeSilentRequest: () => (/* binding */ initializeSilentRequest)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Initializer function for all request APIs\r\n * @param request\r\n */\r\nasync function initializeBaseRequest(request, config, performanceClient, logger) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.InitializeBaseRequest, request.correlationId);\r\n    const authority = request.authority || config.auth.authority;\r\n    const scopes = [...((request && request.scopes) || [])];\r\n    const validatedRequest = {\r\n        ...request,\r\n        correlationId: request.correlationId,\r\n        authority,\r\n        scopes,\r\n    };\r\n    // Set authenticationScheme to BEARER if not explicitly set in the request\r\n    if (!validatedRequest.authenticationScheme) {\r\n        validatedRequest.authenticationScheme = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.BEARER;\r\n        logger.verbose('Authentication Scheme wasn\\'t explicitly set in request, defaulting to \"Bearer\" request');\r\n    }\r\n    else {\r\n        if (validatedRequest.authenticationScheme === _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.SSH) {\r\n            if (!request.sshJwk) {\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.createClientConfigurationError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.missingSshJwk);\r\n            }\r\n            if (!request.sshKid) {\r\n                throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.createClientConfigurationError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_3__.missingSshKid);\r\n            }\r\n        }\r\n        logger.verbose(`Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`);\r\n    }\r\n    // Set requested claims hash if claims-based caching is enabled and claims were requested\r\n    if (config.cache.claimsBasedCachingEnabled &&\r\n        request.claims &&\r\n        // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\r\n        !_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_4__.StringUtils.isEmptyObj(request.claims)) {\r\n        validatedRequest.requestedClaimsHash = await (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_5__.hashString)(request.claims);\r\n    }\r\n    return validatedRequest;\r\n}\r\nasync function initializeSilentRequest(request, account, config, performanceClient, logger) {\r\n    performanceClient.addQueueMeasurement(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.InitializeSilentRequest, request.correlationId);\r\n    const baseRequest = await (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_6__.invokeAsync)(initializeBaseRequest, _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.InitializeBaseRequest, logger, performanceClient, request.correlationId)(request, config, performanceClient, logger);\r\n    return {\r\n        ...request,\r\n        ...baseRequest,\r\n        account: account,\r\n        forceRefresh: request.forceRefresh || false,\r\n    };\r\n}\n\n\n//# sourceMappingURL=RequestHelpers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3JlcXVlc3QvUmVxdWVzdEhlbHBlcnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDaUs7QUFDckg7O0FBRXpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyx5RUFBaUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0QsNEVBQW9CO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCw0RUFBb0I7QUFDMUU7QUFDQSxzQkFBc0IsMEZBQThCLENBQUMscUVBQTJDO0FBQ2hHO0FBQ0E7QUFDQSxzQkFBc0IsMEZBQThCLENBQUMscUVBQTJDO0FBQ2hHO0FBQ0E7QUFDQSx3REFBd0Qsc0NBQXNDO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0RBQWtEO0FBQ2xELFNBQVMsbUVBQVc7QUFDcEIscURBQXFELHFFQUFVO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHlFQUFpQjtBQUMzRCw4QkFBOEIsdUVBQVcsd0JBQXdCLHlFQUFpQjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEQ7QUFDMUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWJyb3dzZXIvZGlzdC9yZXF1ZXN0L1JlcXVlc3RIZWxwZXJzLm1qcz9hNmM3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgUGVyZm9ybWFuY2VFdmVudHMsIGludm9rZUFzeW5jLCBBdXRoZW50aWNhdGlvblNjaGVtZSwgY3JlYXRlQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLCBDbGllbnRDb25maWd1cmF0aW9uRXJyb3JDb2RlcywgU3RyaW5nVXRpbHMgfSBmcm9tICdAYXp1cmUvbXNhbC1jb21tb24vYnJvd3Nlcic7XG5pbXBvcnQgeyBoYXNoU3RyaW5nIH0gZnJvbSAnLi4vY3J5cHRvL0Jyb3dzZXJDcnlwdG8ubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBJbml0aWFsaXplciBmdW5jdGlvbiBmb3IgYWxsIHJlcXVlc3QgQVBJc1xyXG4gKiBAcGFyYW0gcmVxdWVzdFxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gaW5pdGlhbGl6ZUJhc2VSZXF1ZXN0KHJlcXVlc3QsIGNvbmZpZywgcGVyZm9ybWFuY2VDbGllbnQsIGxvZ2dlcikge1xyXG4gICAgcGVyZm9ybWFuY2VDbGllbnQuYWRkUXVldWVNZWFzdXJlbWVudChQZXJmb3JtYW5jZUV2ZW50cy5Jbml0aWFsaXplQmFzZVJlcXVlc3QsIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICBjb25zdCBhdXRob3JpdHkgPSByZXF1ZXN0LmF1dGhvcml0eSB8fCBjb25maWcuYXV0aC5hdXRob3JpdHk7XHJcbiAgICBjb25zdCBzY29wZXMgPSBbLi4uKChyZXF1ZXN0ICYmIHJlcXVlc3Quc2NvcGVzKSB8fCBbXSldO1xyXG4gICAgY29uc3QgdmFsaWRhdGVkUmVxdWVzdCA9IHtcclxuICAgICAgICAuLi5yZXF1ZXN0LFxyXG4gICAgICAgIGNvcnJlbGF0aW9uSWQ6IHJlcXVlc3QuY29ycmVsYXRpb25JZCxcclxuICAgICAgICBhdXRob3JpdHksXHJcbiAgICAgICAgc2NvcGVzLFxyXG4gICAgfTtcclxuICAgIC8vIFNldCBhdXRoZW50aWNhdGlvblNjaGVtZSB0byBCRUFSRVIgaWYgbm90IGV4cGxpY2l0bHkgc2V0IGluIHRoZSByZXF1ZXN0XHJcbiAgICBpZiAoIXZhbGlkYXRlZFJlcXVlc3QuYXV0aGVudGljYXRpb25TY2hlbWUpIHtcclxuICAgICAgICB2YWxpZGF0ZWRSZXF1ZXN0LmF1dGhlbnRpY2F0aW9uU2NoZW1lID0gQXV0aGVudGljYXRpb25TY2hlbWUuQkVBUkVSO1xyXG4gICAgICAgIGxvZ2dlci52ZXJib3NlKCdBdXRoZW50aWNhdGlvbiBTY2hlbWUgd2FzblxcJ3QgZXhwbGljaXRseSBzZXQgaW4gcmVxdWVzdCwgZGVmYXVsdGluZyB0byBcIkJlYXJlclwiIHJlcXVlc3QnKTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGlmICh2YWxpZGF0ZWRSZXF1ZXN0LmF1dGhlbnRpY2F0aW9uU2NoZW1lID09PSBBdXRoZW50aWNhdGlvblNjaGVtZS5TU0gpIHtcclxuICAgICAgICAgICAgaWYgKCFyZXF1ZXN0LnNzaEp3aykge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKENsaWVudENvbmZpZ3VyYXRpb25FcnJvckNvZGVzLm1pc3NpbmdTc2hKd2spO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICghcmVxdWVzdC5zc2hLaWQpIHtcclxuICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudENvbmZpZ3VyYXRpb25FcnJvcihDbGllbnRDb25maWd1cmF0aW9uRXJyb3JDb2Rlcy5taXNzaW5nU3NoS2lkKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBsb2dnZXIudmVyYm9zZShgQXV0aGVudGljYXRpb24gU2NoZW1lIHNldCB0byBcIiR7dmFsaWRhdGVkUmVxdWVzdC5hdXRoZW50aWNhdGlvblNjaGVtZX1cIiBhcyBjb25maWd1cmVkIGluIEF1dGggcmVxdWVzdGApO1xyXG4gICAgfVxyXG4gICAgLy8gU2V0IHJlcXVlc3RlZCBjbGFpbXMgaGFzaCBpZiBjbGFpbXMtYmFzZWQgY2FjaGluZyBpcyBlbmFibGVkIGFuZCBjbGFpbXMgd2VyZSByZXF1ZXN0ZWRcclxuICAgIGlmIChjb25maWcuY2FjaGUuY2xhaW1zQmFzZWRDYWNoaW5nRW5hYmxlZCAmJlxyXG4gICAgICAgIHJlcXVlc3QuY2xhaW1zICYmXHJcbiAgICAgICAgLy8gQ2hlY2tzIGZvciBlbXB0eSBzdHJpbmdpZmllZCBvYmplY3QgXCJ7fVwiIHdoaWNoIGRvZXNuJ3QgcXVhbGlmeSBhcyByZXF1ZXN0ZWQgY2xhaW1zXHJcbiAgICAgICAgIVN0cmluZ1V0aWxzLmlzRW1wdHlPYmoocmVxdWVzdC5jbGFpbXMpKSB7XHJcbiAgICAgICAgdmFsaWRhdGVkUmVxdWVzdC5yZXF1ZXN0ZWRDbGFpbXNIYXNoID0gYXdhaXQgaGFzaFN0cmluZyhyZXF1ZXN0LmNsYWltcyk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdmFsaWRhdGVkUmVxdWVzdDtcclxufVxyXG5hc3luYyBmdW5jdGlvbiBpbml0aWFsaXplU2lsZW50UmVxdWVzdChyZXF1ZXN0LCBhY2NvdW50LCBjb25maWcsIHBlcmZvcm1hbmNlQ2xpZW50LCBsb2dnZXIpIHtcclxuICAgIHBlcmZvcm1hbmNlQ2xpZW50LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuSW5pdGlhbGl6ZVNpbGVudFJlcXVlc3QsIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICBjb25zdCBiYXNlUmVxdWVzdCA9IGF3YWl0IGludm9rZUFzeW5jKGluaXRpYWxpemVCYXNlUmVxdWVzdCwgUGVyZm9ybWFuY2VFdmVudHMuSW5pdGlhbGl6ZUJhc2VSZXF1ZXN0LCBsb2dnZXIsIHBlcmZvcm1hbmNlQ2xpZW50LCByZXF1ZXN0LmNvcnJlbGF0aW9uSWQpKHJlcXVlc3QsIGNvbmZpZywgcGVyZm9ybWFuY2VDbGllbnQsIGxvZ2dlcik7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIC4uLnJlcXVlc3QsXHJcbiAgICAgICAgLi4uYmFzZVJlcXVlc3QsXHJcbiAgICAgICAgYWNjb3VudDogYWNjb3VudCxcclxuICAgICAgICBmb3JjZVJlZnJlc2g6IHJlcXVlc3QuZm9yY2VSZWZyZXNoIHx8IGZhbHNlLFxyXG4gICAgfTtcclxufVxuXG5leHBvcnQgeyBpbml0aWFsaXplQmFzZVJlcXVlc3QsIGluaXRpYWxpemVTaWxlbnRSZXF1ZXN0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZXF1ZXN0SGVscGVycy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deserializeResponse: () => (/* binding */ deserializeResponse),\n/* harmony export */   validateInteractionType: () => (/* binding */ validateInteractionType)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/BrowserProtocolUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction deserializeResponse(responseString, responseLocation, logger) {\r\n    // Deserialize hash fragment response parameters.\r\n    const serverParams = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.getDeserializedResponse(responseString);\r\n    if (!serverParams) {\r\n        if (!_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.stripLeadingHashOrQuery(responseString)) {\r\n            // Hash or Query string is empty\r\n            logger.error(`The request has returned to the redirectUri but a ${responseLocation} is not present. It's likely that the ${responseLocation} has been removed or the page has been redirected by code running on the redirectUri page.`);\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.hashEmptyError);\r\n        }\r\n        else {\r\n            logger.error(`A ${responseLocation} is present in the iframe but it does not contain known properties. It's likely that the ${responseLocation} has been replaced by code running on the redirectUri page.`);\r\n            logger.errorPii(`The ${responseLocation} detected is: ${responseString}`);\r\n            throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.hashDoesNotContainKnownProperties);\r\n        }\r\n    }\r\n    return serverParams;\r\n}\r\n/**\r\n * Returns the interaction type that the response object belongs to\r\n */\r\nfunction validateInteractionType(response, browserCrypto, interactionType) {\r\n    if (!response.state) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noStateInHash);\r\n    }\r\n    const platformStateObj = (0,_utils_BrowserProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.extractBrowserRequestState)(browserCrypto, response.state);\r\n    if (!platformStateObj) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.unableToParseState);\r\n    }\r\n    if (platformStateObj.interactionType !== interactionType) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.stateInteractionTypeMismatch);\r\n    }\r\n}\n\n\n//# sourceMappingURL=ResponseHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3Jlc3BvbnNlL1Jlc3BvbnNlSGFuZGxlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUN5QztBQUNpQjtBQUNRO0FBQ3lGOztBQUV4SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsK0VBQWdDO0FBQ3pEO0FBQ0EsYUFBYSwrRUFBZ0M7QUFDN0M7QUFDQSw4RUFBOEUsa0JBQWtCLHVDQUF1QyxrQkFBa0I7QUFDekosa0JBQWtCLG1GQUFzQixDQUFDLDRFQUFjO0FBQ3ZEO0FBQ0E7QUFDQSw4QkFBOEIsa0JBQWtCLDBGQUEwRixrQkFBa0I7QUFDNUosbUNBQW1DLGtCQUFrQixlQUFlLGVBQWU7QUFDbkYsa0JBQWtCLG1GQUFzQixDQUFDLCtGQUFpQztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLG1GQUFzQixDQUFDLDJFQUFhO0FBQ2xEO0FBQ0EsNkJBQTZCLDJGQUEwQjtBQUN2RDtBQUNBLGNBQWMsbUZBQXNCLENBQUMsZ0ZBQWtCO0FBQ3ZEO0FBQ0E7QUFDQSxjQUFjLG1GQUFzQixDQUFDLDBGQUE0QjtBQUNqRTtBQUNBOztBQUV3RDtBQUN4RCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3Jlc3BvbnNlL1Jlc3BvbnNlSGFuZGxlci5tanM/N2YzZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtYnJvd3NlciB2My4yNC4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFVybFV0aWxzIH0gZnJvbSAnQGF6dXJlL21zYWwtY29tbW9uL2Jyb3dzZXInO1xuaW1wb3J0IHsgY3JlYXRlQnJvd3NlckF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IGV4dHJhY3RCcm93c2VyUmVxdWVzdFN0YXRlIH0gZnJvbSAnLi4vdXRpbHMvQnJvd3NlclByb3RvY29sVXRpbHMubWpzJztcbmltcG9ydCB7IGhhc2hFbXB0eUVycm9yLCBoYXNoRG9lc05vdENvbnRhaW5Lbm93blByb3BlcnRpZXMsIG5vU3RhdGVJbkhhc2gsIHVuYWJsZVRvUGFyc2VTdGF0ZSwgc3RhdGVJbnRlcmFjdGlvblR5cGVNaXNtYXRjaCB9IGZyb20gJy4uL2Vycm9yL0Jyb3dzZXJBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuZnVuY3Rpb24gZGVzZXJpYWxpemVSZXNwb25zZShyZXNwb25zZVN0cmluZywgcmVzcG9uc2VMb2NhdGlvbiwgbG9nZ2VyKSB7XHJcbiAgICAvLyBEZXNlcmlhbGl6ZSBoYXNoIGZyYWdtZW50IHJlc3BvbnNlIHBhcmFtZXRlcnMuXHJcbiAgICBjb25zdCBzZXJ2ZXJQYXJhbXMgPSBVcmxVdGlscy5nZXREZXNlcmlhbGl6ZWRSZXNwb25zZShyZXNwb25zZVN0cmluZyk7XHJcbiAgICBpZiAoIXNlcnZlclBhcmFtcykge1xyXG4gICAgICAgIGlmICghVXJsVXRpbHMuc3RyaXBMZWFkaW5nSGFzaE9yUXVlcnkocmVzcG9uc2VTdHJpbmcpKSB7XHJcbiAgICAgICAgICAgIC8vIEhhc2ggb3IgUXVlcnkgc3RyaW5nIGlzIGVtcHR5XHJcbiAgICAgICAgICAgIGxvZ2dlci5lcnJvcihgVGhlIHJlcXVlc3QgaGFzIHJldHVybmVkIHRvIHRoZSByZWRpcmVjdFVyaSBidXQgYSAke3Jlc3BvbnNlTG9jYXRpb259IGlzIG5vdCBwcmVzZW50LiBJdCdzIGxpa2VseSB0aGF0IHRoZSAke3Jlc3BvbnNlTG9jYXRpb259IGhhcyBiZWVuIHJlbW92ZWQgb3IgdGhlIHBhZ2UgaGFzIGJlZW4gcmVkaXJlY3RlZCBieSBjb2RlIHJ1bm5pbmcgb24gdGhlIHJlZGlyZWN0VXJpIHBhZ2UuYCk7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3IoaGFzaEVtcHR5RXJyb3IpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGBBICR7cmVzcG9uc2VMb2NhdGlvbn0gaXMgcHJlc2VudCBpbiB0aGUgaWZyYW1lIGJ1dCBpdCBkb2VzIG5vdCBjb250YWluIGtub3duIHByb3BlcnRpZXMuIEl0J3MgbGlrZWx5IHRoYXQgdGhlICR7cmVzcG9uc2VMb2NhdGlvbn0gaGFzIGJlZW4gcmVwbGFjZWQgYnkgY29kZSBydW5uaW5nIG9uIHRoZSByZWRpcmVjdFVyaSBwYWdlLmApO1xyXG4gICAgICAgICAgICBsb2dnZXIuZXJyb3JQaWkoYFRoZSAke3Jlc3BvbnNlTG9jYXRpb259IGRldGVjdGVkIGlzOiAke3Jlc3BvbnNlU3RyaW5nfWApO1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKGhhc2hEb2VzTm90Q29udGFpbktub3duUHJvcGVydGllcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHNlcnZlclBhcmFtcztcclxufVxyXG4vKipcclxuICogUmV0dXJucyB0aGUgaW50ZXJhY3Rpb24gdHlwZSB0aGF0IHRoZSByZXNwb25zZSBvYmplY3QgYmVsb25ncyB0b1xyXG4gKi9cclxuZnVuY3Rpb24gdmFsaWRhdGVJbnRlcmFjdGlvblR5cGUocmVzcG9uc2UsIGJyb3dzZXJDcnlwdG8sIGludGVyYWN0aW9uVHlwZSkge1xyXG4gICAgaWYgKCFyZXNwb25zZS5zdGF0ZSkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUJyb3dzZXJBdXRoRXJyb3Iobm9TdGF0ZUluSGFzaCk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBwbGF0Zm9ybVN0YXRlT2JqID0gZXh0cmFjdEJyb3dzZXJSZXF1ZXN0U3RhdGUoYnJvd3NlckNyeXB0bywgcmVzcG9uc2Uuc3RhdGUpO1xyXG4gICAgaWYgKCFwbGF0Zm9ybVN0YXRlT2JqKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQnJvd3NlckF1dGhFcnJvcih1bmFibGVUb1BhcnNlU3RhdGUpO1xyXG4gICAgfVxyXG4gICAgaWYgKHBsYXRmb3JtU3RhdGVPYmouaW50ZXJhY3Rpb25UeXBlICE9PSBpbnRlcmFjdGlvblR5cGUpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVCcm93c2VyQXV0aEVycm9yKHN0YXRlSW50ZXJhY3Rpb25UeXBlTWlzbWF0Y2gpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IGRlc2VyaWFsaXplUmVzcG9uc2UsIHZhbGlkYXRlSW50ZXJhY3Rpb25UeXBlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZXNwb25zZUhhbmRsZXIubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiId: () => (/* binding */ ApiId),\n/* harmony export */   BROWSER_PERF_ENABLED_KEY: () => (/* binding */ BROWSER_PERF_ENABLED_KEY),\n/* harmony export */   BrowserCacheLocation: () => (/* binding */ BrowserCacheLocation),\n/* harmony export */   BrowserConstants: () => (/* binding */ BrowserConstants),\n/* harmony export */   CacheLookupPolicy: () => (/* binding */ CacheLookupPolicy),\n/* harmony export */   DB_NAME: () => (/* binding */ DB_NAME),\n/* harmony export */   DB_TABLE_NAME: () => (/* binding */ DB_TABLE_NAME),\n/* harmony export */   DB_VERSION: () => (/* binding */ DB_VERSION),\n/* harmony export */   DEFAULT_REQUEST: () => (/* binding */ DEFAULT_REQUEST),\n/* harmony export */   HTTP_REQUEST_TYPE: () => (/* binding */ HTTP_REQUEST_TYPE),\n/* harmony export */   InMemoryCacheKeys: () => (/* binding */ InMemoryCacheKeys),\n/* harmony export */   InteractionStatus: () => (/* binding */ InteractionStatus),\n/* harmony export */   InteractionType: () => (/* binding */ InteractionType),\n/* harmony export */   KEY_FORMAT_JWK: () => (/* binding */ KEY_FORMAT_JWK),\n/* harmony export */   LOG_LEVEL_CACHE_KEY: () => (/* binding */ LOG_LEVEL_CACHE_KEY),\n/* harmony export */   LOG_PII_CACHE_KEY: () => (/* binding */ LOG_PII_CACHE_KEY),\n/* harmony export */   NativeConstants: () => (/* binding */ NativeConstants),\n/* harmony export */   NativeExtensionMethod: () => (/* binding */ NativeExtensionMethod),\n/* harmony export */   StaticCacheKeys: () => (/* binding */ StaticCacheKeys),\n/* harmony export */   TemporaryCacheKeys: () => (/* binding */ TemporaryCacheKeys),\n/* harmony export */   WrapperSKU: () => (/* binding */ WrapperSKU),\n/* harmony export */   iFrameRenewalPolicies: () => (/* binding */ iFrameRenewalPolicies)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Constants\r\n */\r\nconst BrowserConstants = {\r\n    /**\r\n     * Interaction in progress cache value\r\n     */\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    /**\r\n     * Invalid grant error code\r\n     */\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    /**\r\n     * Default popup window width\r\n     */\r\n    POPUP_WIDTH: 483,\r\n    /**\r\n     * Default popup window height\r\n     */\r\n    POPUP_HEIGHT: 600,\r\n    /**\r\n     * Name of the popup window starts with\r\n     */\r\n    POPUP_NAME_PREFIX: \"msal\",\r\n    /**\r\n     * Default popup monitor poll interval in milliseconds\r\n     */\r\n    DEFAULT_POLL_INTERVAL_MS: 30,\r\n    /**\r\n     * Msal-browser SKU\r\n     */\r\n    MSAL_SKU: \"msal.js.browser\",\r\n};\r\nconst NativeConstants = {\r\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\r\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\r\n    MATS_TELEMETRY: \"MATS\",\r\n};\r\nconst NativeExtensionMethod = {\r\n    HandshakeRequest: \"Handshake\",\r\n    HandshakeResponse: \"HandshakeResponse\",\r\n    GetToken: \"GetToken\",\r\n    Response: \"Response\",\r\n};\r\nconst BrowserCacheLocation = {\r\n    LocalStorage: \"localStorage\",\r\n    SessionStorage: \"sessionStorage\",\r\n    MemoryStorage: \"memoryStorage\",\r\n};\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nconst HTTP_REQUEST_TYPE = {\r\n    GET: \"GET\",\r\n    POST: \"POST\",\r\n};\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nconst TemporaryCacheKeys = {\r\n    AUTHORITY: \"authority\",\r\n    ACQUIRE_TOKEN_ACCOUNT: \"acquireToken.account\",\r\n    SESSION_STATE: \"session.state\",\r\n    REQUEST_STATE: \"request.state\",\r\n    NONCE_IDTOKEN: \"nonce.id_token\",\r\n    ORIGIN_URI: \"request.origin\",\r\n    RENEW_STATUS: \"token.renew.status\",\r\n    URL_HASH: \"urlHash\",\r\n    REQUEST_PARAMS: \"request.params\",\r\n    SCOPES: \"scopes\",\r\n    INTERACTION_STATUS_KEY: \"interaction.status\",\r\n    CCS_CREDENTIAL: \"ccs.credential\",\r\n    CORRELATION_ID: \"request.correlationId\",\r\n    NATIVE_REQUEST: \"request.native\",\r\n    REDIRECT_CONTEXT: \"request.redirect.context\",\r\n};\r\nconst StaticCacheKeys = {\r\n    ACCOUNT_KEYS: \"msal.account.keys\",\r\n    TOKEN_KEYS: \"msal.token.keys\",\r\n};\r\n/**\r\n * Cache keys stored in-memory\r\n */\r\nconst InMemoryCacheKeys = {\r\n    WRAPPER_SKU: \"wrapper.sku\",\r\n    WRAPPER_VER: \"wrapper.version\",\r\n};\r\n/**\r\n * API Codes for Telemetry purposes.\r\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\r\n * 0-99 Silent Flow\r\n * 800-899 Auth Code Flow\r\n */\r\nconst ApiId = {\r\n    acquireTokenRedirect: 861,\r\n    acquireTokenPopup: 862,\r\n    ssoSilent: 863,\r\n    acquireTokenSilent_authCode: 864,\r\n    handleRedirectPromise: 865,\r\n    acquireTokenByCode: 866,\r\n    acquireTokenSilent_silentFlow: 61,\r\n    logout: 961,\r\n    logoutPopup: 962,\r\n};\r\n/*\r\n * Interaction type of the API - used for state and telemetry\r\n */\r\nvar InteractionType;\r\n(function (InteractionType) {\r\n    InteractionType[\"Redirect\"] = \"redirect\";\r\n    InteractionType[\"Popup\"] = \"popup\";\r\n    InteractionType[\"Silent\"] = \"silent\";\r\n    InteractionType[\"None\"] = \"none\";\r\n})(InteractionType || (InteractionType = {}));\r\n/**\r\n * Types of interaction currently in progress.\r\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\r\n */\r\nconst InteractionStatus = {\r\n    /**\r\n     * Initial status before interaction occurs\r\n     */\r\n    Startup: \"startup\",\r\n    /**\r\n     * Status set when all login calls occuring\r\n     */\r\n    Login: \"login\",\r\n    /**\r\n     * Status set when logout call occuring\r\n     */\r\n    Logout: \"logout\",\r\n    /**\r\n     * Status set for acquireToken calls\r\n     */\r\n    AcquireToken: \"acquireToken\",\r\n    /**\r\n     * Status set for ssoSilent calls\r\n     */\r\n    SsoSilent: \"ssoSilent\",\r\n    /**\r\n     * Status set when handleRedirect in progress\r\n     */\r\n    HandleRedirect: \"handleRedirect\",\r\n    /**\r\n     * Status set when interaction is complete\r\n     */\r\n    None: \"none\",\r\n};\r\nconst DEFAULT_REQUEST = {\r\n    scopes: _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.OIDC_DEFAULT_SCOPES,\r\n};\r\n/**\r\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\r\n */\r\nconst KEY_FORMAT_JWK = \"jwk\";\r\n// Supported wrapper SKUs\r\nconst WrapperSKU = {\r\n    React: \"@azure/msal-react\",\r\n    Angular: \"@azure/msal-angular\",\r\n};\r\n// DatabaseStorage Constants\r\nconst DB_NAME = \"msal.db\";\r\nconst DB_VERSION = 1;\r\nconst DB_TABLE_NAME = `${DB_NAME}.keys`;\r\nconst CacheLookupPolicy = {\r\n    /*\r\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired\r\n     * or cannot be found the refresh token will be used to acquire a new one. Finally, if the refresh token\r\n     * is expired acquireTokenSilent will attempt to acquire new access and refresh tokens.\r\n     */\r\n    Default: 0,\r\n    /*\r\n     * acquireTokenSilent will only look for access tokens in the cache. It will not attempt to renew access or\r\n     * refresh tokens.\r\n     */\r\n    AccessToken: 1,\r\n    /*\r\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired or\r\n     * cannot be found, the refresh token will be used to acquire a new one. If the refresh token is expired, it\r\n     * will not be renewed and acquireTokenSilent will fail.\r\n     */\r\n    AccessTokenAndRefreshToken: 2,\r\n    /*\r\n     * acquireTokenSilent will not attempt to retrieve access tokens from the cache and will instead attempt to\r\n     * exchange the cached refresh token for a new access token. If the refresh token is expired, it will not be\r\n     * renewed and acquireTokenSilent will fail.\r\n     */\r\n    RefreshToken: 3,\r\n    /*\r\n     * acquireTokenSilent will not look in the cache for the access token. It will go directly to network with the\r\n     * cached refresh token. If the refresh token is expired an attempt will be made to renew it. This is equivalent to\r\n     * setting \"forceRefresh: true\".\r\n     */\r\n    RefreshTokenAndNetwork: 4,\r\n    /*\r\n     * acquireTokenSilent will attempt to renew both access and refresh tokens. It will not look in the cache. This will\r\n     * always fail if 3rd party cookies are blocked by the browser.\r\n     */\r\n    Skip: 5,\r\n};\r\nconst iFrameRenewalPolicies = [\r\n    CacheLookupPolicy.Default,\r\n    CacheLookupPolicy.Skip,\r\n    CacheLookupPolicy.RefreshTokenAndNetwork,\r\n];\r\nconst LOG_LEVEL_CACHE_KEY = \"msal.browser.log.level\";\r\nconst LOG_PII_CACHE_KEY = \"msal.browser.log.pii\";\r\nconst BROWSER_PERF_ENABLED_KEY = \"msal.browser.performance.enabled\";\n\n\n//# sourceMappingURL=BrowserConstants.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractBrowserRequestState: () => (/* binding */ extractBrowserRequestState)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Extracts the BrowserStateObject from the state string.\r\n * @param browserCrypto\r\n * @param state\r\n */\r\nfunction extractBrowserRequestState(browserCrypto, state) {\r\n    if (!state) {\r\n        return null;\r\n    }\r\n    try {\r\n        const requestStateObj = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.ProtocolUtils.parseRequestState(browserCrypto, state);\r\n        return requestStateObj.libraryState.meta;\r\n    }\r\n    catch (e) {\r\n        throw (0,_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.invalidState);\r\n    }\r\n}\n\n\n//# sourceMappingURL=BrowserProtocolUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3V0aWxzL0Jyb3dzZXJQcm90b2NvbFV0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUMyRjs7QUFFeEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxxRUFBYTtBQUM3QztBQUNBO0FBQ0E7QUFDQSxjQUFjLGlGQUFxQixDQUFDLG9FQUFpQztBQUNyRTtBQUNBOztBQUVzQztBQUN0QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtYnJvd3Nlci9kaXN0L3V0aWxzL0Jyb3dzZXJQcm90b2NvbFV0aWxzLm1qcz9lYmQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1icm93c2VyIHYzLjI0LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgUHJvdG9jb2xVdGlscywgY3JlYXRlQ2xpZW50QXV0aEVycm9yLCBDbGllbnRBdXRoRXJyb3JDb2RlcyB9IGZyb20gJ0BhenVyZS9tc2FsLWNvbW1vbi9icm93c2VyJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBFeHRyYWN0cyB0aGUgQnJvd3NlclN0YXRlT2JqZWN0IGZyb20gdGhlIHN0YXRlIHN0cmluZy5cclxuICogQHBhcmFtIGJyb3dzZXJDcnlwdG9cclxuICogQHBhcmFtIHN0YXRlXHJcbiAqL1xyXG5mdW5jdGlvbiBleHRyYWN0QnJvd3NlclJlcXVlc3RTdGF0ZShicm93c2VyQ3J5cHRvLCBzdGF0ZSkge1xyXG4gICAgaWYgKCFzdGF0ZSkge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCByZXF1ZXN0U3RhdGVPYmogPSBQcm90b2NvbFV0aWxzLnBhcnNlUmVxdWVzdFN0YXRlKGJyb3dzZXJDcnlwdG8sIHN0YXRlKTtcclxuICAgICAgICByZXR1cm4gcmVxdWVzdFN0YXRlT2JqLmxpYnJhcnlTdGF0ZS5tZXRhO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoQ2xpZW50QXV0aEVycm9yQ29kZXMuaW52YWxpZFN0YXRlKTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBleHRyYWN0QnJvd3NlclJlcXVlc3RTdGF0ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QnJvd3NlclByb3RvY29sVXRpbHMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   blockAPICallsBeforeInitialize: () => (/* binding */ blockAPICallsBeforeInitialize),\n/* harmony export */   blockAcquireTokenInPopups: () => (/* binding */ blockAcquireTokenInPopups),\n/* harmony export */   blockNonBrowserEnvironment: () => (/* binding */ blockNonBrowserEnvironment),\n/* harmony export */   blockRedirectInIframe: () => (/* binding */ blockRedirectInIframe),\n/* harmony export */   blockReloadInHiddenIframes: () => (/* binding */ blockReloadInHiddenIframes),\n/* harmony export */   clearHash: () => (/* binding */ clearHash),\n/* harmony export */   createGuid: () => (/* binding */ createGuid),\n/* harmony export */   getCurrentUri: () => (/* binding */ getCurrentUri),\n/* harmony export */   getHomepage: () => (/* binding */ getHomepage),\n/* harmony export */   invoke: () => (/* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invoke),\n/* harmony export */   invokeAsync: () => (/* reexport safe */ _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__.invokeAsync),\n/* harmony export */   isInIframe: () => (/* binding */ isInIframe),\n/* harmony export */   isInPopup: () => (/* binding */ isInPopup),\n/* harmony export */   preconnect: () => (/* binding */ preconnect),\n/* harmony export */   preflightCheck: () => (/* binding */ preflightCheck),\n/* harmony export */   redirectPreflightCheck: () => (/* binding */ redirectPreflightCheck),\n/* harmony export */   replaceHash: () => (/* binding */ replaceHash)\n/* harmony export */ });\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @azure/msal-common/browser */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/BrowserAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs\");\n/* harmony import */ var _BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./BrowserConstants.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs\");\n/* harmony import */ var _crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../crypto/BrowserCrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs\");\n/* harmony import */ var _error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/BrowserAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs\");\n/* harmony import */ var _error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/BrowserConfigurationAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs\");\n/*! @azure/msal-browser v3.24.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Clears hash from window url.\r\n */\r\nfunction clearHash(contentWindow) {\r\n    // Office.js sets history.replaceState to null\r\n    contentWindow.location.hash = \"\";\r\n    if (typeof contentWindow.history.replaceState === \"function\") {\r\n        // Full removes \"#\" from url\r\n        contentWindow.history.replaceState(null, \"\", `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`);\r\n    }\r\n}\r\n/**\r\n * Replaces current hash with hash from provided url\r\n */\r\nfunction replaceHash(url) {\r\n    const urlParts = url.split(\"#\");\r\n    urlParts.shift(); // Remove part before the hash\r\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\r\n}\r\n/**\r\n * Returns boolean of whether the current window is in an iframe or not.\r\n */\r\nfunction isInIframe() {\r\n    return window.parent !== window;\r\n}\r\n/**\r\n * Returns boolean of whether or not the current window is a popup opened by msal\r\n */\r\nfunction isInPopup() {\r\n    return (typeof window !== \"undefined\" &&\r\n        !!window.opener &&\r\n        window.opener !== window &&\r\n        typeof window.name === \"string\" &&\r\n        window.name.indexOf(`${_BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserConstants.POPUP_NAME_PREFIX}.`) === 0);\r\n}\r\n// #endregion\r\n/**\r\n * Returns current window URL as redirect uri\r\n */\r\nfunction getCurrentUri() {\r\n    return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n}\r\n/**\r\n * Gets the homepage url for the current window location.\r\n */\r\nfunction getHomepage() {\r\n    const currentUrl = new _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.UrlString(window.location.href);\r\n    const urlComponents = currentUrl.getUrlComponents();\r\n    return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\r\n}\r\n/**\r\n * Throws error if we have completed an auth and are\r\n * attempting another auth request inside an iframe.\r\n */\r\nfunction blockReloadInHiddenIframes() {\r\n    const isResponseHash = _azure_msal_common_browser__WEBPACK_IMPORTED_MODULE_2__.UrlString.hashContainsKnownProperties(window.location.hash);\r\n    // return an error if called from the hidden iframe created by the msal js silent calls\r\n    if (isResponseHash && isInIframe()) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.blockIframeReload);\r\n    }\r\n}\r\n/**\r\n * Block redirect operations in iframes unless explicitly allowed\r\n * @param interactionType Interaction type for the request\r\n * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\r\n */\r\nfunction blockRedirectInIframe(allowRedirectInIframe) {\r\n    if (isInIframe() && !allowRedirectInIframe) {\r\n        // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.redirectInIframe);\r\n    }\r\n}\r\n/**\r\n * Block redirectUri loaded in popup from calling AcquireToken APIs\r\n */\r\nfunction blockAcquireTokenInPopups() {\r\n    // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\r\n    if (isInPopup()) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.blockNestedPopups);\r\n    }\r\n}\r\n/**\r\n * Throws error if token requests are made in non-browser environment\r\n * @param isBrowserEnvironment Flag indicating if environment is a browser.\r\n */\r\nfunction blockNonBrowserEnvironment() {\r\n    if (typeof window === \"undefined\") {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.nonBrowserEnvironment);\r\n    }\r\n}\r\n/**\r\n * Throws error if initialize hasn't been called\r\n * @param initialized\r\n */\r\nfunction blockAPICallsBeforeInitialize(initialized) {\r\n    if (!initialized) {\r\n        throw (0,_error_BrowserAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createBrowserAuthError)(_error_BrowserAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.uninitializedPublicClientApplication);\r\n    }\r\n}\r\n/**\r\n * Helper to validate app environment before making an auth request\r\n * @param initialized\r\n */\r\nfunction preflightCheck(initialized) {\r\n    // Block request if not in browser environment\r\n    blockNonBrowserEnvironment();\r\n    // Block auth requests inside a hidden iframe\r\n    blockReloadInHiddenIframes();\r\n    // Block redirectUri opened in a popup from calling MSAL APIs\r\n    blockAcquireTokenInPopups();\r\n    // Block token acquisition before initialize has been called\r\n    blockAPICallsBeforeInitialize(initialized);\r\n}\r\n/**\r\n * Helper to validate app enviornment before making redirect request\r\n * @param initialized\r\n * @param config\r\n */\r\nfunction redirectPreflightCheck(initialized, config) {\r\n    preflightCheck(initialized);\r\n    blockRedirectInIframe(config.system.allowRedirectInIframe);\r\n    // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\r\n    if (config.cache.cacheLocation === _BrowserConstants_mjs__WEBPACK_IMPORTED_MODULE_1__.BrowserCacheLocation.MemoryStorage &&\r\n        !config.cache.storeAuthStateInCookie) {\r\n        throw (0,_error_BrowserConfigurationAuthError_mjs__WEBPACK_IMPORTED_MODULE_5__.createBrowserConfigurationAuthError)(_error_BrowserConfigurationAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.inMemRedirectUnavailable);\r\n    }\r\n}\r\n/**\r\n * Adds a preconnect link element to the header which begins DNS resolution and SSL connection in anticipation of the /token request\r\n * @param loginDomain Authority domain, including https protocol e.g. https://login.microsoftonline.com\r\n * @returns\r\n */\r\nfunction preconnect(authority) {\r\n    const link = document.createElement(\"link\");\r\n    link.rel = \"preconnect\";\r\n    link.href = new URL(authority).origin;\r\n    link.crossOrigin = \"anonymous\";\r\n    document.head.appendChild(link);\r\n    // The browser will close connection if not used within a few seconds, remove element from the header after 10s\r\n    window.setTimeout(() => {\r\n        try {\r\n            document.head.removeChild(link);\r\n        }\r\n        catch { }\r\n    }, 10000); // 10s Timeout\r\n}\r\n/**\r\n * Wrapper function that creates a UUID v7 from the current timestamp.\r\n * @returns {string}\r\n */\r\nfunction createGuid() {\r\n    return (0,_crypto_BrowserCrypto_mjs__WEBPACK_IMPORTED_MODULE_7__.createNewGuid)();\r\n}\n\n\n//# sourceMappingURL=BrowserUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildTenantProfile: () => (/* binding */ buildTenantProfile),\n/* harmony export */   tenantIdMatchesHomeTenant: () => (/* binding */ tenantIdMatchesHomeTenant),\n/* harmony export */   updateAccountTenantProfileData: () => (/* binding */ updateAccountTenantProfileData)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Returns true if tenantId matches the utid portion of homeAccountId\r\n * @param tenantId\r\n * @param homeAccountId\r\n * @returns\r\n */\r\nfunction tenantIdMatchesHomeTenant(tenantId, homeAccountId) {\r\n    return (!!tenantId &&\r\n        !!homeAccountId &&\r\n        tenantId === homeAccountId.split(\".\")[1]);\r\n}\r\n/**\r\n * Build tenant profile\r\n * @param homeAccountId - Home account identifier for this account object\r\n * @param localAccountId - Local account identifer for this account object\r\n * @param tenantId - Full tenant or organizational id that this account belongs to\r\n * @param idTokenClaims - Claims from the ID token\r\n * @returns\r\n */\r\nfunction buildTenantProfile(homeAccountId, localAccountId, tenantId, idTokenClaims) {\r\n    if (idTokenClaims) {\r\n        const { oid, sub, tid, name, tfp, acr } = idTokenClaims;\r\n        /**\r\n         * Since there is no way to determine if the authority is AAD or B2C, we exhaust all the possible claims that can serve as tenant ID with the following precedence:\r\n         * tid - TenantID claim that identifies the tenant that issued the token in AAD. Expected in all AAD ID tokens, not present in B2C ID Tokens.\r\n         * tfp - Trust Framework Policy claim that identifies the policy that was used to authenticate the user. Functions as tenant for B2C scenarios.\r\n         * acr - Authentication Context Class Reference claim used only with older B2C policies. Fallback in case tfp is not present, but likely won't be present anyway.\r\n         */\r\n        const tenantId = tid || tfp || acr || \"\";\r\n        return {\r\n            tenantId: tenantId,\r\n            localAccountId: oid || sub || \"\",\r\n            name: name,\r\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            tenantId,\r\n            localAccountId,\r\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\r\n        };\r\n    }\r\n}\r\n/**\r\n * Replaces account info that varies by tenant profile sourced from the ID token claims passed in with the tenant-specific account info\r\n * @param baseAccountInfo\r\n * @param idTokenClaims\r\n * @returns\r\n */\r\nfunction updateAccountTenantProfileData(baseAccountInfo, tenantProfile, idTokenClaims, idTokenSecret) {\r\n    let updatedAccountInfo = baseAccountInfo;\r\n    // Tenant Profile overrides passed in account info\r\n    if (tenantProfile) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { isHomeTenant, ...tenantProfileOverride } = tenantProfile;\r\n        updatedAccountInfo = { ...baseAccountInfo, ...tenantProfileOverride };\r\n    }\r\n    // ID token claims override passed in account info and tenant profile\r\n    if (idTokenClaims) {\r\n        // Ignore isHomeTenant, loginHint, and sid which are part of tenant profile but not base account info\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { isHomeTenant, ...claimsSourcedTenantProfile } = buildTenantProfile(baseAccountInfo.homeAccountId, baseAccountInfo.localAccountId, baseAccountInfo.tenantId, idTokenClaims);\r\n        updatedAccountInfo = {\r\n            ...updatedAccountInfo,\r\n            ...claimsSourcedTenantProfile,\r\n            idTokenClaims: idTokenClaims,\r\n            idToken: idTokenSecret,\r\n        };\r\n        return updatedAccountInfo;\r\n    }\r\n    return updatedAccountInfo;\r\n}\n\n\n//# sourceMappingURL=AccountInfo.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9BY2NvdW50SW5mby5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGdDQUFnQztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IseUNBQXlDO0FBQ3pELCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDhDQUE4QztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFeUY7QUFDekYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2FjY291bnQvQWNjb3VudEluZm8ubWpzPzFmYmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFJldHVybnMgdHJ1ZSBpZiB0ZW5hbnRJZCBtYXRjaGVzIHRoZSB1dGlkIHBvcnRpb24gb2YgaG9tZUFjY291bnRJZFxyXG4gKiBAcGFyYW0gdGVuYW50SWRcclxuICogQHBhcmFtIGhvbWVBY2NvdW50SWRcclxuICogQHJldHVybnNcclxuICovXHJcbmZ1bmN0aW9uIHRlbmFudElkTWF0Y2hlc0hvbWVUZW5hbnQodGVuYW50SWQsIGhvbWVBY2NvdW50SWQpIHtcclxuICAgIHJldHVybiAoISF0ZW5hbnRJZCAmJlxyXG4gICAgICAgICEhaG9tZUFjY291bnRJZCAmJlxyXG4gICAgICAgIHRlbmFudElkID09PSBob21lQWNjb3VudElkLnNwbGl0KFwiLlwiKVsxXSk7XHJcbn1cclxuLyoqXHJcbiAqIEJ1aWxkIHRlbmFudCBwcm9maWxlXHJcbiAqIEBwYXJhbSBob21lQWNjb3VudElkIC0gSG9tZSBhY2NvdW50IGlkZW50aWZpZXIgZm9yIHRoaXMgYWNjb3VudCBvYmplY3RcclxuICogQHBhcmFtIGxvY2FsQWNjb3VudElkIC0gTG9jYWwgYWNjb3VudCBpZGVudGlmZXIgZm9yIHRoaXMgYWNjb3VudCBvYmplY3RcclxuICogQHBhcmFtIHRlbmFudElkIC0gRnVsbCB0ZW5hbnQgb3Igb3JnYW5pemF0aW9uYWwgaWQgdGhhdCB0aGlzIGFjY291bnQgYmVsb25ncyB0b1xyXG4gKiBAcGFyYW0gaWRUb2tlbkNsYWltcyAtIENsYWltcyBmcm9tIHRoZSBJRCB0b2tlblxyXG4gKiBAcmV0dXJuc1xyXG4gKi9cclxuZnVuY3Rpb24gYnVpbGRUZW5hbnRQcm9maWxlKGhvbWVBY2NvdW50SWQsIGxvY2FsQWNjb3VudElkLCB0ZW5hbnRJZCwgaWRUb2tlbkNsYWltcykge1xyXG4gICAgaWYgKGlkVG9rZW5DbGFpbXMpIHtcclxuICAgICAgICBjb25zdCB7IG9pZCwgc3ViLCB0aWQsIG5hbWUsIHRmcCwgYWNyIH0gPSBpZFRva2VuQ2xhaW1zO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFNpbmNlIHRoZXJlIGlzIG5vIHdheSB0byBkZXRlcm1pbmUgaWYgdGhlIGF1dGhvcml0eSBpcyBBQUQgb3IgQjJDLCB3ZSBleGhhdXN0IGFsbCB0aGUgcG9zc2libGUgY2xhaW1zIHRoYXQgY2FuIHNlcnZlIGFzIHRlbmFudCBJRCB3aXRoIHRoZSBmb2xsb3dpbmcgcHJlY2VkZW5jZTpcclxuICAgICAgICAgKiB0aWQgLSBUZW5hbnRJRCBjbGFpbSB0aGF0IGlkZW50aWZpZXMgdGhlIHRlbmFudCB0aGF0IGlzc3VlZCB0aGUgdG9rZW4gaW4gQUFELiBFeHBlY3RlZCBpbiBhbGwgQUFEIElEIHRva2Vucywgbm90IHByZXNlbnQgaW4gQjJDIElEIFRva2Vucy5cclxuICAgICAgICAgKiB0ZnAgLSBUcnVzdCBGcmFtZXdvcmsgUG9saWN5IGNsYWltIHRoYXQgaWRlbnRpZmllcyB0aGUgcG9saWN5IHRoYXQgd2FzIHVzZWQgdG8gYXV0aGVudGljYXRlIHRoZSB1c2VyLiBGdW5jdGlvbnMgYXMgdGVuYW50IGZvciBCMkMgc2NlbmFyaW9zLlxyXG4gICAgICAgICAqIGFjciAtIEF1dGhlbnRpY2F0aW9uIENvbnRleHQgQ2xhc3MgUmVmZXJlbmNlIGNsYWltIHVzZWQgb25seSB3aXRoIG9sZGVyIEIyQyBwb2xpY2llcy4gRmFsbGJhY2sgaW4gY2FzZSB0ZnAgaXMgbm90IHByZXNlbnQsIGJ1dCBsaWtlbHkgd29uJ3QgYmUgcHJlc2VudCBhbnl3YXkuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgY29uc3QgdGVuYW50SWQgPSB0aWQgfHwgdGZwIHx8IGFjciB8fCBcIlwiO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHRlbmFudElkOiB0ZW5hbnRJZCxcclxuICAgICAgICAgICAgbG9jYWxBY2NvdW50SWQ6IG9pZCB8fCBzdWIgfHwgXCJcIixcclxuICAgICAgICAgICAgbmFtZTogbmFtZSxcclxuICAgICAgICAgICAgaXNIb21lVGVuYW50OiB0ZW5hbnRJZE1hdGNoZXNIb21lVGVuYW50KHRlbmFudElkLCBob21lQWNjb3VudElkKSxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgdGVuYW50SWQsXHJcbiAgICAgICAgICAgIGxvY2FsQWNjb3VudElkLFxyXG4gICAgICAgICAgICBpc0hvbWVUZW5hbnQ6IHRlbmFudElkTWF0Y2hlc0hvbWVUZW5hbnQodGVuYW50SWQsIGhvbWVBY2NvdW50SWQpLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIFJlcGxhY2VzIGFjY291bnQgaW5mbyB0aGF0IHZhcmllcyBieSB0ZW5hbnQgcHJvZmlsZSBzb3VyY2VkIGZyb20gdGhlIElEIHRva2VuIGNsYWltcyBwYXNzZWQgaW4gd2l0aCB0aGUgdGVuYW50LXNwZWNpZmljIGFjY291bnQgaW5mb1xyXG4gKiBAcGFyYW0gYmFzZUFjY291bnRJbmZvXHJcbiAqIEBwYXJhbSBpZFRva2VuQ2xhaW1zXHJcbiAqIEByZXR1cm5zXHJcbiAqL1xyXG5mdW5jdGlvbiB1cGRhdGVBY2NvdW50VGVuYW50UHJvZmlsZURhdGEoYmFzZUFjY291bnRJbmZvLCB0ZW5hbnRQcm9maWxlLCBpZFRva2VuQ2xhaW1zLCBpZFRva2VuU2VjcmV0KSB7XHJcbiAgICBsZXQgdXBkYXRlZEFjY291bnRJbmZvID0gYmFzZUFjY291bnRJbmZvO1xyXG4gICAgLy8gVGVuYW50IFByb2ZpbGUgb3ZlcnJpZGVzIHBhc3NlZCBpbiBhY2NvdW50IGluZm9cclxuICAgIGlmICh0ZW5hbnRQcm9maWxlKSB7XHJcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgICAgIGNvbnN0IHsgaXNIb21lVGVuYW50LCAuLi50ZW5hbnRQcm9maWxlT3ZlcnJpZGUgfSA9IHRlbmFudFByb2ZpbGU7XHJcbiAgICAgICAgdXBkYXRlZEFjY291bnRJbmZvID0geyAuLi5iYXNlQWNjb3VudEluZm8sIC4uLnRlbmFudFByb2ZpbGVPdmVycmlkZSB9O1xyXG4gICAgfVxyXG4gICAgLy8gSUQgdG9rZW4gY2xhaW1zIG92ZXJyaWRlIHBhc3NlZCBpbiBhY2NvdW50IGluZm8gYW5kIHRlbmFudCBwcm9maWxlXHJcbiAgICBpZiAoaWRUb2tlbkNsYWltcykge1xyXG4gICAgICAgIC8vIElnbm9yZSBpc0hvbWVUZW5hbnQsIGxvZ2luSGludCwgYW5kIHNpZCB3aGljaCBhcmUgcGFydCBvZiB0ZW5hbnQgcHJvZmlsZSBidXQgbm90IGJhc2UgYWNjb3VudCBpbmZvXHJcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xyXG4gICAgICAgIGNvbnN0IHsgaXNIb21lVGVuYW50LCAuLi5jbGFpbXNTb3VyY2VkVGVuYW50UHJvZmlsZSB9ID0gYnVpbGRUZW5hbnRQcm9maWxlKGJhc2VBY2NvdW50SW5mby5ob21lQWNjb3VudElkLCBiYXNlQWNjb3VudEluZm8ubG9jYWxBY2NvdW50SWQsIGJhc2VBY2NvdW50SW5mby50ZW5hbnRJZCwgaWRUb2tlbkNsYWltcyk7XHJcbiAgICAgICAgdXBkYXRlZEFjY291bnRJbmZvID0ge1xyXG4gICAgICAgICAgICAuLi51cGRhdGVkQWNjb3VudEluZm8sXHJcbiAgICAgICAgICAgIC4uLmNsYWltc1NvdXJjZWRUZW5hbnRQcm9maWxlLFxyXG4gICAgICAgICAgICBpZFRva2VuQ2xhaW1zOiBpZFRva2VuQ2xhaW1zLFxyXG4gICAgICAgICAgICBpZFRva2VuOiBpZFRva2VuU2VjcmV0LFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgcmV0dXJuIHVwZGF0ZWRBY2NvdW50SW5mbztcclxuICAgIH1cclxuICAgIHJldHVybiB1cGRhdGVkQWNjb3VudEluZm87XHJcbn1cblxuZXhwb3J0IHsgYnVpbGRUZW5hbnRQcm9maWxlLCB0ZW5hbnRJZE1hdGNoZXNIb21lVGVuYW50LCB1cGRhdGVBY2NvdW50VGVuYW50UHJvZmlsZURhdGEgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFjY291bnRJbmZvLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/AuthToken.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkMaxAge: () => (/* binding */ checkMaxAge),\n/* harmony export */   extractTokenClaims: () => (/* binding */ extractTokenClaims),\n/* harmony export */   getJWSPayload: () => (/* binding */ getJWSPayload)\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Extract token by decoding the rawToken\r\n *\r\n * @param encodedToken\r\n */\r\nfunction extractTokenClaims(encodedToken, base64Decode) {\r\n    const jswPayload = getJWSPayload(encodedToken);\r\n    // token will be decoded to get the username\r\n    try {\r\n        // base64Decode() should throw an error if there is an issue\r\n        const base64Decoded = base64Decode(jswPayload);\r\n        return JSON.parse(base64Decoded);\r\n    }\r\n    catch (err) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.tokenParsingError);\r\n    }\r\n}\r\n/**\r\n * decode a JWT\r\n *\r\n * @param authToken\r\n */\r\nfunction getJWSPayload(authToken) {\r\n    if (!authToken) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.nullOrEmptyToken);\r\n    }\r\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n    const matches = tokenPartsRegex.exec(authToken);\r\n    if (!matches || matches.length < 4) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.tokenParsingError);\r\n    }\r\n    /**\r\n     * const crackedToken = {\r\n     *  header: matches[1],\r\n     *  JWSPayload: matches[2],\r\n     *  JWSSig: matches[3],\r\n     * };\r\n     */\r\n    return matches[2];\r\n}\r\n/**\r\n * Determine if the token's max_age has transpired\r\n */\r\nfunction checkMaxAge(authTime, maxAge) {\r\n    /*\r\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\r\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\r\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\r\n     */\r\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\r\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.maxAgeTranspired);\r\n    }\r\n}\n\n\n//# sourceMappingURL=AuthToken.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9BdXRoVG9rZW4ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDYTtBQUN3RDtBQUNxQzs7QUFFMUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyw4RUFBaUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyw2RUFBZ0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlGQUFxQixDQUFDLDhFQUFpQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBLGNBQWMsaUZBQXFCLENBQUMsNkVBQWdCO0FBQ3BEO0FBQ0E7O0FBRTBEO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hY2NvdW50L0F1dGhUb2tlbi5tanM/YTk5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudEF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgdG9rZW5QYXJzaW5nRXJyb3IsIG51bGxPckVtcHR5VG9rZW4sIG1heEFnZVRyYW5zcGlyZWQgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEV4dHJhY3QgdG9rZW4gYnkgZGVjb2RpbmcgdGhlIHJhd1Rva2VuXHJcbiAqXHJcbiAqIEBwYXJhbSBlbmNvZGVkVG9rZW5cclxuICovXHJcbmZ1bmN0aW9uIGV4dHJhY3RUb2tlbkNsYWltcyhlbmNvZGVkVG9rZW4sIGJhc2U2NERlY29kZSkge1xyXG4gICAgY29uc3QganN3UGF5bG9hZCA9IGdldEpXU1BheWxvYWQoZW5jb2RlZFRva2VuKTtcclxuICAgIC8vIHRva2VuIHdpbGwgYmUgZGVjb2RlZCB0byBnZXQgdGhlIHVzZXJuYW1lXHJcbiAgICB0cnkge1xyXG4gICAgICAgIC8vIGJhc2U2NERlY29kZSgpIHNob3VsZCB0aHJvdyBhbiBlcnJvciBpZiB0aGVyZSBpcyBhbiBpc3N1ZVxyXG4gICAgICAgIGNvbnN0IGJhc2U2NERlY29kZWQgPSBiYXNlNjREZWNvZGUoanN3UGF5bG9hZCk7XHJcbiAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoYmFzZTY0RGVjb2RlZCk7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKHRva2VuUGFyc2luZ0Vycm9yKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogZGVjb2RlIGEgSldUXHJcbiAqXHJcbiAqIEBwYXJhbSBhdXRoVG9rZW5cclxuICovXHJcbmZ1bmN0aW9uIGdldEpXU1BheWxvYWQoYXV0aFRva2VuKSB7XHJcbiAgICBpZiAoIWF1dGhUb2tlbikge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihudWxsT3JFbXB0eVRva2VuKTtcclxuICAgIH1cclxuICAgIGNvbnN0IHRva2VuUGFydHNSZWdleCA9IC9eKFteXFwuXFxzXSopXFwuKFteXFwuXFxzXSspXFwuKFteXFwuXFxzXSopJC87XHJcbiAgICBjb25zdCBtYXRjaGVzID0gdG9rZW5QYXJ0c1JlZ2V4LmV4ZWMoYXV0aFRva2VuKTtcclxuICAgIGlmICghbWF0Y2hlcyB8fCBtYXRjaGVzLmxlbmd0aCA8IDQpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IodG9rZW5QYXJzaW5nRXJyb3IpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBjb25zdCBjcmFja2VkVG9rZW4gPSB7XHJcbiAgICAgKiAgaGVhZGVyOiBtYXRjaGVzWzFdLFxyXG4gICAgICogIEpXU1BheWxvYWQ6IG1hdGNoZXNbMl0sXHJcbiAgICAgKiAgSldTU2lnOiBtYXRjaGVzWzNdLFxyXG4gICAgICogfTtcclxuICAgICAqL1xyXG4gICAgcmV0dXJuIG1hdGNoZXNbMl07XHJcbn1cclxuLyoqXHJcbiAqIERldGVybWluZSBpZiB0aGUgdG9rZW4ncyBtYXhfYWdlIGhhcyB0cmFuc3BpcmVkXHJcbiAqL1xyXG5mdW5jdGlvbiBjaGVja01heEFnZShhdXRoVGltZSwgbWF4QWdlKSB7XHJcbiAgICAvKlxyXG4gICAgICogcGVyIGh0dHBzOi8vb3BlbmlkLm5ldC9zcGVjcy9vcGVuaWQtY29ubmVjdC1jb3JlLTFfMC5odG1sI0F1dGhSZXF1ZXN0XHJcbiAgICAgKiBUbyBmb3JjZSBhbiBpbW1lZGlhdGUgcmUtYXV0aGVudGljYXRpb246IElmIGFuIGFwcCByZXF1aXJlcyB0aGF0IGEgdXNlciByZS1hdXRoZW50aWNhdGUgcHJpb3IgdG8gYWNjZXNzLFxyXG4gICAgICogcHJvdmlkZSBhIHZhbHVlIG9mIDAgZm9yIHRoZSBtYXhfYWdlIHBhcmFtZXRlciBhbmQgdGhlIEFTIHdpbGwgZm9yY2UgYSBmcmVzaCBsb2dpbi5cclxuICAgICAqL1xyXG4gICAgY29uc3QgZml2ZU1pbnV0ZVNrZXcgPSAzMDAwMDA7IC8vIGZpdmUgbWludXRlcyBpbiBtaWxsaXNlY29uZHNcclxuICAgIGlmIChtYXhBZ2UgPT09IDAgfHwgRGF0ZS5ub3coKSAtIGZpdmVNaW51dGVTa2V3ID4gYXV0aFRpbWUgKyBtYXhBZ2UpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWF4QWdlVHJhbnNwaXJlZCk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgY2hlY2tNYXhBZ2UsIGV4dHJhY3RUb2tlbkNsYWltcywgZ2V0SldTUGF5bG9hZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aFRva2VuLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CcsCredentialType: () => (/* binding */ CcsCredentialType)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CcsCredentialType = {\r\n    HOME_ACCOUNT_ID: \"home_account_id\",\r\n    UPN: \"UPN\",\r\n};\n\n\n//# sourceMappingURL=CcsCredential.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9DY3NDcmVkZW50aWFsLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hY2NvdW50L0Njc0NyZWRlbnRpYWwubWpzP2U4ODIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgQ2NzQ3JlZGVudGlhbFR5cGUgPSB7XHJcbiAgICBIT01FX0FDQ09VTlRfSUQ6IFwiaG9tZV9hY2NvdW50X2lkXCIsXHJcbiAgICBVUE46IFwiVVBOXCIsXHJcbn07XG5cbmV4cG9ydCB7IENjc0NyZWRlbnRpYWxUeXBlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DY3NDcmVkZW50aWFsLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildClientInfo: () => (/* binding */ buildClientInfo),\n/* harmony export */   buildClientInfoFromHomeAccountId: () => (/* binding */ buildClientInfoFromHomeAccountId)\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object from server clientInfo string\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, base64Decode) {\r\n    if (!rawClientInfo) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.clientInfoEmptyError);\r\n    }\r\n    try {\r\n        const decodedClientInfo = base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.clientInfoDecodingError);\r\n    }\r\n}\r\n/**\r\n * Function to build a client info object from cached homeAccountId string\r\n * @param homeAccountId\r\n */\r\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\r\n    if (!homeAccountId) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.clientInfoDecodingError);\r\n    }\r\n    const clientInfoParts = homeAccountId.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Separators.CLIENT_INFO_SEPARATOR, 2);\r\n    return {\r\n        uid: clientInfoParts[0],\r\n        utid: clientInfoParts.length < 2\r\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING\r\n            : clientInfoParts[1],\r\n    };\r\n}\n\n\n//# sourceMappingURL=ClientInfo.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9DbGllbnRJbmZvLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDd0Q7QUFDTjtBQUNtQzs7QUFFbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUZBQXFCLENBQUMsaUZBQW9CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUZBQXFCLENBQUMsb0ZBQXVCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlGQUFxQixDQUFDLG9GQUF1QjtBQUMzRDtBQUNBLGdEQUFnRCw0REFBVTtBQUMxRDtBQUNBO0FBQ0E7QUFDQSxjQUFjLDJEQUFTO0FBQ3ZCO0FBQ0E7QUFDQTs7QUFFNkQ7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2FjY291bnQvQ2xpZW50SW5mby5tanM/YmZmNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudEF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgU2VwYXJhdG9ycywgQ29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBjbGllbnRJbmZvRW1wdHlFcnJvciwgY2xpZW50SW5mb0RlY29kaW5nRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEZ1bmN0aW9uIHRvIGJ1aWxkIGEgY2xpZW50IGluZm8gb2JqZWN0IGZyb20gc2VydmVyIGNsaWVudEluZm8gc3RyaW5nXHJcbiAqIEBwYXJhbSByYXdDbGllbnRJbmZvXHJcbiAqIEBwYXJhbSBjcnlwdG9cclxuICovXHJcbmZ1bmN0aW9uIGJ1aWxkQ2xpZW50SW5mbyhyYXdDbGllbnRJbmZvLCBiYXNlNjREZWNvZGUpIHtcclxuICAgIGlmICghcmF3Q2xpZW50SW5mbykge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihjbGllbnRJbmZvRW1wdHlFcnJvcik7XHJcbiAgICB9XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGRlY29kZWRDbGllbnRJbmZvID0gYmFzZTY0RGVjb2RlKHJhd0NsaWVudEluZm8pO1xyXG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKGRlY29kZWRDbGllbnRJbmZvKTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKGNsaWVudEluZm9EZWNvZGluZ0Vycm9yKTtcclxuICAgIH1cclxufVxyXG4vKipcclxuICogRnVuY3Rpb24gdG8gYnVpbGQgYSBjbGllbnQgaW5mbyBvYmplY3QgZnJvbSBjYWNoZWQgaG9tZUFjY291bnRJZCBzdHJpbmdcclxuICogQHBhcmFtIGhvbWVBY2NvdW50SWRcclxuICovXHJcbmZ1bmN0aW9uIGJ1aWxkQ2xpZW50SW5mb0Zyb21Ib21lQWNjb3VudElkKGhvbWVBY2NvdW50SWQpIHtcclxuICAgIGlmICghaG9tZUFjY291bnRJZCkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihjbGllbnRJbmZvRGVjb2RpbmdFcnJvcik7XHJcbiAgICB9XHJcbiAgICBjb25zdCBjbGllbnRJbmZvUGFydHMgPSBob21lQWNjb3VudElkLnNwbGl0KFNlcGFyYXRvcnMuQ0xJRU5UX0lORk9fU0VQQVJBVE9SLCAyKTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgdWlkOiBjbGllbnRJbmZvUGFydHNbMF0sXHJcbiAgICAgICAgdXRpZDogY2xpZW50SW5mb1BhcnRzLmxlbmd0aCA8IDJcclxuICAgICAgICAgICAgPyBDb25zdGFudHMuRU1QVFlfU1RSSU5HXHJcbiAgICAgICAgICAgIDogY2xpZW50SW5mb1BhcnRzWzFdLFxyXG4gICAgfTtcclxufVxuXG5leHBvcnQgeyBidWlsZENsaWVudEluZm8sIGJ1aWxkQ2xpZW50SW5mb0Zyb21Ib21lQWNjb3VudElkIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRJbmZvLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getTenantIdFromIdTokenClaims: () => (/* binding */ getTenantIdFromIdTokenClaims)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Gets tenantId from available ID token claims to set as credential realm with the following precedence:\r\n * 1. tid - if the token is acquired from an Azure AD tenant tid will be present\r\n * 2. tfp - if the token is acquired from a modern B2C tenant tfp should be present\r\n * 3. acr - if the token is acquired from a legacy B2C tenant acr should be present\r\n * Downcased to match the realm case-insensitive comparison requirements\r\n * @param idTokenClaims\r\n * @returns\r\n */\r\nfunction getTenantIdFromIdTokenClaims(idTokenClaims) {\r\n    if (idTokenClaims) {\r\n        const tenantId = idTokenClaims.tid || idTokenClaims.tfp || idTokenClaims.acr;\r\n        return tenantId || null;\r\n    }\r\n    return null;\r\n}\n\n\n//# sourceMappingURL=TokenClaims.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9Ub2tlbkNsYWltcy5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYWNjb3VudC9Ub2tlbkNsYWltcy5tanM/YmI5MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogR2V0cyB0ZW5hbnRJZCBmcm9tIGF2YWlsYWJsZSBJRCB0b2tlbiBjbGFpbXMgdG8gc2V0IGFzIGNyZWRlbnRpYWwgcmVhbG0gd2l0aCB0aGUgZm9sbG93aW5nIHByZWNlZGVuY2U6XHJcbiAqIDEuIHRpZCAtIGlmIHRoZSB0b2tlbiBpcyBhY3F1aXJlZCBmcm9tIGFuIEF6dXJlIEFEIHRlbmFudCB0aWQgd2lsbCBiZSBwcmVzZW50XHJcbiAqIDIuIHRmcCAtIGlmIHRoZSB0b2tlbiBpcyBhY3F1aXJlZCBmcm9tIGEgbW9kZXJuIEIyQyB0ZW5hbnQgdGZwIHNob3VsZCBiZSBwcmVzZW50XHJcbiAqIDMuIGFjciAtIGlmIHRoZSB0b2tlbiBpcyBhY3F1aXJlZCBmcm9tIGEgbGVnYWN5IEIyQyB0ZW5hbnQgYWNyIHNob3VsZCBiZSBwcmVzZW50XHJcbiAqIERvd25jYXNlZCB0byBtYXRjaCB0aGUgcmVhbG0gY2FzZS1pbnNlbnNpdGl2ZSBjb21wYXJpc29uIHJlcXVpcmVtZW50c1xyXG4gKiBAcGFyYW0gaWRUb2tlbkNsYWltc1xyXG4gKiBAcmV0dXJuc1xyXG4gKi9cclxuZnVuY3Rpb24gZ2V0VGVuYW50SWRGcm9tSWRUb2tlbkNsYWltcyhpZFRva2VuQ2xhaW1zKSB7XHJcbiAgICBpZiAoaWRUb2tlbkNsYWltcykge1xyXG4gICAgICAgIGNvbnN0IHRlbmFudElkID0gaWRUb2tlbkNsYWltcy50aWQgfHwgaWRUb2tlbkNsYWltcy50ZnAgfHwgaWRUb2tlbkNsYWltcy5hY3I7XHJcbiAgICAgICAgcmV0dXJuIHRlbmFudElkIHx8IG51bGw7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxufVxuXG5leHBvcnQgeyBnZXRUZW5hbnRJZEZyb21JZFRva2VuQ2xhaW1zIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ub2tlbkNsYWltcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/Authority.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Authority: () => (/* binding */ Authority),\n/* harmony export */   buildStaticAuthorityOptions: () => (/* binding */ buildStaticAuthorityOptions),\n/* harmony export */   formatAuthorityUri: () => (/* binding */ formatAuthorityUri),\n/* harmony export */   getTenantFromAuthorityString: () => (/* binding */ getTenantFromAuthorityString)\n/* harmony export */ });\n/* harmony import */ var _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AuthorityType.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\");\n/* harmony import */ var _OpenIdConfigResponse_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./OpenIdConfigResponse.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./AuthorityMetadata.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ProtocolMode.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./AuthorityOptions.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _CloudInstanceDiscoveryResponse_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./CloudInstanceDiscoveryResponse.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs\");\n/* harmony import */ var _CloudInstanceDiscoveryErrorResponse_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./CloudInstanceDiscoveryErrorResponse.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs\");\n/* harmony import */ var _RegionDiscovery_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./RegionDiscovery.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../cache/utils/CacheHelpers.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n * @internal\r\n */\r\nclass Authority {\r\n    constructor(authority, networkInterface, cacheManager, authorityOptions, logger, correlationId, performanceClient, managedIdentity) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n        this.cacheManager = cacheManager;\r\n        this.authorityOptions = authorityOptions;\r\n        this.regionDiscoveryMetadata = {\r\n            region_used: undefined,\r\n            region_source: undefined,\r\n            region_outcome: undefined,\r\n        };\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n        this.managedIdentity = managedIdentity || false;\r\n        this.regionDiscovery = new _RegionDiscovery_mjs__WEBPACK_IMPORTED_MODULE_0__.RegionDiscovery(networkInterface, this.logger, this.performanceClient, this.correlationId);\r\n    }\r\n    /**\r\n     * Get {@link AuthorityType}\r\n     * @param authorityUri {@link IUri}\r\n     * @private\r\n     */\r\n    getAuthorityType(authorityUri) {\r\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\r\n        if (authorityUri.HostNameAndPort.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.CIAM_AUTH_URL)) {\r\n            return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Ciam;\r\n        }\r\n        const pathSegments = authorityUri.PathSegments;\r\n        if (pathSegments.length) {\r\n            switch (pathSegments[0].toLowerCase()) {\r\n                case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.ADFS:\r\n                    return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Adfs;\r\n                case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DSTS:\r\n                    return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Dsts;\r\n            }\r\n        }\r\n        return _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Default;\r\n    }\r\n    // See above for AuthorityType\r\n    get authorityType() {\r\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\r\n    }\r\n    /**\r\n     * ProtocolMode enum representing the way endpoints are constructed.\r\n     */\r\n    get protocolMode() {\r\n        return this.authorityOptions.protocolMode;\r\n    }\r\n    /**\r\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\r\n     */\r\n    get options() {\r\n        return this.authorityOptions;\r\n    }\r\n    /**\r\n     * A URL that is the authority set by the developer\r\n     */\r\n    get canonicalAuthority() {\r\n        return this._canonicalAuthority.urlString;\r\n    }\r\n    /**\r\n     * Sets canonical authority.\r\n     */\r\n    set canonicalAuthority(url) {\r\n        this._canonicalAuthority = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(url);\r\n        this._canonicalAuthority.validateAsUri();\r\n        this._canonicalAuthorityUrlComponents = null;\r\n    }\r\n    /**\r\n     * Get authority components.\r\n     */\r\n    get canonicalAuthorityUrlComponents() {\r\n        if (!this._canonicalAuthorityUrlComponents) {\r\n            this._canonicalAuthorityUrlComponents =\r\n                this._canonicalAuthority.getUrlComponents();\r\n        }\r\n        return this._canonicalAuthorityUrlComponents;\r\n    }\r\n    /**\r\n     * Get hostname and port i.e. login.microsoftonline.com\r\n     */\r\n    get hostnameAndPort() {\r\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\r\n    }\r\n    /**\r\n     * Get tenant for authority.\r\n     */\r\n    get tenant() {\r\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n    }\r\n    /**\r\n     * OAuth /authorize endpoint for requests\r\n     */\r\n    get authorizationEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.authorization_endpoint);\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth /token endpoint for requests\r\n     */\r\n    get tokenEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.token_endpoint);\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    get deviceCodeEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth logout endpoint for requests\r\n     */\r\n    get endSessionEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            // ROPC policies may not have end_session_endpoint set\r\n            if (!this.metadata.end_session_endpoint) {\r\n                throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endSessionEndpointNotSupported);\r\n            }\r\n            return this.replacePath(this.metadata.end_session_endpoint);\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth issuer for requests\r\n     */\r\n    get selfSignedJwtAudience() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.issuer);\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Jwks_uri for token signing keys\r\n     */\r\n    get jwksUri() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.jwks_uri);\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\r\n     * @param authorityUri {@link IUri}\r\n     * @private\r\n     */\r\n    canReplaceTenant(authorityUri) {\r\n        return (authorityUri.PathSegments.length === 1 &&\r\n            !Authority.reservedTenantDomains.has(authorityUri.PathSegments[0]) &&\r\n            this.getAuthorityType(authorityUri) === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Default &&\r\n            this.protocolMode === _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_6__.ProtocolMode.AAD);\r\n    }\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    replaceTenant(urlString) {\r\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\r\n    }\r\n    /**\r\n     * Replaces path such as tenant or policy with the current tenant or policy.\r\n     * @param urlString\r\n     */\r\n    replacePath(urlString) {\r\n        let endpoint = urlString;\r\n        const cachedAuthorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(this.metadata.canonical_authority);\r\n        const cachedAuthorityUrlComponents = cachedAuthorityUrl.getUrlComponents();\r\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\r\n        const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\r\n        currentAuthorityParts.forEach((currentPart, index) => {\r\n            let cachedPart = cachedAuthorityParts[index];\r\n            if (index === 0 &&\r\n                this.canReplaceTenant(cachedAuthorityUrlComponents)) {\r\n                const tenantId = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];\r\n                /**\r\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\r\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\r\n                 * always resolved with tenant id by OIDC.\r\n                 */\r\n                if (cachedPart !== tenantId) {\r\n                    this.logger.verbose(`Replacing tenant domain name ${cachedPart} with id ${tenantId}`);\r\n                    cachedPart = tenantId;\r\n                }\r\n            }\r\n            if (currentPart !== cachedPart) {\r\n                endpoint = endpoint.replace(`/${cachedPart}/`, `/${currentPart}/`);\r\n            }\r\n        });\r\n        return this.replaceTenant(endpoint);\r\n    }\r\n    /**\r\n     * The default open id configuration endpoint for any canonical authority.\r\n     */\r\n    get defaultOpenIdConfigurationEndpoint() {\r\n        const canonicalAuthorityHost = this.hostnameAndPort;\r\n        if (this.canonicalAuthority.endsWith(\"v2.0/\") ||\r\n            this.authorityType === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Adfs ||\r\n            (this.protocolMode !== _ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_6__.ProtocolMode.AAD &&\r\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))) {\r\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\r\n        }\r\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\r\n    }\r\n    /**\r\n     * Boolean that returns whether or not tenant discovery has been completed.\r\n     */\r\n    discoveryComplete() {\r\n        return !!this.metadata;\r\n    }\r\n    /**\r\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\r\n     * and the /authorize, /token and logout endpoints.\r\n     */\r\n    async resolveEndpointsAsync() {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityResolveEndpointsAsync, this.correlationId);\r\n        const metadataEntity = this.getCurrentMetadataEntity();\r\n        const cloudDiscoverySource = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateCloudDiscoveryMetadata.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\r\n        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\r\n        const endpointSource = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateEndpointMetadata.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateEndpointMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\r\n        this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {\r\n            source: endpointSource,\r\n        });\r\n        this.performanceClient?.addFields({\r\n            cloudDiscoverySource: cloudDiscoverySource,\r\n            authorityEndpointSource: endpointSource,\r\n        }, this.correlationId);\r\n    }\r\n    /**\r\n     * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built\r\n     * from the configured canonical authority\r\n     * @returns\r\n     */\r\n    getCurrentMetadataEntity() {\r\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\r\n        if (!metadataEntity) {\r\n            metadataEntity = {\r\n                aliases: [],\r\n                preferred_cache: this.hostnameAndPort,\r\n                preferred_network: this.hostnameAndPort,\r\n                canonical_authority: this.canonicalAuthority,\r\n                authorization_endpoint: \"\",\r\n                token_endpoint: \"\",\r\n                end_session_endpoint: \"\",\r\n                issuer: \"\",\r\n                aliasesFromNetwork: false,\r\n                endpointsFromNetwork: false,\r\n                expiresAt: (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.generateAuthorityMetadataExpiresAt)(),\r\n                jwks_uri: \"\",\r\n            };\r\n        }\r\n        return metadataEntity;\r\n    }\r\n    /**\r\n     * Updates cached metadata based on metadata source and sets the instance's metadata\r\n     * property to the same value\r\n     * @param metadataEntity\r\n     * @param cloudDiscoverySource\r\n     * @param endpointMetadataResult\r\n     */\r\n    updateCachedMetadata(metadataEntity, cloudDiscoverySource, endpointMetadataResult) {\r\n        if (cloudDiscoverySource !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE &&\r\n            endpointMetadataResult?.source !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE) {\r\n            // Reset the expiration time unless both values came from a successful cache lookup\r\n            metadataEntity.expiresAt =\r\n                (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.generateAuthorityMetadataExpiresAt)();\r\n            metadataEntity.canonical_authority = this.canonicalAuthority;\r\n        }\r\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\r\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\r\n        this.metadata = metadataEntity;\r\n    }\r\n    /**\r\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\r\n     * @param metadataEntity\r\n     */\r\n    async updateEndpointMetadata(metadataEntity) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateEndpointMetadata, this.correlationId);\r\n        const localMetadata = this.updateEndpointMetadataFromLocalSources(metadataEntity);\r\n        // Further update may be required for hardcoded metadata if regional metadata is preferred\r\n        if (localMetadata) {\r\n            if (localMetadata.source ===\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES) {\r\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\r\n                if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\r\n                    if (localMetadata.metadata) {\r\n                        const hardcodedMetadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateMetadataWithRegionalInformation.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(localMetadata.metadata);\r\n                        (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, hardcodedMetadata, false);\r\n                        metadataEntity.canonical_authority =\r\n                            this.canonicalAuthority;\r\n                    }\r\n                }\r\n            }\r\n            return localMetadata.source;\r\n        }\r\n        // Get metadata from network if local sources aren't available\r\n        let metadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.getEndpointMetadataFromNetwork.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\r\n        if (metadata) {\r\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\r\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\r\n                metadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.updateMetadataWithRegionalInformation.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(metadata);\r\n            }\r\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, metadata, true);\r\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.NETWORK;\r\n        }\r\n        else {\r\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.openIdConfigError, this.defaultOpenIdConfigurationEndpoint);\r\n        }\r\n    }\r\n    /**\r\n     * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config\r\n     * response if the source is hardcoded metadata\r\n     * @param metadataEntity\r\n     * @returns\r\n     */\r\n    updateEndpointMetadataFromLocalSources(metadataEntity) {\r\n        this.logger.verbose(\"Attempting to get endpoint metadata from authority configuration\");\r\n        const configMetadata = this.getEndpointMetadataFromConfig();\r\n        if (configMetadata) {\r\n            this.logger.verbose(\"Found endpoint metadata in authority configuration\");\r\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, configMetadata, false);\r\n            return {\r\n                source: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CONFIG,\r\n            };\r\n        }\r\n        this.logger.verbose(\"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\");\r\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\r\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\r\n            this.logger.verbose(\"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\");\r\n        }\r\n        else {\r\n            const hardcodedMetadata = this.getEndpointMetadataFromHardcodedValues();\r\n            if (hardcodedMetadata) {\r\n                (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateAuthorityEndpointMetadata)(metadataEntity, hardcodedMetadata, false);\r\n                return {\r\n                    source: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES,\r\n                    metadata: hardcodedMetadata,\r\n                };\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\");\r\n            }\r\n        }\r\n        // Check cached metadata entity expiration status\r\n        const metadataEntityExpired = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.isAuthorityMetadataExpired)(metadataEntity);\r\n        if (this.isAuthoritySameType(metadataEntity) &&\r\n            metadataEntity.endpointsFromNetwork &&\r\n            !metadataEntityExpired) {\r\n            // No need to update\r\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\r\n            return { source: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE };\r\n        }\r\n        else if (metadataEntityExpired) {\r\n            this.logger.verbose(\"The metadata entity is expired.\");\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Compares the number of url components after the domain to determine if the cached\r\n     * authority metadata can be used for the requested authority. Protects against same domain different\r\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\r\n     * @param metadataEntity\r\n     */\r\n    isAuthoritySameType(metadataEntity) {\r\n        const cachedAuthorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(metadataEntity.canonical_authority);\r\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\r\n        return (cachedParts.length ===\r\n            this.canonicalAuthorityUrlComponents.PathSegments.length);\r\n    }\r\n    /**\r\n     * Parse authorityMetadata config option\r\n     */\r\n    getEndpointMetadataFromConfig() {\r\n        if (this.authorityOptions.authorityMetadata) {\r\n            try {\r\n                return JSON.parse(this.authorityOptions.authorityMetadata);\r\n            }\r\n            catch (e) {\r\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.invalidAuthorityMetadata);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     *\r\n     * @param hasHardcodedMetadata boolean\r\n     */\r\n    async getEndpointMetadataFromNetwork() {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.correlationId);\r\n        const options = {};\r\n        /*\r\n         * TODO: Add a timeout if the authority exists in our library's\r\n         * hardcoded list of metadata\r\n         */\r\n        const openIdConfigurationEndpoint = this.defaultOpenIdConfigurationEndpoint;\r\n        this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`);\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint, options);\r\n            const isValidResponse = (0,_OpenIdConfigResponse_mjs__WEBPACK_IMPORTED_MODULE_12__.isOpenIdConfigResponse)(response.body);\r\n            if (isValidResponse) {\r\n                return response.body;\r\n            }\r\n            else {\r\n                this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`);\r\n                return null;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`);\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Get OAuth endpoints for common authorities.\r\n     */\r\n    getEndpointMetadataFromHardcodedValues() {\r\n        if (this.hostnameAndPort in _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.EndpointMetadata) {\r\n            return _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.EndpointMetadata[this.hostnameAndPort];\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Update the retrieved metadata with regional information.\r\n     * User selected Azure region will be used if configured.\r\n     */\r\n    async updateMetadataWithRegionalInformation(metadata) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.correlationId);\r\n        const userConfiguredAzureRegion = this.authorityOptions.azureRegionConfiguration?.azureRegion;\r\n        if (userConfiguredAzureRegion) {\r\n            if (userConfiguredAzureRegion !==\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\r\n                this.regionDiscoveryMetadata.region_outcome =\r\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\r\n                this.regionDiscoveryMetadata.region_used =\r\n                    userConfiguredAzureRegion;\r\n                return Authority.replaceWithRegionalInformation(metadata, userConfiguredAzureRegion);\r\n            }\r\n            const autodetectedRegionName = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.regionDiscovery.detectRegion.bind(this.regionDiscovery), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.RegionDiscoveryDetectRegion, this.logger, this.performanceClient, this.correlationId)(this.authorityOptions.azureRegionConfiguration\r\n                ?.environmentRegion, this.regionDiscoveryMetadata);\r\n            if (autodetectedRegionName) {\r\n                this.regionDiscoveryMetadata.region_outcome =\r\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\r\n                this.regionDiscoveryMetadata.region_used =\r\n                    autodetectedRegionName;\r\n                return Authority.replaceWithRegionalInformation(metadata, autodetectedRegionName);\r\n            }\r\n            this.regionDiscoveryMetadata.region_outcome =\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\r\n        }\r\n        return metadata;\r\n    }\r\n    /**\r\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\r\n     * and returns where the information was retrieved from\r\n     * @param metadataEntity\r\n     * @returns AuthorityMetadataSource\r\n     */\r\n    async updateCloudDiscoveryMetadata(metadataEntity) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.correlationId);\r\n        const localMetadataSource = this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);\r\n        if (localMetadataSource) {\r\n            return localMetadataSource;\r\n        }\r\n        // Fallback to network as metadata source\r\n        const metadata = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_8__.invokeAsync)(this.getCloudDiscoveryMetadataFromNetwork.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\r\n        if (metadata) {\r\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateCloudDiscoveryMetadata)(metadataEntity, metadata, true);\r\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.NETWORK;\r\n        }\r\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\r\n        throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.untrustedAuthority);\r\n    }\r\n    updateCloudDiscoveryMetadataFromLocalSources(metadataEntity) {\r\n        this.logger.verbose(\"Attempting to get cloud discovery metadata  from authority configuration\");\r\n        this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities ||\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\r\n        this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata ||\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\r\n        this.logger.verbosePii(`Canonical Authority: ${metadataEntity.canonical_authority || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.NOT_APPLICABLE}`);\r\n        const metadata = this.getCloudDiscoveryMetadataFromConfig();\r\n        if (metadata) {\r\n            this.logger.verbose(\"Found cloud discovery metadata in authority configuration\");\r\n            (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateCloudDiscoveryMetadata)(metadataEntity, metadata, false);\r\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CONFIG;\r\n        }\r\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\r\n        this.logger.verbose(\"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\");\r\n        if (this.options.skipAuthorityMetadataCache) {\r\n            this.logger.verbose(\"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\");\r\n        }\r\n        else {\r\n            const hardcodedMetadata = (0,_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.getCloudDiscoveryMetadataFromHardcodedValues)(this.hostnameAndPort);\r\n            if (hardcodedMetadata) {\r\n                this.logger.verbose(\"Found cloud discovery metadata from hardcoded values.\");\r\n                (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.updateCloudDiscoveryMetadata)(metadataEntity, hardcodedMetadata, false);\r\n                return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES;\r\n            }\r\n            this.logger.verbose(\"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\");\r\n        }\r\n        const metadataEntityExpired = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_9__.isAuthorityMetadataExpired)(metadataEntity);\r\n        if (this.isAuthoritySameType(metadataEntity) &&\r\n            metadataEntity.aliasesFromNetwork &&\r\n            !metadataEntityExpired) {\r\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\r\n            // No need to update\r\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CACHE;\r\n        }\r\n        else if (metadataEntityExpired) {\r\n            this.logger.verbose(\"The metadata entity is expired.\");\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\r\n     */\r\n    getCloudDiscoveryMetadataFromConfig() {\r\n        // CIAM does not support cloud discovery metadata\r\n        if (this.authorityType === _AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_2__.AuthorityType.Ciam) {\r\n            this.logger.verbose(\"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\");\r\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        // Check if network response was provided in config\r\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\r\n            this.logger.verbose(\"The cloud discovery metadata has been provided as a network response, in the config.\");\r\n            try {\r\n                this.logger.verbose(\"Attempting to parse the cloud discovery metadata.\");\r\n                const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata);\r\n                const metadata = (0,_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.getCloudDiscoveryMetadataFromNetworkResponse)(parsedResponse.metadata, this.hostnameAndPort);\r\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\r\n                if (metadata) {\r\n                    this.logger.verbose(\"There is returnable metadata attached to the parsed cloud discovery metadata.\");\r\n                    return metadata;\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"There is no metadata attached to the parsed cloud discovery metadata.\");\r\n                }\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\");\r\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.invalidCloudDiscoveryMetadata);\r\n            }\r\n        }\r\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\r\n        if (this.isInKnownAuthorities()) {\r\n            this.logger.verbose(\"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\");\r\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\r\n     *\r\n     * @param hasHardcodedMetadata boolean\r\n     */\r\n    async getCloudDiscoveryMetadataFromNetwork() {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.correlationId);\r\n        const instanceDiscoveryEndpoint = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\r\n        const options = {};\r\n        /*\r\n         * TODO: Add a timeout if the authority exists in our library's\r\n         * hardcoded list of metadata\r\n         */\r\n        let match = null;\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint, options);\r\n            let typedResponseBody;\r\n            let metadata;\r\n            if ((0,_CloudInstanceDiscoveryResponse_mjs__WEBPACK_IMPORTED_MODULE_14__.isCloudInstanceDiscoveryResponse)(response.body)) {\r\n                typedResponseBody =\r\n                    response.body;\r\n                metadata = typedResponseBody.metadata;\r\n                this.logger.verbosePii(`tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`);\r\n            }\r\n            else if ((0,_CloudInstanceDiscoveryErrorResponse_mjs__WEBPACK_IMPORTED_MODULE_15__.isCloudInstanceDiscoveryErrorResponse)(response.body)) {\r\n                this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`);\r\n                typedResponseBody =\r\n                    response.body;\r\n                if (typedResponseBody.error === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.INVALID_INSTANCE) {\r\n                    this.logger.error(\"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\");\r\n                    return null;\r\n                }\r\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`);\r\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`);\r\n                this.logger.warning(\"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\");\r\n                metadata = [];\r\n            }\r\n            else {\r\n                this.logger.error(\"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\");\r\n                return null;\r\n            }\r\n            this.logger.verbose(\"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\");\r\n            match = (0,_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.getCloudDiscoveryMetadataFromNetworkResponse)(metadata, this.hostnameAndPort);\r\n        }\r\n        catch (error) {\r\n            if (error instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_16__.AuthError) {\r\n                this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`);\r\n            }\r\n            else {\r\n                const typedError = error;\r\n                this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`);\r\n            }\r\n            return null;\r\n        }\r\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\r\n        if (!match) {\r\n            this.logger.warning(\"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\");\r\n            this.logger.verbose(\"Creating custom Authority for custom domain scenario.\");\r\n            match = Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        return match;\r\n    }\r\n    /**\r\n     * Helper function to determine if this host is included in the knownAuthorities config option\r\n     */\r\n    isInKnownAuthorities() {\r\n        const matches = this.authorityOptions.knownAuthorities.filter((authority) => {\r\n            return (authority &&\r\n                _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.getDomainFromUrl(authority).toLowerCase() ===\r\n                    this.hostnameAndPort);\r\n        });\r\n        return matches.length > 0;\r\n    }\r\n    /**\r\n     * helper function to populate the authority based on azureCloudOptions\r\n     * @param authorityString\r\n     * @param azureCloudOptions\r\n     */\r\n    static generateAuthority(authorityString, azureCloudOptions) {\r\n        let authorityAzureCloudInstance;\r\n        if (azureCloudOptions &&\r\n            azureCloudOptions.azureCloudInstance !== _AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_17__.AzureCloudInstance.None) {\r\n            const tenant = azureCloudOptions.tenant\r\n                ? azureCloudOptions.tenant\r\n                : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_COMMON_TENANT;\r\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\r\n        }\r\n        return authorityAzureCloudInstance\r\n            ? authorityAzureCloudInstance\r\n            : authorityString;\r\n    }\r\n    /**\r\n     * Creates cloud discovery metadata object from a given host\r\n     * @param host\r\n     */\r\n    static createCloudDiscoveryMetadataFromHost(host) {\r\n        return {\r\n            preferred_network: host,\r\n            preferred_cache: host,\r\n            aliases: [host],\r\n        };\r\n    }\r\n    /**\r\n     * helper function to generate environment from authority object\r\n     */\r\n    getPreferredCache() {\r\n        if (this.managedIdentity) {\r\n            return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.DEFAULT_AUTHORITY_HOST;\r\n        }\r\n        else if (this.discoveryComplete()) {\r\n            return this.metadata.preferred_cache;\r\n        }\r\n        else {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether or not the provided host is an alias of this authority instance\r\n     * @param host\r\n     */\r\n    isAlias(host) {\r\n        return this.metadata.aliases.indexOf(host) > -1;\r\n    }\r\n    /**\r\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\r\n     * @param host\r\n     */\r\n    isAliasOfKnownMicrosoftAuthority(host) {\r\n        return _AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_13__.InstanceDiscoveryMetadataAliases.has(host);\r\n    }\r\n    /**\r\n     * Checks whether the provided host is that of a public cloud authority\r\n     *\r\n     * @param authority string\r\n     * @returns bool\r\n     */\r\n    static isPublicCloudAuthority(host) {\r\n        return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\r\n    }\r\n    /**\r\n     * Rebuild the authority string with the region\r\n     *\r\n     * @param host string\r\n     * @param region string\r\n     */\r\n    static buildRegionalAuthorityString(host, region, queryString) {\r\n        // Create and validate a Url string object with the initial authority string\r\n        const authorityUrlInstance = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(host);\r\n        authorityUrlInstance.validateAsUri();\r\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\r\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\r\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\r\n            hostNameAndPort = `${region}.${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\r\n        }\r\n        // Include the query string portion of the url\r\n        const url = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.constructAuthorityUriFromObject({\r\n            ...authorityUrlInstance.getUrlComponents(),\r\n            HostNameAndPort: hostNameAndPort,\r\n        }).urlString;\r\n        // Add the query string if a query string was provided\r\n        if (queryString)\r\n            return `${url}?${queryString}`;\r\n        return url;\r\n    }\r\n    /**\r\n     * Replace the endpoints in the metadata object with their regional equivalents.\r\n     *\r\n     * @param metadata OpenIdConfigResponse\r\n     * @param azureRegion string\r\n     */\r\n    static replaceWithRegionalInformation(metadata, azureRegion) {\r\n        const regionalMetadata = { ...metadata };\r\n        regionalMetadata.authorization_endpoint =\r\n            Authority.buildRegionalAuthorityString(regionalMetadata.authorization_endpoint, azureRegion);\r\n        regionalMetadata.token_endpoint =\r\n            Authority.buildRegionalAuthorityString(regionalMetadata.token_endpoint, azureRegion);\r\n        if (regionalMetadata.end_session_endpoint) {\r\n            regionalMetadata.end_session_endpoint =\r\n                Authority.buildRegionalAuthorityString(regionalMetadata.end_session_endpoint, azureRegion);\r\n        }\r\n        return regionalMetadata;\r\n    }\r\n    /**\r\n     * Transform CIAM_AUTHORIY as per the below rules:\r\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\r\n     *\r\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\r\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\r\n     *\r\n     * @param authority\r\n     */\r\n    static transformCIAMAuthority(authority) {\r\n        let ciamAuthority = authority;\r\n        const authorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(authority);\r\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\r\n        // check if transformation is needed\r\n        if (authorityUrlComponents.PathSegments.length === 0 &&\r\n            authorityUrlComponents.HostNameAndPort.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.CIAM_AUTH_URL)) {\r\n            const tenantIdOrDomain = authorityUrlComponents.HostNameAndPort.split(\".\")[0];\r\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\r\n        }\r\n        return ciamAuthority;\r\n    }\r\n}\r\n// Reserved tenant domain names that will not be replaced with tenant id\r\nAuthority.reservedTenantDomains = new Set([\r\n    \"{tenant}\",\r\n    \"{tenantid}\",\r\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.COMMON,\r\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.CONSUMERS,\r\n    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.ORGANIZATIONS,\r\n]);\r\n/**\r\n * Extract tenantId from authority\r\n */\r\nfunction getTenantFromAuthorityString(authority) {\r\n    const authorityUrl = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString(authority);\r\n    const authorityUrlComponents = authorityUrl.getUrlComponents();\r\n    /**\r\n     * For credential matching purposes, tenantId is the last path segment of the authority URL:\r\n     *  AAD Authority - domain/tenantId -> Credentials are cached with realm = tenantId\r\n     *  B2C Authority - domain/{tenantId}?/.../policy -> Credentials are cached with realm = policy\r\n     *  tenantId is downcased because B2C policies can have mixed case but tfp claim is downcased\r\n     *\r\n     * Note that we may not have any path segments in certain OIDC scenarios.\r\n     */\r\n    const tenantId = authorityUrlComponents.PathSegments.slice(-1)[0]?.toLowerCase();\r\n    switch (tenantId) {\r\n        case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.COMMON:\r\n        case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.ORGANIZATIONS:\r\n        case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AADAuthorityConstants.CONSUMERS:\r\n            return undefined;\r\n        default:\r\n            return tenantId;\r\n    }\r\n}\r\nfunction formatAuthorityUri(authorityUri) {\r\n    return authorityUri.endsWith(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.FORWARD_SLASH)\r\n        ? authorityUri\r\n        : `${authorityUri}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.FORWARD_SLASH}`;\r\n}\r\nfunction buildStaticAuthorityOptions(authOptions) {\r\n    const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;\r\n    let cloudDiscoveryMetadata = undefined;\r\n    if (rawCloudDiscoveryMetadata) {\r\n        try {\r\n            cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata);\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_10__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.invalidCloudDiscoveryMetadata);\r\n        }\r\n    }\r\n    return {\r\n        canonicalAuthority: authOptions.authority\r\n            ? formatAuthorityUri(authOptions.authority)\r\n            : undefined,\r\n        knownAuthorities: authOptions.knownAuthorities,\r\n        cloudDiscoveryMetadata: cloudDiscoveryMetadata,\r\n    };\r\n}\n\n\n//# sourceMappingURL=Authority.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDiscoveredInstance: () => (/* binding */ createDiscoveredInstance)\n/* harmony export */ });\n/* harmony import */ var _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Authority.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Create an authority object of the correct type based on the url\r\n * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n *\r\n * Also performs endpoint discovery.\r\n *\r\n * @param authorityUri\r\n * @param networkClient\r\n * @param protocolMode\r\n * @internal\r\n */\r\nasync function createDiscoveredInstance(authorityUri, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient) {\r\n    performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, correlationId);\r\n    const authorityUriFinal = _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__.Authority.transformCIAMAuthority((0,_Authority_mjs__WEBPACK_IMPORTED_MODULE_1__.formatAuthorityUri)(authorityUri));\r\n    // Initialize authority and perform discovery endpoint check.\r\n    const acquireTokenAuthority = new _Authority_mjs__WEBPACK_IMPORTED_MODULE_1__.Authority(authorityUriFinal, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient);\r\n    try {\r\n        await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(acquireTokenAuthority.resolveEndpointsAsync.bind(acquireTokenAuthority), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.AuthorityResolveEndpointsAsync, logger, performanceClient, correlationId)();\r\n        return acquireTokenAuthority;\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.endpointResolutionError);\r\n    }\r\n}\n\n\n//# sourceMappingURL=AuthorityFactory.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eUZhY3RvcnkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDbUQ7QUFDSztBQUNhO0FBQ3RCO0FBQ2dCOztBQUU1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywwRkFBaUI7QUFDNUQsOEJBQThCLHFEQUFTLHdCQUF3QixrRUFBa0I7QUFDakY7QUFDQSxzQ0FBc0MscURBQVM7QUFDL0M7QUFDQSxjQUFjLHdFQUFXLDBFQUEwRSwwRkFBaUI7QUFDcEg7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxvRkFBdUI7QUFDM0Q7QUFDQTs7QUFFb0M7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2F1dGhvcml0eS9BdXRob3JpdHlGYWN0b3J5Lm1qcz9jZjQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQXV0aG9yaXR5LCBmb3JtYXRBdXRob3JpdHlVcmkgfSBmcm9tICcuL0F1dGhvcml0eS5tanMnO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50QXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZUV2ZW50cyB9IGZyb20gJy4uL3RlbGVtZXRyeS9wZXJmb3JtYW5jZS9QZXJmb3JtYW5jZUV2ZW50Lm1qcyc7XG5pbXBvcnQgeyBpbnZva2VBc3luYyB9IGZyb20gJy4uL3V0aWxzL0Z1bmN0aW9uV3JhcHBlcnMubWpzJztcbmltcG9ydCB7IGVuZHBvaW50UmVzb2x1dGlvbkVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBDcmVhdGUgYW4gYXV0aG9yaXR5IG9iamVjdCBvZiB0aGUgY29ycmVjdCB0eXBlIGJhc2VkIG9uIHRoZSB1cmxcclxuICogUGVyZm9ybXMgYmFzaWMgYXV0aG9yaXR5IHZhbGlkYXRpb24gLSBjaGVja3MgdG8gc2VlIGlmIHRoZSBhdXRob3JpdHkgaXMgb2YgYSB2YWxpZCB0eXBlIChpLmUuIGFhZCwgYjJjLCBhZGZzKVxyXG4gKlxyXG4gKiBBbHNvIHBlcmZvcm1zIGVuZHBvaW50IGRpc2NvdmVyeS5cclxuICpcclxuICogQHBhcmFtIGF1dGhvcml0eVVyaVxyXG4gKiBAcGFyYW0gbmV0d29ya0NsaWVudFxyXG4gKiBAcGFyYW0gcHJvdG9jb2xNb2RlXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlRGlzY292ZXJlZEluc3RhbmNlKGF1dGhvcml0eVVyaSwgbmV0d29ya0NsaWVudCwgY2FjaGVNYW5hZ2VyLCBhdXRob3JpdHlPcHRpb25zLCBsb2dnZXIsIGNvcnJlbGF0aW9uSWQsIHBlcmZvcm1hbmNlQ2xpZW50KSB7XHJcbiAgICBwZXJmb3JtYW5jZUNsaWVudD8uYWRkUXVldWVNZWFzdXJlbWVudChQZXJmb3JtYW5jZUV2ZW50cy5BdXRob3JpdHlGYWN0b3J5Q3JlYXRlRGlzY292ZXJlZEluc3RhbmNlLCBjb3JyZWxhdGlvbklkKTtcclxuICAgIGNvbnN0IGF1dGhvcml0eVVyaUZpbmFsID0gQXV0aG9yaXR5LnRyYW5zZm9ybUNJQU1BdXRob3JpdHkoZm9ybWF0QXV0aG9yaXR5VXJpKGF1dGhvcml0eVVyaSkpO1xyXG4gICAgLy8gSW5pdGlhbGl6ZSBhdXRob3JpdHkgYW5kIHBlcmZvcm0gZGlzY292ZXJ5IGVuZHBvaW50IGNoZWNrLlxyXG4gICAgY29uc3QgYWNxdWlyZVRva2VuQXV0aG9yaXR5ID0gbmV3IEF1dGhvcml0eShhdXRob3JpdHlVcmlGaW5hbCwgbmV0d29ya0NsaWVudCwgY2FjaGVNYW5hZ2VyLCBhdXRob3JpdHlPcHRpb25zLCBsb2dnZXIsIGNvcnJlbGF0aW9uSWQsIHBlcmZvcm1hbmNlQ2xpZW50KTtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgYXdhaXQgaW52b2tlQXN5bmMoYWNxdWlyZVRva2VuQXV0aG9yaXR5LnJlc29sdmVFbmRwb2ludHNBc3luYy5iaW5kKGFjcXVpcmVUb2tlbkF1dGhvcml0eSksIFBlcmZvcm1hbmNlRXZlbnRzLkF1dGhvcml0eVJlc29sdmVFbmRwb2ludHNBc3luYywgbG9nZ2VyLCBwZXJmb3JtYW5jZUNsaWVudCwgY29ycmVsYXRpb25JZCkoKTtcclxuICAgICAgICByZXR1cm4gYWNxdWlyZVRva2VuQXV0aG9yaXR5O1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoZW5kcG9pbnRSZXNvbHV0aW9uRXJyb3IpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IGNyZWF0ZURpc2NvdmVyZWRJbnN0YW5jZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QXV0aG9yaXR5RmFjdG9yeS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs":
/*!******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EndpointMetadata: () => (/* binding */ EndpointMetadata),\n/* harmony export */   InstanceDiscoveryMetadata: () => (/* binding */ InstanceDiscoveryMetadata),\n/* harmony export */   InstanceDiscoveryMetadataAliases: () => (/* binding */ InstanceDiscoveryMetadataAliases),\n/* harmony export */   getAliasesFromMetadata: () => (/* binding */ getAliasesFromMetadata),\n/* harmony export */   getAliasesFromStaticSources: () => (/* binding */ getAliasesFromStaticSources),\n/* harmony export */   getCloudDiscoveryMetadataFromHardcodedValues: () => (/* binding */ getCloudDiscoveryMetadataFromHardcodedValues),\n/* harmony export */   getCloudDiscoveryMetadataFromNetworkResponse: () => (/* binding */ getCloudDiscoveryMetadataFromNetworkResponse),\n/* harmony export */   rawMetdataJSON: () => (/* binding */ rawMetdataJSON)\n/* harmony export */ });\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst rawMetdataJSON = {\r\n    endpointMetadata: {\r\n        \"login.microsoftonline.com\": {\r\n            token_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n        \"login.chinacloudapi.cn\": {\r\n            token_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n        \"login.microsoftonline.us\": {\r\n            token_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n    },\r\n    instanceDiscoveryMetadata: {\r\n        tenant_discovery_endpoint: \"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration\",\r\n        metadata: [\r\n            {\r\n                preferred_network: \"login.microsoftonline.com\",\r\n                preferred_cache: \"login.windows.net\",\r\n                aliases: [\r\n                    \"login.microsoftonline.com\",\r\n                    \"login.windows.net\",\r\n                    \"login.microsoft.com\",\r\n                    \"sts.windows.net\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login.partner.microsoftonline.cn\",\r\n                preferred_cache: \"login.partner.microsoftonline.cn\",\r\n                aliases: [\r\n                    \"login.partner.microsoftonline.cn\",\r\n                    \"login.chinacloudapi.cn\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login.microsoftonline.de\",\r\n                preferred_cache: \"login.microsoftonline.de\",\r\n                aliases: [\"login.microsoftonline.de\"],\r\n            },\r\n            {\r\n                preferred_network: \"login.microsoftonline.us\",\r\n                preferred_cache: \"login.microsoftonline.us\",\r\n                aliases: [\r\n                    \"login.microsoftonline.us\",\r\n                    \"login.usgovcloudapi.net\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login-us.microsoftonline.com\",\r\n                preferred_cache: \"login-us.microsoftonline.com\",\r\n                aliases: [\"login-us.microsoftonline.com\"],\r\n            },\r\n        ],\r\n    },\r\n};\r\nconst EndpointMetadata = rawMetdataJSON.endpointMetadata;\r\nconst InstanceDiscoveryMetadata = rawMetdataJSON.instanceDiscoveryMetadata;\r\nconst InstanceDiscoveryMetadataAliases = new Set();\r\nInstanceDiscoveryMetadata.metadata.forEach((metadataEntry) => {\r\n    metadataEntry.aliases.forEach((alias) => {\r\n        InstanceDiscoveryMetadataAliases.add(alias);\r\n    });\r\n});\r\n/**\r\n * Attempts to get an aliases array from the static authority metadata sources based on the canonical authority host\r\n * @param staticAuthorityOptions\r\n * @param logger\r\n * @returns\r\n */\r\nfunction getAliasesFromStaticSources(staticAuthorityOptions, logger) {\r\n    let staticAliases;\r\n    const canonicalAuthority = staticAuthorityOptions.canonicalAuthority;\r\n    if (canonicalAuthority) {\r\n        const authorityHost = new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_0__.UrlString(canonicalAuthority).getUrlComponents().HostNameAndPort;\r\n        staticAliases =\r\n            getAliasesFromMetadata(authorityHost, staticAuthorityOptions.cloudDiscoveryMetadata?.metadata, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.CONFIG, logger) ||\r\n                getAliasesFromMetadata(authorityHost, InstanceDiscoveryMetadata.metadata, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityMetadataSource.HARDCODED_VALUES, logger) ||\r\n                staticAuthorityOptions.knownAuthorities;\r\n    }\r\n    return staticAliases || [];\r\n}\r\n/**\r\n * Returns aliases for from the raw cloud discovery metadata passed in\r\n * @param authorityHost\r\n * @param rawCloudDiscoveryMetadata\r\n * @returns\r\n */\r\nfunction getAliasesFromMetadata(authorityHost, cloudDiscoveryMetadata, source, logger) {\r\n    logger?.trace(`getAliasesFromMetadata called with source: ${source}`);\r\n    if (authorityHost && cloudDiscoveryMetadata) {\r\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(cloudDiscoveryMetadata, authorityHost);\r\n        if (metadata) {\r\n            logger?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${source}, returning aliases`);\r\n            return metadata.aliases;\r\n        }\r\n        else {\r\n            logger?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${source}`);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get cloud discovery metadata for common authorities\r\n */\r\nfunction getCloudDiscoveryMetadataFromHardcodedValues(authorityHost) {\r\n    const metadata = getCloudDiscoveryMetadataFromNetworkResponse(InstanceDiscoveryMetadata.metadata, authorityHost);\r\n    return metadata;\r\n}\r\n/**\r\n * Searches instance discovery network response for the entry that contains the host in the aliases list\r\n * @param response\r\n * @param authority\r\n */\r\nfunction getCloudDiscoveryMetadataFromNetworkResponse(response, authorityHost) {\r\n    for (let i = 0; i < response.length; i++) {\r\n        const metadata = response[i];\r\n        if (metadata.aliases.includes(authorityHost)) {\r\n            return metadata;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n\n//# sourceMappingURL=AuthorityMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AzureCloudInstance: () => (/* binding */ AzureCloudInstance)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst AzureCloudInstance = {\r\n    // AzureCloudInstance is not specified.\r\n    None: \"none\",\r\n    // Microsoft Azure public cloud\r\n    AzurePublic: \"https://login.microsoftonline.com\",\r\n    // Microsoft PPE\r\n    AzurePpe: \"https://login.windows-ppe.net\",\r\n    // Microsoft Chinese national/regional cloud\r\n    AzureChina: \"https://login.chinacloudapi.cn\",\r\n    // Microsoft German national/regional cloud (\"Black Forest\")\r\n    AzureGermany: \"https://login.microsoftonline.de\",\r\n    // US Government cloud\r\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\r\n};\n\n\n//# sourceMappingURL=AuthorityOptions.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eU9wdGlvbnMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eU9wdGlvbnMubWpzP2YyMTciXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgQXp1cmVDbG91ZEluc3RhbmNlID0ge1xyXG4gICAgLy8gQXp1cmVDbG91ZEluc3RhbmNlIGlzIG5vdCBzcGVjaWZpZWQuXHJcbiAgICBOb25lOiBcIm5vbmVcIixcclxuICAgIC8vIE1pY3Jvc29mdCBBenVyZSBwdWJsaWMgY2xvdWRcclxuICAgIEF6dXJlUHVibGljOiBcImh0dHBzOi8vbG9naW4ubWljcm9zb2Z0b25saW5lLmNvbVwiLFxyXG4gICAgLy8gTWljcm9zb2Z0IFBQRVxyXG4gICAgQXp1cmVQcGU6IFwiaHR0cHM6Ly9sb2dpbi53aW5kb3dzLXBwZS5uZXRcIixcclxuICAgIC8vIE1pY3Jvc29mdCBDaGluZXNlIG5hdGlvbmFsL3JlZ2lvbmFsIGNsb3VkXHJcbiAgICBBenVyZUNoaW5hOiBcImh0dHBzOi8vbG9naW4uY2hpbmFjbG91ZGFwaS5jblwiLFxyXG4gICAgLy8gTWljcm9zb2Z0IEdlcm1hbiBuYXRpb25hbC9yZWdpb25hbCBjbG91ZCAoXCJCbGFjayBGb3Jlc3RcIilcclxuICAgIEF6dXJlR2VybWFueTogXCJodHRwczovL2xvZ2luLm1pY3Jvc29mdG9ubGluZS5kZVwiLFxyXG4gICAgLy8gVVMgR292ZXJubWVudCBjbG91ZFxyXG4gICAgQXp1cmVVc0dvdmVybm1lbnQ6IFwiaHR0cHM6Ly9sb2dpbi5taWNyb3NvZnRvbmxpbmUudXNcIixcclxufTtcblxuZXhwb3J0IHsgQXp1cmVDbG91ZEluc3RhbmNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRob3JpdHlPcHRpb25zLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthorityType: () => (/* binding */ AuthorityType)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nconst AuthorityType = {\r\n    Default: 0,\r\n    Adfs: 1,\r\n    Dsts: 2,\r\n    Ciam: 3,\r\n};\n\n\n//# sourceMappingURL=AuthorityType.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0F1dGhvcml0eVR5cGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hdXRob3JpdHkvQXV0aG9yaXR5VHlwZS5tanM/MDE1YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogQXV0aG9yaXR5IHR5cGVzIHN1cHBvcnRlZCBieSBNU0FMLlxyXG4gKi9cclxuY29uc3QgQXV0aG9yaXR5VHlwZSA9IHtcclxuICAgIERlZmF1bHQ6IDAsXHJcbiAgICBBZGZzOiAxLFxyXG4gICAgRHN0czogMixcclxuICAgIENpYW06IDMsXHJcbn07XG5cbmV4cG9ydCB7IEF1dGhvcml0eVR5cGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF1dGhvcml0eVR5cGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs":
/*!************************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCloudInstanceDiscoveryErrorResponse: () => (/* binding */ isCloudInstanceDiscoveryErrorResponse)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isCloudInstanceDiscoveryErrorResponse(response) {\r\n    return (response.hasOwnProperty(\"error\") &&\r\n        response.hasOwnProperty(\"error_description\"));\r\n}\n\n\n//# sourceMappingURL=CloudInstanceDiscoveryErrorResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlFcnJvclJlc3BvbnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlEO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9hdXRob3JpdHkvQ2xvdWRJbnN0YW5jZURpc2NvdmVyeUVycm9yUmVzcG9uc2UubWpzP2M0MDEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuZnVuY3Rpb24gaXNDbG91ZEluc3RhbmNlRGlzY292ZXJ5RXJyb3JSZXNwb25zZShyZXNwb25zZSkge1xyXG4gICAgcmV0dXJuIChyZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcImVycm9yXCIpICYmXHJcbiAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJlcnJvcl9kZXNjcmlwdGlvblwiKSk7XHJcbn1cblxuZXhwb3J0IHsgaXNDbG91ZEluc3RhbmNlRGlzY292ZXJ5RXJyb3JSZXNwb25zZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2xvdWRJbnN0YW5jZURpc2NvdmVyeUVycm9yUmVzcG9uc2UubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCloudInstanceDiscoveryResponse: () => (/* binding */ isCloudInstanceDiscoveryResponse)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isCloudInstanceDiscoveryResponse(response) {\r\n    return (response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\r\n        response.hasOwnProperty(\"metadata\"));\r\n}\n\n\n//# sourceMappingURL=CloudInstanceDiscoveryResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0QztBQUM1QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZS5tanM/NTdmNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5mdW5jdGlvbiBpc0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZShyZXNwb25zZSkge1xyXG4gICAgcmV0dXJuIChyZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcInRlbmFudF9kaXNjb3ZlcnlfZW5kcG9pbnRcIikgJiZcclxuICAgICAgICByZXNwb25zZS5oYXNPd25Qcm9wZXJ0eShcIm1ldGFkYXRhXCIpKTtcclxufVxuXG5leHBvcnQgeyBpc0Nsb3VkSW5zdGFuY2VEaXNjb3ZlcnlSZXNwb25zZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2xvdWRJbnN0YW5jZURpc2NvdmVyeVJlc3BvbnNlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isOpenIdConfigResponse: () => (/* binding */ isOpenIdConfigResponse)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isOpenIdConfigResponse(response) {\r\n    return (response.hasOwnProperty(\"authorization_endpoint\") &&\r\n        response.hasOwnProperty(\"token_endpoint\") &&\r\n        response.hasOwnProperty(\"issuer\") &&\r\n        response.hasOwnProperty(\"jwks_uri\"));\r\n}\n\n\n//# sourceMappingURL=OpenIdConfigResponse.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L09wZW5JZENvbmZpZ1Jlc3BvbnNlLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L09wZW5JZENvbmZpZ1Jlc3BvbnNlLm1qcz83MTQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmZ1bmN0aW9uIGlzT3BlbklkQ29uZmlnUmVzcG9uc2UocmVzcG9uc2UpIHtcclxuICAgIHJldHVybiAocmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJhdXRob3JpemF0aW9uX2VuZHBvaW50XCIpICYmXHJcbiAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJ0b2tlbl9lbmRwb2ludFwiKSAmJlxyXG4gICAgICAgIHJlc3BvbnNlLmhhc093blByb3BlcnR5KFwiaXNzdWVyXCIpICYmXHJcbiAgICAgICAgcmVzcG9uc2UuaGFzT3duUHJvcGVydHkoXCJqd2tzX3VyaVwiKSk7XHJcbn1cblxuZXhwb3J0IHsgaXNPcGVuSWRDb25maWdSZXNwb25zZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T3BlbklkQ29uZmlnUmVzcG9uc2UubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolMode: () => (/* binding */ ProtocolMode)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Protocol modes supported by MSAL.\r\n */\r\nconst ProtocolMode = {\r\n    AAD: \"AAD\",\r\n    OIDC: \"OIDC\",\r\n};\n\n\n//# sourceMappingURL=ProtocolMode.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L1Byb3RvY29sTW9kZS5tanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvYXV0aG9yaXR5L1Byb3RvY29sTW9kZS5tanM/YTA5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogUHJvdG9jb2wgbW9kZXMgc3VwcG9ydGVkIGJ5IE1TQUwuXHJcbiAqL1xyXG5jb25zdCBQcm90b2NvbE1vZGUgPSB7XHJcbiAgICBBQUQ6IFwiQUFEXCIsXHJcbiAgICBPSURDOiBcIk9JRENcIixcclxufTtcblxuZXhwb3J0IHsgUHJvdG9jb2xNb2RlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Qcm90b2NvbE1vZGUubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RegionDiscovery: () => (/* binding */ RegionDiscovery)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass RegionDiscovery {\r\n    constructor(networkInterface, logger, performanceClient, correlationId) {\r\n        this.networkInterface = networkInterface;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n    }\r\n    /**\r\n     * Detect the region from the application's environment.\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    async detectRegion(environmentRegion, regionDiscoveryMetadata) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryDetectRegion, this.correlationId);\r\n        // Initialize auto detected region with the region from the envrionment\r\n        let autodetectedRegionName = environmentRegion;\r\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\r\n        if (!autodetectedRegionName) {\r\n            const options = RegionDiscovery.IMDS_OPTIONS;\r\n            try {\r\n                const localIMDSVersionResponse = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getRegionFromIMDS.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_VERSION, options);\r\n                if (localIMDSVersionResponse.status ===\r\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpSuccess) {\r\n                    autodetectedRegionName = localIMDSVersionResponse.body;\r\n                    regionDiscoveryMetadata.region_source =\r\n                        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.IMDS;\r\n                }\r\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\r\n                if (localIMDSVersionResponse.status ===\r\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpBadRequest) {\r\n                    const currentIMDSVersion = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getCurrentVersion.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.logger, this.performanceClient, this.correlationId)(options);\r\n                    if (!currentIMDSVersion) {\r\n                        regionDiscoveryMetadata.region_source =\r\n                            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                        return null;\r\n                    }\r\n                    const currentIMDSVersionResponse = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.getRegionFromIMDS.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(currentIMDSVersion, options);\r\n                    if (currentIMDSVersionResponse.status ===\r\n                        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpSuccess) {\r\n                        autodetectedRegionName =\r\n                            currentIMDSVersionResponse.body;\r\n                        regionDiscoveryMetadata.region_source =\r\n                            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.IMDS;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                regionDiscoveryMetadata.region_source =\r\n                    _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            regionDiscoveryMetadata.region_source =\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.ENVIRONMENT_VARIABLE;\r\n        }\r\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\r\n        if (!autodetectedRegionName) {\r\n            regionDiscoveryMetadata.region_source =\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n        }\r\n        return autodetectedRegionName || null;\r\n    }\r\n    /**\r\n     * Make the call to the IMDS endpoint\r\n     *\r\n     * @param imdsEndpointUrl\r\n     * @returns Promise<NetworkResponse<string>>\r\n     */\r\n    async getRegionFromIMDS(version, options) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.correlationId);\r\n        return this.networkInterface.sendGetRequestAsync(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`, options, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_TIMEOUT);\r\n    }\r\n    /**\r\n     * Get the most recent version of the IMDS endpoint available\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    async getCurrentVersion(options) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.correlationId);\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.IMDS_ENDPOINT}?format=json`, options);\r\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\r\n            if (response.status === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.ResponseCodes.httpBadRequest &&\r\n                response.body &&\r\n                response.body[\"newest-versions\"] &&\r\n                response.body[\"newest-versions\"].length > 0) {\r\n                return response.body[\"newest-versions\"][0];\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n// Options for the IMDS endpoint request\r\nRegionDiscovery.IMDS_OPTIONS = {\r\n    headers: {\r\n        Metadata: \"true\",\r\n    },\r\n};\n\n\n//# sourceMappingURL=RegionDiscovery.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs":
/*!*********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheManager: () => (/* binding */ CacheManager),\n/* harmony export */   DefaultStorageClass: () => (/* binding */ DefaultStorageClass)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/CacheHelpers.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../request/ScopeSet.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./entities/AccountEntity.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../account/AccountInfo.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _authority_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../authority/AuthorityMetadata.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs\");\n/* harmony import */ var _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/CacheError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/CacheError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/CacheErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\r\n * @internal\r\n */\r\nclass CacheManager {\r\n    constructor(clientId, cryptoImpl, logger, staticAuthorityOptions) {\r\n        this.clientId = clientId;\r\n        this.cryptoImpl = cryptoImpl;\r\n        this.commonLogger = logger.clone(_packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_0__.version);\r\n        this.staticAuthorityOptions = staticAuthorityOptions;\r\n    }\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return this.buildTenantProfiles(this.getAccountsFilteredBy(accountFilter || {}), accountFilter);\r\n    }\r\n    /**\r\n     * Gets first tenanted AccountInfo object found based on provided filters\r\n     */\r\n    getAccountInfoFilteredBy(accountFilter) {\r\n        const allAccounts = this.getAllAccounts(accountFilter);\r\n        if (allAccounts.length > 1) {\r\n            // If one or more accounts are found, prioritize accounts that have an ID token\r\n            const sortedAccounts = allAccounts.sort((account) => {\r\n                return account.idTokenClaims ? -1 : 1;\r\n            });\r\n            return sortedAccounts[0];\r\n        }\r\n        else if (allAccounts.length === 1) {\r\n            // If only one account is found, return it regardless of whether a matching ID token was found\r\n            return allAccounts[0];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a single matching\r\n     * @param accountFilter\r\n     * @returns\r\n     */\r\n    getBaseAccountInfo(accountFilter) {\r\n        const accountEntities = this.getAccountsFilteredBy(accountFilter);\r\n        if (accountEntities.length > 0) {\r\n            return accountEntities[0].getAccountInfo();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Matches filtered account entities with cached ID tokens that match the tenant profile-specific account filters\r\n     * and builds the account info objects from the matching ID token's claims\r\n     * @param cachedAccounts\r\n     * @param accountFilter\r\n     * @returns Array of AccountInfo objects that match account and tenant profile filters\r\n     */\r\n    buildTenantProfiles(cachedAccounts, accountFilter) {\r\n        return cachedAccounts.flatMap((accountEntity) => {\r\n            return this.getTenantProfilesFromAccountEntity(accountEntity, accountFilter?.tenantId, accountFilter);\r\n        });\r\n    }\r\n    getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, tenantProfileFilter) {\r\n        let tenantedAccountInfo = null;\r\n        let idTokenClaims;\r\n        if (tenantProfileFilter) {\r\n            if (!this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter)) {\r\n                return null;\r\n            }\r\n        }\r\n        const idToken = this.getIdToken(accountInfo, tokenKeys, tenantProfile.tenantId);\r\n        if (idToken) {\r\n            idTokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_1__.extractTokenClaims)(idToken.secret, this.cryptoImpl.base64Decode);\r\n            if (!this.idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter)) {\r\n                // ID token sourced claims don't match so this tenant profile is not a match\r\n                return null;\r\n            }\r\n        }\r\n        // Expand tenant profile into account info based on matching tenant profile and if available matching ID token claims\r\n        tenantedAccountInfo = (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__.updateAccountTenantProfileData)(accountInfo, tenantProfile, idTokenClaims, idToken?.secret);\r\n        return tenantedAccountInfo;\r\n    }\r\n    getTenantProfilesFromAccountEntity(accountEntity, targetTenantId, tenantProfileFilter) {\r\n        const accountInfo = accountEntity.getAccountInfo();\r\n        let searchTenantProfiles = accountInfo.tenantProfiles || new Map();\r\n        const tokenKeys = this.getTokenKeys();\r\n        // If a tenant ID was provided, only return the tenant profile for that tenant ID if it exists\r\n        if (targetTenantId) {\r\n            const tenantProfile = searchTenantProfiles.get(targetTenantId);\r\n            if (tenantProfile) {\r\n                // Reduce search field to just this tenant profile\r\n                searchTenantProfiles = new Map([\r\n                    [targetTenantId, tenantProfile],\r\n                ]);\r\n            }\r\n            else {\r\n                // No tenant profile for search tenant ID, return empty array\r\n                return [];\r\n            }\r\n        }\r\n        const matchingTenantProfiles = [];\r\n        searchTenantProfiles.forEach((tenantProfile) => {\r\n            const tenantedAccountInfo = this.getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, tenantProfileFilter);\r\n            if (tenantedAccountInfo) {\r\n                matchingTenantProfiles.push(tenantedAccountInfo);\r\n            }\r\n        });\r\n        return matchingTenantProfiles;\r\n    }\r\n    tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter) {\r\n        if (!!tenantProfileFilter.localAccountId &&\r\n            !this.matchLocalAccountIdFromTenantProfile(tenantProfile, tenantProfileFilter.localAccountId)) {\r\n            return false;\r\n        }\r\n        if (!!tenantProfileFilter.name &&\r\n            !(tenantProfile.name === tenantProfileFilter.name)) {\r\n            return false;\r\n        }\r\n        if (tenantProfileFilter.isHomeTenant !== undefined &&\r\n            !(tenantProfile.isHomeTenant === tenantProfileFilter.isHomeTenant)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter) {\r\n        // Tenant Profile filtering\r\n        if (tenantProfileFilter) {\r\n            if (!!tenantProfileFilter.localAccountId &&\r\n                !this.matchLocalAccountIdFromTokenClaims(idTokenClaims, tenantProfileFilter.localAccountId)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.loginHint &&\r\n                !this.matchLoginHintFromTokenClaims(idTokenClaims, tenantProfileFilter.loginHint)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.username &&\r\n                !this.matchUsername(idTokenClaims.preferred_username, tenantProfileFilter.username)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.name &&\r\n                !this.matchName(idTokenClaims, tenantProfileFilter.name)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.sid &&\r\n                !this.matchSid(idTokenClaims, tenantProfileFilter.sid)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord {CacheRecord}\r\n     * @param storeInCache {?StoreInCache}\r\n     * @param correlationId {?string} correlation id\r\n     */\r\n    async saveCacheRecord(cacheRecord, storeInCache, correlationId) {\r\n        if (!cacheRecord) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.invalidCacheRecord);\r\n        }\r\n        try {\r\n            if (!!cacheRecord.account) {\r\n                this.setAccount(cacheRecord.account);\r\n            }\r\n            if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\r\n                this.setIdTokenCredential(cacheRecord.idToken);\r\n            }\r\n            if (!!cacheRecord.accessToken &&\r\n                storeInCache?.accessToken !== false) {\r\n                await this.saveAccessToken(cacheRecord.accessToken);\r\n            }\r\n            if (!!cacheRecord.refreshToken &&\r\n                storeInCache?.refreshToken !== false) {\r\n                this.setRefreshTokenCredential(cacheRecord.refreshToken);\r\n            }\r\n            if (!!cacheRecord.appMetadata) {\r\n                this.setAppMetadata(cacheRecord.appMetadata);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.commonLogger?.error(`CacheManager.saveCacheRecord: failed`);\r\n            if (e instanceof Error) {\r\n                this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`, correlationId);\r\n                if (e.name === \"QuotaExceededError\" ||\r\n                    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\" ||\r\n                    e.message.includes(\"exceeded the quota\")) {\r\n                    this.commonLogger?.error(`CacheManager.saveCacheRecord: exceeded storage quota`, correlationId);\r\n                    throw new _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheError(_error_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.cacheQuotaExceededErrorCode);\r\n                }\r\n                else {\r\n                    throw new _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheError(e.name, e.message);\r\n                }\r\n            }\r\n            else {\r\n                this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`, correlationId);\r\n                throw new _error_CacheError_mjs__WEBPACK_IMPORTED_MODULE_5__.CacheError(_error_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_6__.cacheUnknownErrorCode);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * saves access token credential\r\n     * @param credential\r\n     */\r\n    async saveAccessToken(credential) {\r\n        const accessTokenFilter = {\r\n            clientId: credential.clientId,\r\n            credentialType: credential.credentialType,\r\n            environment: credential.environment,\r\n            homeAccountId: credential.homeAccountId,\r\n            realm: credential.realm,\r\n            tokenType: credential.tokenType,\r\n            requestedClaimsHash: credential.requestedClaimsHash,\r\n        };\r\n        const tokenKeys = this.getTokenKeys();\r\n        const currentScopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.fromString(credential.target);\r\n        const removedAccessTokens = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            if (!this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)) {\r\n                return;\r\n            }\r\n            const tokenEntity = this.getAccessTokenCredential(key);\r\n            if (tokenEntity &&\r\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)) {\r\n                const tokenScopeSet = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.fromString(tokenEntity.target);\r\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\r\n                    removedAccessTokens.push(this.removeAccessToken(key));\r\n                }\r\n            }\r\n        });\r\n        await Promise.all(removedAccessTokens);\r\n        this.setAccessTokenCredential(credential);\r\n    }\r\n    /**\r\n     * Retrieve account entities matching all provided tenant-agnostic filters; if no filter is set, get all account entities in the cache\r\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param accountFilter - An object containing Account properties to filter by\r\n     */\r\n    getAccountsFilteredBy(accountFilter) {\r\n        const allAccountKeys = this.getAccountKeys();\r\n        const matchingAccounts = [];\r\n        allAccountKeys.forEach((cacheKey) => {\r\n            if (!this.isAccountKey(cacheKey, accountFilter.homeAccountId)) {\r\n                // Don't parse value if the key doesn't match the account filters\r\n                return;\r\n            }\r\n            const entity = this.getAccount(cacheKey, this.commonLogger);\r\n            // Match base account fields\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.homeAccountId &&\r\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.username &&\r\n                !this.matchUsername(entity.username, accountFilter.username)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.environment &&\r\n                !this.matchEnvironment(entity, accountFilter.environment)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.realm &&\r\n                !this.matchRealm(entity, accountFilter.realm)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.nativeAccountId &&\r\n                !this.matchNativeAccountId(entity, accountFilter.nativeAccountId)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.authorityType &&\r\n                !this.matchAuthorityType(entity, accountFilter.authorityType)) {\r\n                return;\r\n            }\r\n            // If at least one tenant profile matches the tenant profile filter, add the account to the list of matching accounts\r\n            const tenantProfileFilter = {\r\n                localAccountId: accountFilter?.localAccountId,\r\n                name: accountFilter?.name,\r\n            };\r\n            const matchingTenantProfiles = entity.tenantProfiles?.filter((tenantProfile) => {\r\n                return this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter);\r\n            });\r\n            if (matchingTenantProfiles && matchingTenantProfiles.length === 0) {\r\n                // No tenant profile for this account matches filter, don't add to list of matching accounts\r\n                return;\r\n            }\r\n            matchingAccounts.push(entity);\r\n        });\r\n        return matchingAccounts;\r\n    }\r\n    /**\r\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\r\n     * @param key\r\n     * @param homeAccountId\r\n     * @param tenantId\r\n     * @returns\r\n     */\r\n    isAccountKey(key, homeAccountId, tenantId) {\r\n        if (key.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR).length < 3) {\r\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\r\n            return false;\r\n        }\r\n        if (homeAccountId &&\r\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())) {\r\n            return false;\r\n        }\r\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\r\n            return false;\r\n        }\r\n        // Do not check environment as aliasing can cause false negatives\r\n        return true;\r\n    }\r\n    /**\r\n     * Returns true if the given key matches our credential key schema.\r\n     * @param key\r\n     */\r\n    isCredentialKey(key) {\r\n        if (key.split(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR).length < 6) {\r\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\r\n            return false;\r\n        }\r\n        const lowerCaseKey = key.toLowerCase();\r\n        // Credential keys must indicate what credential type they represent\r\n        if (lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ID_TOKEN.toLowerCase()) ===\r\n            -1 &&\r\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN.toLowerCase()) ===\r\n                -1 &&\r\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) === -1 &&\r\n            lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN.toLowerCase()) ===\r\n                -1) {\r\n            return false;\r\n        }\r\n        if (lowerCaseKey.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN.toLowerCase()) >\r\n            -1) {\r\n            // Refresh tokens must contain the client id or family id\r\n            const clientIdValidation = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}${this.clientId}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}`;\r\n            const familyIdValidation = `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.THE_FAMILY_ID}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.Separators.CACHE_KEY_SEPARATOR}`;\r\n            if (lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\r\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\r\n            // Tokens must contain the clientId\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Returns whether or not the given credential entity matches the filter\r\n     * @param entity\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    credentialMatchesFilter(entity, filter) {\r\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\r\n            return false;\r\n        }\r\n        if (!!filter.userAssertionHash &&\r\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)) {\r\n            return false;\r\n        }\r\n        /*\r\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\r\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\r\n         */\r\n        if (typeof filter.homeAccountId === \"string\" &&\r\n            !this.matchHomeAccountId(entity, filter.homeAccountId)) {\r\n            return false;\r\n        }\r\n        if (!!filter.environment &&\r\n            !this.matchEnvironment(entity, filter.environment)) {\r\n            return false;\r\n        }\r\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\r\n            return false;\r\n        }\r\n        if (!!filter.credentialType &&\r\n            !this.matchCredentialType(entity, filter.credentialType)) {\r\n            return false;\r\n        }\r\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\r\n            return false;\r\n        }\r\n        /*\r\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\r\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\r\n         */\r\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\r\n            return false;\r\n        }\r\n        // If request OR cached entity has requested Claims Hash, check if they match\r\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\r\n            // Don't match if either is undefined or they are different\r\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\r\n                return false;\r\n            }\r\n        }\r\n        // Access Token with Auth Scheme specific matching\r\n        if (entity.credentialType ===\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\r\n            if (!!filter.tokenType &&\r\n                !this.matchTokenType(entity, filter.tokenType)) {\r\n                return false;\r\n            }\r\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\r\n            if (filter.tokenType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.SSH) {\r\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\r\n     * @param filter\r\n     */\r\n    getAppMetadataFilteredBy(filter) {\r\n        const allCacheKeys = this.getKeys();\r\n        const matchingAppMetadata = {};\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            // don't parse any non-appMetadata type cache entities\r\n            if (!this.isAppMetadata(cacheKey)) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            const entity = this.getAppMetadata(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (!!filter.environment &&\r\n                !this.matchEnvironment(entity, filter.environment)) {\r\n                return;\r\n            }\r\n            if (!!filter.clientId &&\r\n                !this.matchClientId(entity, filter.clientId)) {\r\n                return;\r\n            }\r\n            matchingAppMetadata[cacheKey] = entity;\r\n        });\r\n        return matchingAppMetadata;\r\n    }\r\n    /**\r\n     * retrieve authorityMetadata that contains a matching alias\r\n     * @param filter\r\n     */\r\n    getAuthorityMetadataByAlias(host) {\r\n        const allCacheKeys = this.getAuthorityMetadataKeys();\r\n        let matchedEntity = null;\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            // don't parse any non-authorityMetadata type cache entities\r\n            if (!this.isAuthorityMetadata(cacheKey) ||\r\n                cacheKey.indexOf(this.clientId) === -1) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            const entity = this.getAuthorityMetadata(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (entity.aliases.indexOf(host) === -1) {\r\n                return;\r\n            }\r\n            matchedEntity = entity;\r\n        });\r\n        return matchedEntity;\r\n    }\r\n    /**\r\n     * Removes all accounts and related tokens from cache.\r\n     */\r\n    async removeAllAccounts() {\r\n        const allAccountKeys = this.getAccountKeys();\r\n        const removedAccounts = [];\r\n        allAccountKeys.forEach((cacheKey) => {\r\n            removedAccounts.push(this.removeAccount(cacheKey));\r\n        });\r\n        await Promise.all(removedAccounts);\r\n    }\r\n    /**\r\n     * Removes the account and related tokens for a given account key\r\n     * @param account\r\n     */\r\n    async removeAccount(accountKey) {\r\n        const account = this.getAccount(accountKey, this.commonLogger);\r\n        if (!account) {\r\n            return;\r\n        }\r\n        await this.removeAccountContext(account);\r\n        this.removeItem(accountKey);\r\n    }\r\n    /**\r\n     * Removes credentials associated with the provided account\r\n     * @param account\r\n     */\r\n    async removeAccountContext(account) {\r\n        const allTokenKeys = this.getTokenKeys();\r\n        const accountId = account.generateAccountId();\r\n        const removedCredentials = [];\r\n        allTokenKeys.idToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                this.removeIdToken(key);\r\n            }\r\n        });\r\n        allTokenKeys.accessToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                removedCredentials.push(this.removeAccessToken(key));\r\n            }\r\n        });\r\n        allTokenKeys.refreshToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                this.removeRefreshToken(key);\r\n            }\r\n        });\r\n        await Promise.all(removedCredentials);\r\n    }\r\n    /**\r\n     * Migrates a single-tenant account and all it's associated alternate cross-tenant account objects in the\r\n     * cache into a condensed multi-tenant account object with tenant profiles.\r\n     * @param accountKey\r\n     * @param accountEntity\r\n     * @param logger\r\n     * @returns\r\n     */\r\n    updateOutdatedCachedAccount(accountKey, accountEntity, logger) {\r\n        // Only update if account entity is defined and has no tenantProfiles object (is outdated)\r\n        if (accountEntity && accountEntity.isSingleTenant()) {\r\n            this.commonLogger?.verbose(\"updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity\");\r\n            // Get keys of all accounts belonging to user\r\n            const matchingAccountKeys = this.getAccountKeys().filter((key) => {\r\n                return key.startsWith(accountEntity.homeAccountId);\r\n            });\r\n            // Get all account entities belonging to user\r\n            const accountsToMerge = [];\r\n            matchingAccountKeys.forEach((key) => {\r\n                const account = this.getCachedAccountEntity(key);\r\n                if (account) {\r\n                    accountsToMerge.push(account);\r\n                }\r\n            });\r\n            // Set base account to home account if available, any account if not\r\n            const baseAccount = accountsToMerge.find((account) => {\r\n                return (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__.tenantIdMatchesHomeTenant)(account.realm, account.homeAccountId);\r\n            }) || accountsToMerge[0];\r\n            // Populate tenant profiles built from each account entity belonging to the user\r\n            baseAccount.tenantProfiles = accountsToMerge.map((account) => {\r\n                return {\r\n                    tenantId: account.realm,\r\n                    localAccountId: account.localAccountId,\r\n                    name: account.name,\r\n                    isHomeTenant: (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_2__.tenantIdMatchesHomeTenant)(account.realm, account.homeAccountId),\r\n                };\r\n            });\r\n            const updatedAccount = CacheManager.toObject(new _entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_9__.AccountEntity(), {\r\n                ...baseAccount,\r\n            });\r\n            const newAccountKey = updatedAccount.generateAccountKey();\r\n            // Clear cache of legacy account objects that have been collpsed into tenant profiles\r\n            matchingAccountKeys.forEach((key) => {\r\n                if (key !== newAccountKey) {\r\n                    this.removeOutdatedAccount(accountKey);\r\n                }\r\n            });\r\n            // Cache updated account object\r\n            this.setAccount(updatedAccount);\r\n            logger?.verbose(\"Updated an outdated account entity in the cache\");\r\n            return updatedAccount;\r\n        }\r\n        // No update is necessary\r\n        return accountEntity;\r\n    }\r\n    /**\r\n     * returns a boolean if the given credential is removed\r\n     * @param credential\r\n     */\r\n    async removeAccessToken(key) {\r\n        const credential = this.getAccessTokenCredential(key);\r\n        if (!credential) {\r\n            return;\r\n        }\r\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\r\n        if (credential.credentialType.toLowerCase() ===\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) {\r\n            if (credential.tokenType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.POP) {\r\n                const accessTokenWithAuthSchemeEntity = credential;\r\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\r\n                if (kid) {\r\n                    try {\r\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\r\n                    }\r\n                    catch (error) {\r\n                        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.bindingKeyNotRemoved);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.removeItem(key);\r\n    }\r\n    /**\r\n     * Removes all app metadata objects from cache.\r\n     */\r\n    removeAppMetadata() {\r\n        const allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            if (this.isAppMetadata(cacheKey)) {\r\n                this.removeItem(cacheKey);\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n    /**\r\n     * Retrieve AccountEntity from cache\r\n     * @param account\r\n     */\r\n    readAccountFromCache(account) {\r\n        const accountKey = _entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_9__.AccountEntity.generateAccountCacheKey(account);\r\n        return this.getAccount(accountKey, this.commonLogger);\r\n    }\r\n    /**\r\n     * Retrieve IdTokenEntity from cache\r\n     * @param account {AccountInfo}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param targetRealm {?string}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getIdToken(account, tokenKeys, targetRealm, performanceClient, correlationId) {\r\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\r\n        const idTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ID_TOKEN,\r\n            clientId: this.clientId,\r\n            realm: targetRealm,\r\n        };\r\n        const idTokenMap = this.getIdTokensByFilter(idTokenFilter, tokenKeys);\r\n        const numIdTokens = idTokenMap.size;\r\n        if (numIdTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\r\n            return null;\r\n        }\r\n        else if (numIdTokens > 1) {\r\n            let tokensToBeRemoved = idTokenMap;\r\n            // Multiple tenant profiles and no tenant specified, pick home account\r\n            if (!targetRealm) {\r\n                const homeIdTokenMap = new Map();\r\n                idTokenMap.forEach((idToken, key) => {\r\n                    if (idToken.realm === account.tenantId) {\r\n                        homeIdTokenMap.set(key, idToken);\r\n                    }\r\n                });\r\n                const numHomeIdTokens = homeIdTokenMap.size;\r\n                if (numHomeIdTokens < 1) {\r\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result\");\r\n                    return idTokenMap.values().next().value;\r\n                }\r\n                else if (numHomeIdTokens === 1) {\r\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile\");\r\n                    return homeIdTokenMap.values().next().value;\r\n                }\r\n                else {\r\n                    // Multiple ID tokens for home tenant profile, remove all and return null\r\n                    tokensToBeRemoved = homeIdTokenMap;\r\n                }\r\n            }\r\n            // Multiple tokens for a single tenant profile, remove all and return null\r\n            this.commonLogger.info(\"CacheManager:getIdToken - Multiple matching ID tokens found, clearing them\");\r\n            tokensToBeRemoved.forEach((idToken, key) => {\r\n                this.removeIdToken(key);\r\n            });\r\n            if (performanceClient && correlationId) {\r\n                performanceClient.addFields({ multiMatchedID: idTokenMap.size }, correlationId);\r\n            }\r\n            return null;\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning ID token\");\r\n        return idTokenMap.values().next().value;\r\n    }\r\n    /**\r\n     * Gets all idTokens matching the given filter\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    getIdTokensByFilter(filter, tokenKeys) {\r\n        const idTokenKeys = (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\r\n        const idTokens = new Map();\r\n        idTokenKeys.forEach((key) => {\r\n            if (!this.idTokenKeyMatchesFilter(key, {\r\n                clientId: this.clientId,\r\n                ...filter,\r\n            })) {\r\n                return;\r\n            }\r\n            const idToken = this.getIdTokenCredential(key);\r\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\r\n                idTokens.set(key, idToken);\r\n            }\r\n        });\r\n        return idTokens;\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    idTokenKeyMatchesFilter(inputKey, filter) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Removes idToken from the cache\r\n     * @param key\r\n     */\r\n    removeIdToken(key) {\r\n        this.removeItem(key);\r\n    }\r\n    /**\r\n     * Removes refresh token from the cache\r\n     * @param key\r\n     */\r\n    removeRefreshToken(key) {\r\n        this.removeItem(key);\r\n    }\r\n    /**\r\n     * Retrieve AccessTokenEntity from cache\r\n     * @param account {AccountInfo}\r\n     * @param request {BaseAuthRequest}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getAccessToken(account, request, tokenKeys, targetRealm, performanceClient, correlationId) {\r\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\r\n        const scopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.createSearchScopes(request.scopes);\r\n        const authScheme = request.authenticationScheme || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.BEARER;\r\n        /*\r\n         * Distinguish between Bearer and PoP/SSH token cache types\r\n         * Cast to lowercase to handle \"bearer\" from ADFS\r\n         */\r\n        const credentialType = authScheme &&\r\n            authScheme.toLowerCase() !==\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AuthenticationScheme.BEARER.toLowerCase()\r\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\r\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN;\r\n        const accessTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: credentialType,\r\n            clientId: this.clientId,\r\n            realm: targetRealm || account.tenantId,\r\n            target: scopes,\r\n            tokenType: authScheme,\r\n            keyId: request.sshKid,\r\n            requestedClaimsHash: request.requestedClaimsHash,\r\n        };\r\n        const accessTokenKeys = (tokenKeys && tokenKeys.accessToken) ||\r\n            this.getTokenKeys().accessToken;\r\n        const accessTokens = [];\r\n        accessTokenKeys.forEach((key) => {\r\n            // Validate key\r\n            if (this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)) {\r\n                const accessToken = this.getAccessTokenCredential(key);\r\n                // Validate value\r\n                if (accessToken &&\r\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)) {\r\n                    accessTokens.push(accessToken);\r\n                }\r\n            }\r\n        });\r\n        const numAccessTokens = accessTokens.length;\r\n        if (numAccessTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getAccessToken - No token found\");\r\n            return null;\r\n        }\r\n        else if (numAccessTokens > 1) {\r\n            this.commonLogger.info(\"CacheManager:getAccessToken - Multiple access tokens found, clearing them\");\r\n            accessTokens.forEach((accessToken) => {\r\n                void this.removeAccessToken((0,_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_10__.generateCredentialKey)(accessToken));\r\n            });\r\n            if (performanceClient && correlationId) {\r\n                performanceClient.addFields({ multiMatchedAT: accessTokens.length }, correlationId);\r\n            }\r\n            return null;\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getAccessToken - Returning access token\");\r\n        return accessTokens[0];\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     * @param keyMustContainAllScopes\r\n     * @returns\r\n     */\r\n    accessTokenKeyMatchesFilter(inputKey, filter, keyMustContainAllScopes) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.requestedClaimsHash &&\r\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.target) {\r\n            const scopes = filter.target.asArray();\r\n            for (let i = 0; i < scopes.length; i++) {\r\n                if (keyMustContainAllScopes &&\r\n                    !key.includes(scopes[i].toLowerCase())) {\r\n                    // When performing a cache lookup a missing scope would be a cache miss\r\n                    return false;\r\n                }\r\n                else if (!keyMustContainAllScopes &&\r\n                    key.includes(scopes[i].toLowerCase())) {\r\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Gets all access tokens matching the filter\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    getAccessTokensByFilter(filter) {\r\n        const tokenKeys = this.getTokenKeys();\r\n        const accessTokens = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\r\n                return;\r\n            }\r\n            const accessToken = this.getAccessTokenCredential(key);\r\n            if (accessToken &&\r\n                this.credentialMatchesFilter(accessToken, filter)) {\r\n                accessTokens.push(accessToken);\r\n            }\r\n        });\r\n        return accessTokens;\r\n    }\r\n    /**\r\n     * Helper to retrieve the appropriate refresh token from cache\r\n     * @param account {AccountInfo}\r\n     * @param familyRT {boolean}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getRefreshToken(account, familyRT, tokenKeys, performanceClient, correlationId) {\r\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\r\n        const id = familyRT ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.THE_FAMILY_ID : undefined;\r\n        const refreshTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.REFRESH_TOKEN,\r\n            clientId: this.clientId,\r\n            familyId: id,\r\n        };\r\n        const refreshTokenKeys = (tokenKeys && tokenKeys.refreshToken) ||\r\n            this.getTokenKeys().refreshToken;\r\n        const refreshTokens = [];\r\n        refreshTokenKeys.forEach((key) => {\r\n            // Validate key\r\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\r\n                const refreshToken = this.getRefreshTokenCredential(key);\r\n                // Validate value\r\n                if (refreshToken &&\r\n                    this.credentialMatchesFilter(refreshToken, refreshTokenFilter)) {\r\n                    refreshTokens.push(refreshToken);\r\n                }\r\n            }\r\n        });\r\n        const numRefreshTokens = refreshTokens.length;\r\n        if (numRefreshTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getRefreshToken - No refresh token found.\");\r\n            return null;\r\n        }\r\n        // address the else case after remove functions address environment aliases\r\n        if (numRefreshTokens > 1 && performanceClient && correlationId) {\r\n            performanceClient.addFields({ multiMatchedRT: numRefreshTokens }, correlationId);\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getRefreshToken - returning refresh token\");\r\n        return refreshTokens[0];\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     */\r\n    refreshTokenKeyMatchesFilter(inputKey, filter) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.familyId &&\r\n            key.indexOf(filter.familyId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        // If familyId is used, clientId is not in the key\r\n        if (!filter.familyId &&\r\n            filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Retrieve AppMetadataEntity from cache\r\n     */\r\n    readAppMetadataFromCache(environment) {\r\n        const appMetadataFilter = {\r\n            environment,\r\n            clientId: this.clientId,\r\n        };\r\n        const appMetadata = this.getAppMetadataFilteredBy(appMetadataFilter);\r\n        const appMetadataEntries = Object.keys(appMetadata).map((key) => appMetadata[key]);\r\n        const numAppMetadata = appMetadataEntries.length;\r\n        if (numAppMetadata < 1) {\r\n            return null;\r\n        }\r\n        else if (numAppMetadata > 1) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.multipleMatchingAppMetadata);\r\n        }\r\n        return appMetadataEntries[0];\r\n    }\r\n    /**\r\n     * Return the family_id value associated  with FOCI\r\n     * @param environment\r\n     * @param clientId\r\n     */\r\n    isAppMetadataFOCI(environment) {\r\n        const appMetadata = this.readAppMetadataFromCache(environment);\r\n        return !!(appMetadata && appMetadata.familyId === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.THE_FAMILY_ID);\r\n    }\r\n    /**\r\n     * helper to match account ids\r\n     * @param value\r\n     * @param homeAccountId\r\n     */\r\n    matchHomeAccountId(entity, homeAccountId) {\r\n        return !!(typeof entity.homeAccountId === \"string\" &&\r\n            homeAccountId === entity.homeAccountId);\r\n    }\r\n    /**\r\n     * helper to match account ids\r\n     * @param entity\r\n     * @param localAccountId\r\n     * @returns\r\n     */\r\n    matchLocalAccountIdFromTokenClaims(tokenClaims, localAccountId) {\r\n        const idTokenLocalAccountId = tokenClaims.oid || tokenClaims.sub;\r\n        return localAccountId === idTokenLocalAccountId;\r\n    }\r\n    matchLocalAccountIdFromTenantProfile(tenantProfile, localAccountId) {\r\n        return tenantProfile.localAccountId === localAccountId;\r\n    }\r\n    /**\r\n     * helper to match names\r\n     * @param entity\r\n     * @param name\r\n     * @returns true if the downcased name properties are present and match in the filter and the entity\r\n     */\r\n    matchName(claims, name) {\r\n        return !!(name.toLowerCase() === claims.name?.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match usernames\r\n     * @param entity\r\n     * @param username\r\n     * @returns\r\n     */\r\n    matchUsername(cachedUsername, filterUsername) {\r\n        return !!(cachedUsername &&\r\n            typeof cachedUsername === \"string\" &&\r\n            filterUsername?.toLowerCase() === cachedUsername.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match assertion\r\n     * @param value\r\n     * @param oboAssertion\r\n     */\r\n    matchUserAssertionHash(entity, userAssertionHash) {\r\n        return !!(entity.userAssertionHash &&\r\n            userAssertionHash === entity.userAssertionHash);\r\n    }\r\n    /**\r\n     * helper to match environment\r\n     * @param value\r\n     * @param environment\r\n     */\r\n    matchEnvironment(entity, environment) {\r\n        // Check static authority options first for cases where authority metadata has not been resolved and cached yet\r\n        if (this.staticAuthorityOptions) {\r\n            const staticAliases = (0,_authority_AuthorityMetadata_mjs__WEBPACK_IMPORTED_MODULE_11__.getAliasesFromStaticSources)(this.staticAuthorityOptions, this.commonLogger);\r\n            if (staticAliases.includes(environment) &&\r\n                staticAliases.includes(entity.environment)) {\r\n                return true;\r\n            }\r\n        }\r\n        // Query metadata cache if no static authority configuration has aliases that match enviroment\r\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\r\n        if (cloudMetadata &&\r\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * helper to match credential type\r\n     * @param entity\r\n     * @param credentialType\r\n     */\r\n    matchCredentialType(entity, credentialType) {\r\n        return (entity.credentialType &&\r\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match client ids\r\n     * @param entity\r\n     * @param clientId\r\n     */\r\n    matchClientId(entity, clientId) {\r\n        return !!(entity.clientId && clientId === entity.clientId);\r\n    }\r\n    /**\r\n     * helper to match family ids\r\n     * @param entity\r\n     * @param familyId\r\n     */\r\n    matchFamilyId(entity, familyId) {\r\n        return !!(entity.familyId && familyId === entity.familyId);\r\n    }\r\n    /**\r\n     * helper to match realm\r\n     * @param entity\r\n     * @param realm\r\n     */\r\n    matchRealm(entity, realm) {\r\n        return !!(entity.realm?.toLowerCase() === realm.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match nativeAccountId\r\n     * @param entity\r\n     * @param nativeAccountId\r\n     * @returns boolean indicating the match result\r\n     */\r\n    matchNativeAccountId(entity, nativeAccountId) {\r\n        return !!(entity.nativeAccountId && nativeAccountId === entity.nativeAccountId);\r\n    }\r\n    /**\r\n     * helper to match loginHint which can be either:\r\n     * 1. login_hint ID token claim\r\n     * 2. username in cached account object\r\n     * 3. upn in ID token claims\r\n     * @param entity\r\n     * @param loginHint\r\n     * @returns\r\n     */\r\n    matchLoginHintFromTokenClaims(tokenClaims, loginHint) {\r\n        if (tokenClaims.login_hint === loginHint) {\r\n            return true;\r\n        }\r\n        if (tokenClaims.preferred_username === loginHint) {\r\n            return true;\r\n        }\r\n        if (tokenClaims.upn === loginHint) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Helper to match sid\r\n     * @param entity\r\n     * @param sid\r\n     * @returns true if the sid claim is present and matches the filter\r\n     */\r\n    matchSid(idTokenClaims, sid) {\r\n        return idTokenClaims.sid === sid;\r\n    }\r\n    matchAuthorityType(entity, authorityType) {\r\n        return !!(entity.authorityType &&\r\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase());\r\n    }\r\n    /**\r\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\r\n     * @param entity\r\n     * @param target\r\n     */\r\n    matchTarget(entity, target) {\r\n        const isNotAccessTokenCredential = entity.credentialType !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN &&\r\n            entity.credentialType !==\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n        if (isNotAccessTokenCredential || !entity.target) {\r\n            return false;\r\n        }\r\n        const entityScopeSet = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_7__.ScopeSet.fromString(entity.target);\r\n        return entityScopeSet.containsScopeSet(target);\r\n    }\r\n    /**\r\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\r\n     * @param entity\r\n     * @param tokenType\r\n     */\r\n    matchTokenType(entity, tokenType) {\r\n        return !!(entity.tokenType && entity.tokenType === tokenType);\r\n    }\r\n    /**\r\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\r\n     * @param entity\r\n     * @param keyId\r\n     */\r\n    matchKeyId(entity, keyId) {\r\n        return !!(entity.keyId && entity.keyId === keyId);\r\n    }\r\n    /**\r\n     * returns if a given cache entity is of the type appmetadata\r\n     * @param key\r\n     */\r\n    isAppMetadata(key) {\r\n        return key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.APP_METADATA) !== -1;\r\n    }\r\n    /**\r\n     * returns if a given cache entity is of the type authoritymetadata\r\n     * @param key\r\n     */\r\n    isAuthorityMetadata(key) {\r\n        return key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\r\n    }\r\n    /**\r\n     * returns cache key used for cloud instance metadata\r\n     */\r\n    generateAuthorityMetadataCacheKey(authority) {\r\n        return `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_8__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\r\n    }\r\n    /**\r\n     * Helper to convert serialized data to object\r\n     * @param obj\r\n     * @param json\r\n     */\r\n    static toObject(obj, json) {\r\n        for (const propertyName in json) {\r\n            obj[propertyName] = json[propertyName];\r\n        }\r\n        return obj;\r\n    }\r\n}\r\n/** @internal */\r\nclass DefaultStorageClass extends CacheManager {\r\n    setAccount() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAccount() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getCachedAccountEntity() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setIdTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getIdTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setAccessTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAccessTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setRefreshTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getRefreshTokenCredential() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setAppMetadata() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAppMetadata() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setServerTelemetry() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getServerTelemetry() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setAuthorityMetadata() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAuthorityMetadata() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAuthorityMetadataKeys() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    setThrottlingCache() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getThrottlingCache() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    removeItem() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getKeys() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getAccountKeys() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    getTokenKeys() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    async clear() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    updateCredentialCacheKey() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n    removeOutdatedAccount() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.methodNotImplemented);\r\n    }\r\n}\n\n\n//# sourceMappingURL=CacheManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccountEntity: () => (/* binding */ AccountEntity)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../account/ClientInfo.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../account/AccountInfo.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../authority/AuthorityType.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs\");\n/* harmony import */ var _account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../account/TokenClaims.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs\");\n/* harmony import */ var _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../authority/ProtocolMode.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\r\n *\r\n * Key : Value Schema\r\n *\r\n * Key: <home_account_id>-<environment>-<realm*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\r\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\r\n *      authorityType: Accounts authority type as a string\r\n *      name: Full name for the account, including given name and family name,\r\n *      lastModificationTime: last time this entity was modified in the cache\r\n *      lastModificationApp:\r\n *      nativeAccountId: Account identifier on the native device\r\n *      tenantProfiles: Array of tenant profile objects for each tenant that the account has authenticated with in the browser\r\n * }\r\n * @internal\r\n */\r\nclass AccountEntity {\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    generateAccountId() {\r\n        const accountId = [this.homeAccountId, this.environment];\r\n        return accountId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    }\r\n    /**\r\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n     */\r\n    generateAccountKey() {\r\n        return AccountEntity.generateAccountCacheKey({\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username,\r\n            localAccountId: this.localAccountId,\r\n        });\r\n    }\r\n    /**\r\n     * Returns the AccountInfo interface for this account.\r\n     */\r\n    getAccountInfo() {\r\n        return {\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username,\r\n            localAccountId: this.localAccountId,\r\n            name: this.name,\r\n            nativeAccountId: this.nativeAccountId,\r\n            authorityType: this.authorityType,\r\n            // Deserialize tenant profiles array into a Map\r\n            tenantProfiles: new Map((this.tenantProfiles || []).map((tenantProfile) => {\r\n                return [tenantProfile.tenantId, tenantProfile];\r\n            })),\r\n        };\r\n    }\r\n    /**\r\n     * Returns true if the account entity is in single tenant format (outdated), false otherwise\r\n     */\r\n    isSingleTenant() {\r\n        return !this.tenantProfiles;\r\n    }\r\n    /**\r\n     * Generates account key from interface\r\n     * @param accountInterface\r\n     */\r\n    static generateAccountCacheKey(accountInterface) {\r\n        const homeTenantId = accountInterface.homeAccountId.split(\".\")[1];\r\n        const accountKey = [\r\n            accountInterface.homeAccountId,\r\n            accountInterface.environment || \"\",\r\n            homeTenantId || accountInterface.tenantId || \"\",\r\n        ];\r\n        return accountKey.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    }\r\n    /**\r\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\r\n     * @param accountDetails\r\n     */\r\n    static createAccount(accountDetails, authority, base64Decode) {\r\n        const account = new AccountEntity();\r\n        if (authority.authorityType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Adfs) {\r\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.ADFS_ACCOUNT_TYPE;\r\n        }\r\n        else if (authority.protocolMode === _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_2__.ProtocolMode.AAD) {\r\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.MSSTS_ACCOUNT_TYPE;\r\n        }\r\n        else {\r\n            account.authorityType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.GENERIC_ACCOUNT_TYPE;\r\n        }\r\n        let clientInfo;\r\n        if (accountDetails.clientInfo && base64Decode) {\r\n            clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_3__.buildClientInfo)(accountDetails.clientInfo, base64Decode);\r\n        }\r\n        account.clientInfo = accountDetails.clientInfo;\r\n        account.homeAccountId = accountDetails.homeAccountId;\r\n        account.nativeAccountId = accountDetails.nativeAccountId;\r\n        const env = accountDetails.environment ||\r\n            (authority && authority.getPreferredCache());\r\n        if (!env) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.invalidCacheEnvironment);\r\n        }\r\n        account.environment = env;\r\n        // non AAD scenarios can have empty realm\r\n        account.realm =\r\n            clientInfo?.utid ||\r\n                (0,_account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_6__.getTenantIdFromIdTokenClaims)(accountDetails.idTokenClaims) ||\r\n                \"\";\r\n        // How do you account for MSA CID here?\r\n        account.localAccountId =\r\n            clientInfo?.uid ||\r\n                accountDetails.idTokenClaims?.oid ||\r\n                accountDetails.idTokenClaims?.sub ||\r\n                \"\";\r\n        /*\r\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\r\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\r\n         * policy is configured to return more than 1 email.\r\n         */\r\n        const preferredUsername = accountDetails.idTokenClaims?.preferred_username ||\r\n            accountDetails.idTokenClaims?.upn;\r\n        const email = accountDetails.idTokenClaims?.emails\r\n            ? accountDetails.idTokenClaims.emails[0]\r\n            : null;\r\n        account.username = preferredUsername || email || \"\";\r\n        account.name = accountDetails.idTokenClaims?.name || \"\";\r\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\r\n        account.msGraphHost = accountDetails.msGraphHost;\r\n        if (accountDetails.tenantProfiles) {\r\n            account.tenantProfiles = accountDetails.tenantProfiles;\r\n        }\r\n        else {\r\n            const tenantProfile = (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_7__.buildTenantProfile)(accountDetails.homeAccountId, account.localAccountId, account.realm, accountDetails.idTokenClaims);\r\n            account.tenantProfiles = [tenantProfile];\r\n        }\r\n        return account;\r\n    }\r\n    /**\r\n     * Creates an AccountEntity object from AccountInfo\r\n     * @param accountInfo\r\n     * @param cloudGraphHostName\r\n     * @param msGraphHost\r\n     * @returns\r\n     */\r\n    static createFromAccountInfo(accountInfo, cloudGraphHostName, msGraphHost) {\r\n        const account = new AccountEntity();\r\n        account.authorityType =\r\n            accountInfo.authorityType || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheAccountType.GENERIC_ACCOUNT_TYPE;\r\n        account.homeAccountId = accountInfo.homeAccountId;\r\n        account.localAccountId = accountInfo.localAccountId;\r\n        account.nativeAccountId = accountInfo.nativeAccountId;\r\n        account.realm = accountInfo.tenantId;\r\n        account.environment = accountInfo.environment;\r\n        account.username = accountInfo.username;\r\n        account.name = accountInfo.name;\r\n        account.cloudGraphHostName = cloudGraphHostName;\r\n        account.msGraphHost = msGraphHost;\r\n        // Serialize tenant profiles map into an array\r\n        account.tenantProfiles = Array.from(accountInfo.tenantProfiles?.values() || []);\r\n        return account;\r\n    }\r\n    /**\r\n     * Generate HomeAccountId from server response\r\n     * @param serverClientInfo\r\n     * @param authType\r\n     */\r\n    static generateHomeAccountId(serverClientInfo, authType, logger, cryptoObj, idTokenClaims) {\r\n        // since ADFS/DSTS do not have tid and does not set client_info\r\n        if (!(authType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Adfs ||\r\n            authType === _authority_AuthorityType_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthorityType.Dsts)) {\r\n            // for cases where there is clientInfo\r\n            if (serverClientInfo) {\r\n                try {\r\n                    const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_3__.buildClientInfo)(serverClientInfo, cryptoObj.base64Decode);\r\n                    if (clientInfo.uid && clientInfo.utid) {\r\n                        return `${clientInfo.uid}.${clientInfo.utid}`;\r\n                    }\r\n                }\r\n                catch (e) { }\r\n            }\r\n            logger.warning(\"No client info in response\");\r\n        }\r\n        // default to \"sub\" claim\r\n        return idTokenClaims?.sub || \"\";\r\n    }\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    static isAccountEntity(entity) {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n            entity.hasOwnProperty(\"environment\") &&\r\n            entity.hasOwnProperty(\"realm\") &&\r\n            entity.hasOwnProperty(\"localAccountId\") &&\r\n            entity.hasOwnProperty(\"username\") &&\r\n            entity.hasOwnProperty(\"authorityType\"));\r\n    }\r\n    /**\r\n     * Helper function to determine whether 2 accountInfo objects represent the same account\r\n     * @param accountA\r\n     * @param accountB\r\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\r\n     */\r\n    static accountInfoIsEqual(accountA, accountB, compareClaims) {\r\n        if (!accountA || !accountB) {\r\n            return false;\r\n        }\r\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\r\n        if (compareClaims) {\r\n            const accountAClaims = (accountA.idTokenClaims ||\r\n                {});\r\n            const accountBClaims = (accountB.idTokenClaims ||\r\n                {});\r\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\r\n            claimsMatch =\r\n                accountAClaims.iat === accountBClaims.iat &&\r\n                    accountAClaims.nonce === accountBClaims.nonce;\r\n        }\r\n        return (accountA.homeAccountId === accountB.homeAccountId &&\r\n            accountA.localAccountId === accountB.localAccountId &&\r\n            accountA.username === accountB.username &&\r\n            accountA.tenantId === accountB.tenantId &&\r\n            accountA.environment === accountB.environment &&\r\n            accountA.nativeAccountId === accountB.nativeAccountId &&\r\n            claimsMatch);\r\n    }\r\n}\n\n\n//# sourceMappingURL=AccountEntity.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenCacheContext: () => (/* binding */ TokenCacheContext)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */ class TokenCacheContext {\r\n    constructor(tokenCache, hasChanged) {\r\n        this.cache = tokenCache;\r\n        this.hasChanged = hasChanged;\r\n    }\r\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\r\n    get cacheHasChanged() {\r\n        return this.hasChanged;\r\n    }\r\n    /**\r\n     * function to retrieve the token cache\r\n     */\r\n    get tokenCache() {\r\n        return this.cache;\r\n    }\r\n}\n\n\n//# sourceMappingURL=TokenCacheContext.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY2FjaGUvcGVyc2lzdGVuY2UvVG9rZW5DYWNoZUNvbnRleHQubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9jYWNoZS9wZXJzaXN0ZW5jZS9Ub2tlbkNhY2hlQ29udGV4dC5tanM/YTA0MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogVGhpcyBjbGFzcyBpbnN0YW5jZSBoZWxwcyB0cmFjayB0aGUgbWVtb3J5IGNoYW5nZXMgZmFjaWxpdGF0aW5nXHJcbiAqIGRlY2lzaW9ucyB0byByZWFkIGZyb20gYW5kIHdyaXRlIHRvIHRoZSBwZXJzaXN0ZW50IGNhY2hlXHJcbiAqLyBjbGFzcyBUb2tlbkNhY2hlQ29udGV4dCB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0b2tlbkNhY2hlLCBoYXNDaGFuZ2VkKSB7XHJcbiAgICAgICAgdGhpcy5jYWNoZSA9IHRva2VuQ2FjaGU7XHJcbiAgICAgICAgdGhpcy5oYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogYm9vbGVhbiB3aGljaCBpbmRpY2F0ZXMgdGhlIGNoYW5nZXMgaW4gY2FjaGVcclxuICAgICAqL1xyXG4gICAgZ2V0IGNhY2hlSGFzQ2hhbmdlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5oYXNDaGFuZ2VkO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBmdW5jdGlvbiB0byByZXRyaWV2ZSB0aGUgdG9rZW4gY2FjaGVcclxuICAgICAqL1xyXG4gICAgZ2V0IHRva2VuQ2FjaGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY2FjaGU7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgVG9rZW5DYWNoZUNvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRva2VuQ2FjaGVDb250ZXh0Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAccessTokenEntity: () => (/* binding */ createAccessTokenEntity),\n/* harmony export */   createIdTokenEntity: () => (/* binding */ createIdTokenEntity),\n/* harmony export */   createRefreshTokenEntity: () => (/* binding */ createRefreshTokenEntity),\n/* harmony export */   generateAppMetadataKey: () => (/* binding */ generateAppMetadataKey),\n/* harmony export */   generateAuthorityMetadataExpiresAt: () => (/* binding */ generateAuthorityMetadataExpiresAt),\n/* harmony export */   generateCredentialKey: () => (/* binding */ generateCredentialKey),\n/* harmony export */   isAccessTokenEntity: () => (/* binding */ isAccessTokenEntity),\n/* harmony export */   isAppMetadataEntity: () => (/* binding */ isAppMetadataEntity),\n/* harmony export */   isAuthorityMetadataEntity: () => (/* binding */ isAuthorityMetadataEntity),\n/* harmony export */   isAuthorityMetadataExpired: () => (/* binding */ isAuthorityMetadataExpired),\n/* harmony export */   isCredentialEntity: () => (/* binding */ isCredentialEntity),\n/* harmony export */   isIdTokenEntity: () => (/* binding */ isIdTokenEntity),\n/* harmony export */   isRefreshTokenEntity: () => (/* binding */ isRefreshTokenEntity),\n/* harmony export */   isServerTelemetryEntity: () => (/* binding */ isServerTelemetryEntity),\n/* harmony export */   isThrottlingEntity: () => (/* binding */ isThrottlingEntity),\n/* harmony export */   updateAuthorityEndpointMetadata: () => (/* binding */ updateAuthorityEndpointMetadata),\n/* harmony export */   updateCloudDiscoveryMetadata: () => (/* binding */ updateCloudDiscoveryMetadata)\n/* harmony export */ });\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../account/AuthToken.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/TimeUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Cache Key: <home_account_id>-<environment>-<credential_type>-<client_id or familyId>-<realm>-<scopes>-<claims hash>-<scheme>\r\n * IdToken Example: uid.utid-login.microsoftonline.com-idtoken-app_client_id-contoso.com\r\n * AccessToken Example: uid.utid-login.microsoftonline.com-accesstoken-app_client_id-contoso.com-scope1 scope2--pop\r\n * RefreshToken Example: uid.utid-login.microsoftonline.com-refreshtoken-1-contoso.com\r\n * @param credentialEntity\r\n * @returns\r\n */\r\nfunction generateCredentialKey(credentialEntity) {\r\n    const credentialKey = [\r\n        generateAccountId(credentialEntity),\r\n        generateCredentialId(credentialEntity),\r\n        generateTarget(credentialEntity),\r\n        generateClaimsHash(credentialEntity),\r\n        generateScheme(credentialEntity),\r\n    ];\r\n    return credentialKey.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n/**\r\n * Create IdTokenEntity\r\n * @param homeAccountId\r\n * @param authenticationResult\r\n * @param clientId\r\n * @param authority\r\n */\r\nfunction createIdTokenEntity(homeAccountId, environment, idToken, clientId, tenantId) {\r\n    const idTokenEntity = {\r\n        credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN,\r\n        homeAccountId: homeAccountId,\r\n        environment: environment,\r\n        clientId: clientId,\r\n        secret: idToken,\r\n        realm: tenantId,\r\n    };\r\n    return idTokenEntity;\r\n}\r\n/**\r\n * Create AccessTokenEntity\r\n * @param homeAccountId\r\n * @param environment\r\n * @param accessToken\r\n * @param clientId\r\n * @param tenantId\r\n * @param scopes\r\n * @param expiresOn\r\n * @param extExpiresOn\r\n */\r\nfunction createAccessTokenEntity(homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn, base64Decode, refreshOn, tokenType, userAssertionHash, keyId, requestedClaims, requestedClaimsHash) {\r\n    const atEntity = {\r\n        homeAccountId: homeAccountId,\r\n        credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN,\r\n        secret: accessToken,\r\n        cachedAt: (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.nowSeconds)().toString(),\r\n        expiresOn: expiresOn.toString(),\r\n        extendedExpiresOn: extExpiresOn.toString(),\r\n        environment: environment,\r\n        clientId: clientId,\r\n        realm: tenantId,\r\n        target: scopes,\r\n        tokenType: tokenType || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER,\r\n    };\r\n    if (userAssertionHash) {\r\n        atEntity.userAssertionHash = userAssertionHash;\r\n    }\r\n    if (refreshOn) {\r\n        atEntity.refreshOn = refreshOn.toString();\r\n    }\r\n    if (requestedClaims) {\r\n        atEntity.requestedClaims = requestedClaims;\r\n        atEntity.requestedClaimsHash = requestedClaimsHash;\r\n    }\r\n    /*\r\n     * Create Access Token With Auth Scheme instead of regular access token\r\n     * Cast to lower to handle \"bearer\" from ADFS\r\n     */\r\n    if (atEntity.tokenType?.toLowerCase() !==\r\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER.toLowerCase()) {\r\n        atEntity.credentialType = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n        switch (atEntity.tokenType) {\r\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.POP:\r\n                // Make sure keyId is present and add it to credential\r\n                const tokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_2__.extractTokenClaims)(accessToken, base64Decode);\r\n                if (!tokenClaims?.cnf?.kid) {\r\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenClaimsCnfRequiredForSignedJwt);\r\n                }\r\n                atEntity.keyId = tokenClaims.cnf.kid;\r\n                break;\r\n            case _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.SSH:\r\n                atEntity.keyId = keyId;\r\n        }\r\n    }\r\n    return atEntity;\r\n}\r\n/**\r\n * Create RefreshTokenEntity\r\n * @param homeAccountId\r\n * @param authenticationResult\r\n * @param clientId\r\n * @param authority\r\n */\r\nfunction createRefreshTokenEntity(homeAccountId, environment, refreshToken, clientId, familyId, userAssertionHash, expiresOn) {\r\n    const rtEntity = {\r\n        credentialType: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN,\r\n        homeAccountId: homeAccountId,\r\n        environment: environment,\r\n        clientId: clientId,\r\n        secret: refreshToken,\r\n    };\r\n    if (userAssertionHash) {\r\n        rtEntity.userAssertionHash = userAssertionHash;\r\n    }\r\n    if (familyId) {\r\n        rtEntity.familyId = familyId;\r\n    }\r\n    if (expiresOn) {\r\n        rtEntity.expiresOn = expiresOn.toString();\r\n    }\r\n    return rtEntity;\r\n}\r\nfunction isCredentialEntity(entity) {\r\n    return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n        entity.hasOwnProperty(\"environment\") &&\r\n        entity.hasOwnProperty(\"credentialType\") &&\r\n        entity.hasOwnProperty(\"clientId\") &&\r\n        entity.hasOwnProperty(\"secret\"));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAccessTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity.hasOwnProperty(\"realm\") &&\r\n        entity.hasOwnProperty(\"target\") &&\r\n        (entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN ||\r\n            entity[\"credentialType\"] ===\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isIdTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity.hasOwnProperty(\"realm\") &&\r\n        entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.ID_TOKEN);\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isRefreshTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity[\"credentialType\"] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN);\r\n}\r\n/**\r\n * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n */\r\nfunction generateAccountId(credentialEntity) {\r\n    const accountId = [\r\n        credentialEntity.homeAccountId,\r\n        credentialEntity.environment,\r\n    ];\r\n    return accountId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n/**\r\n * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\r\n */\r\nfunction generateCredentialId(credentialEntity) {\r\n    const clientOrFamilyId = credentialEntity.credentialType === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CredentialType.REFRESH_TOKEN\r\n        ? credentialEntity.familyId || credentialEntity.clientId\r\n        : credentialEntity.clientId;\r\n    const credentialId = [\r\n        credentialEntity.credentialType,\r\n        clientOrFamilyId,\r\n        credentialEntity.realm || \"\",\r\n    ];\r\n    return credentialId.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n/**\r\n * Generate target key component as per schema: <target>\r\n */\r\nfunction generateTarget(credentialEntity) {\r\n    return (credentialEntity.target || \"\").toLowerCase();\r\n}\r\n/**\r\n * Generate requested claims key component as per schema: <requestedClaims>\r\n */\r\nfunction generateClaimsHash(credentialEntity) {\r\n    return (credentialEntity.requestedClaimsHash || \"\").toLowerCase();\r\n}\r\n/**\r\n * Generate scheme key componenet as per schema: <scheme>\r\n */\r\nfunction generateScheme(credentialEntity) {\r\n    /*\r\n     * PoP Tokens and SSH certs include scheme in cache key\r\n     * Cast to lowercase to handle \"bearer\" from ADFS\r\n     */\r\n    return credentialEntity.tokenType &&\r\n        credentialEntity.tokenType.toLowerCase() !==\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthenticationScheme.BEARER.toLowerCase()\r\n        ? credentialEntity.tokenType.toLowerCase()\r\n        : \"\";\r\n}\r\n/**\r\n * validates if a given cache entry is \"Telemetry\", parses <key,value>\r\n * @param key\r\n * @param entity\r\n */\r\nfunction isServerTelemetryEntity(key, entity) {\r\n    const validateKey = key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\r\n    let validateEntity = true;\r\n    if (entity) {\r\n        validateEntity =\r\n            entity.hasOwnProperty(\"failedRequests\") &&\r\n                entity.hasOwnProperty(\"errors\") &&\r\n                entity.hasOwnProperty(\"cacheHits\");\r\n    }\r\n    return validateKey && validateEntity;\r\n}\r\n/**\r\n * validates if a given cache entry is \"Throttling\", parses <key,value>\r\n * @param key\r\n * @param entity\r\n */\r\nfunction isThrottlingEntity(key, entity) {\r\n    let validateKey = false;\r\n    if (key) {\r\n        validateKey = key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.THROTTLING_PREFIX) === 0;\r\n    }\r\n    let validateEntity = true;\r\n    if (entity) {\r\n        validateEntity = entity.hasOwnProperty(\"throttleTime\");\r\n    }\r\n    return validateKey && validateEntity;\r\n}\r\n/**\r\n * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\r\n */\r\nfunction generateAppMetadataKey({ environment, clientId, }) {\r\n    const appMetaDataKeyArray = [\r\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.APP_METADATA,\r\n        environment,\r\n        clientId,\r\n    ];\r\n    return appMetaDataKeyArray\r\n        .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR)\r\n        .toLowerCase();\r\n}\r\n/*\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAppMetadataEntity(key, entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.APP_METADATA) === 0 &&\r\n        entity.hasOwnProperty(\"clientId\") &&\r\n        entity.hasOwnProperty(\"environment\"));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAuthorityMetadataEntity(key, entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (key.indexOf(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\r\n        entity.hasOwnProperty(\"aliases\") &&\r\n        entity.hasOwnProperty(\"preferred_cache\") &&\r\n        entity.hasOwnProperty(\"preferred_network\") &&\r\n        entity.hasOwnProperty(\"canonical_authority\") &&\r\n        entity.hasOwnProperty(\"authorization_endpoint\") &&\r\n        entity.hasOwnProperty(\"token_endpoint\") &&\r\n        entity.hasOwnProperty(\"issuer\") &&\r\n        entity.hasOwnProperty(\"aliasesFromNetwork\") &&\r\n        entity.hasOwnProperty(\"endpointsFromNetwork\") &&\r\n        entity.hasOwnProperty(\"expiresAt\") &&\r\n        entity.hasOwnProperty(\"jwks_uri\"));\r\n}\r\n/**\r\n * Reset the exiresAt value\r\n */\r\nfunction generateAuthorityMetadataExpiresAt() {\r\n    return ((0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.nowSeconds)() +\r\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS);\r\n}\r\nfunction updateAuthorityEndpointMetadata(authorityMetadata, updatedValues, fromNetwork) {\r\n    authorityMetadata.authorization_endpoint =\r\n        updatedValues.authorization_endpoint;\r\n    authorityMetadata.token_endpoint = updatedValues.token_endpoint;\r\n    authorityMetadata.end_session_endpoint = updatedValues.end_session_endpoint;\r\n    authorityMetadata.issuer = updatedValues.issuer;\r\n    authorityMetadata.endpointsFromNetwork = fromNetwork;\r\n    authorityMetadata.jwks_uri = updatedValues.jwks_uri;\r\n}\r\nfunction updateCloudDiscoveryMetadata(authorityMetadata, updatedValues, fromNetwork) {\r\n    authorityMetadata.aliases = updatedValues.aliases;\r\n    authorityMetadata.preferred_cache = updatedValues.preferred_cache;\r\n    authorityMetadata.preferred_network = updatedValues.preferred_network;\r\n    authorityMetadata.aliasesFromNetwork = fromNetwork;\r\n}\r\n/**\r\n * Returns whether or not the data needs to be refreshed\r\n */\r\nfunction isAuthorityMetadataExpired(metadata) {\r\n    return metadata.expiresAt <= (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_1__.nowSeconds)();\r\n}\n\n\n//# sourceMappingURL=CacheHelpers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthorizationCodeClient: () => (/* binding */ AuthorizationCodeClient)\n/* harmony export */ });\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../constants/AADServerParamKeys.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _request_RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../request/RequestValidator.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../utils/ClientAssertionUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Oauth2.0 Authorization Code client\r\n * @internal\r\n */\r\nclass AuthorizationCodeClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n        // Flag to indicate if client is for hybrid spa auth code redemption\r\n        this.includeRedirectUri = true;\r\n        this.oidcDefaultScopes =\r\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\r\n    }\r\n    /**\r\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\r\n     * application. The URL target the /authorize endpoint of the authority configured in the\r\n     * application object.\r\n     *\r\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n     * acquireToken(AuthorizationCodeRequest)\r\n     * @param request\r\n     */\r\n    async getAuthCodeUrl(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.GetAuthCodeUrl, request.correlationId);\r\n        const queryString = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.createAuthCodeUrlQueryString.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateQueryString, this.logger, this.performanceClient, request.correlationId)(request);\r\n        return _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(this.authority.authorizationEndpoint, queryString);\r\n    }\r\n    /**\r\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\r\n     * authorization_code_grant\r\n     * @param request\r\n     */\r\n    async acquireToken(request, authCodePayload) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientAcquireToken, request.correlationId);\r\n        if (!request.code) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.requestCannotBeMade);\r\n        }\r\n        const reqTimestamp = (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.nowSeconds)();\r\n        const response = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.executeTokenRequest.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(this.authority, request);\r\n        // Retrieve requestId from response headers\r\n        const requestId = response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.HeaderNames.X_MS_REQUEST_ID];\r\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin, this.performanceClient);\r\n        // Validate response. This function throws a server error if an error is returned by the server.\r\n        responseHandler.validateTokenResponse(response.body);\r\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(responseHandler.handleServerTokenResponse.bind(responseHandler), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, authCodePayload, undefined, undefined, undefined, requestId);\r\n    }\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    handleFragmentResponse(serverParams, cachedState) {\r\n        // Handle responses.\r\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_8__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, null, null);\r\n        // Get code response\r\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState);\r\n        // throw when there is no auth code in the response\r\n        if (!serverParams.code) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.authorizationCodeMissingFromServerResponse);\r\n        }\r\n        return serverParams;\r\n    }\r\n    /**\r\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    getLogoutUri(logoutRequest) {\r\n        // Throw error if logoutRequest is null/undefined\r\n        if (!logoutRequest) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_9__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_10__.logoutRequestEmpty);\r\n        }\r\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\r\n        // Construct logout URI\r\n        return _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\r\n    }\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority\r\n     * @param request\r\n     */\r\n    async executeTokenRequest(authority, request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientExecuteTokenRequest, request.correlationId);\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_3__.UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n        const requestBody = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.createTokenRequestBody.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\r\n        let ccsCredential = undefined;\r\n        if (request.clientInfo) {\r\n            try {\r\n                const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfo)(request.clientInfo, this.cryptoUtils.base64Decode);\r\n                ccsCredential = {\r\n                    credential: `${clientInfo.uid}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\r\n                    type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.HOME_ACCOUNT_ID,\r\n                };\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\r\n            }\r\n        }\r\n        const headers = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\r\n        const thumbprint = {\r\n            clientId: request.tokenBodyParameters?.clientId ||\r\n                this.config.authOptions.clientId,\r\n            authority: authority.canonicalAuthority,\r\n            scopes: request.scopes,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(this.executePostToTokenEndpoint.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint);\r\n    }\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request\r\n     */\r\n    async createTokenRequestBody(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateTokenRequestBody, request.correlationId);\r\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__.RequestParameterBuilder();\r\n        parameterBuilder.addClientId(request.tokenBodyParameters?.[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.CLIENT_ID] ||\r\n            this.config.authOptions.clientId);\r\n        /*\r\n         * For hybrid spa flow, there will be a code but no verifier\r\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\r\n         */\r\n        if (!this.includeRedirectUri) {\r\n            // Just validate\r\n            _request_RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_15__.RequestValidator.validateRedirectUri(request.redirectUri);\r\n        }\r\n        else {\r\n            // Validate and include redirect uri\r\n            parameterBuilder.addRedirectUri(request.redirectUri);\r\n        }\r\n        // Add scope array, parameter builder will add default scopes and dedupe\r\n        parameterBuilder.addScopes(request.scopes, true, this.oidcDefaultScopes);\r\n        // add code: user set, not validated\r\n        parameterBuilder.addAuthorizationCode(request.code);\r\n        // Add library metadata\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\r\n        parameterBuilder.addThrottling();\r\n        if (this.serverTelemetryManager && !(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_16__.isOidcProtocolMode)(this.config)) {\r\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n        }\r\n        // add code_verifier if passed\r\n        if (request.codeVerifier) {\r\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\r\n        }\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            parameterBuilder.addClientAssertion(await (0,_utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_17__.getClientAssertion)(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\r\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n        }\r\n        parameterBuilder.addGrantType(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.GrantType.AUTHORIZATION_CODE_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthenticationScheme.POP) {\r\n            const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_18__.PopTokenGenerator(this.cryptoUtils, this.performanceClient);\r\n            let reqCnfData;\r\n            if (!request.popKid) {\r\n                const generatedReqCnfData = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(popTokenGenerator.generateCnf.bind(popTokenGenerator), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n            }\r\n            else {\r\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n            }\r\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n            parameterBuilder.addPopToken(reqCnfData);\r\n        }\r\n        else if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthenticationScheme.SSH) {\r\n            if (request.sshJwk) {\r\n                parameterBuilder.addSshJwk(request.sshJwk);\r\n            }\r\n            else {\r\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_9__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_10__.missingSshJwk);\r\n            }\r\n        }\r\n        const correlationId = request.correlationId ||\r\n            this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_19__.StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        let ccsCred = undefined;\r\n        if (request.clientInfo) {\r\n            try {\r\n                const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfo)(request.clientInfo, this.cryptoUtils.base64Decode);\r\n                ccsCred = {\r\n                    credential: `${clientInfo.uid}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\r\n                    type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.HOME_ACCOUNT_ID,\r\n                };\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\r\n            }\r\n        }\r\n        else {\r\n            ccsCred = request.ccsCredential;\r\n        }\r\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\r\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n            switch (ccsCred.type) {\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(ccsCred.credential);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_12__.CcsCredentialType.UPN:\r\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\r\n                    break;\r\n            }\r\n        }\r\n        if (request.tokenBodyParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\r\n        }\r\n        // Add hybrid spa parameters if not already provided\r\n        if (request.enableSpaAuthorizationCode &&\r\n            (!request.tokenBodyParameters ||\r\n                !request.tokenBodyParameters[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.RETURN_SPA_CODE])) {\r\n            parameterBuilder.addExtraQueryParameters({\r\n                [_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.RETURN_SPA_CODE]: \"1\",\r\n            });\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n    /**\r\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    async createAuthCodeUrlQueryString(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.AuthClientCreateQueryString, request.correlationId);\r\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__.RequestParameterBuilder();\r\n        parameterBuilder.addClientId(request.extraQueryParameters?.[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_14__.CLIENT_ID] ||\r\n            this.config.authOptions.clientId);\r\n        const requestScopes = [\r\n            ...(request.scopes || []),\r\n            ...(request.extraScopesToConsent || []),\r\n        ];\r\n        parameterBuilder.addScopes(requestScopes, true, this.oidcDefaultScopes);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        // generate the correlationId if not set by the user and add\r\n        const correlationId = request.correlationId ||\r\n            this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        // add response_mode. If not passed in it defaults to query.\r\n        parameterBuilder.addResponseMode(request.responseMode);\r\n        // add response_type = code\r\n        parameterBuilder.addResponseTypeCode();\r\n        // add library info parameters\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        if (!(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_16__.isOidcProtocolMode)(this.config)) {\r\n            parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\r\n        }\r\n        // add client_info=1\r\n        parameterBuilder.addClientInfo();\r\n        if (request.codeChallenge && request.codeChallengeMethod) {\r\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\r\n        }\r\n        if (request.prompt) {\r\n            parameterBuilder.addPrompt(request.prompt);\r\n        }\r\n        if (request.domainHint) {\r\n            parameterBuilder.addDomainHint(request.domainHint);\r\n        }\r\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\r\n        if (request.prompt !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.PromptValue.SELECT_ACCOUNT) {\r\n            // AAD will throw if prompt=select_account is passed with an account hint\r\n            if (request.sid && request.prompt === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.PromptValue.NONE) {\r\n                // SessionID is only used in silent calls\r\n                this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\r\n                parameterBuilder.addSid(request.sid);\r\n            }\r\n            else if (request.account) {\r\n                const accountSid = this.extractAccountSid(request.account);\r\n                let accountLoginHintClaim = this.extractLoginHint(request.account);\r\n                if (accountLoginHintClaim && request.domainHint) {\r\n                    this.logger.warning(`AuthorizationCodeClient.createAuthCodeUrlQueryString: \"domainHint\" param is set, skipping opaque \"login_hint\" claim. Please consider not passing domainHint`);\r\n                    accountLoginHintClaim = null;\r\n                }\r\n                // If login_hint claim is present, use it over sid/username\r\n                if (accountLoginHintClaim) {\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: login_hint claim present on account\");\r\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                    }\r\n                }\r\n                else if (accountSid && request.prompt === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.PromptValue.NONE) {\r\n                    /*\r\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\r\n                     * SessionId is only used in silent calls\r\n                     */\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\r\n                    parameterBuilder.addSid(accountSid);\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                    }\r\n                }\r\n                else if (request.loginHint) {\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\r\n                    parameterBuilder.addLoginHint(request.loginHint);\r\n                    parameterBuilder.addCcsUpn(request.loginHint);\r\n                }\r\n                else if (request.account.username) {\r\n                    // Fallback to account username if provided\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\r\n                    parameterBuilder.addLoginHint(request.account.username);\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_11__.buildClientInfoFromHomeAccountId)(request.account.homeAccountId);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                    }\r\n                }\r\n            }\r\n            else if (request.loginHint) {\r\n                this.logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\r\n                parameterBuilder.addLoginHint(request.loginHint);\r\n                parameterBuilder.addCcsUpn(request.loginHint);\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\r\n        }\r\n        if (request.nonce) {\r\n            parameterBuilder.addNonce(request.nonce);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.claims ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        this.addExtraQueryParams(request, parameterBuilder);\r\n        if (request.nativeBroker) {\r\n            // signal ests that this is a WAM call\r\n            parameterBuilder.addNativeBroker();\r\n            // pass the req_cnf for POP\r\n            if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_7__.AuthenticationScheme.POP) {\r\n                const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_18__.PopTokenGenerator(this.cryptoUtils);\r\n                // req_cnf is always sent as a string for SPAs\r\n                let reqCnfData;\r\n                if (!request.popKid) {\r\n                    const generatedReqCnfData = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_2__.invokeAsync)(popTokenGenerator.generateCnf.bind(popTokenGenerator), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\r\n                    reqCnfData = generatedReqCnfData.reqCnfString;\r\n                }\r\n                else {\r\n                    reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n                }\r\n                parameterBuilder.addPopToken(reqCnfData);\r\n            }\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n    /**\r\n     * This API validates the `EndSessionRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    createLogoutUrlQueryString(request) {\r\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_13__.RequestParameterBuilder();\r\n        if (request.postLogoutRedirectUri) {\r\n            parameterBuilder.addPostLogoutRedirectUri(request.postLogoutRedirectUri);\r\n        }\r\n        if (request.correlationId) {\r\n            parameterBuilder.addCorrelationId(request.correlationId);\r\n        }\r\n        if (request.idTokenHint) {\r\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.logoutHint) {\r\n            parameterBuilder.addLogoutHint(request.logoutHint);\r\n        }\r\n        this.addExtraQueryParams(request, parameterBuilder);\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n    addExtraQueryParams(request, parameterBuilder) {\r\n        const hasRequestInstanceAware = request.extraQueryParameters &&\r\n            request.extraQueryParameters.hasOwnProperty(\"instance_aware\");\r\n        // Set instance_aware flag if config auth param is set\r\n        if (!hasRequestInstanceAware && this.config.authOptions.instanceAware) {\r\n            request.extraQueryParameters = request.extraQueryParameters || {};\r\n            request.extraQueryParameters[\"instance_aware\"] = \"true\";\r\n        }\r\n        if (request.extraQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\r\n        }\r\n    }\r\n    /**\r\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\r\n     * @param account\r\n     */\r\n    extractAccountSid(account) {\r\n        return account.idTokenClaims?.sid || null;\r\n    }\r\n    extractLoginHint(account) {\r\n        return account.idTokenClaims?.login_hint || null;\r\n    }\r\n}\n\n\n//# sourceMappingURL=AuthorizationCodeClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/BaseClient.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseClient: () => (/* binding */ BaseClient)\n/* harmony export */ });\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _network_NetworkManager_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../network/NetworkManager.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs\");\n/* harmony import */ var _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger/Logger.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _authority_AuthorityFactory_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../authority/AuthorityFactory.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n * @internal\r\n */\r\nclass BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        // Set the configuration\r\n        this.config = (0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_0__.buildClientConfiguration)(configuration);\r\n        // Initialize the logger\r\n        this.logger = new _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__.Logger(this.config.loggerOptions, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.name, _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_2__.version);\r\n        // Initialize crypto\r\n        this.cryptoUtils = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheManager = this.config.storageInterface;\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n        // Set the NetworkManager\r\n        this.networkManager = new _network_NetworkManager_mjs__WEBPACK_IMPORTED_MODULE_3__.NetworkManager(this.networkClient, this.cacheManager);\r\n        // Set TelemetryManager\r\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\r\n        // set Authority\r\n        this.authority = this.config.authOptions.authority;\r\n        // set performance telemetry client\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Creates default headers for requests to token endpoint\r\n     */\r\n    createTokenRequestHeaders(ccsCred) {\r\n        const headers = {};\r\n        headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.CONTENT_TYPE] = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.URL_FORM_CONTENT_TYPE;\r\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n            switch (ccsCred.type) {\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_5__.CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_6__.buildClientInfoFromHomeAccountId)(ccsCred.credential);\r\n                        headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_5__.CcsCredentialType.UPN:\r\n                    headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;\r\n                    break;\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n    /**\r\n     * Http post to token endpoint\r\n     * @param tokenEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     * @param thumbprint\r\n     */\r\n    async executePostToTokenEndpoint(tokenEndpoint, queryString, headers, thumbprint, correlationId, queuedEvent) {\r\n        if (queuedEvent) {\r\n            this.performanceClient?.addQueueMeasurement(queuedEvent, correlationId);\r\n        }\r\n        const response = await this.networkManager.sendPostRequest(thumbprint, tokenEndpoint, { body: queryString, headers: headers });\r\n        this.performanceClient?.addFields({\r\n            refreshTokenSize: response.body.refresh_token?.length || 0,\r\n            httpVerToken: response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.X_MS_HTTP_VERSION] || \"\",\r\n        }, correlationId);\r\n        if (this.config.serverTelemetryManager &&\r\n            response.status < 500 &&\r\n            response.status !== 429) {\r\n            // Telemetry data successfully logged by server, clear Telemetry cache\r\n            this.config.serverTelemetryManager.clearTelemetryCache();\r\n        }\r\n        return response;\r\n    }\r\n    /**\r\n     * Updates the authority object of the client. Endpoint discovery must be completed.\r\n     * @param updatedAuthority\r\n     */\r\n    async updateAuthority(cloudInstanceHostname, correlationId) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_7__.PerformanceEvents.UpdateTokenEndpointAuthority, correlationId);\r\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${this.authority.tenant}/`;\r\n        const cloudInstanceAuthority = await (0,_authority_AuthorityFactory_mjs__WEBPACK_IMPORTED_MODULE_8__.createDiscoveredInstance)(cloudInstanceAuthorityUri, this.networkClient, this.cacheManager, this.authority.options, this.logger, correlationId, this.performanceClient);\r\n        this.authority = cloudInstanceAuthority;\r\n    }\r\n    /**\r\n     * Creates query string for the /token request\r\n     * @param request\r\n     */\r\n    createTokenQueryParameters(request) {\r\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_9__.RequestParameterBuilder();\r\n        if (request.tokenQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n}\n\n\n//# sourceMappingURL=BaseClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs":
/*!****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RefreshTokenClient: () => (/* binding */ RefreshTokenClient)\n/* harmony export */ });\n/* harmony import */ var _config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../config/ClientConfiguration.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\");\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../request/RequestParameterBuilder.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../constants/AADServerParamKeys.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../account/CcsCredential.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs\");\n/* harmony import */ var _account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../account/ClientInfo.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../error/InteractionRequiredAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../cache/utils/CacheHelpers.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../utils/ClientAssertionUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../error/InteractionRequiredAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS = 300; // 5 Minutes\r\n/**\r\n * OAuth2.0 refresh token client\r\n * @internal\r\n */\r\nclass RefreshTokenClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n    }\r\n    async acquireToken(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\r\n        const reqTimestamp = (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.nowSeconds)();\r\n        const response = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.executeTokenRequest.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(request, this.authority);\r\n        // Retrieve requestId from response headers\r\n        const requestId = response.headers?.[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HeaderNames.X_MS_REQUEST_ID];\r\n        const responseHandler = new _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_5__.ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n        responseHandler.validateTokenResponse(response.body);\r\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(responseHandler.handleServerTokenResponse.bind(responseHandler), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId);\r\n    }\r\n    /**\r\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\r\n     * @param request\r\n     */\r\n    async acquireTokenByRefreshToken(request) {\r\n        // Cannot renew token if no request object is given.\r\n        if (!request) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_6__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__.tokenRequestEmpty);\r\n        }\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\r\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n        if (!request.account) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_8__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_9__.noAccountInSilentRequest);\r\n        }\r\n        // try checking if FOCI is enabled for the given application\r\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment);\r\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\r\n        if (isFOCI) {\r\n            try {\r\n                return await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireTokenWithCachedRefreshToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, true);\r\n            }\r\n            catch (e) {\r\n                const noFamilyRTInCache = e instanceof _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.InteractionRequiredAuthError &&\r\n                    e.errorCode ===\r\n                        _error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.noTokensFound;\r\n                const clientMismatchErrorWithFamilyRT = e instanceof _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_12__.ServerError &&\r\n                    e.errorCode === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Errors.INVALID_GRANT_ERROR &&\r\n                    e.subError === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Errors.CLIENT_MISMATCH_ERROR;\r\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\r\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\r\n                    return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireTokenWithCachedRefreshToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\r\n                    // throw in all other cases\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        // fall back to application refresh token acquisition\r\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireTokenWithCachedRefreshToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\r\n    }\r\n    /**\r\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\r\n     * @param request\r\n     */\r\n    async acquireTokenWithCachedRefreshToken(request, foci) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\r\n        // fetches family RT or application RT based on FOCI value\r\n        const refreshToken = (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invoke)(this.cacheManager.getRefreshToken.bind(this.cacheManager), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.CacheManagerGetRefreshToken, this.logger, this.performanceClient, request.correlationId)(request.account, foci, undefined, this.performanceClient, request.correlationId);\r\n        if (!refreshToken) {\r\n            throw (0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.createInteractionRequiredAuthError)(_error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.noTokensFound);\r\n        }\r\n        if (refreshToken.expiresOn &&\r\n            (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.isTokenExpired)(refreshToken.expiresOn, request.refreshTokenExpirationOffsetSeconds ||\r\n                DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS)) {\r\n            throw (0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.createInteractionRequiredAuthError)(_error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.refreshTokenExpired);\r\n        }\r\n        // attach cached RT size to the current measurement\r\n        const refreshTokenRequest = {\r\n            ...request,\r\n            refreshToken: refreshToken.secret,\r\n            authenticationScheme: request.authenticationScheme || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.BEARER,\r\n            ccsCredential: {\r\n                credential: request.account.homeAccountId,\r\n                type: _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__.CcsCredentialType.HOME_ACCOUNT_ID,\r\n            },\r\n        };\r\n        try {\r\n            return await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.acquireToken.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(refreshTokenRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_10__.InteractionRequiredAuthError &&\r\n                e.subError === _error_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_11__.badToken) {\r\n                // Remove bad refresh token from cache\r\n                this.logger.verbose(\"acquireTokenWithRefreshToken: bad refresh token, removing from cache\");\r\n                const badRefreshTokenKey = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_14__.generateCredentialKey)(refreshToken);\r\n                this.cacheManager.removeRefreshToken(badRefreshTokenKey);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Constructs the network message and makes a NW call to the underlying secure token service\r\n     * @param request\r\n     * @param authority\r\n     */\r\n    async executeTokenRequest(request, authority) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_15__.UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n        const requestBody = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.createTokenRequestBody.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\r\n        const headers = this.createTokenRequestHeaders(request.ccsCredential);\r\n        const thumbprint = {\r\n            clientId: request.tokenBodyParameters?.clientId ||\r\n                this.config.authOptions.clientId,\r\n            authority: authority.canonicalAuthority,\r\n            scopes: request.scopes,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n        return (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(this.executePostToTokenEndpoint.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint);\r\n    }\r\n    /**\r\n     * Helper function to create the token request body\r\n     * @param request\r\n     */\r\n    async createTokenRequestBody(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\r\n        const correlationId = request.correlationId;\r\n        const parameterBuilder = new _request_RequestParameterBuilder_mjs__WEBPACK_IMPORTED_MODULE_16__.RequestParameterBuilder();\r\n        parameterBuilder.addClientId(request.tokenBodyParameters?.[_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_17__.CLIENT_ID] ||\r\n            this.config.authOptions.clientId);\r\n        if (request.redirectUri) {\r\n            parameterBuilder.addRedirectUri(request.redirectUri);\r\n        }\r\n        parameterBuilder.addScopes(request.scopes, true, this.config.authOptions.authority.options.OIDCOptions?.defaultScopes);\r\n        parameterBuilder.addGrantType(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.GrantType.REFRESH_TOKEN_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\r\n        parameterBuilder.addThrottling();\r\n        if (this.serverTelemetryManager && !(0,_config_ClientConfiguration_mjs__WEBPACK_IMPORTED_MODULE_18__.isOidcProtocolMode)(this.config)) {\r\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n        }\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        parameterBuilder.addRefreshToken(request.refreshToken);\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            parameterBuilder.addClientAssertion(await (0,_utils_ClientAssertionUtils_mjs__WEBPACK_IMPORTED_MODULE_19__.getClientAssertion)(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\r\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n        }\r\n        if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.POP) {\r\n            const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_20__.PopTokenGenerator(this.cryptoUtils, this.performanceClient);\r\n            let reqCnfData;\r\n            if (!request.popKid) {\r\n                const generatedReqCnfData = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_3__.invokeAsync)(popTokenGenerator.generateCnf.bind(popTokenGenerator), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_1__.PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n            }\r\n            else {\r\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n            }\r\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n            parameterBuilder.addPopToken(reqCnfData);\r\n        }\r\n        else if (request.authenticationScheme === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.SSH) {\r\n            if (request.sshJwk) {\r\n                parameterBuilder.addSshJwk(request.sshJwk);\r\n            }\r\n            else {\r\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_6__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_7__.missingSshJwk);\r\n            }\r\n        }\r\n        if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_21__.StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        if (this.config.systemOptions.preventCorsPreflight &&\r\n            request.ccsCredential) {\r\n            switch (request.ccsCredential.type) {\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__.CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = (0,_account_ClientInfo_mjs__WEBPACK_IMPORTED_MODULE_22__.buildClientInfoFromHomeAccountId)(request.ccsCredential.credential);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case _account_CcsCredential_mjs__WEBPACK_IMPORTED_MODULE_13__.CcsCredentialType.UPN:\r\n                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\r\n                    break;\r\n            }\r\n        }\r\n        if (request.tokenBodyParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n}\n\n\n//# sourceMappingURL=RefreshTokenClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SilentFlowClient: () => (/* binding */ SilentFlowClient)\n/* harmony export */ });\n/* harmony import */ var _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseClient.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs\");\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RefreshTokenClient.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../response/ResponseHandler.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/* harmony import */ var _authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../authority/Authority.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/Authority.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass SilentFlowClient extends _BaseClient_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n    }\r\n    /**\r\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\r\n     * the given token and returns the renewed token\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        try {\r\n            const [authResponse, cacheOutcome] = await this.acquireCachedToken({\r\n                ...request,\r\n                scopes: request.scopes?.length\r\n                    ? request.scopes\r\n                    : [..._utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_DEFAULT_SCOPES],\r\n            });\r\n            // if the token is not expired but must be refreshed; get a new one in the background\r\n            if (cacheOutcome === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.PROACTIVELY_REFRESHED) {\r\n                this.logger.info(\"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\");\r\n                // refresh the access token in the background\r\n                const refreshTokenClient = new _RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_2__.RefreshTokenClient(this.config, this.performanceClient);\r\n                refreshTokenClient\r\n                    .acquireTokenByRefreshToken(request)\r\n                    .catch(() => {\r\n                    // do nothing, this is running in the background and no action is to be taken upon success or failure\r\n                });\r\n            }\r\n            // return the cached token\r\n            return authResponse;\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.ClientAuthError &&\r\n                e.errorCode === _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired) {\r\n                const refreshTokenClient = new _RefreshTokenClient_mjs__WEBPACK_IMPORTED_MODULE_2__.RefreshTokenClient(this.config, this.performanceClient);\r\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves token from cache or throws an error if it must be refreshed.\r\n     * @param request\r\n     */\r\n    async acquireCachedToken(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.SilentFlowClientAcquireCachedToken, request.correlationId);\r\n        let lastCacheOutcome = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NOT_APPLICABLE;\r\n        if (request.forceRefresh ||\r\n            (!this.config.cacheOptions.claimsBasedCachingEnabled &&\r\n                !_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_6__.StringUtils.isEmptyObj(request.claims))) {\r\n            // Must refresh due to present force_refresh flag.\r\n            this.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.FORCE_REFRESH_OR_CLAIMS, request.correlationId);\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired);\r\n        }\r\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n        if (!request.account) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.noAccountInSilentRequest);\r\n        }\r\n        const requestTenantId = request.account.tenantId ||\r\n            (0,_authority_Authority_mjs__WEBPACK_IMPORTED_MODULE_7__.getTenantFromAuthorityString)(request.authority);\r\n        const tokenKeys = this.cacheManager.getTokenKeys();\r\n        const cachedAccessToken = this.cacheManager.getAccessToken(request.account, request, tokenKeys, requestTenantId, this.performanceClient, request.correlationId);\r\n        if (!cachedAccessToken) {\r\n            // must refresh due to non-existent access_token\r\n            this.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NO_CACHED_ACCESS_TOKEN, request.correlationId);\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired);\r\n        }\r\n        else if ((0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.wasClockTurnedBack)(cachedAccessToken.cachedAt) ||\r\n            (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.isTokenExpired)(cachedAccessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {\r\n            // must refresh due to the expires_in value\r\n            this.setCacheOutcome(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED, request.correlationId);\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.tokenRefreshRequired);\r\n        }\r\n        else if (cachedAccessToken.refreshOn &&\r\n            (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.isTokenExpired)(cachedAccessToken.refreshOn, 0)) {\r\n            // must refresh (in the background) due to the refresh_in value\r\n            lastCacheOutcome = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.PROACTIVELY_REFRESHED;\r\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\r\n        }\r\n        const environment = request.authority || this.authority.getPreferredCache();\r\n        const cacheRecord = {\r\n            account: this.cacheManager.readAccountFromCache(request.account),\r\n            accessToken: cachedAccessToken,\r\n            idToken: this.cacheManager.getIdToken(request.account, tokenKeys, requestTenantId, this.performanceClient, request.correlationId),\r\n            refreshToken: null,\r\n            appMetadata: this.cacheManager.readAppMetadataFromCache(environment),\r\n        };\r\n        this.setCacheOutcome(lastCacheOutcome, request.correlationId);\r\n        if (this.config.serverTelemetryManager) {\r\n            this.config.serverTelemetryManager.incrementCacheHits();\r\n        }\r\n        return [\r\n            await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_9__.invokeAsync)(this.generateResultFromCacheRecord.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, this.logger, this.performanceClient, request.correlationId)(cacheRecord, request),\r\n            lastCacheOutcome,\r\n        ];\r\n    }\r\n    setCacheOutcome(cacheOutcome, correlationId) {\r\n        this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);\r\n        this.performanceClient?.addFields({\r\n            cacheOutcome: cacheOutcome,\r\n        }, correlationId);\r\n        if (cacheOutcome !== _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CacheOutcome.NOT_APPLICABLE) {\r\n            this.logger.info(`Token refresh is required due to cache outcome: ${cacheOutcome}`);\r\n        }\r\n    }\r\n    /**\r\n     * Helper function to build response object from the CacheRecord\r\n     * @param cacheRecord\r\n     */\r\n    async generateResultFromCacheRecord(cacheRecord, request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, request.correlationId);\r\n        let idTokenClaims;\r\n        if (cacheRecord.idToken) {\r\n            idTokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_10__.extractTokenClaims)(cacheRecord.idToken.secret, this.config.cryptoInterface.base64Decode);\r\n        }\r\n        // token max_age check\r\n        if (request.maxAge || request.maxAge === 0) {\r\n            const authTime = idTokenClaims?.auth_time;\r\n            if (!authTime) {\r\n                throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_3__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_4__.authTimeNotFound);\r\n            }\r\n            (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_10__.checkMaxAge)(authTime, request.maxAge);\r\n        }\r\n        return _response_ResponseHandler_mjs__WEBPACK_IMPORTED_MODULE_11__.ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, cacheRecord, true, request, idTokenClaims);\r\n    }\r\n}\n\n\n//# sourceMappingURL=SilentFlowClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SYSTEM_OPTIONS: () => (/* binding */ DEFAULT_SYSTEM_OPTIONS),\n/* harmony export */   buildClientConfiguration: () => (/* binding */ buildClientConfiguration),\n/* harmony export */   isOidcProtocolMode: () => (/* binding */ isOidcProtocolMode)\n/* harmony export */ });\n/* harmony import */ var _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../crypto/ICrypto.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\");\n/* harmony import */ var _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../logger/Logger.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../packageMetadata.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/packageMetadata.mjs\");\n/* harmony import */ var _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../authority/AuthorityOptions.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs\");\n/* harmony import */ var _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../cache/CacheManager.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs\");\n/* harmony import */ var _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../authority/ProtocolMode.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    preventCorsPreflight: false,\r\n};\r\nconst DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: () => {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__.LogLevel.Info,\r\n    correlationId: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n};\r\nconst DEFAULT_CACHE_OPTIONS = {\r\n    claimsBasedCachingEnabled: false,\r\n};\r\nconst DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    async sendGetRequestAsync() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.methodNotImplemented);\r\n    },\r\n    async sendPostRequestAsync() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.methodNotImplemented);\r\n    },\r\n};\r\nconst DEFAULT_LIBRARY_INFO = {\r\n    sku: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.SKU,\r\n    version: _packageMetadata_mjs__WEBPACK_IMPORTED_MODULE_4__.version,\r\n    cpu: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n    os: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n};\r\nconst DEFAULT_CLIENT_CREDENTIALS = {\r\n    clientSecret: _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n    clientAssertion: undefined,\r\n};\r\nconst DEFAULT_AZURE_CLOUD_OPTIONS = {\r\n    azureCloudInstance: _authority_AuthorityOptions_mjs__WEBPACK_IMPORTED_MODULE_5__.AzureCloudInstance.None,\r\n    tenant: `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.DEFAULT_COMMON_TENANT}`,\r\n};\r\nconst DEFAULT_TELEMETRY_OPTIONS = {\r\n    application: {\r\n        appName: \"\",\r\n        appVersion: \"\",\r\n    },\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration({ authOptions: userAuthOptions, systemOptions: userSystemOptions, loggerOptions: userLoggerOption, cacheOptions: userCacheOptions, storageInterface: storageImplementation, networkInterface: networkImplementation, cryptoInterface: cryptoImplementation, clientCredentials: clientCredentials, libraryInfo: libraryInfo, telemetry: telemetry, serverTelemetryManager: serverTelemetryManager, persistencePlugin: persistencePlugin, serializableCache: serializableCache, }) {\r\n    const loggerOptions = {\r\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\r\n        ...userLoggerOption,\r\n    };\r\n    return {\r\n        authOptions: buildAuthOptions(userAuthOptions),\r\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\r\n        loggerOptions: loggerOptions,\r\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\r\n        storageInterface: storageImplementation ||\r\n            new _cache_CacheManager_mjs__WEBPACK_IMPORTED_MODULE_6__.DefaultStorageClass(userAuthOptions.clientId, _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_CRYPTO_IMPLEMENTATION, new _logger_Logger_mjs__WEBPACK_IMPORTED_MODULE_1__.Logger(loggerOptions)),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || _crypto_ICrypto_mjs__WEBPACK_IMPORTED_MODULE_7__.DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\r\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\r\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\r\n        serverTelemetryManager: serverTelemetryManager || null,\r\n        persistencePlugin: persistencePlugin || null,\r\n        serializableCache: serializableCache || null,\r\n    };\r\n}\r\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\r\nfunction buildAuthOptions(authOptions) {\r\n    return {\r\n        clientCapabilities: [],\r\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\r\n        skipAuthorityMetadataCache: false,\r\n        instanceAware: false,\r\n        ...authOptions,\r\n    };\r\n}\r\n/**\r\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\r\n * @param ClientConfiguration\r\n */\r\nfunction isOidcProtocolMode(config) {\r\n    return (config.authOptions.authority.options.protocolMode === _authority_ProtocolMode_mjs__WEBPACK_IMPORTED_MODULE_8__.ProtocolMode.OIDC);\r\n}\n\n\n//# sourceMappingURL=ClientConfiguration.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY29uZmlnL0NsaWVudENvbmZpZ3VyYXRpb24ubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDeUQ7QUFDZDtBQUM2QjtBQUNwQztBQUNzQjtBQUNQO0FBQ0g7QUFDUTtBQUNJOztBQUV6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGtGQUFnQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsY0FBYyx3REFBUTtBQUN0QixtQkFBbUIsMkRBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0E7QUFDQSxTQUFTLDJEQUFTO0FBQ2xCLGFBQWEseURBQU87QUFDcEIsU0FBUywyREFBUztBQUNsQixRQUFRLDJEQUFTO0FBQ2pCO0FBQ0E7QUFDQSxrQkFBa0IsMkRBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLCtFQUFrQjtBQUMxQyxlQUFlLDJEQUFTLHVCQUF1QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsNmNBQTZjO0FBQ2pmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixpREFBaUQ7QUFDMUU7QUFDQSx3QkFBd0IsK0NBQStDO0FBQ3ZFO0FBQ0EsZ0JBQWdCLHdFQUFtQiwyQkFBMkIsOEVBQTZCLE1BQU0sc0RBQU07QUFDdkc7QUFDQSxpREFBaUQsOEVBQTZCO0FBQzlFO0FBQ0EsdUJBQXVCLHlDQUF5QztBQUNoRSxxQkFBcUIsNENBQTRDO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UscUVBQVk7QUFDOUU7O0FBRWdGO0FBQ2hGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9jb25maWcvQ2xpZW50Q29uZmlndXJhdGlvbi5tanM/YmU3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IERFRkFVTFRfQ1JZUFRPX0lNUExFTUVOVEFUSU9OIH0gZnJvbSAnLi4vY3J5cHRvL0lDcnlwdG8ubWpzJztcbmltcG9ydCB7IExvZ2dlciwgTG9nTGV2ZWwgfSBmcm9tICcuLi9sb2dnZXIvTG9nZ2VyLm1qcyc7XG5pbXBvcnQgeyBERUZBVUxUX1RPS0VOX1JFTkVXQUxfT0ZGU0VUX1NFQywgQ29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi4vcGFja2FnZU1ldGFkYXRhLm1qcyc7XG5pbXBvcnQgeyBBenVyZUNsb3VkSW5zdGFuY2UgfSBmcm9tICcuLi9hdXRob3JpdHkvQXV0aG9yaXR5T3B0aW9ucy5tanMnO1xuaW1wb3J0IHsgRGVmYXVsdFN0b3JhZ2VDbGFzcyB9IGZyb20gJy4uL2NhY2hlL0NhY2hlTWFuYWdlci5tanMnO1xuaW1wb3J0IHsgUHJvdG9jb2xNb2RlIH0gZnJvbSAnLi4vYXV0aG9yaXR5L1Byb3RvY29sTW9kZS5tanMnO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50QXV0aEVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yLm1qcyc7XG5pbXBvcnQgeyBtZXRob2ROb3RJbXBsZW1lbnRlZCB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBERUZBVUxUX1NZU1RFTV9PUFRJT05TID0ge1xyXG4gICAgdG9rZW5SZW5ld2FsT2Zmc2V0U2Vjb25kczogREVGQVVMVF9UT0tFTl9SRU5FV0FMX09GRlNFVF9TRUMsXHJcbiAgICBwcmV2ZW50Q29yc1ByZWZsaWdodDogZmFsc2UsXHJcbn07XHJcbmNvbnN0IERFRkFVTFRfTE9HR0VSX0lNUExFTUVOVEFUSU9OID0ge1xyXG4gICAgbG9nZ2VyQ2FsbGJhY2s6ICgpID0+IHtcclxuICAgICAgICAvLyBhbGxvdyB1c2VycyB0byBub3Qgc2V0IGxvZ2dlckNhbGxiYWNrXHJcbiAgICB9LFxyXG4gICAgcGlpTG9nZ2luZ0VuYWJsZWQ6IGZhbHNlLFxyXG4gICAgbG9nTGV2ZWw6IExvZ0xldmVsLkluZm8sXHJcbiAgICBjb3JyZWxhdGlvbklkOiBDb25zdGFudHMuRU1QVFlfU1RSSU5HLFxyXG59O1xyXG5jb25zdCBERUZBVUxUX0NBQ0hFX09QVElPTlMgPSB7XHJcbiAgICBjbGFpbXNCYXNlZENhY2hpbmdFbmFibGVkOiBmYWxzZSxcclxufTtcclxuY29uc3QgREVGQVVMVF9ORVRXT1JLX0lNUExFTUVOVEFUSU9OID0ge1xyXG4gICAgYXN5bmMgc2VuZEdldFJlcXVlc3RBc3luYygpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWV0aG9kTm90SW1wbGVtZW50ZWQpO1xyXG4gICAgfSxcclxuICAgIGFzeW5jIHNlbmRQb3N0UmVxdWVzdEFzeW5jKCkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG59O1xyXG5jb25zdCBERUZBVUxUX0xJQlJBUllfSU5GTyA9IHtcclxuICAgIHNrdTogQ29uc3RhbnRzLlNLVSxcclxuICAgIHZlcnNpb246IHZlcnNpb24sXHJcbiAgICBjcHU6IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsXHJcbiAgICBvczogQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcclxufTtcclxuY29uc3QgREVGQVVMVF9DTElFTlRfQ1JFREVOVElBTFMgPSB7XHJcbiAgICBjbGllbnRTZWNyZXQ6IENvbnN0YW50cy5FTVBUWV9TVFJJTkcsXHJcbiAgICBjbGllbnRBc3NlcnRpb246IHVuZGVmaW5lZCxcclxufTtcclxuY29uc3QgREVGQVVMVF9BWlVSRV9DTE9VRF9PUFRJT05TID0ge1xyXG4gICAgYXp1cmVDbG91ZEluc3RhbmNlOiBBenVyZUNsb3VkSW5zdGFuY2UuTm9uZSxcclxuICAgIHRlbmFudDogYCR7Q29uc3RhbnRzLkRFRkFVTFRfQ09NTU9OX1RFTkFOVH1gLFxyXG59O1xyXG5jb25zdCBERUZBVUxUX1RFTEVNRVRSWV9PUFRJT05TID0ge1xyXG4gICAgYXBwbGljYXRpb246IHtcclxuICAgICAgICBhcHBOYW1lOiBcIlwiLFxyXG4gICAgICAgIGFwcFZlcnNpb246IFwiXCIsXHJcbiAgICB9LFxyXG59O1xyXG4vKipcclxuICogRnVuY3Rpb24gdGhhdCBzZXRzIHRoZSBkZWZhdWx0IG9wdGlvbnMgd2hlbiBub3QgZXhwbGljaXRseSBjb25maWd1cmVkIGZyb20gYXBwIGRldmVsb3BlclxyXG4gKlxyXG4gKiBAcGFyYW0gQ29uZmlndXJhdGlvblxyXG4gKlxyXG4gKiBAcmV0dXJucyBDb25maWd1cmF0aW9uXHJcbiAqL1xyXG5mdW5jdGlvbiBidWlsZENsaWVudENvbmZpZ3VyYXRpb24oeyBhdXRoT3B0aW9uczogdXNlckF1dGhPcHRpb25zLCBzeXN0ZW1PcHRpb25zOiB1c2VyU3lzdGVtT3B0aW9ucywgbG9nZ2VyT3B0aW9uczogdXNlckxvZ2dlck9wdGlvbiwgY2FjaGVPcHRpb25zOiB1c2VyQ2FjaGVPcHRpb25zLCBzdG9yYWdlSW50ZXJmYWNlOiBzdG9yYWdlSW1wbGVtZW50YXRpb24sIG5ldHdvcmtJbnRlcmZhY2U6IG5ldHdvcmtJbXBsZW1lbnRhdGlvbiwgY3J5cHRvSW50ZXJmYWNlOiBjcnlwdG9JbXBsZW1lbnRhdGlvbiwgY2xpZW50Q3JlZGVudGlhbHM6IGNsaWVudENyZWRlbnRpYWxzLCBsaWJyYXJ5SW5mbzogbGlicmFyeUluZm8sIHRlbGVtZXRyeTogdGVsZW1ldHJ5LCBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyOiBzZXJ2ZXJUZWxlbWV0cnlNYW5hZ2VyLCBwZXJzaXN0ZW5jZVBsdWdpbjogcGVyc2lzdGVuY2VQbHVnaW4sIHNlcmlhbGl6YWJsZUNhY2hlOiBzZXJpYWxpemFibGVDYWNoZSwgfSkge1xyXG4gICAgY29uc3QgbG9nZ2VyT3B0aW9ucyA9IHtcclxuICAgICAgICAuLi5ERUZBVUxUX0xPR0dFUl9JTVBMRU1FTlRBVElPTixcclxuICAgICAgICAuLi51c2VyTG9nZ2VyT3B0aW9uLFxyXG4gICAgfTtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgYXV0aE9wdGlvbnM6IGJ1aWxkQXV0aE9wdGlvbnModXNlckF1dGhPcHRpb25zKSxcclxuICAgICAgICBzeXN0ZW1PcHRpb25zOiB7IC4uLkRFRkFVTFRfU1lTVEVNX09QVElPTlMsIC4uLnVzZXJTeXN0ZW1PcHRpb25zIH0sXHJcbiAgICAgICAgbG9nZ2VyT3B0aW9uczogbG9nZ2VyT3B0aW9ucyxcclxuICAgICAgICBjYWNoZU9wdGlvbnM6IHsgLi4uREVGQVVMVF9DQUNIRV9PUFRJT05TLCAuLi51c2VyQ2FjaGVPcHRpb25zIH0sXHJcbiAgICAgICAgc3RvcmFnZUludGVyZmFjZTogc3RvcmFnZUltcGxlbWVudGF0aW9uIHx8XHJcbiAgICAgICAgICAgIG5ldyBEZWZhdWx0U3RvcmFnZUNsYXNzKHVzZXJBdXRoT3B0aW9ucy5jbGllbnRJZCwgREVGQVVMVF9DUllQVE9fSU1QTEVNRU5UQVRJT04sIG5ldyBMb2dnZXIobG9nZ2VyT3B0aW9ucykpLFxyXG4gICAgICAgIG5ldHdvcmtJbnRlcmZhY2U6IG5ldHdvcmtJbXBsZW1lbnRhdGlvbiB8fCBERUZBVUxUX05FVFdPUktfSU1QTEVNRU5UQVRJT04sXHJcbiAgICAgICAgY3J5cHRvSW50ZXJmYWNlOiBjcnlwdG9JbXBsZW1lbnRhdGlvbiB8fCBERUZBVUxUX0NSWVBUT19JTVBMRU1FTlRBVElPTixcclxuICAgICAgICBjbGllbnRDcmVkZW50aWFsczogY2xpZW50Q3JlZGVudGlhbHMgfHwgREVGQVVMVF9DTElFTlRfQ1JFREVOVElBTFMsXHJcbiAgICAgICAgbGlicmFyeUluZm86IHsgLi4uREVGQVVMVF9MSUJSQVJZX0lORk8sIC4uLmxpYnJhcnlJbmZvIH0sXHJcbiAgICAgICAgdGVsZW1ldHJ5OiB7IC4uLkRFRkFVTFRfVEVMRU1FVFJZX09QVElPTlMsIC4uLnRlbGVtZXRyeSB9LFxyXG4gICAgICAgIHNlcnZlclRlbGVtZXRyeU1hbmFnZXI6IHNlcnZlclRlbGVtZXRyeU1hbmFnZXIgfHwgbnVsbCxcclxuICAgICAgICBwZXJzaXN0ZW5jZVBsdWdpbjogcGVyc2lzdGVuY2VQbHVnaW4gfHwgbnVsbCxcclxuICAgICAgICBzZXJpYWxpemFibGVDYWNoZTogc2VyaWFsaXphYmxlQ2FjaGUgfHwgbnVsbCxcclxuICAgIH07XHJcbn1cclxuLyoqXHJcbiAqIENvbnN0cnVjdCBhdXRob3B0aW9ucyBmcm9tIHRoZSBjbGllbnQgYW5kIHBsYXRmb3JtIHBhc3NlZCB2YWx1ZXNcclxuICogQHBhcmFtIGF1dGhPcHRpb25zXHJcbiAqL1xyXG5mdW5jdGlvbiBidWlsZEF1dGhPcHRpb25zKGF1dGhPcHRpb25zKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGNsaWVudENhcGFiaWxpdGllczogW10sXHJcbiAgICAgICAgYXp1cmVDbG91ZE9wdGlvbnM6IERFRkFVTFRfQVpVUkVfQ0xPVURfT1BUSU9OUyxcclxuICAgICAgICBza2lwQXV0aG9yaXR5TWV0YWRhdGFDYWNoZTogZmFsc2UsXHJcbiAgICAgICAgaW5zdGFuY2VBd2FyZTogZmFsc2UsXHJcbiAgICAgICAgLi4uYXV0aE9wdGlvbnMsXHJcbiAgICB9O1xyXG59XHJcbi8qKlxyXG4gKiBSZXR1cm5zIHRydWUgaWYgY29uZmlnIGhhcyBwcm90b2NvbE1vZGUgc2V0IHRvIFByb3RvY29sTW9kZS5PSURDLCBmYWxzZSBvdGhlcndpc2VcclxuICogQHBhcmFtIENsaWVudENvbmZpZ3VyYXRpb25cclxuICovXHJcbmZ1bmN0aW9uIGlzT2lkY1Byb3RvY29sTW9kZShjb25maWcpIHtcclxuICAgIHJldHVybiAoY29uZmlnLmF1dGhPcHRpb25zLmF1dGhvcml0eS5vcHRpb25zLnByb3RvY29sTW9kZSA9PT0gUHJvdG9jb2xNb2RlLk9JREMpO1xyXG59XG5cbmV4cG9ydCB7IERFRkFVTFRfU1lTVEVNX09QVElPTlMsIGJ1aWxkQ2xpZW50Q29uZmlndXJhdGlvbiwgaXNPaWRjUHJvdG9jb2xNb2RlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRDb25maWd1cmF0aW9uLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs":
/*!*******************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACCESS_TOKEN: () => (/* binding */ ACCESS_TOKEN),\n/* harmony export */   CCS_HEADER: () => (/* binding */ CCS_HEADER),\n/* harmony export */   CLAIMS: () => (/* binding */ CLAIMS),\n/* harmony export */   CLIENT_ASSERTION: () => (/* binding */ CLIENT_ASSERTION),\n/* harmony export */   CLIENT_ASSERTION_TYPE: () => (/* binding */ CLIENT_ASSERTION_TYPE),\n/* harmony export */   CLIENT_ID: () => (/* binding */ CLIENT_ID),\n/* harmony export */   CLIENT_INFO: () => (/* binding */ CLIENT_INFO),\n/* harmony export */   CLIENT_REQUEST_ID: () => (/* binding */ CLIENT_REQUEST_ID),\n/* harmony export */   CLIENT_SECRET: () => (/* binding */ CLIENT_SECRET),\n/* harmony export */   CODE: () => (/* binding */ CODE),\n/* harmony export */   CODE_CHALLENGE: () => (/* binding */ CODE_CHALLENGE),\n/* harmony export */   CODE_CHALLENGE_METHOD: () => (/* binding */ CODE_CHALLENGE_METHOD),\n/* harmony export */   CODE_VERIFIER: () => (/* binding */ CODE_VERIFIER),\n/* harmony export */   DEVICE_CODE: () => (/* binding */ DEVICE_CODE),\n/* harmony export */   DOMAIN_HINT: () => (/* binding */ DOMAIN_HINT),\n/* harmony export */   ERROR: () => (/* binding */ ERROR),\n/* harmony export */   ERROR_DESCRIPTION: () => (/* binding */ ERROR_DESCRIPTION),\n/* harmony export */   EXPIRES_IN: () => (/* binding */ EXPIRES_IN),\n/* harmony export */   FOCI: () => (/* binding */ FOCI),\n/* harmony export */   GRANT_TYPE: () => (/* binding */ GRANT_TYPE),\n/* harmony export */   ID_TOKEN: () => (/* binding */ ID_TOKEN),\n/* harmony export */   ID_TOKEN_HINT: () => (/* binding */ ID_TOKEN_HINT),\n/* harmony export */   LOGIN_HINT: () => (/* binding */ LOGIN_HINT),\n/* harmony export */   LOGOUT_HINT: () => (/* binding */ LOGOUT_HINT),\n/* harmony export */   NATIVE_BROKER: () => (/* binding */ NATIVE_BROKER),\n/* harmony export */   NONCE: () => (/* binding */ NONCE),\n/* harmony export */   OBO_ASSERTION: () => (/* binding */ OBO_ASSERTION),\n/* harmony export */   ON_BEHALF_OF: () => (/* binding */ ON_BEHALF_OF),\n/* harmony export */   POST_LOGOUT_URI: () => (/* binding */ POST_LOGOUT_URI),\n/* harmony export */   PROMPT: () => (/* binding */ PROMPT),\n/* harmony export */   REDIRECT_URI: () => (/* binding */ REDIRECT_URI),\n/* harmony export */   REFRESH_TOKEN: () => (/* binding */ REFRESH_TOKEN),\n/* harmony export */   REFRESH_TOKEN_EXPIRES_IN: () => (/* binding */ REFRESH_TOKEN_EXPIRES_IN),\n/* harmony export */   REQUESTED_TOKEN_USE: () => (/* binding */ REQUESTED_TOKEN_USE),\n/* harmony export */   REQ_CNF: () => (/* binding */ REQ_CNF),\n/* harmony export */   RESPONSE_MODE: () => (/* binding */ RESPONSE_MODE),\n/* harmony export */   RESPONSE_TYPE: () => (/* binding */ RESPONSE_TYPE),\n/* harmony export */   RETURN_SPA_CODE: () => (/* binding */ RETURN_SPA_CODE),\n/* harmony export */   SCOPE: () => (/* binding */ SCOPE),\n/* harmony export */   SESSION_STATE: () => (/* binding */ SESSION_STATE),\n/* harmony export */   SID: () => (/* binding */ SID),\n/* harmony export */   STATE: () => (/* binding */ STATE),\n/* harmony export */   TOKEN_TYPE: () => (/* binding */ TOKEN_TYPE),\n/* harmony export */   X_APP_NAME: () => (/* binding */ X_APP_NAME),\n/* harmony export */   X_APP_VER: () => (/* binding */ X_APP_VER),\n/* harmony export */   X_CLIENT_CPU: () => (/* binding */ X_CLIENT_CPU),\n/* harmony export */   X_CLIENT_CURR_TELEM: () => (/* binding */ X_CLIENT_CURR_TELEM),\n/* harmony export */   X_CLIENT_EXTRA_SKU: () => (/* binding */ X_CLIENT_EXTRA_SKU),\n/* harmony export */   X_CLIENT_LAST_TELEM: () => (/* binding */ X_CLIENT_LAST_TELEM),\n/* harmony export */   X_CLIENT_OS: () => (/* binding */ X_CLIENT_OS),\n/* harmony export */   X_CLIENT_SKU: () => (/* binding */ X_CLIENT_SKU),\n/* harmony export */   X_CLIENT_VER: () => (/* binding */ X_CLIENT_VER),\n/* harmony export */   X_MS_LIB_CAPABILITY: () => (/* binding */ X_MS_LIB_CAPABILITY)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CLIENT_ID = \"client_id\";\r\nconst REDIRECT_URI = \"redirect_uri\";\r\nconst RESPONSE_TYPE = \"response_type\";\r\nconst RESPONSE_MODE = \"response_mode\";\r\nconst GRANT_TYPE = \"grant_type\";\r\nconst CLAIMS = \"claims\";\r\nconst SCOPE = \"scope\";\r\nconst ERROR = \"error\";\r\nconst ERROR_DESCRIPTION = \"error_description\";\r\nconst ACCESS_TOKEN = \"access_token\";\r\nconst ID_TOKEN = \"id_token\";\r\nconst REFRESH_TOKEN = \"refresh_token\";\r\nconst EXPIRES_IN = \"expires_in\";\r\nconst REFRESH_TOKEN_EXPIRES_IN = \"refresh_token_expires_in\";\r\nconst STATE = \"state\";\r\nconst NONCE = \"nonce\";\r\nconst PROMPT = \"prompt\";\r\nconst SESSION_STATE = \"session_state\";\r\nconst CLIENT_INFO = \"client_info\";\r\nconst CODE = \"code\";\r\nconst CODE_CHALLENGE = \"code_challenge\";\r\nconst CODE_CHALLENGE_METHOD = \"code_challenge_method\";\r\nconst CODE_VERIFIER = \"code_verifier\";\r\nconst CLIENT_REQUEST_ID = \"client-request-id\";\r\nconst X_CLIENT_SKU = \"x-client-SKU\";\r\nconst X_CLIENT_VER = \"x-client-VER\";\r\nconst X_CLIENT_OS = \"x-client-OS\";\r\nconst X_CLIENT_CPU = \"x-client-CPU\";\r\nconst X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\";\r\nconst X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\";\r\nconst X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\";\r\nconst X_APP_NAME = \"x-app-name\";\r\nconst X_APP_VER = \"x-app-ver\";\r\nconst POST_LOGOUT_URI = \"post_logout_redirect_uri\";\r\nconst ID_TOKEN_HINT = \"id_token_hint\";\r\nconst DEVICE_CODE = \"device_code\";\r\nconst CLIENT_SECRET = \"client_secret\";\r\nconst CLIENT_ASSERTION = \"client_assertion\";\r\nconst CLIENT_ASSERTION_TYPE = \"client_assertion_type\";\r\nconst TOKEN_TYPE = \"token_type\";\r\nconst REQ_CNF = \"req_cnf\";\r\nconst OBO_ASSERTION = \"assertion\";\r\nconst REQUESTED_TOKEN_USE = \"requested_token_use\";\r\nconst ON_BEHALF_OF = \"on_behalf_of\";\r\nconst FOCI = \"foci\";\r\nconst CCS_HEADER = \"X-AnchorMailbox\";\r\nconst RETURN_SPA_CODE = \"return_spa_code\";\r\nconst NATIVE_BROKER = \"nativebroker\";\r\nconst LOGOUT_HINT = \"logout_hint\";\r\nconst SID = \"sid\";\r\nconst LOGIN_HINT = \"login_hint\";\r\nconst DOMAIN_HINT = \"domain_hint\";\r\nconst X_CLIENT_EXTRA_SKU = \"x-client-xtra-sku\";\n\n\n//# sourceMappingURL=AADServerParamKeys.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY29uc3RhbnRzL0FBRFNlcnZlclBhcmFtS2V5cy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU4dUI7QUFDOXVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9jb25zdGFudHMvQUFEU2VydmVyUGFyYW1LZXlzLm1qcz8wNjliIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IENMSUVOVF9JRCA9IFwiY2xpZW50X2lkXCI7XHJcbmNvbnN0IFJFRElSRUNUX1VSSSA9IFwicmVkaXJlY3RfdXJpXCI7XHJcbmNvbnN0IFJFU1BPTlNFX1RZUEUgPSBcInJlc3BvbnNlX3R5cGVcIjtcclxuY29uc3QgUkVTUE9OU0VfTU9ERSA9IFwicmVzcG9uc2VfbW9kZVwiO1xyXG5jb25zdCBHUkFOVF9UWVBFID0gXCJncmFudF90eXBlXCI7XHJcbmNvbnN0IENMQUlNUyA9IFwiY2xhaW1zXCI7XHJcbmNvbnN0IFNDT1BFID0gXCJzY29wZVwiO1xyXG5jb25zdCBFUlJPUiA9IFwiZXJyb3JcIjtcclxuY29uc3QgRVJST1JfREVTQ1JJUFRJT04gPSBcImVycm9yX2Rlc2NyaXB0aW9uXCI7XHJcbmNvbnN0IEFDQ0VTU19UT0tFTiA9IFwiYWNjZXNzX3Rva2VuXCI7XHJcbmNvbnN0IElEX1RPS0VOID0gXCJpZF90b2tlblwiO1xyXG5jb25zdCBSRUZSRVNIX1RPS0VOID0gXCJyZWZyZXNoX3Rva2VuXCI7XHJcbmNvbnN0IEVYUElSRVNfSU4gPSBcImV4cGlyZXNfaW5cIjtcclxuY29uc3QgUkVGUkVTSF9UT0tFTl9FWFBJUkVTX0lOID0gXCJyZWZyZXNoX3Rva2VuX2V4cGlyZXNfaW5cIjtcclxuY29uc3QgU1RBVEUgPSBcInN0YXRlXCI7XHJcbmNvbnN0IE5PTkNFID0gXCJub25jZVwiO1xyXG5jb25zdCBQUk9NUFQgPSBcInByb21wdFwiO1xyXG5jb25zdCBTRVNTSU9OX1NUQVRFID0gXCJzZXNzaW9uX3N0YXRlXCI7XHJcbmNvbnN0IENMSUVOVF9JTkZPID0gXCJjbGllbnRfaW5mb1wiO1xyXG5jb25zdCBDT0RFID0gXCJjb2RlXCI7XHJcbmNvbnN0IENPREVfQ0hBTExFTkdFID0gXCJjb2RlX2NoYWxsZW5nZVwiO1xyXG5jb25zdCBDT0RFX0NIQUxMRU5HRV9NRVRIT0QgPSBcImNvZGVfY2hhbGxlbmdlX21ldGhvZFwiO1xyXG5jb25zdCBDT0RFX1ZFUklGSUVSID0gXCJjb2RlX3ZlcmlmaWVyXCI7XHJcbmNvbnN0IENMSUVOVF9SRVFVRVNUX0lEID0gXCJjbGllbnQtcmVxdWVzdC1pZFwiO1xyXG5jb25zdCBYX0NMSUVOVF9TS1UgPSBcIngtY2xpZW50LVNLVVwiO1xyXG5jb25zdCBYX0NMSUVOVF9WRVIgPSBcIngtY2xpZW50LVZFUlwiO1xyXG5jb25zdCBYX0NMSUVOVF9PUyA9IFwieC1jbGllbnQtT1NcIjtcclxuY29uc3QgWF9DTElFTlRfQ1BVID0gXCJ4LWNsaWVudC1DUFVcIjtcclxuY29uc3QgWF9DTElFTlRfQ1VSUl9URUxFTSA9IFwieC1jbGllbnQtY3VycmVudC10ZWxlbWV0cnlcIjtcclxuY29uc3QgWF9DTElFTlRfTEFTVF9URUxFTSA9IFwieC1jbGllbnQtbGFzdC10ZWxlbWV0cnlcIjtcclxuY29uc3QgWF9NU19MSUJfQ0FQQUJJTElUWSA9IFwieC1tcy1saWItY2FwYWJpbGl0eVwiO1xyXG5jb25zdCBYX0FQUF9OQU1FID0gXCJ4LWFwcC1uYW1lXCI7XHJcbmNvbnN0IFhfQVBQX1ZFUiA9IFwieC1hcHAtdmVyXCI7XHJcbmNvbnN0IFBPU1RfTE9HT1VUX1VSSSA9IFwicG9zdF9sb2dvdXRfcmVkaXJlY3RfdXJpXCI7XHJcbmNvbnN0IElEX1RPS0VOX0hJTlQgPSBcImlkX3Rva2VuX2hpbnRcIjtcclxuY29uc3QgREVWSUNFX0NPREUgPSBcImRldmljZV9jb2RlXCI7XHJcbmNvbnN0IENMSUVOVF9TRUNSRVQgPSBcImNsaWVudF9zZWNyZXRcIjtcclxuY29uc3QgQ0xJRU5UX0FTU0VSVElPTiA9IFwiY2xpZW50X2Fzc2VydGlvblwiO1xyXG5jb25zdCBDTElFTlRfQVNTRVJUSU9OX1RZUEUgPSBcImNsaWVudF9hc3NlcnRpb25fdHlwZVwiO1xyXG5jb25zdCBUT0tFTl9UWVBFID0gXCJ0b2tlbl90eXBlXCI7XHJcbmNvbnN0IFJFUV9DTkYgPSBcInJlcV9jbmZcIjtcclxuY29uc3QgT0JPX0FTU0VSVElPTiA9IFwiYXNzZXJ0aW9uXCI7XHJcbmNvbnN0IFJFUVVFU1RFRF9UT0tFTl9VU0UgPSBcInJlcXVlc3RlZF90b2tlbl91c2VcIjtcclxuY29uc3QgT05fQkVIQUxGX09GID0gXCJvbl9iZWhhbGZfb2ZcIjtcclxuY29uc3QgRk9DSSA9IFwiZm9jaVwiO1xyXG5jb25zdCBDQ1NfSEVBREVSID0gXCJYLUFuY2hvck1haWxib3hcIjtcclxuY29uc3QgUkVUVVJOX1NQQV9DT0RFID0gXCJyZXR1cm5fc3BhX2NvZGVcIjtcclxuY29uc3QgTkFUSVZFX0JST0tFUiA9IFwibmF0aXZlYnJva2VyXCI7XHJcbmNvbnN0IExPR09VVF9ISU5UID0gXCJsb2dvdXRfaGludFwiO1xyXG5jb25zdCBTSUQgPSBcInNpZFwiO1xyXG5jb25zdCBMT0dJTl9ISU5UID0gXCJsb2dpbl9oaW50XCI7XHJcbmNvbnN0IERPTUFJTl9ISU5UID0gXCJkb21haW5faGludFwiO1xyXG5jb25zdCBYX0NMSUVOVF9FWFRSQV9TS1UgPSBcIngtY2xpZW50LXh0cmEtc2t1XCI7XG5cbmV4cG9ydCB7IEFDQ0VTU19UT0tFTiwgQ0NTX0hFQURFUiwgQ0xBSU1TLCBDTElFTlRfQVNTRVJUSU9OLCBDTElFTlRfQVNTRVJUSU9OX1RZUEUsIENMSUVOVF9JRCwgQ0xJRU5UX0lORk8sIENMSUVOVF9SRVFVRVNUX0lELCBDTElFTlRfU0VDUkVULCBDT0RFLCBDT0RFX0NIQUxMRU5HRSwgQ09ERV9DSEFMTEVOR0VfTUVUSE9ELCBDT0RFX1ZFUklGSUVSLCBERVZJQ0VfQ09ERSwgRE9NQUlOX0hJTlQsIEVSUk9SLCBFUlJPUl9ERVNDUklQVElPTiwgRVhQSVJFU19JTiwgRk9DSSwgR1JBTlRfVFlQRSwgSURfVE9LRU4sIElEX1RPS0VOX0hJTlQsIExPR0lOX0hJTlQsIExPR09VVF9ISU5ULCBOQVRJVkVfQlJPS0VSLCBOT05DRSwgT0JPX0FTU0VSVElPTiwgT05fQkVIQUxGX09GLCBQT1NUX0xPR09VVF9VUkksIFBST01QVCwgUkVESVJFQ1RfVVJJLCBSRUZSRVNIX1RPS0VOLCBSRUZSRVNIX1RPS0VOX0VYUElSRVNfSU4sIFJFUVVFU1RFRF9UT0tFTl9VU0UsIFJFUV9DTkYsIFJFU1BPTlNFX01PREUsIFJFU1BPTlNFX1RZUEUsIFJFVFVSTl9TUEFfQ09ERSwgU0NPUEUsIFNFU1NJT05fU1RBVEUsIFNJRCwgU1RBVEUsIFRPS0VOX1RZUEUsIFhfQVBQX05BTUUsIFhfQVBQX1ZFUiwgWF9DTElFTlRfQ1BVLCBYX0NMSUVOVF9DVVJSX1RFTEVNLCBYX0NMSUVOVF9FWFRSQV9TS1UsIFhfQ0xJRU5UX0xBU1RfVEVMRU0sIFhfQ0xJRU5UX09TLCBYX0NMSUVOVF9TS1UsIFhfQ0xJRU5UX1ZFUiwgWF9NU19MSUJfQ0FQQUJJTElUWSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QUFEU2VydmVyUGFyYW1LZXlzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CRYPTO_IMPLEMENTATION: () => (/* binding */ DEFAULT_CRYPTO_IMPLEMENTATION)\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: () => {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    base64Decode: () => {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    base64Encode: () => {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    base64UrlEncode: () => {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    encodeKid: () => {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    async getPublicKeyThumbprint() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    async removeTokenBindingKey() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    async clearKeystore() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    async signJwt() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n    async hashString() {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented);\r\n    },\r\n};\n\n\n//# sourceMappingURL=ICrypto.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0lDcnlwdG8ubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDd0Q7QUFDSTs7QUFFekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEQsS0FBSztBQUNMOztBQUV5QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0lDcnlwdG8ubWpzPzMzOTkiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IG1ldGhvZE5vdEltcGxlbWVudGVkIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IERFRkFVTFRfQ1JZUFRPX0lNUExFTUVOVEFUSU9OID0ge1xyXG4gICAgY3JlYXRlTmV3R3VpZDogKCkgPT4ge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG4gICAgYmFzZTY0RGVjb2RlOiAoKSA9PiB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKG1ldGhvZE5vdEltcGxlbWVudGVkKTtcclxuICAgIH0sXHJcbiAgICBiYXNlNjRFbmNvZGU6ICgpID0+IHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWV0aG9kTm90SW1wbGVtZW50ZWQpO1xyXG4gICAgfSxcclxuICAgIGJhc2U2NFVybEVuY29kZTogKCkgPT4ge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG4gICAgZW5jb2RlS2lkOiAoKSA9PiB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKG1ldGhvZE5vdEltcGxlbWVudGVkKTtcclxuICAgIH0sXHJcbiAgICBhc3luYyBnZXRQdWJsaWNLZXlUaHVtYnByaW50KCkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG4gICAgYXN5bmMgcmVtb3ZlVG9rZW5CaW5kaW5nS2V5KCkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG4gICAgYXN5bmMgY2xlYXJLZXlzdG9yZSgpIHtcclxuICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobWV0aG9kTm90SW1wbGVtZW50ZWQpO1xyXG4gICAgfSxcclxuICAgIGFzeW5jIHNpZ25Kd3QoKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKG1ldGhvZE5vdEltcGxlbWVudGVkKTtcclxuICAgIH0sXHJcbiAgICBhc3luYyBoYXNoU3RyaW5nKCkge1xyXG4gICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCk7XHJcbiAgICB9LFxyXG59O1xuXG5leHBvcnQgeyBERUZBVUxUX0NSWVBUT19JTVBMRU1FTlRBVElPTiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SUNyeXB0by5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JoseHeader: () => (/* binding */ JoseHeader)\n/* harmony export */ });\n/* harmony import */ var _error_JoseHeaderError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/JoseHeaderError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/JoseHeaderErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass JoseHeader {\r\n    constructor(options) {\r\n        this.typ = options.typ;\r\n        this.alg = options.alg;\r\n        this.kid = options.kid;\r\n    }\r\n    /**\r\n     * Builds SignedHttpRequest formatted JOSE Header from the\r\n     * JOSE Header options provided or previously set on the object and returns\r\n     * the stringified header object.\r\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\r\n     * @param shrHeaderOptions\r\n     * @returns\r\n     */\r\n    static getShrHeaderString(shrHeaderOptions) {\r\n        // KeyID is required on the SHR header\r\n        if (!shrHeaderOptions.kid) {\r\n            throw (0,_error_JoseHeaderError_mjs__WEBPACK_IMPORTED_MODULE_0__.createJoseHeaderError)(_error_JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.missingKidError);\r\n        }\r\n        // Alg is required on the SHR header\r\n        if (!shrHeaderOptions.alg) {\r\n            throw (0,_error_JoseHeaderError_mjs__WEBPACK_IMPORTED_MODULE_0__.createJoseHeaderError)(_error_JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.missingAlgError);\r\n        }\r\n        const shrHeader = new JoseHeader({\r\n            // Access Token PoP headers must have type pop, but the type header can be overriden for special cases\r\n            typ: shrHeaderOptions.typ || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.JsonWebTokenTypes.Pop,\r\n            kid: shrHeaderOptions.kid,\r\n            alg: shrHeaderOptions.alg,\r\n        });\r\n        return JSON.stringify(shrHeader);\r\n    }\r\n}\n\n\n//# sourceMappingURL=JoseHeader.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0pvc2VIZWFkZXIubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNhO0FBQ3dEO0FBQ1Y7QUFDMEI7O0FBRXJGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLDRFQUFlO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpRkFBcUIsQ0FBQyw0RUFBZTtBQUN2RDtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsbUVBQWlCO0FBQzFEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL0pvc2VIZWFkZXIubWpzPzdiMGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVKb3NlSGVhZGVyRXJyb3IgfSBmcm9tICcuLi9lcnJvci9Kb3NlSGVhZGVyRXJyb3IubWpzJztcbmltcG9ydCB7IEpzb25XZWJUb2tlblR5cGVzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBtaXNzaW5nS2lkRXJyb3IsIG1pc3NpbmdBbGdFcnJvciB9IGZyb20gJy4uL2Vycm9yL0pvc2VIZWFkZXJFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKiogQGludGVybmFsICovXHJcbmNsYXNzIEpvc2VIZWFkZXIge1xyXG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xyXG4gICAgICAgIHRoaXMudHlwID0gb3B0aW9ucy50eXA7XHJcbiAgICAgICAgdGhpcy5hbGcgPSBvcHRpb25zLmFsZztcclxuICAgICAgICB0aGlzLmtpZCA9IG9wdGlvbnMua2lkO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBCdWlsZHMgU2lnbmVkSHR0cFJlcXVlc3QgZm9ybWF0dGVkIEpPU0UgSGVhZGVyIGZyb20gdGhlXHJcbiAgICAgKiBKT1NFIEhlYWRlciBvcHRpb25zIHByb3ZpZGVkIG9yIHByZXZpb3VzbHkgc2V0IG9uIHRoZSBvYmplY3QgYW5kIHJldHVybnNcclxuICAgICAqIHRoZSBzdHJpbmdpZmllZCBoZWFkZXIgb2JqZWN0LlxyXG4gICAgICogVGhyb3dzIGlmIGtleUlkIG9yIGFsZ29yaXRobSBhcmVuJ3QgcHJvdmlkZWQgc2luY2UgdGhleSBhcmUgcmVxdWlyZWQgZm9yIEFjY2VzcyBUb2tlbiBCaW5kaW5nLlxyXG4gICAgICogQHBhcmFtIHNockhlYWRlck9wdGlvbnNcclxuICAgICAqIEByZXR1cm5zXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBnZXRTaHJIZWFkZXJTdHJpbmcoc2hySGVhZGVyT3B0aW9ucykge1xyXG4gICAgICAgIC8vIEtleUlEIGlzIHJlcXVpcmVkIG9uIHRoZSBTSFIgaGVhZGVyXHJcbiAgICAgICAgaWYgKCFzaHJIZWFkZXJPcHRpb25zLmtpZCkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVKb3NlSGVhZGVyRXJyb3IobWlzc2luZ0tpZEVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gQWxnIGlzIHJlcXVpcmVkIG9uIHRoZSBTSFIgaGVhZGVyXHJcbiAgICAgICAgaWYgKCFzaHJIZWFkZXJPcHRpb25zLmFsZykge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVKb3NlSGVhZGVyRXJyb3IobWlzc2luZ0FsZ0Vycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3Qgc2hySGVhZGVyID0gbmV3IEpvc2VIZWFkZXIoe1xyXG4gICAgICAgICAgICAvLyBBY2Nlc3MgVG9rZW4gUG9QIGhlYWRlcnMgbXVzdCBoYXZlIHR5cGUgcG9wLCBidXQgdGhlIHR5cGUgaGVhZGVyIGNhbiBiZSBvdmVycmlkZW4gZm9yIHNwZWNpYWwgY2FzZXNcclxuICAgICAgICAgICAgdHlwOiBzaHJIZWFkZXJPcHRpb25zLnR5cCB8fCBKc29uV2ViVG9rZW5UeXBlcy5Qb3AsXHJcbiAgICAgICAgICAgIGtpZDogc2hySGVhZGVyT3B0aW9ucy5raWQsXHJcbiAgICAgICAgICAgIGFsZzogc2hySGVhZGVyT3B0aW9ucy5hbGcsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHNockhlYWRlcik7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgSm9zZUhlYWRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Sm9zZUhlYWRlci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PopTokenGenerator: () => (/* binding */ PopTokenGenerator)\n/* harmony export */ });\n/* harmony import */ var _utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/TimeUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\");\n/* harmony import */ var _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../url/UrlString.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/FunctionWrappers.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst KeyLocation = {\r\n    SW: \"sw\",\r\n    UHW: \"uhw\",\r\n};\r\n/** @internal */\r\nclass PopTokenGenerator {\r\n    constructor(cryptoUtils, performanceClient) {\r\n        this.cryptoUtils = cryptoUtils;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\r\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async generateCnf(request, logger) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\r\n        const reqCnf = await (0,_utils_FunctionWrappers_mjs__WEBPACK_IMPORTED_MODULE_1__.invokeAsync)(this.generateKid.bind(this), _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateCnf, logger, this.performanceClient, request.correlationId)(request);\r\n        const reqCnfString = this.cryptoUtils.base64UrlEncode(JSON.stringify(reqCnf));\r\n        return {\r\n            kid: reqCnf.kid,\r\n            reqCnfString,\r\n        };\r\n    }\r\n    /**\r\n     * Generates key_id for a SHR token request\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async generateKid(request) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEvents.PopTokenGenerateKid, request.correlationId);\r\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\r\n        return {\r\n            kid: kidThumbprint,\r\n            xms_ksl: KeyLocation.SW,\r\n        };\r\n    }\r\n    /**\r\n     * Signs the POP access_token with the local generated key-pair\r\n     * @param accessToken\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async signPopToken(accessToken, keyId, request) {\r\n        return this.signPayload(accessToken, keyId, request);\r\n    }\r\n    /**\r\n     * Utility function to generate the signed JWT for an access_token\r\n     * @param payload\r\n     * @param kid\r\n     * @param request\r\n     * @param claims\r\n     * @returns\r\n     */\r\n    async signPayload(payload, keyId, request, claims) {\r\n        // Deconstruct request to extract SHR parameters\r\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce, shrOptions, } = request;\r\n        const resourceUrlString = resourceRequestUri\r\n            ? new _url_UrlString_mjs__WEBPACK_IMPORTED_MODULE_2__.UrlString(resourceRequestUri)\r\n            : undefined;\r\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\r\n        return this.cryptoUtils.signJwt({\r\n            at: payload,\r\n            ts: (0,_utils_TimeUtils_mjs__WEBPACK_IMPORTED_MODULE_3__.nowSeconds)(),\r\n            m: resourceRequestMethod?.toUpperCase(),\r\n            u: resourceUrlComponents?.HostNameAndPort,\r\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\r\n            p: resourceUrlComponents?.AbsolutePath,\r\n            q: resourceUrlComponents?.QueryString\r\n                ? [[], resourceUrlComponents.QueryString]\r\n                : undefined,\r\n            client_claims: shrClaims || undefined,\r\n            ...claims,\r\n        }, keyId, shrOptions, request.correlationId);\r\n    }\r\n}\n\n\n//# sourceMappingURL=PopTokenGenerator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvY3J5cHRvL1BvcFRva2VuR2VuZXJhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDdUM7QUFDSDtBQUNpQztBQUN0Qjs7QUFFNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELDBGQUFpQjtBQUNyRSw2QkFBNkIsd0VBQVcsOEJBQThCLDBGQUFpQjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsMEZBQWlCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDhFQUE4RTtBQUM5RjtBQUNBLGtCQUFrQix5REFBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnRUFBVTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2NyeXB0by9Qb3BUb2tlbkdlbmVyYXRvci5tanM/NjQxYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IG5vd1NlY29uZHMgfSBmcm9tICcuLi91dGlscy9UaW1lVXRpbHMubWpzJztcbmltcG9ydCB7IFVybFN0cmluZyB9IGZyb20gJy4uL3VybC9VcmxTdHJpbmcubWpzJztcbmltcG9ydCB7IFBlcmZvcm1hbmNlRXZlbnRzIH0gZnJvbSAnLi4vdGVsZW1ldHJ5L3BlcmZvcm1hbmNlL1BlcmZvcm1hbmNlRXZlbnQubWpzJztcbmltcG9ydCB7IGludm9rZUFzeW5jIH0gZnJvbSAnLi4vdXRpbHMvRnVuY3Rpb25XcmFwcGVycy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgS2V5TG9jYXRpb24gPSB7XHJcbiAgICBTVzogXCJzd1wiLFxyXG4gICAgVUhXOiBcInVod1wiLFxyXG59O1xyXG4vKiogQGludGVybmFsICovXHJcbmNsYXNzIFBvcFRva2VuR2VuZXJhdG9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGNyeXB0b1V0aWxzLCBwZXJmb3JtYW5jZUNsaWVudCkge1xyXG4gICAgICAgIHRoaXMuY3J5cHRvVXRpbHMgPSBjcnlwdG9VdGlscztcclxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlQ2xpZW50ID0gcGVyZm9ybWFuY2VDbGllbnQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdlbmVyYXRlcyB0aGUgcmVxX2NuZiB2YWxpZGF0ZWQgYXQgdGhlIFJQIGluIHRoZSBQT1AgcHJvdG9jb2wgZm9yIFNIUiBwYXJhbWV0ZXJzXHJcbiAgICAgKiBhbmQgcmV0dXJucyBhbiBvYmplY3QgY29udGFpbmluZyB0aGUga2V5aWQsIHRoZSBmdWxsIHJlcV9jbmYgc3RyaW5nIGFuZCB0aGUgcmVxX2NuZiBzdHJpbmcgaGFzaFxyXG4gICAgICogQHBhcmFtIHJlcXVlc3RcclxuICAgICAqIEByZXR1cm5zXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIGdlbmVyYXRlQ25mKHJlcXVlc3QsIGxvZ2dlcikge1xyXG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQ/LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuUG9wVG9rZW5HZW5lcmF0ZUNuZiwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBjb25zdCByZXFDbmYgPSBhd2FpdCBpbnZva2VBc3luYyh0aGlzLmdlbmVyYXRlS2lkLmJpbmQodGhpcyksIFBlcmZvcm1hbmNlRXZlbnRzLlBvcFRva2VuR2VuZXJhdGVDbmYsIGxvZ2dlciwgdGhpcy5wZXJmb3JtYW5jZUNsaWVudCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKShyZXF1ZXN0KTtcclxuICAgICAgICBjb25zdCByZXFDbmZTdHJpbmcgPSB0aGlzLmNyeXB0b1V0aWxzLmJhc2U2NFVybEVuY29kZShKU09OLnN0cmluZ2lmeShyZXFDbmYpKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBraWQ6IHJlcUNuZi5raWQsXHJcbiAgICAgICAgICAgIHJlcUNuZlN0cmluZyxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZW5lcmF0ZXMga2V5X2lkIGZvciBhIFNIUiB0b2tlbiByZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gcmVxdWVzdFxyXG4gICAgICogQHJldHVybnNcclxuICAgICAqL1xyXG4gICAgYXN5bmMgZ2VuZXJhdGVLaWQocmVxdWVzdCkge1xyXG4gICAgICAgIHRoaXMucGVyZm9ybWFuY2VDbGllbnQ/LmFkZFF1ZXVlTWVhc3VyZW1lbnQoUGVyZm9ybWFuY2VFdmVudHMuUG9wVG9rZW5HZW5lcmF0ZUtpZCwgcmVxdWVzdC5jb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBjb25zdCBraWRUaHVtYnByaW50ID0gYXdhaXQgdGhpcy5jcnlwdG9VdGlscy5nZXRQdWJsaWNLZXlUaHVtYnByaW50KHJlcXVlc3QpO1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIGtpZDoga2lkVGh1bWJwcmludCxcclxuICAgICAgICAgICAgeG1zX2tzbDogS2V5TG9jYXRpb24uU1csXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU2lnbnMgdGhlIFBPUCBhY2Nlc3NfdG9rZW4gd2l0aCB0aGUgbG9jYWwgZ2VuZXJhdGVkIGtleS1wYWlyXHJcbiAgICAgKiBAcGFyYW0gYWNjZXNzVG9rZW5cclxuICAgICAqIEBwYXJhbSByZXF1ZXN0XHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBhc3luYyBzaWduUG9wVG9rZW4oYWNjZXNzVG9rZW4sIGtleUlkLCByZXF1ZXN0KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc2lnblBheWxvYWQoYWNjZXNzVG9rZW4sIGtleUlkLCByZXF1ZXN0KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVXRpbGl0eSBmdW5jdGlvbiB0byBnZW5lcmF0ZSB0aGUgc2lnbmVkIEpXVCBmb3IgYW4gYWNjZXNzX3Rva2VuXHJcbiAgICAgKiBAcGFyYW0gcGF5bG9hZFxyXG4gICAgICogQHBhcmFtIGtpZFxyXG4gICAgICogQHBhcmFtIHJlcXVlc3RcclxuICAgICAqIEBwYXJhbSBjbGFpbXNcclxuICAgICAqIEByZXR1cm5zXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIHNpZ25QYXlsb2FkKHBheWxvYWQsIGtleUlkLCByZXF1ZXN0LCBjbGFpbXMpIHtcclxuICAgICAgICAvLyBEZWNvbnN0cnVjdCByZXF1ZXN0IHRvIGV4dHJhY3QgU0hSIHBhcmFtZXRlcnNcclxuICAgICAgICBjb25zdCB7IHJlc291cmNlUmVxdWVzdE1ldGhvZCwgcmVzb3VyY2VSZXF1ZXN0VXJpLCBzaHJDbGFpbXMsIHNock5vbmNlLCBzaHJPcHRpb25zLCB9ID0gcmVxdWVzdDtcclxuICAgICAgICBjb25zdCByZXNvdXJjZVVybFN0cmluZyA9IHJlc291cmNlUmVxdWVzdFVyaVxyXG4gICAgICAgICAgICA/IG5ldyBVcmxTdHJpbmcocmVzb3VyY2VSZXF1ZXN0VXJpKVxyXG4gICAgICAgICAgICA6IHVuZGVmaW5lZDtcclxuICAgICAgICBjb25zdCByZXNvdXJjZVVybENvbXBvbmVudHMgPSByZXNvdXJjZVVybFN0cmluZz8uZ2V0VXJsQ29tcG9uZW50cygpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLmNyeXB0b1V0aWxzLnNpZ25Kd3Qoe1xyXG4gICAgICAgICAgICBhdDogcGF5bG9hZCxcclxuICAgICAgICAgICAgdHM6IG5vd1NlY29uZHMoKSxcclxuICAgICAgICAgICAgbTogcmVzb3VyY2VSZXF1ZXN0TWV0aG9kPy50b1VwcGVyQ2FzZSgpLFxyXG4gICAgICAgICAgICB1OiByZXNvdXJjZVVybENvbXBvbmVudHM/Lkhvc3ROYW1lQW5kUG9ydCxcclxuICAgICAgICAgICAgbm9uY2U6IHNock5vbmNlIHx8IHRoaXMuY3J5cHRvVXRpbHMuY3JlYXRlTmV3R3VpZCgpLFxyXG4gICAgICAgICAgICBwOiByZXNvdXJjZVVybENvbXBvbmVudHM/LkFic29sdXRlUGF0aCxcclxuICAgICAgICAgICAgcTogcmVzb3VyY2VVcmxDb21wb25lbnRzPy5RdWVyeVN0cmluZ1xyXG4gICAgICAgICAgICAgICAgPyBbW10sIHJlc291cmNlVXJsQ29tcG9uZW50cy5RdWVyeVN0cmluZ11cclxuICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkLFxyXG4gICAgICAgICAgICBjbGllbnRfY2xhaW1zOiBzaHJDbGFpbXMgfHwgdW5kZWZpbmVkLFxyXG4gICAgICAgICAgICAuLi5jbGFpbXMsXHJcbiAgICAgICAgfSwga2V5SWQsIHNock9wdGlvbnMsIHJlcXVlc3QuY29ycmVsYXRpb25JZCk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgUG9wVG9rZW5HZW5lcmF0b3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVBvcFRva2VuR2VuZXJhdG9yLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/AuthError.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthError: () => (/* binding */ AuthError),\n/* harmony export */   AuthErrorCodes: () => (/* reexport module object */ _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   AuthErrorMessage: () => (/* binding */ AuthErrorMessage),\n/* harmony export */   AuthErrorMessages: () => (/* binding */ AuthErrorMessages),\n/* harmony export */   createAuthError: () => (/* binding */ createAuthError)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst AuthErrorMessages = {\r\n    [_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedError]: \"Unexpected error in authentication.\",\r\n    [_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed]: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\r\n};\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use AuthErrorCodes instead\r\n */\r\nconst AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedError,\r\n        desc: AuthErrorMessages[_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedError],\r\n    },\r\n    postRequestFailed: {\r\n        code: _AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed,\r\n        desc: AuthErrorMessages[_AuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.postRequestFailed],\r\n    },\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nclass AuthError extends Error {\r\n    constructor(errorCode, errorMessage, suberror) {\r\n        const errorString = errorMessage\r\n            ? `${errorCode}: ${errorMessage}`\r\n            : errorCode;\r\n        super(errorString);\r\n        Object.setPrototypeOf(this, AuthError.prototype);\r\n        this.errorCode = errorCode || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\r\n        this.errorMessage = errorMessage || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\r\n        this.subError = suberror || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\r\n        this.name = \"AuthError\";\r\n    }\r\n    setCorrelationId(correlationId) {\r\n        this.correlationId = correlationId;\r\n    }\r\n}\r\nfunction createAuthError(code, additionalMessage) {\r\n    return new AuthError(code, additionalMessage\r\n        ? `${AuthErrorMessages[code]} ${additionalMessage}`\r\n        : AuthErrorMessages[code]);\r\n}\n\n\n//# sourceMappingURL=AuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQXV0aEVycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNzQztBQUN1QjtBQUNuQjtBQUM3Qjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssZ0VBQWU7QUFDcEIsS0FBSyxrRUFBaUI7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGdFQUFlO0FBQzdCLGdDQUFnQyxnRUFBZTtBQUMvQyxLQUFLO0FBQ0w7QUFDQSxjQUFjLGtFQUFpQjtBQUMvQixnQ0FBZ0Msa0VBQWlCO0FBQ2pELEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixVQUFVLElBQUksYUFBYTtBQUM1QztBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsMkRBQVM7QUFDL0MsNENBQTRDLDJEQUFTO0FBQ3JELG9DQUFvQywyREFBUztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx5QkFBeUIsRUFBRSxrQkFBa0I7QUFDMUQ7QUFDQTs7QUFFMkU7QUFDM0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL0F1dGhFcnJvci5tanM/YjVkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgdW5leHBlY3RlZEVycm9yLCBwb3N0UmVxdWVzdEZhaWxlZCB9IGZyb20gJy4vQXV0aEVycm9yQ29kZXMubWpzJztcbmltcG9ydCAqIGFzIEF1dGhFcnJvckNvZGVzIGZyb20gJy4vQXV0aEVycm9yQ29kZXMubWpzJztcbmV4cG9ydCB7IEF1dGhFcnJvckNvZGVzIH07XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBBdXRoRXJyb3JNZXNzYWdlcyA9IHtcclxuICAgIFt1bmV4cGVjdGVkRXJyb3JdOiBcIlVuZXhwZWN0ZWQgZXJyb3IgaW4gYXV0aGVudGljYXRpb24uXCIsXHJcbiAgICBbcG9zdFJlcXVlc3RGYWlsZWRdOiBcIlBvc3QgcmVxdWVzdCBmYWlsZWQgZnJvbSB0aGUgbmV0d29yaywgY291bGQgYmUgYSA0eHgvNXh4IG9yIGEgbmV0d29yayB1bmF2YWlsYWJpbGl0eS4gUGxlYXNlIGNoZWNrIHRoZSBleGFjdCBlcnJvciBjb2RlIGZvciBkZXRhaWxzLlwiLFxyXG59O1xyXG4vKipcclxuICogQXV0aEVycm9yTWVzc2FnZSBjbGFzcyBjb250YWluaW5nIHN0cmluZyBjb25zdGFudHMgdXNlZCBieSBlcnJvciBjb2RlcyBhbmQgbWVzc2FnZXMuXHJcbiAqIEBkZXByZWNhdGVkIFVzZSBBdXRoRXJyb3JDb2RlcyBpbnN0ZWFkXHJcbiAqL1xyXG5jb25zdCBBdXRoRXJyb3JNZXNzYWdlID0ge1xyXG4gICAgdW5leHBlY3RlZEVycm9yOiB7XHJcbiAgICAgICAgY29kZTogdW5leHBlY3RlZEVycm9yLFxyXG4gICAgICAgIGRlc2M6IEF1dGhFcnJvck1lc3NhZ2VzW3VuZXhwZWN0ZWRFcnJvcl0sXHJcbiAgICB9LFxyXG4gICAgcG9zdFJlcXVlc3RGYWlsZWQ6IHtcclxuICAgICAgICBjb2RlOiBwb3N0UmVxdWVzdEZhaWxlZCxcclxuICAgICAgICBkZXNjOiBBdXRoRXJyb3JNZXNzYWdlc1twb3N0UmVxdWVzdEZhaWxlZF0sXHJcbiAgICB9LFxyXG59O1xyXG4vKipcclxuICogR2VuZXJhbCBlcnJvciBjbGFzcyB0aHJvd24gYnkgdGhlIE1TQUwuanMgbGlicmFyeS5cclxuICovXHJcbmNsYXNzIEF1dGhFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlLCBzdWJlcnJvcikge1xyXG4gICAgICAgIGNvbnN0IGVycm9yU3RyaW5nID0gZXJyb3JNZXNzYWdlXHJcbiAgICAgICAgICAgID8gYCR7ZXJyb3JDb2RlfTogJHtlcnJvck1lc3NhZ2V9YFxyXG4gICAgICAgICAgICA6IGVycm9yQ29kZTtcclxuICAgICAgICBzdXBlcihlcnJvclN0cmluZyk7XHJcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEF1dGhFcnJvci5wcm90b3R5cGUpO1xyXG4gICAgICAgIHRoaXMuZXJyb3JDb2RlID0gZXJyb3JDb2RlIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XHJcbiAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSBlcnJvck1lc3NhZ2UgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICB0aGlzLnN1YkVycm9yID0gc3ViZXJyb3IgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIkF1dGhFcnJvclwiO1xyXG4gICAgfVxyXG4gICAgc2V0Q29ycmVsYXRpb25JZChjb3JyZWxhdGlvbklkKSB7XHJcbiAgICAgICAgdGhpcy5jb3JyZWxhdGlvbklkID0gY29ycmVsYXRpb25JZDtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBjcmVhdGVBdXRoRXJyb3IoY29kZSwgYWRkaXRpb25hbE1lc3NhZ2UpIHtcclxuICAgIHJldHVybiBuZXcgQXV0aEVycm9yKGNvZGUsIGFkZGl0aW9uYWxNZXNzYWdlXHJcbiAgICAgICAgPyBgJHtBdXRoRXJyb3JNZXNzYWdlc1tjb2RlXX0gJHthZGRpdGlvbmFsTWVzc2FnZX1gXHJcbiAgICAgICAgOiBBdXRoRXJyb3JNZXNzYWdlc1tjb2RlXSk7XHJcbn1cblxuZXhwb3J0IHsgQXV0aEVycm9yLCBBdXRoRXJyb3JNZXNzYWdlLCBBdXRoRXJyb3JNZXNzYWdlcywgY3JlYXRlQXV0aEVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRoRXJyb3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   postRequestFailed: () => (/* binding */ postRequestFailed),\n/* harmony export */   unexpectedError: () => (/* binding */ unexpectedError)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst unexpectedError = \"unexpected_error\";\r\nconst postRequestFailed = \"post_request_failed\";\n\n\n//# sourceMappingURL=AuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQXV0aEVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFOEM7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL0F1dGhFcnJvckNvZGVzLm1qcz9kMGFlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBBdXRoRXJyb3JNZXNzYWdlIGNsYXNzIGNvbnRhaW5pbmcgc3RyaW5nIGNvbnN0YW50cyB1c2VkIGJ5IGVycm9yIGNvZGVzIGFuZCBtZXNzYWdlcy5cclxuICovXHJcbmNvbnN0IHVuZXhwZWN0ZWRFcnJvciA9IFwidW5leHBlY3RlZF9lcnJvclwiO1xyXG5jb25zdCBwb3N0UmVxdWVzdEZhaWxlZCA9IFwicG9zdF9yZXF1ZXN0X2ZhaWxlZFwiO1xuXG5leHBvcnQgeyBwb3N0UmVxdWVzdEZhaWxlZCwgdW5leHBlY3RlZEVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdXRoRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/CacheError.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/CacheError.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CacheError: () => (/* binding */ CacheError),\n/* harmony export */   CacheErrorCodes: () => (/* reexport module object */ _CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   CacheErrorMessages: () => (/* binding */ CacheErrorMessages)\n/* harmony export */ });\n/* harmony import */ var _CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CacheErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CacheErrorMessages = {\r\n    [_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cacheQuotaExceededErrorCode]: \"Exceeded cache storage capacity.\",\r\n    [_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cacheUnknownErrorCode]: \"Unexpected error occurred when using cache storage.\",\r\n};\r\n/**\r\n * Error thrown when there is an error with the cache\r\n */\r\nclass CacheError extends Error {\r\n    constructor(errorCode, errorMessage) {\r\n        const message = errorMessage ||\r\n            (CacheErrorMessages[errorCode]\r\n                ? CacheErrorMessages[errorCode]\r\n                : CacheErrorMessages[_CacheErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cacheUnknownErrorCode]);\r\n        super(`${errorCode}: ${message}`);\r\n        Object.setPrototypeOf(this, CacheError.prototype);\r\n        this.name = \"CacheError\";\r\n        this.errorCode = errorCode;\r\n        this.errorMessage = message;\r\n    }\r\n}\n\n\n//# sourceMappingURL=CacheError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2FjaGVFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDOEU7QUFDbEM7QUFDOUI7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLDZFQUEyQjtBQUNoQyxLQUFLLHVFQUFxQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsdUVBQXFCO0FBQzFELGlCQUFpQixVQUFVLElBQUksUUFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBDO0FBQzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9DYWNoZUVycm9yLm1qcz9kNzkxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgY2FjaGVVbmtub3duRXJyb3JDb2RlLCBjYWNoZVF1b3RhRXhjZWVkZWRFcnJvckNvZGUgfSBmcm9tICcuL0NhY2hlRXJyb3JDb2Rlcy5tanMnO1xuaW1wb3J0ICogYXMgQ2FjaGVFcnJvckNvZGVzIGZyb20gJy4vQ2FjaGVFcnJvckNvZGVzLm1qcyc7XG5leHBvcnQgeyBDYWNoZUVycm9yQ29kZXMgfTtcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IENhY2hlRXJyb3JNZXNzYWdlcyA9IHtcclxuICAgIFtjYWNoZVF1b3RhRXhjZWVkZWRFcnJvckNvZGVdOiBcIkV4Y2VlZGVkIGNhY2hlIHN0b3JhZ2UgY2FwYWNpdHkuXCIsXHJcbiAgICBbY2FjaGVVbmtub3duRXJyb3JDb2RlXTogXCJVbmV4cGVjdGVkIGVycm9yIG9jY3VycmVkIHdoZW4gdXNpbmcgY2FjaGUgc3RvcmFnZS5cIixcclxufTtcclxuLyoqXHJcbiAqIEVycm9yIHRocm93biB3aGVuIHRoZXJlIGlzIGFuIGVycm9yIHdpdGggdGhlIGNhY2hlXHJcbiAqL1xyXG5jbGFzcyBDYWNoZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UpIHtcclxuICAgICAgICBjb25zdCBtZXNzYWdlID0gZXJyb3JNZXNzYWdlIHx8XHJcbiAgICAgICAgICAgIChDYWNoZUVycm9yTWVzc2FnZXNbZXJyb3JDb2RlXVxyXG4gICAgICAgICAgICAgICAgPyBDYWNoZUVycm9yTWVzc2FnZXNbZXJyb3JDb2RlXVxyXG4gICAgICAgICAgICAgICAgOiBDYWNoZUVycm9yTWVzc2FnZXNbY2FjaGVVbmtub3duRXJyb3JDb2RlXSk7XHJcbiAgICAgICAgc3VwZXIoYCR7ZXJyb3JDb2RlfTogJHttZXNzYWdlfWApO1xyXG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBDYWNoZUVycm9yLnByb3RvdHlwZSk7XHJcbiAgICAgICAgdGhpcy5uYW1lID0gXCJDYWNoZUVycm9yXCI7XHJcbiAgICAgICAgdGhpcy5lcnJvckNvZGUgPSBlcnJvckNvZGU7XHJcbiAgICAgICAgdGhpcy5lcnJvck1lc3NhZ2UgPSBtZXNzYWdlO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IENhY2hlRXJyb3IsIENhY2hlRXJyb3JNZXNzYWdlcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Q2FjaGVFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/CacheError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cacheQuotaExceededErrorCode: () => (/* binding */ cacheQuotaExceededErrorCode),\n/* harmony export */   cacheUnknownErrorCode: () => (/* binding */ cacheUnknownErrorCode)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst cacheQuotaExceededErrorCode = \"cache_quota_exceeded\";\r\nconst cacheUnknownErrorCode = \"cache_error_unknown\";\n\n\n//# sourceMappingURL=CacheErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2FjaGVFcnJvckNvZGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRThEO0FBQzlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9DYWNoZUVycm9yQ29kZXMubWpzPzY1ZmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgY2FjaGVRdW90YUV4Y2VlZGVkRXJyb3JDb2RlID0gXCJjYWNoZV9xdW90YV9leGNlZWRlZFwiO1xyXG5jb25zdCBjYWNoZVVua25vd25FcnJvckNvZGUgPSBcImNhY2hlX2Vycm9yX3Vua25vd25cIjtcblxuZXhwb3J0IHsgY2FjaGVRdW90YUV4Y2VlZGVkRXJyb3JDb2RlLCBjYWNoZVVua25vd25FcnJvckNvZGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNhY2hlRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientAuthError: () => (/* binding */ ClientAuthError),\n/* harmony export */   ClientAuthErrorCodes: () => (/* reexport module object */ _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   ClientAuthErrorMessage: () => (/* binding */ ClientAuthErrorMessage),\n/* harmony export */   ClientAuthErrorMessages: () => (/* binding */ ClientAuthErrorMessages),\n/* harmony export */   createClientAuthError: () => (/* binding */ createClientAuthError)\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst ClientAuthErrorMessages = {\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoDecodingError]: \"The client info could not be parsed/decoded correctly\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoEmptyError]: \"The client info was empty\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenParsingError]: \"Token cannot be parsed\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nullOrEmptyToken]: \"The token is null or empty\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endpointResolutionError]: \"Endpoints cannot be resolved\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.networkError]: \"Network request failed\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.openIdConfigError]: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashNotDeserialized]: \"The hash parameters could not be deserialized\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidState]: \"State was not the expected format\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateMismatch]: \"State mismatch error\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateNotFound]: \"State not found\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonceMismatch]: \"Nonce mismatch error\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authTimeNotFound]: \"Max Age was requested and the ID token is missing the auth_time variable.\" +\r\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\r\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.maxAgeTranspired]: \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingTokens]: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAccounts]: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAppMetadata]: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.requestCannotBeMade]: \"Token request cannot be made without authorization code or refresh token.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotRemoveEmptyScope]: \"Cannot remove null or empty scope from ScopeSet\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAppendScopeSet]: \"Cannot append ScopeSet\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopeSet]: \"Empty input ScopeSet cannot be processed\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodePollingCancelled]: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeExpired]: \"Device code is expired.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeUnknownError]: \"Device code stopped polling for unknown reasons.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountInSilentRequest]: \"Please pass an account object, silent flow is not supported without account information\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheRecord]: \"Cache record object was null or undefined.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheEnvironment]: \"Invalid environment when attempting to create cache entry\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountFound]: \"No account found in cache for given key.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCryptoObject]: \"No crypto object detected.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedCredentialType]: \"Unexpected credential type.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAssertion]: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClientCredential]: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRefreshRequired]: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userTimeoutReached]: \"User defined timeout for device code polling reached\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenClaimsCnfRequiredForSignedJwt]: \"Cannot generate a POP jwt if the token_claims are not populated\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorizationCodeMissingFromServerResponse]: \"Server response does not contain an authorization code to proceed\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.bindingKeyNotRemoved]: \"Could not remove the credential's binding key from storage.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endSessionEndpointNotSupported]: \"The provided authority does not support logout\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.keyIdMissing]: \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity]: \"No network connectivity. Check your internet connection.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCanceled]: \"User cancelled the flow.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingTenantIdError]: \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.methodNotImplemented]: \"This method has not been implemented\",\r\n    [_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nestedAppAuthBridgeDisabled]: \"The nested app auth bridge is disabled\",\r\n};\r\n/**\r\n * String constants used by error codes and messages.\r\n * @deprecated Use ClientAuthErrorCodes instead\r\n */\r\nconst ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoDecodingError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoDecodingError],\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoEmptyError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.clientInfoEmptyError],\r\n    },\r\n    tokenParsingError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenParsingError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenParsingError],\r\n    },\r\n    nullOrEmptyToken: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nullOrEmptyToken,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nullOrEmptyToken],\r\n    },\r\n    endpointResolutionError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endpointResolutionError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endpointResolutionError],\r\n    },\r\n    networkError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.networkError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.networkError],\r\n    },\r\n    unableToGetOpenidConfigError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.openIdConfigError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.openIdConfigError],\r\n    },\r\n    hashNotDeserialized: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashNotDeserialized,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.hashNotDeserialized],\r\n    },\r\n    invalidStateError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidState,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidState],\r\n    },\r\n    stateMismatchError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateMismatch,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateMismatch],\r\n    },\r\n    stateNotFoundError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateNotFound,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.stateNotFound],\r\n    },\r\n    nonceMismatchError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonceMismatch,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nonceMismatch],\r\n    },\r\n    authTimeNotFoundError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authTimeNotFound,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authTimeNotFound],\r\n    },\r\n    maxAgeTranspired: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.maxAgeTranspired,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.maxAgeTranspired],\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingTokens,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingTokens],\r\n    },\r\n    multipleMatchingAccounts: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAccounts,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAccounts],\r\n    },\r\n    multipleMatchingAppMetadata: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAppMetadata,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.multipleMatchingAppMetadata],\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.requestCannotBeMade,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.requestCannotBeMade],\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotRemoveEmptyScope,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotRemoveEmptyScope],\r\n    },\r\n    appendScopeSetError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAppendScopeSet,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAppendScopeSet],\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopeSet,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopeSet],\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodePollingCancelled,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodePollingCancelled],\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeExpired,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeExpired],\r\n    },\r\n    DeviceCodeUnknownError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeUnknownError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.deviceCodeUnknownError],\r\n    },\r\n    NoAccountInSilentRequest: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountInSilentRequest,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountInSilentRequest],\r\n    },\r\n    invalidCacheRecord: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheRecord,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheRecord],\r\n    },\r\n    invalidCacheEnvironment: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheEnvironment,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCacheEnvironment],\r\n    },\r\n    noAccountFound: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountFound,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noAccountFound],\r\n    },\r\n    noCryptoObj: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCryptoObject,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noCryptoObject],\r\n    },\r\n    unexpectedCredentialType: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedCredentialType,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.unexpectedCredentialType],\r\n    },\r\n    invalidAssertion: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAssertion,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAssertion],\r\n    },\r\n    invalidClientCredential: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClientCredential,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClientCredential],\r\n    },\r\n    tokenRefreshRequired: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRefreshRequired,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRefreshRequired],\r\n    },\r\n    userTimeoutReached: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userTimeoutReached,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userTimeoutReached],\r\n    },\r\n    tokenClaimsRequired: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenClaimsCnfRequiredForSignedJwt,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenClaimsCnfRequiredForSignedJwt],\r\n    },\r\n    noAuthorizationCodeFromServer: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorizationCodeMissingFromServerResponse,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorizationCodeMissingFromServerResponse],\r\n    },\r\n    bindingKeyNotRemovedError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.bindingKeyNotRemoved,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.bindingKeyNotRemoved],\r\n    },\r\n    logoutNotSupported: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endSessionEndpointNotSupported,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.endSessionEndpointNotSupported],\r\n    },\r\n    keyIdMissing: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.keyIdMissing,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.keyIdMissing],\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noNetworkConnectivity],\r\n    },\r\n    userCanceledError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCanceled,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.userCanceled],\r\n    },\r\n    missingTenantIdError: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingTenantIdError,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingTenantIdError],\r\n    },\r\n    nestedAppAuthBridgeDisabled: {\r\n        code: _ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nestedAppAuthBridgeDisabled,\r\n        desc: ClientAuthErrorMessages[_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nestedAppAuthBridgeDisabled],\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nclass ClientAuthError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode, additionalMessage) {\r\n        super(errorCode, additionalMessage\r\n            ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\r\n            : ClientAuthErrorMessages[errorCode]);\r\n        this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\r\n    }\r\n}\r\nfunction createClientAuthError(errorCode, additionalMessage) {\r\n    return new ClientAuthError(errorCode, additionalMessage);\r\n}\n\n\n//# sourceMappingURL=ClientAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authTimeNotFound: () => (/* binding */ authTimeNotFound),\n/* harmony export */   authorizationCodeMissingFromServerResponse: () => (/* binding */ authorizationCodeMissingFromServerResponse),\n/* harmony export */   bindingKeyNotRemoved: () => (/* binding */ bindingKeyNotRemoved),\n/* harmony export */   cannotAppendScopeSet: () => (/* binding */ cannotAppendScopeSet),\n/* harmony export */   cannotRemoveEmptyScope: () => (/* binding */ cannotRemoveEmptyScope),\n/* harmony export */   clientInfoDecodingError: () => (/* binding */ clientInfoDecodingError),\n/* harmony export */   clientInfoEmptyError: () => (/* binding */ clientInfoEmptyError),\n/* harmony export */   deviceCodeExpired: () => (/* binding */ deviceCodeExpired),\n/* harmony export */   deviceCodePollingCancelled: () => (/* binding */ deviceCodePollingCancelled),\n/* harmony export */   deviceCodeUnknownError: () => (/* binding */ deviceCodeUnknownError),\n/* harmony export */   emptyInputScopeSet: () => (/* binding */ emptyInputScopeSet),\n/* harmony export */   endSessionEndpointNotSupported: () => (/* binding */ endSessionEndpointNotSupported),\n/* harmony export */   endpointResolutionError: () => (/* binding */ endpointResolutionError),\n/* harmony export */   hashNotDeserialized: () => (/* binding */ hashNotDeserialized),\n/* harmony export */   invalidAssertion: () => (/* binding */ invalidAssertion),\n/* harmony export */   invalidCacheEnvironment: () => (/* binding */ invalidCacheEnvironment),\n/* harmony export */   invalidCacheRecord: () => (/* binding */ invalidCacheRecord),\n/* harmony export */   invalidClientCredential: () => (/* binding */ invalidClientCredential),\n/* harmony export */   invalidState: () => (/* binding */ invalidState),\n/* harmony export */   keyIdMissing: () => (/* binding */ keyIdMissing),\n/* harmony export */   maxAgeTranspired: () => (/* binding */ maxAgeTranspired),\n/* harmony export */   methodNotImplemented: () => (/* binding */ methodNotImplemented),\n/* harmony export */   missingTenantIdError: () => (/* binding */ missingTenantIdError),\n/* harmony export */   multipleMatchingAccounts: () => (/* binding */ multipleMatchingAccounts),\n/* harmony export */   multipleMatchingAppMetadata: () => (/* binding */ multipleMatchingAppMetadata),\n/* harmony export */   multipleMatchingTokens: () => (/* binding */ multipleMatchingTokens),\n/* harmony export */   nestedAppAuthBridgeDisabled: () => (/* binding */ nestedAppAuthBridgeDisabled),\n/* harmony export */   networkError: () => (/* binding */ networkError),\n/* harmony export */   noAccountFound: () => (/* binding */ noAccountFound),\n/* harmony export */   noAccountInSilentRequest: () => (/* binding */ noAccountInSilentRequest),\n/* harmony export */   noCryptoObject: () => (/* binding */ noCryptoObject),\n/* harmony export */   noNetworkConnectivity: () => (/* binding */ noNetworkConnectivity),\n/* harmony export */   nonceMismatch: () => (/* binding */ nonceMismatch),\n/* harmony export */   nullOrEmptyToken: () => (/* binding */ nullOrEmptyToken),\n/* harmony export */   openIdConfigError: () => (/* binding */ openIdConfigError),\n/* harmony export */   requestCannotBeMade: () => (/* binding */ requestCannotBeMade),\n/* harmony export */   stateMismatch: () => (/* binding */ stateMismatch),\n/* harmony export */   stateNotFound: () => (/* binding */ stateNotFound),\n/* harmony export */   tokenClaimsCnfRequiredForSignedJwt: () => (/* binding */ tokenClaimsCnfRequiredForSignedJwt),\n/* harmony export */   tokenParsingError: () => (/* binding */ tokenParsingError),\n/* harmony export */   tokenRefreshRequired: () => (/* binding */ tokenRefreshRequired),\n/* harmony export */   unexpectedCredentialType: () => (/* binding */ unexpectedCredentialType),\n/* harmony export */   userCanceled: () => (/* binding */ userCanceled),\n/* harmony export */   userTimeoutReached: () => (/* binding */ userTimeoutReached)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst clientInfoDecodingError = \"client_info_decoding_error\";\r\nconst clientInfoEmptyError = \"client_info_empty_error\";\r\nconst tokenParsingError = \"token_parsing_error\";\r\nconst nullOrEmptyToken = \"null_or_empty_token\";\r\nconst endpointResolutionError = \"endpoints_resolution_error\";\r\nconst networkError = \"network_error\";\r\nconst openIdConfigError = \"openid_config_error\";\r\nconst hashNotDeserialized = \"hash_not_deserialized\";\r\nconst invalidState = \"invalid_state\";\r\nconst stateMismatch = \"state_mismatch\";\r\nconst stateNotFound = \"state_not_found\";\r\nconst nonceMismatch = \"nonce_mismatch\";\r\nconst authTimeNotFound = \"auth_time_not_found\";\r\nconst maxAgeTranspired = \"max_age_transpired\";\r\nconst multipleMatchingTokens = \"multiple_matching_tokens\";\r\nconst multipleMatchingAccounts = \"multiple_matching_accounts\";\r\nconst multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\r\nconst requestCannotBeMade = \"request_cannot_be_made\";\r\nconst cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\r\nconst cannotAppendScopeSet = \"cannot_append_scopeset\";\r\nconst emptyInputScopeSet = \"empty_input_scopeset\";\r\nconst deviceCodePollingCancelled = \"device_code_polling_cancelled\";\r\nconst deviceCodeExpired = \"device_code_expired\";\r\nconst deviceCodeUnknownError = \"device_code_unknown_error\";\r\nconst noAccountInSilentRequest = \"no_account_in_silent_request\";\r\nconst invalidCacheRecord = \"invalid_cache_record\";\r\nconst invalidCacheEnvironment = \"invalid_cache_environment\";\r\nconst noAccountFound = \"no_account_found\";\r\nconst noCryptoObject = \"no_crypto_object\";\r\nconst unexpectedCredentialType = \"unexpected_credential_type\";\r\nconst invalidAssertion = \"invalid_assertion\";\r\nconst invalidClientCredential = \"invalid_client_credential\";\r\nconst tokenRefreshRequired = \"token_refresh_required\";\r\nconst userTimeoutReached = \"user_timeout_reached\";\r\nconst tokenClaimsCnfRequiredForSignedJwt = \"token_claims_cnf_required_for_signedjwt\";\r\nconst authorizationCodeMissingFromServerResponse = \"authorization_code_missing_from_server_response\";\r\nconst bindingKeyNotRemoved = \"binding_key_not_removed\";\r\nconst endSessionEndpointNotSupported = \"end_session_endpoint_not_supported\";\r\nconst keyIdMissing = \"key_id_missing\";\r\nconst noNetworkConnectivity = \"no_network_connectivity\";\r\nconst userCanceled = \"user_canceled\";\r\nconst missingTenantIdError = \"missing_tenant_id_error\";\r\nconst methodNotImplemented = \"method_not_implemented\";\r\nconst nestedAppAuthBridgeDisabled = \"nested_app_auth_bridge_disabled\";\n\n\n//# sourceMappingURL=ClientAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFaTlCO0FBQ2o5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzPzIxYTciXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgY2xpZW50SW5mb0RlY29kaW5nRXJyb3IgPSBcImNsaWVudF9pbmZvX2RlY29kaW5nX2Vycm9yXCI7XHJcbmNvbnN0IGNsaWVudEluZm9FbXB0eUVycm9yID0gXCJjbGllbnRfaW5mb19lbXB0eV9lcnJvclwiO1xyXG5jb25zdCB0b2tlblBhcnNpbmdFcnJvciA9IFwidG9rZW5fcGFyc2luZ19lcnJvclwiO1xyXG5jb25zdCBudWxsT3JFbXB0eVRva2VuID0gXCJudWxsX29yX2VtcHR5X3Rva2VuXCI7XHJcbmNvbnN0IGVuZHBvaW50UmVzb2x1dGlvbkVycm9yID0gXCJlbmRwb2ludHNfcmVzb2x1dGlvbl9lcnJvclwiO1xyXG5jb25zdCBuZXR3b3JrRXJyb3IgPSBcIm5ldHdvcmtfZXJyb3JcIjtcclxuY29uc3Qgb3BlbklkQ29uZmlnRXJyb3IgPSBcIm9wZW5pZF9jb25maWdfZXJyb3JcIjtcclxuY29uc3QgaGFzaE5vdERlc2VyaWFsaXplZCA9IFwiaGFzaF9ub3RfZGVzZXJpYWxpemVkXCI7XHJcbmNvbnN0IGludmFsaWRTdGF0ZSA9IFwiaW52YWxpZF9zdGF0ZVwiO1xyXG5jb25zdCBzdGF0ZU1pc21hdGNoID0gXCJzdGF0ZV9taXNtYXRjaFwiO1xyXG5jb25zdCBzdGF0ZU5vdEZvdW5kID0gXCJzdGF0ZV9ub3RfZm91bmRcIjtcclxuY29uc3Qgbm9uY2VNaXNtYXRjaCA9IFwibm9uY2VfbWlzbWF0Y2hcIjtcclxuY29uc3QgYXV0aFRpbWVOb3RGb3VuZCA9IFwiYXV0aF90aW1lX25vdF9mb3VuZFwiO1xyXG5jb25zdCBtYXhBZ2VUcmFuc3BpcmVkID0gXCJtYXhfYWdlX3RyYW5zcGlyZWRcIjtcclxuY29uc3QgbXVsdGlwbGVNYXRjaGluZ1Rva2VucyA9IFwibXVsdGlwbGVfbWF0Y2hpbmdfdG9rZW5zXCI7XHJcbmNvbnN0IG11bHRpcGxlTWF0Y2hpbmdBY2NvdW50cyA9IFwibXVsdGlwbGVfbWF0Y2hpbmdfYWNjb3VudHNcIjtcclxuY29uc3QgbXVsdGlwbGVNYXRjaGluZ0FwcE1ldGFkYXRhID0gXCJtdWx0aXBsZV9tYXRjaGluZ19hcHBNZXRhZGF0YVwiO1xyXG5jb25zdCByZXF1ZXN0Q2Fubm90QmVNYWRlID0gXCJyZXF1ZXN0X2Nhbm5vdF9iZV9tYWRlXCI7XHJcbmNvbnN0IGNhbm5vdFJlbW92ZUVtcHR5U2NvcGUgPSBcImNhbm5vdF9yZW1vdmVfZW1wdHlfc2NvcGVcIjtcclxuY29uc3QgY2Fubm90QXBwZW5kU2NvcGVTZXQgPSBcImNhbm5vdF9hcHBlbmRfc2NvcGVzZXRcIjtcclxuY29uc3QgZW1wdHlJbnB1dFNjb3BlU2V0ID0gXCJlbXB0eV9pbnB1dF9zY29wZXNldFwiO1xyXG5jb25zdCBkZXZpY2VDb2RlUG9sbGluZ0NhbmNlbGxlZCA9IFwiZGV2aWNlX2NvZGVfcG9sbGluZ19jYW5jZWxsZWRcIjtcclxuY29uc3QgZGV2aWNlQ29kZUV4cGlyZWQgPSBcImRldmljZV9jb2RlX2V4cGlyZWRcIjtcclxuY29uc3QgZGV2aWNlQ29kZVVua25vd25FcnJvciA9IFwiZGV2aWNlX2NvZGVfdW5rbm93bl9lcnJvclwiO1xyXG5jb25zdCBub0FjY291bnRJblNpbGVudFJlcXVlc3QgPSBcIm5vX2FjY291bnRfaW5fc2lsZW50X3JlcXVlc3RcIjtcclxuY29uc3QgaW52YWxpZENhY2hlUmVjb3JkID0gXCJpbnZhbGlkX2NhY2hlX3JlY29yZFwiO1xyXG5jb25zdCBpbnZhbGlkQ2FjaGVFbnZpcm9ubWVudCA9IFwiaW52YWxpZF9jYWNoZV9lbnZpcm9ubWVudFwiO1xyXG5jb25zdCBub0FjY291bnRGb3VuZCA9IFwibm9fYWNjb3VudF9mb3VuZFwiO1xyXG5jb25zdCBub0NyeXB0b09iamVjdCA9IFwibm9fY3J5cHRvX29iamVjdFwiO1xyXG5jb25zdCB1bmV4cGVjdGVkQ3JlZGVudGlhbFR5cGUgPSBcInVuZXhwZWN0ZWRfY3JlZGVudGlhbF90eXBlXCI7XHJcbmNvbnN0IGludmFsaWRBc3NlcnRpb24gPSBcImludmFsaWRfYXNzZXJ0aW9uXCI7XHJcbmNvbnN0IGludmFsaWRDbGllbnRDcmVkZW50aWFsID0gXCJpbnZhbGlkX2NsaWVudF9jcmVkZW50aWFsXCI7XHJcbmNvbnN0IHRva2VuUmVmcmVzaFJlcXVpcmVkID0gXCJ0b2tlbl9yZWZyZXNoX3JlcXVpcmVkXCI7XHJcbmNvbnN0IHVzZXJUaW1lb3V0UmVhY2hlZCA9IFwidXNlcl90aW1lb3V0X3JlYWNoZWRcIjtcclxuY29uc3QgdG9rZW5DbGFpbXNDbmZSZXF1aXJlZEZvclNpZ25lZEp3dCA9IFwidG9rZW5fY2xhaW1zX2NuZl9yZXF1aXJlZF9mb3Jfc2lnbmVkand0XCI7XHJcbmNvbnN0IGF1dGhvcml6YXRpb25Db2RlTWlzc2luZ0Zyb21TZXJ2ZXJSZXNwb25zZSA9IFwiYXV0aG9yaXphdGlvbl9jb2RlX21pc3NpbmdfZnJvbV9zZXJ2ZXJfcmVzcG9uc2VcIjtcclxuY29uc3QgYmluZGluZ0tleU5vdFJlbW92ZWQgPSBcImJpbmRpbmdfa2V5X25vdF9yZW1vdmVkXCI7XHJcbmNvbnN0IGVuZFNlc3Npb25FbmRwb2ludE5vdFN1cHBvcnRlZCA9IFwiZW5kX3Nlc3Npb25fZW5kcG9pbnRfbm90X3N1cHBvcnRlZFwiO1xyXG5jb25zdCBrZXlJZE1pc3NpbmcgPSBcImtleV9pZF9taXNzaW5nXCI7XHJcbmNvbnN0IG5vTmV0d29ya0Nvbm5lY3Rpdml0eSA9IFwibm9fbmV0d29ya19jb25uZWN0aXZpdHlcIjtcclxuY29uc3QgdXNlckNhbmNlbGVkID0gXCJ1c2VyX2NhbmNlbGVkXCI7XHJcbmNvbnN0IG1pc3NpbmdUZW5hbnRJZEVycm9yID0gXCJtaXNzaW5nX3RlbmFudF9pZF9lcnJvclwiO1xyXG5jb25zdCBtZXRob2ROb3RJbXBsZW1lbnRlZCA9IFwibWV0aG9kX25vdF9pbXBsZW1lbnRlZFwiO1xyXG5jb25zdCBuZXN0ZWRBcHBBdXRoQnJpZGdlRGlzYWJsZWQgPSBcIm5lc3RlZF9hcHBfYXV0aF9icmlkZ2VfZGlzYWJsZWRcIjtcblxuZXhwb3J0IHsgYXV0aFRpbWVOb3RGb3VuZCwgYXV0aG9yaXphdGlvbkNvZGVNaXNzaW5nRnJvbVNlcnZlclJlc3BvbnNlLCBiaW5kaW5nS2V5Tm90UmVtb3ZlZCwgY2Fubm90QXBwZW5kU2NvcGVTZXQsIGNhbm5vdFJlbW92ZUVtcHR5U2NvcGUsIGNsaWVudEluZm9EZWNvZGluZ0Vycm9yLCBjbGllbnRJbmZvRW1wdHlFcnJvciwgZGV2aWNlQ29kZUV4cGlyZWQsIGRldmljZUNvZGVQb2xsaW5nQ2FuY2VsbGVkLCBkZXZpY2VDb2RlVW5rbm93bkVycm9yLCBlbXB0eUlucHV0U2NvcGVTZXQsIGVuZFNlc3Npb25FbmRwb2ludE5vdFN1cHBvcnRlZCwgZW5kcG9pbnRSZXNvbHV0aW9uRXJyb3IsIGhhc2hOb3REZXNlcmlhbGl6ZWQsIGludmFsaWRBc3NlcnRpb24sIGludmFsaWRDYWNoZUVudmlyb25tZW50LCBpbnZhbGlkQ2FjaGVSZWNvcmQsIGludmFsaWRDbGllbnRDcmVkZW50aWFsLCBpbnZhbGlkU3RhdGUsIGtleUlkTWlzc2luZywgbWF4QWdlVHJhbnNwaXJlZCwgbWV0aG9kTm90SW1wbGVtZW50ZWQsIG1pc3NpbmdUZW5hbnRJZEVycm9yLCBtdWx0aXBsZU1hdGNoaW5nQWNjb3VudHMsIG11bHRpcGxlTWF0Y2hpbmdBcHBNZXRhZGF0YSwgbXVsdGlwbGVNYXRjaGluZ1Rva2VucywgbmVzdGVkQXBwQXV0aEJyaWRnZURpc2FibGVkLCBuZXR3b3JrRXJyb3IsIG5vQWNjb3VudEZvdW5kLCBub0FjY291bnRJblNpbGVudFJlcXVlc3QsIG5vQ3J5cHRvT2JqZWN0LCBub05ldHdvcmtDb25uZWN0aXZpdHksIG5vbmNlTWlzbWF0Y2gsIG51bGxPckVtcHR5VG9rZW4sIG9wZW5JZENvbmZpZ0Vycm9yLCByZXF1ZXN0Q2Fubm90QmVNYWRlLCBzdGF0ZU1pc21hdGNoLCBzdGF0ZU5vdEZvdW5kLCB0b2tlbkNsYWltc0NuZlJlcXVpcmVkRm9yU2lnbmVkSnd0LCB0b2tlblBhcnNpbmdFcnJvciwgdG9rZW5SZWZyZXNoUmVxdWlyZWQsIHVuZXhwZWN0ZWRDcmVkZW50aWFsVHlwZSwgdXNlckNhbmNlbGVkLCB1c2VyVGltZW91dFJlYWNoZWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUNsaWVudEF1dGhFcnJvckNvZGVzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs":
/*!*********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClientConfigurationError: () => (/* binding */ ClientConfigurationError),\n/* harmony export */   ClientConfigurationErrorCodes: () => (/* reexport module object */ _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   ClientConfigurationErrorMessage: () => (/* binding */ ClientConfigurationErrorMessage),\n/* harmony export */   ClientConfigurationErrorMessages: () => (/* binding */ ClientConfigurationErrorMessages),\n/* harmony export */   createClientConfigurationError: () => (/* binding */ createClientConfigurationError)\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClientConfigurationErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst ClientConfigurationErrorMessages = {\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectUriEmpty]: \"A redirect URI is required for all calls, and none has been set.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.claimsRequestParsingError]: \"Could not parse the given claims request object.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityUriInsecure]: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlParseError]: \"URL could not be parsed into appropriate segments.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlEmptyError]: \"URL was empty or null.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopesError]: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPromptValue]: \"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClaims]: \"Given claims parameter must be a stringified JSON object.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRequestEmpty]: \"Token request was empty and not found in cache.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.logoutRequestEmpty]: \"The logout request was null or undefined.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCodeChallengeMethod]: 'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceParamsMissing]: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCloudDiscoveryMetadata]: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthorityMetadata]: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.untrustedAuthority]: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshJwk]: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshKid]: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingNonceAuthenticationHeader]: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthenticationHeader]: \"Invalid authentication header provided\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotSetOIDCOptions]: \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAllowNativeBroker]: \"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.\",\r\n    [_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityMismatch]: \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\r\n};\r\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use ClientConfigurationErrorCodes instead\r\n */\r\nconst ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectUriEmpty,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.redirectUriEmpty],\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.claimsRequestParsingError,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.claimsRequestParsingError],\r\n    },\r\n    authorityUriInsecure: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityUriInsecure,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityUriInsecure],\r\n    },\r\n    urlParseError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlParseError,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlParseError],\r\n    },\r\n    urlEmptyError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlEmptyError,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.urlEmptyError],\r\n    },\r\n    emptyScopesError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopesError,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.emptyInputScopesError],\r\n    },\r\n    invalidPrompt: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPromptValue,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidPromptValue],\r\n    },\r\n    invalidClaimsRequest: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClaims,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidClaims],\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRequestEmpty,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.tokenRequestEmpty],\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.logoutRequestEmpty,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.logoutRequestEmpty],\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCodeChallengeMethod,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCodeChallengeMethod],\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceParamsMissing,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.pkceParamsMissing],\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCloudDiscoveryMetadata,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidCloudDiscoveryMetadata],\r\n    },\r\n    invalidAuthorityMetadata: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthorityMetadata,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthorityMetadata],\r\n    },\r\n    untrustedAuthority: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.untrustedAuthority,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.untrustedAuthority],\r\n    },\r\n    missingSshJwk: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshJwk,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshJwk],\r\n    },\r\n    missingSshKid: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshKid,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingSshKid],\r\n    },\r\n    missingNonceAuthenticationHeader: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingNonceAuthenticationHeader,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingNonceAuthenticationHeader],\r\n    },\r\n    invalidAuthenticationHeader: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthenticationHeader,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidAuthenticationHeader],\r\n    },\r\n    cannotSetOIDCOptions: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotSetOIDCOptions,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotSetOIDCOptions],\r\n    },\r\n    cannotAllowNativeBroker: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAllowNativeBroker,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.cannotAllowNativeBroker],\r\n    },\r\n    authorityMismatch: {\r\n        code: _ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityMismatch,\r\n        desc: ClientConfigurationErrorMessages[_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.authorityMismatch],\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nclass ClientConfigurationError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode) {\r\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\r\n        this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\r\n    }\r\n}\r\nfunction createClientConfigurationError(errorCode) {\r\n    return new ClientConfigurationError(errorCode);\r\n}\n\n\n//# sourceMappingURL=ClientConfigurationError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs":
/*!**************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authorityMismatch: () => (/* binding */ authorityMismatch),\n/* harmony export */   authorityUriInsecure: () => (/* binding */ authorityUriInsecure),\n/* harmony export */   cannotAllowNativeBroker: () => (/* binding */ cannotAllowNativeBroker),\n/* harmony export */   cannotSetOIDCOptions: () => (/* binding */ cannotSetOIDCOptions),\n/* harmony export */   claimsRequestParsingError: () => (/* binding */ claimsRequestParsingError),\n/* harmony export */   emptyInputScopesError: () => (/* binding */ emptyInputScopesError),\n/* harmony export */   invalidAuthenticationHeader: () => (/* binding */ invalidAuthenticationHeader),\n/* harmony export */   invalidAuthorityMetadata: () => (/* binding */ invalidAuthorityMetadata),\n/* harmony export */   invalidClaims: () => (/* binding */ invalidClaims),\n/* harmony export */   invalidCloudDiscoveryMetadata: () => (/* binding */ invalidCloudDiscoveryMetadata),\n/* harmony export */   invalidCodeChallengeMethod: () => (/* binding */ invalidCodeChallengeMethod),\n/* harmony export */   invalidPromptValue: () => (/* binding */ invalidPromptValue),\n/* harmony export */   logoutRequestEmpty: () => (/* binding */ logoutRequestEmpty),\n/* harmony export */   missingNonceAuthenticationHeader: () => (/* binding */ missingNonceAuthenticationHeader),\n/* harmony export */   missingSshJwk: () => (/* binding */ missingSshJwk),\n/* harmony export */   missingSshKid: () => (/* binding */ missingSshKid),\n/* harmony export */   pkceParamsMissing: () => (/* binding */ pkceParamsMissing),\n/* harmony export */   redirectUriEmpty: () => (/* binding */ redirectUriEmpty),\n/* harmony export */   tokenRequestEmpty: () => (/* binding */ tokenRequestEmpty),\n/* harmony export */   untrustedAuthority: () => (/* binding */ untrustedAuthority),\n/* harmony export */   urlEmptyError: () => (/* binding */ urlEmptyError),\n/* harmony export */   urlParseError: () => (/* binding */ urlParseError)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst redirectUriEmpty = \"redirect_uri_empty\";\r\nconst claimsRequestParsingError = \"claims_request_parsing_error\";\r\nconst authorityUriInsecure = \"authority_uri_insecure\";\r\nconst urlParseError = \"url_parse_error\";\r\nconst urlEmptyError = \"empty_url_error\";\r\nconst emptyInputScopesError = \"empty_input_scopes_error\";\r\nconst invalidPromptValue = \"invalid_prompt_value\";\r\nconst invalidClaims = \"invalid_claims\";\r\nconst tokenRequestEmpty = \"token_request_empty\";\r\nconst logoutRequestEmpty = \"logout_request_empty\";\r\nconst invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\r\nconst pkceParamsMissing = \"pkce_params_missing\";\r\nconst invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\r\nconst invalidAuthorityMetadata = \"invalid_authority_metadata\";\r\nconst untrustedAuthority = \"untrusted_authority\";\r\nconst missingSshJwk = \"missing_ssh_jwk\";\r\nconst missingSshKid = \"missing_ssh_kid\";\r\nconst missingNonceAuthenticationHeader = \"missing_nonce_authentication_header\";\r\nconst invalidAuthenticationHeader = \"invalid_authentication_header\";\r\nconst cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\r\nconst cannotAllowNativeBroker = \"cannot_allow_native_broker\";\r\nconst authorityMismatch = \"authority_mismatch\";\n\n\n//# sourceMappingURL=ClientConfigurationErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdWU7QUFDdmUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL0NsaWVudENvbmZpZ3VyYXRpb25FcnJvckNvZGVzLm1qcz84MTg0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IHJlZGlyZWN0VXJpRW1wdHkgPSBcInJlZGlyZWN0X3VyaV9lbXB0eVwiO1xyXG5jb25zdCBjbGFpbXNSZXF1ZXN0UGFyc2luZ0Vycm9yID0gXCJjbGFpbXNfcmVxdWVzdF9wYXJzaW5nX2Vycm9yXCI7XHJcbmNvbnN0IGF1dGhvcml0eVVyaUluc2VjdXJlID0gXCJhdXRob3JpdHlfdXJpX2luc2VjdXJlXCI7XHJcbmNvbnN0IHVybFBhcnNlRXJyb3IgPSBcInVybF9wYXJzZV9lcnJvclwiO1xyXG5jb25zdCB1cmxFbXB0eUVycm9yID0gXCJlbXB0eV91cmxfZXJyb3JcIjtcclxuY29uc3QgZW1wdHlJbnB1dFNjb3Blc0Vycm9yID0gXCJlbXB0eV9pbnB1dF9zY29wZXNfZXJyb3JcIjtcclxuY29uc3QgaW52YWxpZFByb21wdFZhbHVlID0gXCJpbnZhbGlkX3Byb21wdF92YWx1ZVwiO1xyXG5jb25zdCBpbnZhbGlkQ2xhaW1zID0gXCJpbnZhbGlkX2NsYWltc1wiO1xyXG5jb25zdCB0b2tlblJlcXVlc3RFbXB0eSA9IFwidG9rZW5fcmVxdWVzdF9lbXB0eVwiO1xyXG5jb25zdCBsb2dvdXRSZXF1ZXN0RW1wdHkgPSBcImxvZ291dF9yZXF1ZXN0X2VtcHR5XCI7XHJcbmNvbnN0IGludmFsaWRDb2RlQ2hhbGxlbmdlTWV0aG9kID0gXCJpbnZhbGlkX2NvZGVfY2hhbGxlbmdlX21ldGhvZFwiO1xyXG5jb25zdCBwa2NlUGFyYW1zTWlzc2luZyA9IFwicGtjZV9wYXJhbXNfbWlzc2luZ1wiO1xyXG5jb25zdCBpbnZhbGlkQ2xvdWREaXNjb3ZlcnlNZXRhZGF0YSA9IFwiaW52YWxpZF9jbG91ZF9kaXNjb3ZlcnlfbWV0YWRhdGFcIjtcclxuY29uc3QgaW52YWxpZEF1dGhvcml0eU1ldGFkYXRhID0gXCJpbnZhbGlkX2F1dGhvcml0eV9tZXRhZGF0YVwiO1xyXG5jb25zdCB1bnRydXN0ZWRBdXRob3JpdHkgPSBcInVudHJ1c3RlZF9hdXRob3JpdHlcIjtcclxuY29uc3QgbWlzc2luZ1NzaEp3ayA9IFwibWlzc2luZ19zc2hfandrXCI7XHJcbmNvbnN0IG1pc3NpbmdTc2hLaWQgPSBcIm1pc3Npbmdfc3NoX2tpZFwiO1xyXG5jb25zdCBtaXNzaW5nTm9uY2VBdXRoZW50aWNhdGlvbkhlYWRlciA9IFwibWlzc2luZ19ub25jZV9hdXRoZW50aWNhdGlvbl9oZWFkZXJcIjtcclxuY29uc3QgaW52YWxpZEF1dGhlbnRpY2F0aW9uSGVhZGVyID0gXCJpbnZhbGlkX2F1dGhlbnRpY2F0aW9uX2hlYWRlclwiO1xyXG5jb25zdCBjYW5ub3RTZXRPSURDT3B0aW9ucyA9IFwiY2Fubm90X3NldF9PSURDT3B0aW9uc1wiO1xyXG5jb25zdCBjYW5ub3RBbGxvd05hdGl2ZUJyb2tlciA9IFwiY2Fubm90X2FsbG93X25hdGl2ZV9icm9rZXJcIjtcclxuY29uc3QgYXV0aG9yaXR5TWlzbWF0Y2ggPSBcImF1dGhvcml0eV9taXNtYXRjaFwiO1xuXG5leHBvcnQgeyBhdXRob3JpdHlNaXNtYXRjaCwgYXV0aG9yaXR5VXJpSW5zZWN1cmUsIGNhbm5vdEFsbG93TmF0aXZlQnJva2VyLCBjYW5ub3RTZXRPSURDT3B0aW9ucywgY2xhaW1zUmVxdWVzdFBhcnNpbmdFcnJvciwgZW1wdHlJbnB1dFNjb3Blc0Vycm9yLCBpbnZhbGlkQXV0aGVudGljYXRpb25IZWFkZXIsIGludmFsaWRBdXRob3JpdHlNZXRhZGF0YSwgaW52YWxpZENsYWltcywgaW52YWxpZENsb3VkRGlzY292ZXJ5TWV0YWRhdGEsIGludmFsaWRDb2RlQ2hhbGxlbmdlTWV0aG9kLCBpbnZhbGlkUHJvbXB0VmFsdWUsIGxvZ291dFJlcXVlc3RFbXB0eSwgbWlzc2luZ05vbmNlQXV0aGVudGljYXRpb25IZWFkZXIsIG1pc3NpbmdTc2hKd2ssIG1pc3NpbmdTc2hLaWQsIHBrY2VQYXJhbXNNaXNzaW5nLCByZWRpcmVjdFVyaUVtcHR5LCB0b2tlblJlcXVlc3RFbXB0eSwgdW50cnVzdGVkQXV0aG9yaXR5LCB1cmxFbXB0eUVycm9yLCB1cmxQYXJzZUVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRDb25maWd1cmF0aW9uRXJyb3JDb2Rlcy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs":
/*!*************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InteractionRequiredAuthError: () => (/* binding */ InteractionRequiredAuthError),\n/* harmony export */   InteractionRequiredAuthErrorCodes: () => (/* reexport module object */ _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   InteractionRequiredAuthErrorMessage: () => (/* binding */ InteractionRequiredAuthErrorMessage),\n/* harmony export */   InteractionRequiredAuthSubErrorMessage: () => (/* binding */ InteractionRequiredAuthSubErrorMessage),\n/* harmony export */   InteractionRequiredServerErrorMessage: () => (/* binding */ InteractionRequiredServerErrorMessage),\n/* harmony export */   createInteractionRequiredAuthError: () => (/* binding */ createInteractionRequiredAuthError),\n/* harmony export */   isInteractionRequiredError: () => (/* binding */ isInteractionRequiredError)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InteractionRequiredAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\r\nconst InteractionRequiredServerErrorMessage = [\r\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.interactionRequired,\r\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.consentRequired,\r\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.loginRequired,\r\n    _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken,\r\n];\r\nconst InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\",\r\n    \"bad_token\",\r\n];\r\nconst InteractionRequiredAuthErrorMessages = {\r\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokensFound]: \"No refresh token found in the cache. Please sign-in.\",\r\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeAccountUnavailable]: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\r\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.refreshTokenExpired]: \"Refresh token has expired.\",\r\n    [_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken]: \"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.\",\r\n};\r\n/**\r\n * Interaction required errors defined by the SDK\r\n * @deprecated Use InteractionRequiredAuthErrorCodes instead\r\n */\r\nconst InteractionRequiredAuthErrorMessage = {\r\n    noTokensFoundError: {\r\n        code: _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokensFound,\r\n        desc: InteractionRequiredAuthErrorMessages[_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.noTokensFound],\r\n    },\r\n    native_account_unavailable: {\r\n        code: _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeAccountUnavailable,\r\n        desc: InteractionRequiredAuthErrorMessages[_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.nativeAccountUnavailable],\r\n    },\r\n    bad_token: {\r\n        code: _InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken,\r\n        desc: InteractionRequiredAuthErrorMessages[_InteractionRequiredAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.badToken],\r\n    },\r\n};\r\n/**\r\n * Error thrown when user interaction is required.\r\n */\r\nclass InteractionRequiredAuthError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims, errorNo) {\r\n        super(errorCode, errorMessage, subError);\r\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\r\n        this.timestamp = timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\r\n        this.traceId = traceId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\r\n        this.correlationId = correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\r\n        this.claims = claims || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.Constants.EMPTY_STRING;\r\n        this.name = \"InteractionRequiredAuthError\";\r\n        this.errorNo = errorNo;\r\n    }\r\n}\r\n/**\r\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n * @param errorCode\r\n * @param errorString\r\n * @param subError\r\n */\r\nfunction isInteractionRequiredError(errorCode, errorString, subError) {\r\n    const isInteractionRequiredErrorCode = !!errorCode &&\r\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\r\n    const isInteractionRequiredSubError = !!subError &&\r\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n    const isInteractionRequiredErrorDesc = !!errorString &&\r\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n    return (isInteractionRequiredErrorCode ||\r\n        isInteractionRequiredErrorDesc ||\r\n        isInteractionRequiredSubError);\r\n}\r\n/**\r\n * Creates an InteractionRequiredAuthError\r\n */\r\nfunction createInteractionRequiredAuthError(errorCode) {\r\n    return new InteractionRequiredAuthError(errorCode, InteractionRequiredAuthErrorMessages[errorCode]);\r\n}\n\n\n//# sourceMappingURL=InteractionRequiredAuthError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDc0M7QUFDUDtBQUMwSTtBQUN6RjtBQUNoRDs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksdUZBQW1CO0FBQ3ZCLElBQUksbUZBQWU7QUFDbkIsSUFBSSxpRkFBYTtBQUNqQixJQUFJLDRFQUFRO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLGlGQUFhO0FBQ2xCLEtBQUssNEZBQXdCO0FBQzdCLEtBQUssdUZBQW1CO0FBQ3hCLEtBQUssNEVBQVE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUZBQWE7QUFDM0IsbURBQW1ELGlGQUFhO0FBQ2hFLEtBQUs7QUFDTDtBQUNBLGNBQWMsNEZBQXdCO0FBQ3RDLG1EQUFtRCw0RkFBd0I7QUFDM0UsS0FBSztBQUNMO0FBQ0EsY0FBYyw0RUFBUTtBQUN0QixtREFBbUQsNEVBQVE7QUFDM0QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHFEQUFTO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQywyREFBUztBQUMvQyxrQ0FBa0MsMkRBQVM7QUFDM0MsOENBQThDLDJEQUFTO0FBQ3ZELGdDQUFnQywyREFBUztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTROO0FBQzVOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9JbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yLm1qcz81NGU2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQ29uc3RhbnRzIH0gZnJvbSAnLi4vdXRpbHMvQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICcuL0F1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgbm9Ub2tlbnNGb3VuZCwgbmF0aXZlQWNjb3VudFVuYXZhaWxhYmxlLCBiYWRUb2tlbiwgcmVmcmVzaFRva2VuRXhwaXJlZCwgaW50ZXJhY3Rpb25SZXF1aXJlZCwgY29uc2VudFJlcXVpcmVkLCBsb2dpblJlcXVpcmVkIH0gZnJvbSAnLi9JbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yQ29kZXMubWpzJztcbmltcG9ydCAqIGFzIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2RlcyBmcm9tICcuL0ludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuZXhwb3J0IHsgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzIH07XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogSW50ZXJhY3Rpb25SZXF1aXJlZFNlcnZlckVycm9yTWVzc2FnZSBjb250YWlucyBzdHJpbmcgY29uc3RhbnRzIHVzZWQgYnkgZXJyb3IgY29kZXMgYW5kIG1lc3NhZ2VzIHJldHVybmVkIGJ5IHRoZSBzZXJ2ZXIgaW5kaWNhdGluZyBpbnRlcmFjdGlvbiBpcyByZXF1aXJlZFxyXG4gKi9cclxuY29uc3QgSW50ZXJhY3Rpb25SZXF1aXJlZFNlcnZlckVycm9yTWVzc2FnZSA9IFtcclxuICAgIGludGVyYWN0aW9uUmVxdWlyZWQsXHJcbiAgICBjb25zZW50UmVxdWlyZWQsXHJcbiAgICBsb2dpblJlcXVpcmVkLFxyXG4gICAgYmFkVG9rZW4sXHJcbl07XHJcbmNvbnN0IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoU3ViRXJyb3JNZXNzYWdlID0gW1xyXG4gICAgXCJtZXNzYWdlX29ubHlcIixcclxuICAgIFwiYWRkaXRpb25hbF9hY3Rpb25cIixcclxuICAgIFwiYmFzaWNfYWN0aW9uXCIsXHJcbiAgICBcInVzZXJfcGFzc3dvcmRfZXhwaXJlZFwiLFxyXG4gICAgXCJjb25zZW50X3JlcXVpcmVkXCIsXHJcbiAgICBcImJhZF90b2tlblwiLFxyXG5dO1xyXG5jb25zdCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZXMgPSB7XHJcbiAgICBbbm9Ub2tlbnNGb3VuZF06IFwiTm8gcmVmcmVzaCB0b2tlbiBmb3VuZCBpbiB0aGUgY2FjaGUuIFBsZWFzZSBzaWduLWluLlwiLFxyXG4gICAgW25hdGl2ZUFjY291bnRVbmF2YWlsYWJsZV06IFwiVGhlIHJlcXVlc3RlZCBhY2NvdW50IGlzIG5vdCBhdmFpbGFibGUgaW4gdGhlIG5hdGl2ZSBicm9rZXIuIEl0IG1heSBoYXZlIGJlZW4gZGVsZXRlZCBvciBsb2dnZWQgb3V0LiBQbGVhc2Ugc2lnbi1pbiBhZ2FpbiB1c2luZyBhbiBpbnRlcmFjdGl2ZSBBUEkuXCIsXHJcbiAgICBbcmVmcmVzaFRva2VuRXhwaXJlZF06IFwiUmVmcmVzaCB0b2tlbiBoYXMgZXhwaXJlZC5cIixcclxuICAgIFtiYWRUb2tlbl06IFwiSWRlbnRpdHkgcHJvdmlkZXIgcmV0dXJuZWQgYmFkX3Rva2VuIGR1ZSB0byBhbiBleHBpcmVkIG9yIGludmFsaWQgcmVmcmVzaCB0b2tlbi4gUGxlYXNlIGludm9rZSBhbiBpbnRlcmFjdGl2ZSBBUEkgdG8gcmVzb2x2ZS5cIixcclxufTtcclxuLyoqXHJcbiAqIEludGVyYWN0aW9uIHJlcXVpcmVkIGVycm9ycyBkZWZpbmVkIGJ5IHRoZSBTREtcclxuICogQGRlcHJlY2F0ZWQgVXNlIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JDb2RlcyBpbnN0ZWFkXHJcbiAqL1xyXG5jb25zdCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yTWVzc2FnZSA9IHtcclxuICAgIG5vVG9rZW5zRm91bmRFcnJvcjoge1xyXG4gICAgICAgIGNvZGU6IG5vVG9rZW5zRm91bmQsXHJcbiAgICAgICAgZGVzYzogSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2VzW25vVG9rZW5zRm91bmRdLFxyXG4gICAgfSxcclxuICAgIG5hdGl2ZV9hY2NvdW50X3VuYXZhaWxhYmxlOiB7XHJcbiAgICAgICAgY29kZTogbmF0aXZlQWNjb3VudFVuYXZhaWxhYmxlLFxyXG4gICAgICAgIGRlc2M6IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlc1tuYXRpdmVBY2NvdW50VW5hdmFpbGFibGVdLFxyXG4gICAgfSxcclxuICAgIGJhZF90b2tlbjoge1xyXG4gICAgICAgIGNvZGU6IGJhZFRva2VuLFxyXG4gICAgICAgIGRlc2M6IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlc1tiYWRUb2tlbl0sXHJcbiAgICB9LFxyXG59O1xyXG4vKipcclxuICogRXJyb3IgdGhyb3duIHdoZW4gdXNlciBpbnRlcmFjdGlvbiBpcyByZXF1aXJlZC5cclxuICovXHJcbmNsYXNzIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UsIHN1YkVycm9yLCB0aW1lc3RhbXAsIHRyYWNlSWQsIGNvcnJlbGF0aW9uSWQsIGNsYWltcywgZXJyb3JObykge1xyXG4gICAgICAgIHN1cGVyKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlLCBzdWJFcnJvcik7XHJcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IucHJvdG90eXBlKTtcclxuICAgICAgICB0aGlzLnRpbWVzdGFtcCA9IHRpbWVzdGFtcCB8fCBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xyXG4gICAgICAgIHRoaXMudHJhY2VJZCA9IHRyYWNlSWQgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICB0aGlzLmNvcnJlbGF0aW9uSWQgPSBjb3JyZWxhdGlvbklkIHx8IENvbnN0YW50cy5FTVBUWV9TVFJJTkc7XHJcbiAgICAgICAgdGhpcy5jbGFpbXMgPSBjbGFpbXMgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIkludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JcIjtcclxuICAgICAgICB0aGlzLmVycm9yTm8gPSBlcnJvck5vO1xyXG4gICAgfVxyXG59XHJcbi8qKlxyXG4gKiBIZWxwZXIgZnVuY3Rpb24gdXNlZCB0byBkZXRlcm1pbmUgaWYgYW4gZXJyb3IgdGhyb3duIGJ5IHRoZSBzZXJ2ZXIgcmVxdWlyZXMgaW50ZXJhY3Rpb24gdG8gcmVzb2x2ZVxyXG4gKiBAcGFyYW0gZXJyb3JDb2RlXHJcbiAqIEBwYXJhbSBlcnJvclN0cmluZ1xyXG4gKiBAcGFyYW0gc3ViRXJyb3JcclxuICovXHJcbmZ1bmN0aW9uIGlzSW50ZXJhY3Rpb25SZXF1aXJlZEVycm9yKGVycm9yQ29kZSwgZXJyb3JTdHJpbmcsIHN1YkVycm9yKSB7XHJcbiAgICBjb25zdCBpc0ludGVyYWN0aW9uUmVxdWlyZWRFcnJvckNvZGUgPSAhIWVycm9yQ29kZSAmJlxyXG4gICAgICAgIEludGVyYWN0aW9uUmVxdWlyZWRTZXJ2ZXJFcnJvck1lc3NhZ2UuaW5kZXhPZihlcnJvckNvZGUpID4gLTE7XHJcbiAgICBjb25zdCBpc0ludGVyYWN0aW9uUmVxdWlyZWRTdWJFcnJvciA9ICEhc3ViRXJyb3IgJiZcclxuICAgICAgICBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aFN1YkVycm9yTWVzc2FnZS5pbmRleE9mKHN1YkVycm9yKSA+IC0xO1xyXG4gICAgY29uc3QgaXNJbnRlcmFjdGlvblJlcXVpcmVkRXJyb3JEZXNjID0gISFlcnJvclN0cmluZyAmJlxyXG4gICAgICAgIEludGVyYWN0aW9uUmVxdWlyZWRTZXJ2ZXJFcnJvck1lc3NhZ2Uuc29tZSgoaXJFcnJvckNvZGUpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIGVycm9yU3RyaW5nLmluZGV4T2YoaXJFcnJvckNvZGUpID4gLTE7XHJcbiAgICAgICAgfSk7XHJcbiAgICByZXR1cm4gKGlzSW50ZXJhY3Rpb25SZXF1aXJlZEVycm9yQ29kZSB8fFxyXG4gICAgICAgIGlzSW50ZXJhY3Rpb25SZXF1aXJlZEVycm9yRGVzYyB8fFxyXG4gICAgICAgIGlzSW50ZXJhY3Rpb25SZXF1aXJlZFN1YkVycm9yKTtcclxufVxyXG4vKipcclxuICogQ3JlYXRlcyBhbiBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yKGVycm9yQ29kZSkge1xyXG4gICAgcmV0dXJuIG5ldyBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aEVycm9yKGVycm9yQ29kZSwgSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvck1lc3NhZ2VzW2Vycm9yQ29kZV0pO1xyXG59XG5cbmV4cG9ydCB7IEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IsIEludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3JNZXNzYWdlLCBJbnRlcmFjdGlvblJlcXVpcmVkQXV0aFN1YkVycm9yTWVzc2FnZSwgSW50ZXJhY3Rpb25SZXF1aXJlZFNlcnZlckVycm9yTWVzc2FnZSwgY3JlYXRlSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvciwgaXNJbnRlcmFjdGlvblJlcXVpcmVkRXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUludGVyYWN0aW9uUmVxdWlyZWRBdXRoRXJyb3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   badToken: () => (/* binding */ badToken),\n/* harmony export */   consentRequired: () => (/* binding */ consentRequired),\n/* harmony export */   interactionRequired: () => (/* binding */ interactionRequired),\n/* harmony export */   loginRequired: () => (/* binding */ loginRequired),\n/* harmony export */   nativeAccountUnavailable: () => (/* binding */ nativeAccountUnavailable),\n/* harmony export */   noTokensFound: () => (/* binding */ noTokensFound),\n/* harmony export */   refreshTokenExpired: () => (/* binding */ refreshTokenExpired)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Codes defined by MSAL\r\nconst noTokensFound = \"no_tokens_found\";\r\nconst nativeAccountUnavailable = \"native_account_unavailable\";\r\nconst refreshTokenExpired = \"refresh_token_expired\";\r\n// Codes potentially returned by server\r\nconst interactionRequired = \"interaction_required\";\r\nconst consentRequired = \"consent_required\";\r\nconst loginRequired = \"login_required\";\r\nconst badToken = \"bad_token\";\n\n\n//# sourceMappingURL=InteractionRequiredAuthErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1STtBQUN2SSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzLm1qcz83NmYzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8vIENvZGVzIGRlZmluZWQgYnkgTVNBTFxyXG5jb25zdCBub1Rva2Vuc0ZvdW5kID0gXCJub190b2tlbnNfZm91bmRcIjtcclxuY29uc3QgbmF0aXZlQWNjb3VudFVuYXZhaWxhYmxlID0gXCJuYXRpdmVfYWNjb3VudF91bmF2YWlsYWJsZVwiO1xyXG5jb25zdCByZWZyZXNoVG9rZW5FeHBpcmVkID0gXCJyZWZyZXNoX3Rva2VuX2V4cGlyZWRcIjtcclxuLy8gQ29kZXMgcG90ZW50aWFsbHkgcmV0dXJuZWQgYnkgc2VydmVyXHJcbmNvbnN0IGludGVyYWN0aW9uUmVxdWlyZWQgPSBcImludGVyYWN0aW9uX3JlcXVpcmVkXCI7XHJcbmNvbnN0IGNvbnNlbnRSZXF1aXJlZCA9IFwiY29uc2VudF9yZXF1aXJlZFwiO1xyXG5jb25zdCBsb2dpblJlcXVpcmVkID0gXCJsb2dpbl9yZXF1aXJlZFwiO1xyXG5jb25zdCBiYWRUb2tlbiA9IFwiYmFkX3Rva2VuXCI7XG5cbmV4cG9ydCB7IGJhZFRva2VuLCBjb25zZW50UmVxdWlyZWQsIGludGVyYWN0aW9uUmVxdWlyZWQsIGxvZ2luUmVxdWlyZWQsIG5hdGl2ZUFjY291bnRVbmF2YWlsYWJsZSwgbm9Ub2tlbnNGb3VuZCwgcmVmcmVzaFRva2VuRXhwaXJlZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW50ZXJhY3Rpb25SZXF1aXJlZEF1dGhFcnJvckNvZGVzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JoseHeaderError: () => (/* binding */ JoseHeaderError),\n/* harmony export */   JoseHeaderErrorMessages: () => (/* binding */ JoseHeaderErrorMessages),\n/* harmony export */   createJoseHeaderError: () => (/* binding */ createJoseHeaderError)\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./JoseHeaderErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst JoseHeaderErrorMessages = {\r\n    [_JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingKidError]: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\r\n    [_JoseHeaderErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_0__.missingAlgError]: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nclass JoseHeaderError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError {\r\n    constructor(errorCode, errorMessage) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"JoseHeaderError\";\r\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\r\n    }\r\n}\r\n/** Returns JoseHeaderError object */\r\nfunction createJoseHeaderError(code) {\r\n    return new JoseHeaderError(code, JoseHeaderErrorMessages[code]);\r\n}\n\n\n//# sourceMappingURL=JoseHeaderError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSm9zZUhlYWRlckVycm9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ2E7QUFDK0I7QUFDa0M7O0FBRTlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLHNFQUFlO0FBQ3BCLEtBQUssc0VBQWU7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscURBQVM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTJFO0FBQzNFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9lcnJvci9Kb3NlSGVhZGVyRXJyb3IubWpzPzg4ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICcuL0F1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgbWlzc2luZ0tpZEVycm9yLCBtaXNzaW5nQWxnRXJyb3IgfSBmcm9tICcuL0pvc2VIZWFkZXJFcnJvckNvZGVzLm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jb25zdCBKb3NlSGVhZGVyRXJyb3JNZXNzYWdlcyA9IHtcclxuICAgIFttaXNzaW5nS2lkRXJyb3JdOiBcIlRoZSBKT1NFIEhlYWRlciBmb3IgdGhlIHJlcXVlc3RlZCBKV1QsIEpXUyBvciBKV0sgb2JqZWN0IHJlcXVpcmVzIGEga2V5SWQgdG8gYmUgY29uZmlndXJlZCBhcyB0aGUgJ2tpZCcgaGVhZGVyIGNsYWltLiBObyAna2lkJyB2YWx1ZSB3YXMgcHJvdmlkZWQuXCIsXHJcbiAgICBbbWlzc2luZ0FsZ0Vycm9yXTogXCJUaGUgSk9TRSBIZWFkZXIgZm9yIHRoZSByZXF1ZXN0ZWQgSldULCBKV1Mgb3IgSldLIG9iamVjdCByZXF1aXJlcyBhbiBhbGdvcml0aG0gdG8gYmUgc3BlY2lmaWVkIGFzIHRoZSAnYWxnJyBoZWFkZXIgY2xhaW0uIE5vICdhbGcnIHZhbHVlIHdhcyBwcm92aWRlZC5cIixcclxufTtcclxuLyoqXHJcbiAqIEVycm9yIHRocm93biB3aGVuIHRoZXJlIGlzIGFuIGVycm9yIGluIHRoZSBjbGllbnQgY29kZSBydW5uaW5nIG9uIHRoZSBicm93c2VyLlxyXG4gKi9cclxuY2xhc3MgSm9zZUhlYWRlckVycm9yIGV4dGVuZHMgQXV0aEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKGVycm9yQ29kZSwgZXJyb3JNZXNzYWdlKSB7XHJcbiAgICAgICAgc3VwZXIoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IFwiSm9zZUhlYWRlckVycm9yXCI7XHJcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEpvc2VIZWFkZXJFcnJvci5wcm90b3R5cGUpO1xyXG4gICAgfVxyXG59XHJcbi8qKiBSZXR1cm5zIEpvc2VIZWFkZXJFcnJvciBvYmplY3QgKi9cclxuZnVuY3Rpb24gY3JlYXRlSm9zZUhlYWRlckVycm9yKGNvZGUpIHtcclxuICAgIHJldHVybiBuZXcgSm9zZUhlYWRlckVycm9yKGNvZGUsIEpvc2VIZWFkZXJFcnJvck1lc3NhZ2VzW2NvZGVdKTtcclxufVxuXG5leHBvcnQgeyBKb3NlSGVhZGVyRXJyb3IsIEpvc2VIZWFkZXJFcnJvck1lc3NhZ2VzLCBjcmVhdGVKb3NlSGVhZGVyRXJyb3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUpvc2VIZWFkZXJFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   missingAlgError: () => (/* binding */ missingAlgError),\n/* harmony export */   missingKidError: () => (/* binding */ missingKidError)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst missingKidError = \"missing_kid_error\";\r\nconst missingAlgError = \"missing_alg_error\";\n\n\n//# sourceMappingURL=JoseHeaderErrorCodes.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvSm9zZUhlYWRlckVycm9yQ29kZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEM7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL0pvc2VIZWFkZXJFcnJvckNvZGVzLm1qcz9iOGM2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbmNvbnN0IG1pc3NpbmdLaWRFcnJvciA9IFwibWlzc2luZ19raWRfZXJyb3JcIjtcclxuY29uc3QgbWlzc2luZ0FsZ0Vycm9yID0gXCJtaXNzaW5nX2FsZ19lcnJvclwiO1xuXG5leHBvcnQgeyBtaXNzaW5nQWxnRXJyb3IsIG1pc3NpbmdLaWRFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Sm9zZUhlYWRlckVycm9yQ29kZXMubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/error/ServerError.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerError: () => (/* binding */ ServerError)\n/* harmony export */ });\n/* harmony import */ var _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nclass ServerError extends _AuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.AuthError {\r\n    constructor(errorCode, errorMessage, subError, errorNo, status) {\r\n        super(errorCode, errorMessage, subError);\r\n        this.name = \"ServerError\";\r\n        this.errorNo = errorNo;\r\n        this.status = status;\r\n        Object.setPrototypeOf(this, ServerError.prototype);\r\n    }\r\n}\n\n\n//# sourceMappingURL=ServerError.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvZXJyb3IvU2VydmVyRXJyb3IubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDYTtBQUMrQjs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscURBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L2Vycm9yL1NlcnZlckVycm9yLm1qcz8xOTA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgQXV0aEVycm9yIH0gZnJvbSAnLi9BdXRoRXJyb3IubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBFcnJvciB0aHJvd24gd2hlbiB0aGVyZSBpcyBhbiBlcnJvciB3aXRoIHRoZSBzZXJ2ZXIgY29kZSwgZm9yIGV4YW1wbGUsIHVuYXZhaWxhYmlsaXR5LlxyXG4gKi9cclxuY2xhc3MgU2VydmVyRXJyb3IgZXh0ZW5kcyBBdXRoRXJyb3Ige1xyXG4gICAgY29uc3RydWN0b3IoZXJyb3JDb2RlLCBlcnJvck1lc3NhZ2UsIHN1YkVycm9yLCBlcnJvck5vLCBzdGF0dXMpIHtcclxuICAgICAgICBzdXBlcihlcnJvckNvZGUsIGVycm9yTWVzc2FnZSwgc3ViRXJyb3IpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IFwiU2VydmVyRXJyb3JcIjtcclxuICAgICAgICB0aGlzLmVycm9yTm8gPSBlcnJvck5vO1xyXG4gICAgICAgIHRoaXMuc3RhdHVzID0gc3RhdHVzO1xyXG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBTZXJ2ZXJFcnJvci5wcm90b3R5cGUpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IFNlcnZlckVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TZXJ2ZXJFcnJvci5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/logger/Logger.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LogLevel: () => (/* binding */ LogLevel),\n/* harmony export */   Logger: () => (/* binding */ Logger)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nclass Logger {\r\n    constructor(loggerOptions, packageName, packageVersion) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        const defaultLoggerCallback = () => {\r\n            return;\r\n        };\r\n        const setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\r\n        this.localCallback =\r\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\r\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\r\n        this.level =\r\n            typeof setLoggerOptions.logLevel === \"number\"\r\n                ? setLoggerOptions.logLevel\r\n                : LogLevel.Info;\r\n        this.correlationId =\r\n            setLoggerOptions.correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n        this.packageName = packageName || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n        this.packageVersion = packageVersion || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n    }\r\n    static createDefaultLoggerOptions() {\r\n        return {\r\n            loggerCallback: () => {\r\n                // allow users to not set loggerCallback\r\n            },\r\n            piiLoggingEnabled: false,\r\n            logLevel: LogLevel.Info,\r\n        };\r\n    }\r\n    /**\r\n     * Create new Logger with existing configurations.\r\n     */\r\n    clone(packageName, packageVersion, correlationId) {\r\n        return new Logger({\r\n            loggerCallback: this.localCallback,\r\n            piiLoggingEnabled: this.piiLoggingEnabled,\r\n            logLevel: this.level,\r\n            correlationId: correlationId || this.correlationId,\r\n        }, packageName, packageVersion);\r\n    }\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    logMessage(logMessage, options) {\r\n        if (options.logLevel > this.level ||\r\n            (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        const timestamp = new Date().toUTCString();\r\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\r\n        const logHeader = `[${timestamp}] : [${options.correlationId || this.correlationId || \"\"}]`;\r\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\r\n    }\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    executeCallback(level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    }\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    error(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    errorPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    warning(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    warningPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    info(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    infoPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    verbose(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    verbosePii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs trace messages.\r\n     */\r\n    trace(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: false,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs trace messages with PII.\r\n     */\r\n    tracePii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: true,\r\n            correlationId: correlationId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    isPiiLoggingEnabled() {\r\n        return this.piiLoggingEnabled || false;\r\n    }\r\n}\n\n\n//# sourceMappingURL=Logger.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/logger/Logger.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StubbedNetworkModule: () => (/* binding */ StubbedNetworkModule)\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst StubbedNetworkModule = {\r\n    sendGetRequestAsync: () => {\r\n        return Promise.reject((0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented));\r\n    },\r\n    sendPostRequestAsync: () => {\r\n        return Promise.reject((0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.methodNotImplemented));\r\n    },\r\n};\n\n\n//# sourceMappingURL=INetworkModule.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9JTmV0d29ya01vZHVsZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUN3RDtBQUNJOztBQUV6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsaUZBQXFCLENBQUMsaUZBQW9CO0FBQ3hFLEtBQUs7QUFDTDtBQUNBLDhCQUE4QixpRkFBcUIsQ0FBQyxpRkFBb0I7QUFDeEUsS0FBSztBQUNMOztBQUVnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9JTmV0d29ya01vZHVsZS5tanM/NDNiMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudEF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgbWV0aG9kTm90SW1wbGVtZW50ZWQgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuY29uc3QgU3R1YmJlZE5ldHdvcmtNb2R1bGUgPSB7XHJcbiAgICBzZW5kR2V0UmVxdWVzdEFzeW5jOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCkpO1xyXG4gICAgfSxcclxuICAgIHNlbmRQb3N0UmVxdWVzdEFzeW5jOiAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGNyZWF0ZUNsaWVudEF1dGhFcnJvcihtZXRob2ROb3RJbXBsZW1lbnRlZCkpO1xyXG4gICAgfSxcclxufTtcblxuZXhwb3J0IHsgU3R1YmJlZE5ldHdvcmtNb2R1bGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUlOZXR3b3JrTW9kdWxlLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NetworkManager: () => (/* binding */ NetworkManager)\n/* harmony export */ });\n/* harmony import */ var _ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ThrottlingUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/AuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass NetworkManager {\r\n    constructor(networkClient, cacheManager) {\r\n        this.networkClient = networkClient;\r\n        this.cacheManager = cacheManager;\r\n    }\r\n    /**\r\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\r\n     * @param thumbprint\r\n     * @param tokenEndpoint\r\n     * @param options\r\n     */\r\n    async sendPostRequest(thumbprint, tokenEndpoint, options) {\r\n        _ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\r\n        let response;\r\n        try {\r\n            response = await this.networkClient.sendPostRequestAsync(tokenEndpoint, options);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\r\n                throw e;\r\n            }\r\n            else {\r\n                throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.networkError);\r\n            }\r\n        }\r\n        _ThrottlingUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\r\n        return response;\r\n    }\r\n}\n\n\n//# sourceMappingURL=NetworkManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9OZXR3b3JrTWFuYWdlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNhO0FBQzJDO0FBQ0w7QUFDa0I7QUFDSjs7QUFFakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwyREFBUztBQUN0QztBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsaUZBQXFCLENBQUMseUVBQVk7QUFDeEQ7QUFDQTtBQUNBLFFBQVEsaUVBQWU7QUFDdkI7QUFDQTtBQUNBOztBQUUwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9OZXR3b3JrTWFuYWdlci5tanM/NjAyMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFRocm90dGxpbmdVdGlscyB9IGZyb20gJy4vVGhyb3R0bGluZ1V0aWxzLm1qcyc7XG5pbXBvcnQgeyBBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9BdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudEF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgbmV0d29ya0Vycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50QXV0aEVycm9yQ29kZXMubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKiBAaW50ZXJuYWwgKi9cclxuY2xhc3MgTmV0d29ya01hbmFnZXIge1xyXG4gICAgY29uc3RydWN0b3IobmV0d29ya0NsaWVudCwgY2FjaGVNYW5hZ2VyKSB7XHJcbiAgICAgICAgdGhpcy5uZXR3b3JrQ2xpZW50ID0gbmV0d29ya0NsaWVudDtcclxuICAgICAgICB0aGlzLmNhY2hlTWFuYWdlciA9IGNhY2hlTWFuYWdlcjtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogV3JhcHMgc2VuZFBvc3RSZXF1ZXN0QXN5bmMgd2l0aCBuZWNlc3NhcnkgcHJlZmxpZ2h0IGFuZCBwb3N0ZmxpZ2h0IGxvZ2ljXHJcbiAgICAgKiBAcGFyYW0gdGh1bWJwcmludFxyXG4gICAgICogQHBhcmFtIHRva2VuRW5kcG9pbnRcclxuICAgICAqIEBwYXJhbSBvcHRpb25zXHJcbiAgICAgKi9cclxuICAgIGFzeW5jIHNlbmRQb3N0UmVxdWVzdCh0aHVtYnByaW50LCB0b2tlbkVuZHBvaW50LCBvcHRpb25zKSB7XHJcbiAgICAgICAgVGhyb3R0bGluZ1V0aWxzLnByZVByb2Nlc3ModGhpcy5jYWNoZU1hbmFnZXIsIHRodW1icHJpbnQpO1xyXG4gICAgICAgIGxldCByZXNwb25zZTtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICByZXNwb25zZSA9IGF3YWl0IHRoaXMubmV0d29ya0NsaWVudC5zZW5kUG9zdFJlcXVlc3RBc3luYyh0b2tlbkVuZHBvaW50LCBvcHRpb25zKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgaWYgKGUgaW5zdGFuY2VvZiBBdXRoRXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIHRocm93IGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IobmV0d29ya0Vycm9yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBUaHJvdHRsaW5nVXRpbHMucG9zdFByb2Nlc3ModGhpcy5jYWNoZU1hbmFnZXIsIHRodW1icHJpbnQsIHJlc3BvbnNlKTtcclxuICAgICAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgTmV0d29ya01hbmFnZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPU5ldHdvcmtNYW5hZ2VyLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/network/NetworkManager.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ThrottlingUtils: () => (/* binding */ ThrottlingUtils)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass ThrottlingUtils {\r\n    /**\r\n     * Prepares a RequestThumbprint to be stored as a key.\r\n     * @param thumbprint\r\n     */\r\n    static generateThrottlingStorageKey(thumbprint) {\r\n        return `${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;\r\n    }\r\n    /**\r\n     * Performs necessary throttling checks before a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     */\r\n    static preProcess(cacheManager, thumbprint) {\r\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\r\n        const value = cacheManager.getThrottlingCache(key);\r\n        if (value) {\r\n            if (value.throttleTime < Date.now()) {\r\n                cacheManager.removeItem(key);\r\n                return;\r\n            }\r\n            throw new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_1__.ServerError(value.errorCodes?.join(\" \") || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING, value.errorMessage, value.subError);\r\n        }\r\n    }\r\n    /**\r\n     * Performs necessary throttling checks after a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     * @param response\r\n     */\r\n    static postProcess(cacheManager, thumbprint, response) {\r\n        if (ThrottlingUtils.checkResponseStatus(response) ||\r\n            ThrottlingUtils.checkResponseForRetryAfter(response)) {\r\n            const thumbprintValue = {\r\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.RETRY_AFTER])),\r\n                error: response.body.error,\r\n                errorCodes: response.body.error_codes,\r\n                errorMessage: response.body.error_description,\r\n                subError: response.body.suberror,\r\n            };\r\n            cacheManager.setThrottlingCache(ThrottlingUtils.generateThrottlingStorageKey(thumbprint), thumbprintValue);\r\n        }\r\n    }\r\n    /**\r\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\r\n     * @param response\r\n     */\r\n    static checkResponseStatus(response) {\r\n        return (response.status === 429 ||\r\n            (response.status >= 500 && response.status < 600));\r\n    }\r\n    /**\r\n     * Checks a NetworkResponse object's RetryAfter header\r\n     * @param response\r\n     */\r\n    static checkResponseForRetryAfter(response) {\r\n        if (response.headers) {\r\n            return (response.headers.hasOwnProperty(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.HeaderNames.RETRY_AFTER) &&\r\n                (response.status < 200 || response.status >= 300));\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\r\n     * @param throttleTime\r\n     */\r\n    static calculateThrottleTime(throttleTime) {\r\n        const time = throttleTime <= 0 ? 0 : throttleTime;\r\n        const currentSeconds = Date.now() / 1000;\r\n        return Math.floor(Math.min(currentSeconds +\r\n            (time || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS), currentSeconds +\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS) * 1000);\r\n    }\r\n    static removeThrottle(cacheManager, clientId, request, homeAccountIdentifier) {\r\n        const thumbprint = {\r\n            clientId: clientId,\r\n            authority: request.authority,\r\n            scopes: request.scopes,\r\n            homeAccountIdentifier: homeAccountIdentifier,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n        const key = this.generateThrottlingStorageKey(thumbprint);\r\n        cacheManager.removeItem(key);\r\n    }\r\n}\n\n\n//# sourceMappingURL=ThrottlingUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvbmV0d29yay9UaHJvdHRsaW5nVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2E7QUFDd0U7QUFDOUI7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IscUVBQW1CLG1CQUFtQixHQUFHLDJCQUEyQjtBQUN0RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLCtEQUFXLGdDQUFnQywyREFBUztBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RkFBOEYsNkRBQVc7QUFDekc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsNkRBQVc7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFFQUFtQjtBQUN4QyxZQUFZLHFFQUFtQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9uZXR3b3JrL1Rocm90dGxpbmdVdGlscy5tanM/MmFjYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IFRocm90dGxpbmdDb25zdGFudHMsIENvbnN0YW50cywgSGVhZGVyTmFtZXMgfSBmcm9tICcuLi91dGlscy9Db25zdGFudHMubWpzJztcbmltcG9ydCB7IFNlcnZlckVycm9yIH0gZnJvbSAnLi4vZXJyb3IvU2VydmVyRXJyb3IubWpzJztcblxuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKiBAaW50ZXJuYWwgKi9cclxuY2xhc3MgVGhyb3R0bGluZ1V0aWxzIHtcclxuICAgIC8qKlxyXG4gICAgICogUHJlcGFyZXMgYSBSZXF1ZXN0VGh1bWJwcmludCB0byBiZSBzdG9yZWQgYXMgYSBrZXkuXHJcbiAgICAgKiBAcGFyYW0gdGh1bWJwcmludFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgZ2VuZXJhdGVUaHJvdHRsaW5nU3RvcmFnZUtleSh0aHVtYnByaW50KSB7XHJcbiAgICAgICAgcmV0dXJuIGAke1Rocm90dGxpbmdDb25zdGFudHMuVEhST1RUTElOR19QUkVGSVh9LiR7SlNPTi5zdHJpbmdpZnkodGh1bWJwcmludCl9YDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUGVyZm9ybXMgbmVjZXNzYXJ5IHRocm90dGxpbmcgY2hlY2tzIGJlZm9yZSBhIG5ldHdvcmsgcmVxdWVzdC5cclxuICAgICAqIEBwYXJhbSBjYWNoZU1hbmFnZXJcclxuICAgICAqIEBwYXJhbSB0aHVtYnByaW50XHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBwcmVQcm9jZXNzKGNhY2hlTWFuYWdlciwgdGh1bWJwcmludCkge1xyXG4gICAgICAgIGNvbnN0IGtleSA9IFRocm90dGxpbmdVdGlscy5nZW5lcmF0ZVRocm90dGxpbmdTdG9yYWdlS2V5KHRodW1icHJpbnQpO1xyXG4gICAgICAgIGNvbnN0IHZhbHVlID0gY2FjaGVNYW5hZ2VyLmdldFRocm90dGxpbmdDYWNoZShrZXkpO1xyXG4gICAgICAgIGlmICh2YWx1ZSkge1xyXG4gICAgICAgICAgICBpZiAodmFsdWUudGhyb3R0bGVUaW1lIDwgRGF0ZS5ub3coKSkge1xyXG4gICAgICAgICAgICAgICAgY2FjaGVNYW5hZ2VyLnJlbW92ZUl0ZW0oa2V5KTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aHJvdyBuZXcgU2VydmVyRXJyb3IodmFsdWUuZXJyb3JDb2Rlcz8uam9pbihcIiBcIikgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORywgdmFsdWUuZXJyb3JNZXNzYWdlLCB2YWx1ZS5zdWJFcnJvcik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBQZXJmb3JtcyBuZWNlc3NhcnkgdGhyb3R0bGluZyBjaGVja3MgYWZ0ZXIgYSBuZXR3b3JrIHJlcXVlc3QuXHJcbiAgICAgKiBAcGFyYW0gY2FjaGVNYW5hZ2VyXHJcbiAgICAgKiBAcGFyYW0gdGh1bWJwcmludFxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBwb3N0UHJvY2VzcyhjYWNoZU1hbmFnZXIsIHRodW1icHJpbnQsIHJlc3BvbnNlKSB7XHJcbiAgICAgICAgaWYgKFRocm90dGxpbmdVdGlscy5jaGVja1Jlc3BvbnNlU3RhdHVzKHJlc3BvbnNlKSB8fFxyXG4gICAgICAgICAgICBUaHJvdHRsaW5nVXRpbHMuY2hlY2tSZXNwb25zZUZvclJldHJ5QWZ0ZXIocmVzcG9uc2UpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHRodW1icHJpbnRWYWx1ZSA9IHtcclxuICAgICAgICAgICAgICAgIHRocm90dGxlVGltZTogVGhyb3R0bGluZ1V0aWxzLmNhbGN1bGF0ZVRocm90dGxlVGltZShwYXJzZUludChyZXNwb25zZS5oZWFkZXJzW0hlYWRlck5hbWVzLlJFVFJZX0FGVEVSXSkpLFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IHJlc3BvbnNlLmJvZHkuZXJyb3IsXHJcbiAgICAgICAgICAgICAgICBlcnJvckNvZGVzOiByZXNwb25zZS5ib2R5LmVycm9yX2NvZGVzLFxyXG4gICAgICAgICAgICAgICAgZXJyb3JNZXNzYWdlOiByZXNwb25zZS5ib2R5LmVycm9yX2Rlc2NyaXB0aW9uLFxyXG4gICAgICAgICAgICAgICAgc3ViRXJyb3I6IHJlc3BvbnNlLmJvZHkuc3ViZXJyb3IsXHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIGNhY2hlTWFuYWdlci5zZXRUaHJvdHRsaW5nQ2FjaGUoVGhyb3R0bGluZ1V0aWxzLmdlbmVyYXRlVGhyb3R0bGluZ1N0b3JhZ2VLZXkodGh1bWJwcmludCksIHRodW1icHJpbnRWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVja3MgYSBOZXR3b3JrUmVzcG9uc2Ugb2JqZWN0J3Mgc3RhdHVzIGNvZGVzIGFnYWluc3QgNDI5IG9yIDV4eFxyXG4gICAgICogQHBhcmFtIHJlc3BvbnNlXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBjaGVja1Jlc3BvbnNlU3RhdHVzKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgcmV0dXJuIChyZXNwb25zZS5zdGF0dXMgPT09IDQyOSB8fFxyXG4gICAgICAgICAgICAocmVzcG9uc2Uuc3RhdHVzID49IDUwMCAmJiByZXNwb25zZS5zdGF0dXMgPCA2MDApKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2tzIGEgTmV0d29ya1Jlc3BvbnNlIG9iamVjdCdzIFJldHJ5QWZ0ZXIgaGVhZGVyXHJcbiAgICAgKiBAcGFyYW0gcmVzcG9uc2VcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNoZWNrUmVzcG9uc2VGb3JSZXRyeUFmdGVyKHJlc3BvbnNlKSB7XHJcbiAgICAgICAgaWYgKHJlc3BvbnNlLmhlYWRlcnMpIHtcclxuICAgICAgICAgICAgcmV0dXJuIChyZXNwb25zZS5oZWFkZXJzLmhhc093blByb3BlcnR5KEhlYWRlck5hbWVzLlJFVFJZX0FGVEVSKSAmJlxyXG4gICAgICAgICAgICAgICAgKHJlc3BvbnNlLnN0YXR1cyA8IDIwMCB8fCByZXNwb25zZS5zdGF0dXMgPj0gMzAwKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ2FsY3VsYXRlcyB0aGUgVW5peC10aW1lIHZhbHVlIGZvciBhIHRocm90dGxlIHRvIGV4cGlyZSBnaXZlbiB0aHJvdHRsZVRpbWUgaW4gc2Vjb25kcy5cclxuICAgICAqIEBwYXJhbSB0aHJvdHRsZVRpbWVcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGNhbGN1bGF0ZVRocm90dGxlVGltZSh0aHJvdHRsZVRpbWUpIHtcclxuICAgICAgICBjb25zdCB0aW1lID0gdGhyb3R0bGVUaW1lIDw9IDAgPyAwIDogdGhyb3R0bGVUaW1lO1xyXG4gICAgICAgIGNvbnN0IGN1cnJlbnRTZWNvbmRzID0gRGF0ZS5ub3coKSAvIDEwMDA7XHJcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5taW4oY3VycmVudFNlY29uZHMgK1xyXG4gICAgICAgICAgICAodGltZSB8fCBUaHJvdHRsaW5nQ29uc3RhbnRzLkRFRkFVTFRfVEhST1RUTEVfVElNRV9TRUNPTkRTKSwgY3VycmVudFNlY29uZHMgK1xyXG4gICAgICAgICAgICBUaHJvdHRsaW5nQ29uc3RhbnRzLkRFRkFVTFRfTUFYX1RIUk9UVExFX1RJTUVfU0VDT05EUykgKiAxMDAwKTtcclxuICAgIH1cclxuICAgIHN0YXRpYyByZW1vdmVUaHJvdHRsZShjYWNoZU1hbmFnZXIsIGNsaWVudElkLCByZXF1ZXN0LCBob21lQWNjb3VudElkZW50aWZpZXIpIHtcclxuICAgICAgICBjb25zdCB0aHVtYnByaW50ID0ge1xyXG4gICAgICAgICAgICBjbGllbnRJZDogY2xpZW50SWQsXHJcbiAgICAgICAgICAgIGF1dGhvcml0eTogcmVxdWVzdC5hdXRob3JpdHksXHJcbiAgICAgICAgICAgIHNjb3BlczogcmVxdWVzdC5zY29wZXMsXHJcbiAgICAgICAgICAgIGhvbWVBY2NvdW50SWRlbnRpZmllcjogaG9tZUFjY291bnRJZGVudGlmaWVyLFxyXG4gICAgICAgICAgICBjbGFpbXM6IHJlcXVlc3QuY2xhaW1zLFxyXG4gICAgICAgICAgICBhdXRoZW50aWNhdGlvblNjaGVtZTogcmVxdWVzdC5hdXRoZW50aWNhdGlvblNjaGVtZSxcclxuICAgICAgICAgICAgcmVzb3VyY2VSZXF1ZXN0TWV0aG9kOiByZXF1ZXN0LnJlc291cmNlUmVxdWVzdE1ldGhvZCxcclxuICAgICAgICAgICAgcmVzb3VyY2VSZXF1ZXN0VXJpOiByZXF1ZXN0LnJlc291cmNlUmVxdWVzdFVyaSxcclxuICAgICAgICAgICAgc2hyQ2xhaW1zOiByZXF1ZXN0LnNockNsYWltcyxcclxuICAgICAgICAgICAgc3NoS2lkOiByZXF1ZXN0LnNzaEtpZCxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGNvbnN0IGtleSA9IHRoaXMuZ2VuZXJhdGVUaHJvdHRsaW5nU3RvcmFnZUtleSh0aHVtYnByaW50KTtcclxuICAgICAgICBjYWNoZU1hbmFnZXIucmVtb3ZlSXRlbShrZXkpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IFRocm90dGxpbmdVdGlscyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VGhyb3R0bGluZ1V0aWxzLm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/packageMetadata.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/packageMetadata.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   name: () => (/* binding */ name),\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/* eslint-disable header/header */\r\nconst name = \"@azure/msal-common\";\r\nconst version = \"14.15.0\";\n\n\n//# sourceMappingURL=packageMetadata.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcGFja2FnZU1ldGFkYXRhLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7O0FBRXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC9wYWNrYWdlTWV0YWRhdGEubWpzP2VhODgiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG4vKiBlc2xpbnQtZGlzYWJsZSBoZWFkZXIvaGVhZGVyICovXHJcbmNvbnN0IG5hbWUgPSBcIkBhenVyZS9tc2FsLWNvbW1vblwiO1xyXG5jb25zdCB2ZXJzaW9uID0gXCIxNC4xNS4wXCI7XG5cbmV4cG9ydCB7IG5hbWUsIHZlcnNpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhY2thZ2VNZXRhZGF0YS5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/packageMetadata.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs":
/*!**********************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestParameterBuilder: () => (/* binding */ RequestParameterBuilder)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/AADServerParamKeys.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs\");\n/* harmony import */ var _ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ScopeSet.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./RequestValidator.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass RequestParameterBuilder {\r\n    constructor() {\r\n        this.parameters = new Map();\r\n    }\r\n    /**\r\n     * add response_type = code\r\n     */\r\n    addResponseTypeCode() {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.RESPONSE_TYPE, encodeURIComponent(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.CODE_RESPONSE_TYPE));\r\n    }\r\n    /**\r\n     * add response_type = token id_token\r\n     */\r\n    addResponseTypeForTokenAndIdToken() {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.RESPONSE_TYPE, encodeURIComponent(`${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.TOKEN_RESPONSE_TYPE} ${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.ID_TOKEN_RESPONSE_TYPE}`));\r\n    }\r\n    /**\r\n     * add response_mode. defaults to query.\r\n     * @param responseMode\r\n     */\r\n    addResponseMode(responseMode) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.RESPONSE_MODE, encodeURIComponent(responseMode ? responseMode : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ResponseMode.QUERY));\r\n    }\r\n    /**\r\n     * Add flag to indicate STS should attempt to use WAM if available\r\n     */\r\n    addNativeBroker() {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.NATIVE_BROKER, encodeURIComponent(\"1\"));\r\n    }\r\n    /**\r\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\r\n     * @param scopeSet\r\n     * @param addOidcScopes\r\n     */\r\n    addScopes(scopes, addOidcScopes = true, defaultScopes = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_DEFAULT_SCOPES) {\r\n        // Always add openid to the scopes when adding OIDC scopes\r\n        if (addOidcScopes &&\r\n            !defaultScopes.includes(\"openid\") &&\r\n            !scopes.includes(\"openid\")) {\r\n            defaultScopes.push(\"openid\");\r\n        }\r\n        const requestScopes = addOidcScopes\r\n            ? [...(scopes || []), ...defaultScopes]\r\n            : scopes || [];\r\n        const scopeSet = new _ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_2__.ScopeSet(requestScopes);\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.SCOPE, encodeURIComponent(scopeSet.printScopes()));\r\n    }\r\n    /**\r\n     * add clientId\r\n     * @param clientId\r\n     */\r\n    addClientId(clientId) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_ID, encodeURIComponent(clientId));\r\n    }\r\n    /**\r\n     * add redirect_uri\r\n     * @param redirectUri\r\n     */\r\n    addRedirectUri(redirectUri) {\r\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REDIRECT_URI, encodeURIComponent(redirectUri));\r\n    }\r\n    /**\r\n     * add post logout redirectUri\r\n     * @param redirectUri\r\n     */\r\n    addPostLogoutRedirectUri(redirectUri) {\r\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.POST_LOGOUT_URI, encodeURIComponent(redirectUri));\r\n    }\r\n    /**\r\n     * add id_token_hint to logout request\r\n     * @param idTokenHint\r\n     */\r\n    addIdTokenHint(idTokenHint) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.ID_TOKEN_HINT, encodeURIComponent(idTokenHint));\r\n    }\r\n    /**\r\n     * add domain_hint\r\n     * @param domainHint\r\n     */\r\n    addDomainHint(domainHint) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.DOMAIN_HINT, encodeURIComponent(domainHint));\r\n    }\r\n    /**\r\n     * add login_hint\r\n     * @param loginHint\r\n     */\r\n    addLoginHint(loginHint) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.LOGIN_HINT, encodeURIComponent(loginHint));\r\n    }\r\n    /**\r\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\r\n     * @param loginHint\r\n     */\r\n    addCcsUpn(loginHint) {\r\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.HeaderNames.CCS_HEADER, encodeURIComponent(`UPN:${loginHint}`));\r\n    }\r\n    /**\r\n     * Adds the CCS (Cache Credential Service) query parameter for account object\r\n     * @param loginHint\r\n     */\r\n    addCcsOid(clientInfo) {\r\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.HeaderNames.CCS_HEADER, encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`));\r\n    }\r\n    /**\r\n     * add sid\r\n     * @param sid\r\n     */\r\n    addSid(sid) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.SID, encodeURIComponent(sid));\r\n    }\r\n    /**\r\n     * add claims\r\n     * @param claims\r\n     */\r\n    addClaims(claims, clientCapabilities) {\r\n        const mergedClaims = this.addClientCapabilitiesToClaims(claims, clientCapabilities);\r\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateClaims(mergedClaims);\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLAIMS, encodeURIComponent(mergedClaims));\r\n    }\r\n    /**\r\n     * add correlationId\r\n     * @param correlationId\r\n     */\r\n    addCorrelationId(correlationId) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\r\n    }\r\n    /**\r\n     * add library info query params\r\n     * @param libraryInfo\r\n     */\r\n    addLibraryInfo(libraryInfo) {\r\n        // Telemetry Info\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_SKU, libraryInfo.sku);\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_VER, libraryInfo.version);\r\n        if (libraryInfo.os) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_OS, libraryInfo.os);\r\n        }\r\n        if (libraryInfo.cpu) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_CPU, libraryInfo.cpu);\r\n        }\r\n    }\r\n    /**\r\n     * Add client telemetry parameters\r\n     * @param appTelemetry\r\n     */\r\n    addApplicationTelemetry(appTelemetry) {\r\n        if (appTelemetry?.appName) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_APP_NAME, appTelemetry.appName);\r\n        }\r\n        if (appTelemetry?.appVersion) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_APP_VER, appTelemetry.appVersion);\r\n        }\r\n    }\r\n    /**\r\n     * add prompt\r\n     * @param prompt\r\n     */\r\n    addPrompt(prompt) {\r\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validatePrompt(prompt);\r\n        this.parameters.set(`${_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.PROMPT}`, encodeURIComponent(prompt));\r\n    }\r\n    /**\r\n     * add state\r\n     * @param state\r\n     */\r\n    addState(state) {\r\n        if (state) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.STATE, encodeURIComponent(state));\r\n        }\r\n    }\r\n    /**\r\n     * add nonce\r\n     * @param nonce\r\n     */\r\n    addNonce(nonce) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.NONCE, encodeURIComponent(nonce));\r\n    }\r\n    /**\r\n     * add code_challenge and code_challenge_method\r\n     * - throw if either of them are not passed\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    addCodeChallengeParams(codeChallenge, codeChallengeMethod) {\r\n        _RequestValidator_mjs__WEBPACK_IMPORTED_MODULE_3__.RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\r\n        if (codeChallenge && codeChallengeMethod) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\r\n        }\r\n        else {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.pkceParamsMissing);\r\n        }\r\n    }\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    addAuthorizationCode(code) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE, encodeURIComponent(code));\r\n    }\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    addDeviceCode(code) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.DEVICE_CODE, encodeURIComponent(code));\r\n    }\r\n    /**\r\n     * add the `refreshToken` passed by the user\r\n     * @param refreshToken\r\n     */\r\n    addRefreshToken(refreshToken) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REFRESH_TOKEN, encodeURIComponent(refreshToken));\r\n    }\r\n    /**\r\n     * add the `code_verifier` passed by the user to exchange for a token\r\n     * @param codeVerifier\r\n     */\r\n    addCodeVerifier(codeVerifier) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CODE_VERIFIER, encodeURIComponent(codeVerifier));\r\n    }\r\n    /**\r\n     * add client_secret\r\n     * @param clientSecret\r\n     */\r\n    addClientSecret(clientSecret) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_SECRET, encodeURIComponent(clientSecret));\r\n    }\r\n    /**\r\n     * add clientAssertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    addClientAssertion(clientAssertion) {\r\n        if (clientAssertion) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\r\n        }\r\n    }\r\n    /**\r\n     * add clientAssertionType for confidential client flows\r\n     * @param clientAssertionType\r\n     */\r\n    addClientAssertionType(clientAssertionType) {\r\n        if (clientAssertionType) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\r\n        }\r\n    }\r\n    /**\r\n     * add OBO assertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    addOboAssertion(oboAssertion) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.OBO_ASSERTION, encodeURIComponent(oboAssertion));\r\n    }\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    addRequestTokenUse(tokenUse) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REQUESTED_TOKEN_USE, encodeURIComponent(tokenUse));\r\n    }\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    addGrantType(grantType) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.GRANT_TYPE, encodeURIComponent(grantType));\r\n    }\r\n    /**\r\n     * add client info\r\n     *\r\n     */\r\n    addClientInfo() {\r\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.CLIENT_INFO, \"1\");\r\n    }\r\n    /**\r\n     * add extraQueryParams\r\n     * @param eQParams\r\n     */\r\n    addExtraQueryParameters(eQParams) {\r\n        Object.entries(eQParams).forEach(([key, value]) => {\r\n            if (!this.parameters.has(key) && value) {\r\n                this.parameters.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    addClientCapabilitiesToClaims(claims, clientCapabilities) {\r\n        let mergedClaims;\r\n        // Parse provided claims into JSON object or initialize empty object\r\n        if (!claims) {\r\n            mergedClaims = {};\r\n        }\r\n        else {\r\n            try {\r\n                mergedClaims = JSON.parse(claims);\r\n            }\r\n            catch (e) {\r\n                throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.invalidClaims);\r\n            }\r\n        }\r\n        if (clientCapabilities && clientCapabilities.length > 0) {\r\n            if (!mergedClaims.hasOwnProperty(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.ACCESS_TOKEN)) {\r\n                // Add access_token key to claims object\r\n                mergedClaims[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.ACCESS_TOKEN] = {};\r\n            }\r\n            // Add xms_cc claim with provided clientCapabilities to access_token key\r\n            mergedClaims[_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.ACCESS_TOKEN][_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ClaimsRequestKeys.XMS_CC] = {\r\n                values: clientCapabilities,\r\n            };\r\n        }\r\n        return JSON.stringify(mergedClaims);\r\n    }\r\n    /**\r\n     * adds `username` for Password Grant flow\r\n     * @param username\r\n     */\r\n    addUsername(username) {\r\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.PasswordGrantConstants.username, encodeURIComponent(username));\r\n    }\r\n    /**\r\n     * adds `password` for Password Grant flow\r\n     * @param password\r\n     */\r\n    addPassword(password) {\r\n        this.parameters.set(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.PasswordGrantConstants.password, encodeURIComponent(password));\r\n    }\r\n    /**\r\n     * add pop_jwk to query params\r\n     * @param cnfString\r\n     */\r\n    addPopToken(cnfString) {\r\n        if (cnfString) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.TOKEN_TYPE, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.POP);\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REQ_CNF, encodeURIComponent(cnfString));\r\n        }\r\n    }\r\n    /**\r\n     * add SSH JWK and key ID to query params\r\n     */\r\n    addSshJwk(sshJwkString) {\r\n        if (sshJwkString) {\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.TOKEN_TYPE, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthenticationScheme.SSH);\r\n            this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.REQ_CNF, encodeURIComponent(sshJwkString));\r\n        }\r\n    }\r\n    /**\r\n     * add server telemetry fields\r\n     * @param serverTelemetryManager\r\n     */\r\n    addServerTelemetry(serverTelemetryManager) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\r\n    }\r\n    /**\r\n     * Adds parameter that indicates to the server that throttling is supported\r\n     */\r\n    addThrottling() {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.X_MS_LIB_CAPABILITY, _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\r\n    }\r\n    /**\r\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\r\n     */\r\n    addLogoutHint(logoutHint) {\r\n        this.parameters.set(_constants_AADServerParamKeys_mjs__WEBPACK_IMPORTED_MODULE_0__.LOGOUT_HINT, encodeURIComponent(logoutHint));\r\n    }\r\n    /**\r\n     * Utility to create a URL from the params map\r\n     */\r\n    createQueryString() {\r\n        const queryParameterArray = new Array();\r\n        this.parameters.forEach((value, key) => {\r\n            queryParameterArray.push(`${key}=${value}`);\r\n        });\r\n        return queryParameterArray.join(\"&\");\r\n    }\r\n}\n\n\n//# sourceMappingURL=RequestParameterBuilder.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestValidator: () => (/* binding */ RequestValidator)\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Validates server consumable params from the \"request\" objects\r\n */\r\nclass RequestValidator {\r\n    /**\r\n     * Utility to check if the `redirectUri` in the request is a non-null value\r\n     * @param redirectUri\r\n     */\r\n    static validateRedirectUri(redirectUri) {\r\n        if (!redirectUri) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.redirectUriEmpty);\r\n        }\r\n    }\r\n    /**\r\n     * Utility to validate prompt sent by the user in the request\r\n     * @param prompt\r\n     */\r\n    static validatePrompt(prompt) {\r\n        const promptValues = [];\r\n        for (const value in _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.PromptValue) {\r\n            promptValues.push(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.PromptValue[value]);\r\n        }\r\n        if (promptValues.indexOf(prompt) < 0) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidPromptValue);\r\n        }\r\n    }\r\n    static validateClaims(claims) {\r\n        try {\r\n            JSON.parse(claims);\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidClaims);\r\n        }\r\n    }\r\n    /**\r\n     * Utility to validate code_challenge and code_challenge_method\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    static validateCodeChallengeParams(codeChallenge, codeChallengeMethod) {\r\n        if (!codeChallenge || !codeChallengeMethod) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.pkceParamsMissing);\r\n        }\r\n        else {\r\n            this.validateCodeChallengeMethod(codeChallengeMethod);\r\n        }\r\n    }\r\n    /**\r\n     * Utility to validate code_challenge_method\r\n     * @param codeChallengeMethod\r\n     */\r\n    static validateCodeChallengeMethod(codeChallengeMethod) {\r\n        if ([\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CodeChallengeMethodValues.PLAIN,\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_2__.CodeChallengeMethodValues.S256,\r\n        ].indexOf(codeChallengeMethod) < 0) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidCodeChallengeMethod);\r\n        }\r\n    }\r\n}\n\n\n//# sourceMappingURL=RequestValidator.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcmVxdWVzdC9SZXF1ZXN0VmFsaWRhdG9yLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUMwRTtBQUNQO0FBQ2dGOztBQUVoSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1HQUE4QixDQUFDLHNGQUFnQjtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLDZEQUFXO0FBQ3ZDLDhCQUE4Qiw2REFBVztBQUN6QztBQUNBO0FBQ0Esa0JBQWtCLG1HQUE4QixDQUFDLHdGQUFrQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixtR0FBOEIsQ0FBQyxtRkFBYTtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUdBQThCLENBQUMsdUZBQWlCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDJFQUF5QjtBQUNyQyxZQUFZLDJFQUF5QjtBQUNyQztBQUNBLGtCQUFrQixtR0FBOEIsQ0FBQyxnR0FBMEI7QUFDM0U7QUFDQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcmVxdWVzdC9SZXF1ZXN0VmFsaWRhdG9yLm1qcz8zYjc2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuaW1wb3J0IHsgY3JlYXRlQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yLm1qcyc7XG5pbXBvcnQgeyBDb2RlQ2hhbGxlbmdlTWV0aG9kVmFsdWVzLCBQcm9tcHRWYWx1ZSB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgcmVkaXJlY3RVcmlFbXB0eSwgaW52YWxpZFByb21wdFZhbHVlLCBpbnZhbGlkQ2xhaW1zLCBwa2NlUGFyYW1zTWlzc2luZywgaW52YWxpZENvZGVDaGFsbGVuZ2VNZXRob2QgfSBmcm9tICcuLi9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFZhbGlkYXRlcyBzZXJ2ZXIgY29uc3VtYWJsZSBwYXJhbXMgZnJvbSB0aGUgXCJyZXF1ZXN0XCIgb2JqZWN0c1xyXG4gKi9cclxuY2xhc3MgUmVxdWVzdFZhbGlkYXRvciB7XHJcbiAgICAvKipcclxuICAgICAqIFV0aWxpdHkgdG8gY2hlY2sgaWYgdGhlIGByZWRpcmVjdFVyaWAgaW4gdGhlIHJlcXVlc3QgaXMgYSBub24tbnVsbCB2YWx1ZVxyXG4gICAgICogQHBhcmFtIHJlZGlyZWN0VXJpXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyB2YWxpZGF0ZVJlZGlyZWN0VXJpKHJlZGlyZWN0VXJpKSB7XHJcbiAgICAgICAgaWYgKCFyZWRpcmVjdFVyaSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IocmVkaXJlY3RVcmlFbXB0eSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVdGlsaXR5IHRvIHZhbGlkYXRlIHByb21wdCBzZW50IGJ5IHRoZSB1c2VyIGluIHRoZSByZXF1ZXN0XHJcbiAgICAgKiBAcGFyYW0gcHJvbXB0XHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyB2YWxpZGF0ZVByb21wdChwcm9tcHQpIHtcclxuICAgICAgICBjb25zdCBwcm9tcHRWYWx1ZXMgPSBbXTtcclxuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIGluIFByb21wdFZhbHVlKSB7XHJcbiAgICAgICAgICAgIHByb21wdFZhbHVlcy5wdXNoKFByb21wdFZhbHVlW3ZhbHVlXSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChwcm9tcHRWYWx1ZXMuaW5kZXhPZihwcm9tcHQpIDwgMCkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoaW52YWxpZFByb21wdFZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgdmFsaWRhdGVDbGFpbXMoY2xhaW1zKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgSlNPTi5wYXJzZShjbGFpbXMpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoaW52YWxpZENsYWltcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBVdGlsaXR5IHRvIHZhbGlkYXRlIGNvZGVfY2hhbGxlbmdlIGFuZCBjb2RlX2NoYWxsZW5nZV9tZXRob2RcclxuICAgICAqIEBwYXJhbSBjb2RlQ2hhbGxlbmdlXHJcbiAgICAgKiBAcGFyYW0gY29kZUNoYWxsZW5nZU1ldGhvZFxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgdmFsaWRhdGVDb2RlQ2hhbGxlbmdlUGFyYW1zKGNvZGVDaGFsbGVuZ2UsIGNvZGVDaGFsbGVuZ2VNZXRob2QpIHtcclxuICAgICAgICBpZiAoIWNvZGVDaGFsbGVuZ2UgfHwgIWNvZGVDaGFsbGVuZ2VNZXRob2QpIHtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yKHBrY2VQYXJhbXNNaXNzaW5nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMudmFsaWRhdGVDb2RlQ2hhbGxlbmdlTWV0aG9kKGNvZGVDaGFsbGVuZ2VNZXRob2QpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVXRpbGl0eSB0byB2YWxpZGF0ZSBjb2RlX2NoYWxsZW5nZV9tZXRob2RcclxuICAgICAqIEBwYXJhbSBjb2RlQ2hhbGxlbmdlTWV0aG9kXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyB2YWxpZGF0ZUNvZGVDaGFsbGVuZ2VNZXRob2QoY29kZUNoYWxsZW5nZU1ldGhvZCkge1xyXG4gICAgICAgIGlmIChbXHJcbiAgICAgICAgICAgIENvZGVDaGFsbGVuZ2VNZXRob2RWYWx1ZXMuUExBSU4sXHJcbiAgICAgICAgICAgIENvZGVDaGFsbGVuZ2VNZXRob2RWYWx1ZXMuUzI1NixcclxuICAgICAgICBdLmluZGV4T2YoY29kZUNoYWxsZW5nZU1ldGhvZCkgPCAwKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudENvbmZpZ3VyYXRpb25FcnJvcihpbnZhbGlkQ29kZUNoYWxsZW5nZU1ldGhvZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IFJlcXVlc3RWYWxpZGF0b3IgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVJlcXVlc3RWYWxpZGF0b3IubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs":
/*!*******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ScopeSet: () => (/* binding */ ScopeSet)\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\r\nclass ScopeSet {\r\n    constructor(inputScopes) {\r\n        // Filter empty string and null/undefined array items\r\n        const scopeArr = inputScopes\r\n            ? _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.trimArrayEntries([...inputScopes])\r\n            : [];\r\n        const filteredInput = scopeArr\r\n            ? _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_0__.StringUtils.removeEmptyStringsFromArray(scopeArr)\r\n            : [];\r\n        // Validate and filter scopes (validate function throws if validation fails)\r\n        this.validateInputScopes(filteredInput);\r\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\r\n        filteredInput.forEach((scope) => this.scopes.add(scope));\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n     */\r\n    static fromString(inputScopeString) {\r\n        const scopeString = inputScopeString || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\r\n        const inputScopes = scopeString.split(\" \");\r\n        return new ScopeSet(inputScopes);\r\n    }\r\n    /**\r\n     * Creates the set of scopes to search for in cache lookups\r\n     * @param inputScopeString\r\n     * @returns\r\n     */\r\n    static createSearchScopes(inputScopeString) {\r\n        const scopeSet = new ScopeSet(inputScopeString);\r\n        if (!scopeSet.containsOnlyOIDCScopes()) {\r\n            scopeSet.removeOIDCScopes();\r\n        }\r\n        else {\r\n            scopeSet.removeScope(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.OFFLINE_ACCESS_SCOPE);\r\n        }\r\n        return scopeSet;\r\n    }\r\n    /**\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n     */\r\n    validateInputScopes(inputScopes) {\r\n        // Check if scopes are required but not given or is an empty array\r\n        if (!inputScopes || inputScopes.length < 1) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_2__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_3__.emptyInputScopesError);\r\n        }\r\n    }\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    containsScope(scope) {\r\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\r\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\r\n        // compare lowercase scopes\r\n        return scope\r\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\r\n            : false;\r\n    }\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    containsScopeSet(scopeSet) {\r\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\r\n            return false;\r\n        }\r\n        return (this.scopes.size >= scopeSet.scopes.size &&\r\n            scopeSet.asArray().every((scope) => this.containsScope(scope)));\r\n    }\r\n    /**\r\n     * Check if set of scopes contains only the defaults\r\n     */\r\n    containsOnlyOIDCScopes() {\r\n        let defaultScopeCount = 0;\r\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_SCOPES.forEach((defaultScope) => {\r\n            if (this.containsScope(defaultScope)) {\r\n                defaultScopeCount += 1;\r\n            }\r\n        });\r\n        return this.scopes.size === defaultScopeCount;\r\n    }\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    appendScope(newScope) {\r\n        if (newScope) {\r\n            this.scopes.add(newScope.trim());\r\n        }\r\n    }\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    appendScopes(newScopes) {\r\n        try {\r\n            newScopes.forEach((newScope) => this.appendScope(newScope));\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.cannotAppendScopeSet);\r\n        }\r\n    }\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    removeScope(scope) {\r\n        if (!scope) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.cannotRemoveEmptyScope);\r\n        }\r\n        this.scopes.delete(scope.trim());\r\n    }\r\n    /**\r\n     * Removes default scopes from set of scopes\r\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\r\n     */\r\n    removeOIDCScopes() {\r\n        _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.OIDC_SCOPES.forEach((defaultScope) => {\r\n            this.scopes.delete(defaultScope);\r\n        });\r\n    }\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    unionScopeSets(otherScopes) {\r\n        if (!otherScopes) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.emptyInputScopeSet);\r\n        }\r\n        const unionScopes = new Set(); // Iterator in constructor not supported in IE11\r\n        otherScopes.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\r\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\r\n        return unionScopes;\r\n    }\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    intersectingScopeSets(otherScopes) {\r\n        if (!otherScopes) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_4__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_5__.emptyInputScopeSet);\r\n        }\r\n        // Do not allow OIDC scopes to be the only intersecting scopes\r\n        if (!otherScopes.containsOnlyOIDCScopes()) {\r\n            otherScopes.removeOIDCScopes();\r\n        }\r\n        const unionScopes = this.unionScopeSets(otherScopes);\r\n        const sizeOtherScopes = otherScopes.getScopeCount();\r\n        const sizeThisScopes = this.getScopeCount();\r\n        const sizeUnionScopes = unionScopes.size;\r\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\r\n    }\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    getScopeCount() {\r\n        return this.scopes.size;\r\n    }\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    asArray() {\r\n        const array = [];\r\n        this.scopes.forEach((val) => array.push(val));\r\n        return array;\r\n    }\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    printScopes() {\r\n        if (this.scopes) {\r\n            const scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_1__.Constants.EMPTY_STRING;\r\n    }\r\n    /**\r\n     * Prints scopes into a space-delimited lower-case string (used for caching)\r\n     */\r\n    printScopesLowerCase() {\r\n        return this.printScopes().toLowerCase();\r\n    }\r\n}\n\n\n//# sourceMappingURL=ScopeSet.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvcmVxdWVzdC9TY29wZVNldC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ2E7QUFDMEU7QUFDaEM7QUFDYztBQUNMO0FBQ21CO0FBQ2tDOztBQUVySDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsK0RBQVc7QUFDekI7QUFDQTtBQUNBLGNBQWMsK0RBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCwyREFBUztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLDJEQUFTO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGVBQWU7QUFDOUIsZUFBZSxTQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1HQUE4QixDQUFDLDJGQUFxQjtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDZEQUFXO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLGlGQUFvQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLG1GQUFzQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw2REFBVztBQUNuQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpRkFBcUIsQ0FBQywrRUFBa0I7QUFDMUQ7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUZBQXFCLENBQUMsK0VBQWtCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMkRBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3JlcXVlc3QvU2NvcGVTZXQubWpzP2Q4ZGEiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRDb25maWd1cmF0aW9uRXJyb3IubWpzJztcbmltcG9ydCB7IFN0cmluZ1V0aWxzIH0gZnJvbSAnLi4vdXRpbHMvU3RyaW5nVXRpbHMubWpzJztcbmltcG9ydCB7IGNyZWF0ZUNsaWVudEF1dGhFcnJvciB9IGZyb20gJy4uL2Vycm9yL0NsaWVudEF1dGhFcnJvci5tanMnO1xuaW1wb3J0IHsgQ29uc3RhbnRzLCBPSURDX1NDT1BFUyB9IGZyb20gJy4uL3V0aWxzL0NvbnN0YW50cy5tanMnO1xuaW1wb3J0IHsgZW1wdHlJbnB1dFNjb3Blc0Vycm9yIH0gZnJvbSAnLi4vZXJyb3IvQ2xpZW50Q29uZmlndXJhdGlvbkVycm9yQ29kZXMubWpzJztcbmltcG9ydCB7IGNhbm5vdEFwcGVuZFNjb3BlU2V0LCBjYW5ub3RSZW1vdmVFbXB0eVNjb3BlLCBlbXB0eUlucHV0U2NvcGVTZXQgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFRoZSBTY29wZVNldCBjbGFzcyBjcmVhdGVzIGEgc2V0IG9mIHNjb3Blcy4gU2NvcGVzIGFyZSBjYXNlLWluc2Vuc2l0aXZlLCB1bmlxdWUgdmFsdWVzLCBzbyB0aGUgU2V0IG9iamVjdCBpbiBKUyBtYWtlc1xyXG4gKiB0aGUgbW9zdCBzZW5zZSB0byBpbXBsZW1lbnQgZm9yIHRoaXMgY2xhc3MuIEFsbCBzY29wZXMgYXJlIHRyaW1tZWQgYW5kIGNvbnZlcnRlZCB0byBsb3dlciBjYXNlIHN0cmluZ3MgaW4gaW50ZXJzZWN0aW9uIGFuZCB1bmlvbiBmdW5jdGlvbnNcclxuICogdG8gZW5zdXJlIHVuaXF1ZW5lc3Mgb2Ygc3RyaW5ncy5cclxuICovXHJcbmNsYXNzIFNjb3BlU2V0IHtcclxuICAgIGNvbnN0cnVjdG9yKGlucHV0U2NvcGVzKSB7XHJcbiAgICAgICAgLy8gRmlsdGVyIGVtcHR5IHN0cmluZyBhbmQgbnVsbC91bmRlZmluZWQgYXJyYXkgaXRlbXNcclxuICAgICAgICBjb25zdCBzY29wZUFyciA9IGlucHV0U2NvcGVzXHJcbiAgICAgICAgICAgID8gU3RyaW5nVXRpbHMudHJpbUFycmF5RW50cmllcyhbLi4uaW5wdXRTY29wZXNdKVxyXG4gICAgICAgICAgICA6IFtdO1xyXG4gICAgICAgIGNvbnN0IGZpbHRlcmVkSW5wdXQgPSBzY29wZUFyclxyXG4gICAgICAgICAgICA/IFN0cmluZ1V0aWxzLnJlbW92ZUVtcHR5U3RyaW5nc0Zyb21BcnJheShzY29wZUFycilcclxuICAgICAgICAgICAgOiBbXTtcclxuICAgICAgICAvLyBWYWxpZGF0ZSBhbmQgZmlsdGVyIHNjb3BlcyAodmFsaWRhdGUgZnVuY3Rpb24gdGhyb3dzIGlmIHZhbGlkYXRpb24gZmFpbHMpXHJcbiAgICAgICAgdGhpcy52YWxpZGF0ZUlucHV0U2NvcGVzKGZpbHRlcmVkSW5wdXQpO1xyXG4gICAgICAgIHRoaXMuc2NvcGVzID0gbmV3IFNldCgpOyAvLyBJdGVyYXRvciBpbiBjb25zdHJ1Y3RvciBub3Qgc3VwcG9ydGVkIGJ5IElFMTFcclxuICAgICAgICBmaWx0ZXJlZElucHV0LmZvckVhY2goKHNjb3BlKSA9PiB0aGlzLnNjb3Blcy5hZGQoc2NvcGUpKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogRmFjdG9yeSBtZXRob2QgdG8gY3JlYXRlIFNjb3BlU2V0IGZyb20gc3BhY2UtZGVsaW1pdGVkIHN0cmluZ1xyXG4gICAgICogQHBhcmFtIGlucHV0U2NvcGVTdHJpbmdcclxuICAgICAqIEBwYXJhbSBhcHBDbGllbnRJZFxyXG4gICAgICogQHBhcmFtIHNjb3Blc1JlcXVpcmVkXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBmcm9tU3RyaW5nKGlucHV0U2NvcGVTdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBzY29wZVN0cmluZyA9IGlucHV0U2NvcGVTdHJpbmcgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICBjb25zdCBpbnB1dFNjb3BlcyA9IHNjb3BlU3RyaW5nLnNwbGl0KFwiIFwiKTtcclxuICAgICAgICByZXR1cm4gbmV3IFNjb3BlU2V0KGlucHV0U2NvcGVzKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ3JlYXRlcyB0aGUgc2V0IG9mIHNjb3BlcyB0byBzZWFyY2ggZm9yIGluIGNhY2hlIGxvb2t1cHNcclxuICAgICAqIEBwYXJhbSBpbnB1dFNjb3BlU3RyaW5nXHJcbiAgICAgKiBAcmV0dXJuc1xyXG4gICAgICovXHJcbiAgICBzdGF0aWMgY3JlYXRlU2VhcmNoU2NvcGVzKGlucHV0U2NvcGVTdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBzY29wZVNldCA9IG5ldyBTY29wZVNldChpbnB1dFNjb3BlU3RyaW5nKTtcclxuICAgICAgICBpZiAoIXNjb3BlU2V0LmNvbnRhaW5zT25seU9JRENTY29wZXMoKSkge1xyXG4gICAgICAgICAgICBzY29wZVNldC5yZW1vdmVPSURDU2NvcGVzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBzY29wZVNldC5yZW1vdmVTY29wZShDb25zdGFudHMuT0ZGTElORV9BQ0NFU1NfU0NPUEUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gc2NvcGVTZXQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFVzZWQgdG8gdmFsaWRhdGUgdGhlIHNjb3BlcyBpbnB1dCBwYXJhbWV0ZXIgcmVxdWVzdGVkICBieSB0aGUgZGV2ZWxvcGVyLlxyXG4gICAgICogQHBhcmFtIHtBcnJheTxzdHJpbmc+fSBpbnB1dFNjb3BlcyAtIERldmVsb3BlciByZXF1ZXN0ZWQgcGVybWlzc2lvbnMuIE5vdCBhbGwgc2NvcGVzIGFyZSBndWFyYW50ZWVkIHRvIGJlIGluY2x1ZGVkIGluIHRoZSBhY2Nlc3MgdG9rZW4gcmV0dXJuZWQuXHJcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHNjb3Blc1JlcXVpcmVkIC0gQm9vbGVhbiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlIHNjb3BlcyBhcnJheSBpcyByZXF1aXJlZCBvciBub3RcclxuICAgICAqL1xyXG4gICAgdmFsaWRhdGVJbnB1dFNjb3BlcyhpbnB1dFNjb3Blcykge1xyXG4gICAgICAgIC8vIENoZWNrIGlmIHNjb3BlcyBhcmUgcmVxdWlyZWQgYnV0IG5vdCBnaXZlbiBvciBpcyBhbiBlbXB0eSBhcnJheVxyXG4gICAgICAgIGlmICghaW5wdXRTY29wZXMgfHwgaW5wdXRTY29wZXMubGVuZ3RoIDwgMSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRDb25maWd1cmF0aW9uRXJyb3IoZW1wdHlJbnB1dFNjb3Blc0Vycm9yKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGlmIGEgZ2l2ZW4gc2NvcGUgaXMgcHJlc2VudCBpbiB0aGlzIHNldCBvZiBzY29wZXMuXHJcbiAgICAgKiBAcGFyYW0gc2NvcGVcclxuICAgICAqL1xyXG4gICAgY29udGFpbnNTY29wZShzY29wZSkge1xyXG4gICAgICAgIGNvbnN0IGxvd2VyQ2FzZVNjb3BlcyA9IHRoaXMucHJpbnRTY29wZXNMb3dlckNhc2UoKS5zcGxpdChcIiBcIik7XHJcbiAgICAgICAgY29uc3QgbG93ZXJDYXNlU2NvcGVzU2V0ID0gbmV3IFNjb3BlU2V0KGxvd2VyQ2FzZVNjb3Blcyk7XHJcbiAgICAgICAgLy8gY29tcGFyZSBsb3dlcmNhc2Ugc2NvcGVzXHJcbiAgICAgICAgcmV0dXJuIHNjb3BlXHJcbiAgICAgICAgICAgID8gbG93ZXJDYXNlU2NvcGVzU2V0LnNjb3Blcy5oYXMoc2NvcGUudG9Mb3dlckNhc2UoKSlcclxuICAgICAgICAgICAgOiBmYWxzZTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQ2hlY2sgaWYgYSBzZXQgb2Ygc2NvcGVzIGlzIHByZXNlbnQgaW4gdGhpcyBzZXQgb2Ygc2NvcGVzLlxyXG4gICAgICogQHBhcmFtIHNjb3BlU2V0XHJcbiAgICAgKi9cclxuICAgIGNvbnRhaW5zU2NvcGVTZXQoc2NvcGVTZXQpIHtcclxuICAgICAgICBpZiAoIXNjb3BlU2V0IHx8IHNjb3BlU2V0LnNjb3Blcy5zaXplIDw9IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gKHRoaXMuc2NvcGVzLnNpemUgPj0gc2NvcGVTZXQuc2NvcGVzLnNpemUgJiZcclxuICAgICAgICAgICAgc2NvcGVTZXQuYXNBcnJheSgpLmV2ZXJ5KChzY29wZSkgPT4gdGhpcy5jb250YWluc1Njb3BlKHNjb3BlKSkpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDaGVjayBpZiBzZXQgb2Ygc2NvcGVzIGNvbnRhaW5zIG9ubHkgdGhlIGRlZmF1bHRzXHJcbiAgICAgKi9cclxuICAgIGNvbnRhaW5zT25seU9JRENTY29wZXMoKSB7XHJcbiAgICAgICAgbGV0IGRlZmF1bHRTY29wZUNvdW50ID0gMDtcclxuICAgICAgICBPSURDX1NDT1BFUy5mb3JFYWNoKChkZWZhdWx0U2NvcGUpID0+IHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuY29udGFpbnNTY29wZShkZWZhdWx0U2NvcGUpKSB7XHJcbiAgICAgICAgICAgICAgICBkZWZhdWx0U2NvcGVDb3VudCArPSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc2NvcGVzLnNpemUgPT09IGRlZmF1bHRTY29wZUNvdW50O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBBcHBlbmRzIHNpbmdsZSBzY29wZSBpZiBwYXNzZWRcclxuICAgICAqIEBwYXJhbSBuZXdTY29wZVxyXG4gICAgICovXHJcbiAgICBhcHBlbmRTY29wZShuZXdTY29wZSkge1xyXG4gICAgICAgIGlmIChuZXdTY29wZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNjb3Blcy5hZGQobmV3U2NvcGUudHJpbSgpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEFwcGVuZHMgbXVsdGlwbGUgc2NvcGVzIGlmIHBhc3NlZFxyXG4gICAgICogQHBhcmFtIG5ld1Njb3Blc1xyXG4gICAgICovXHJcbiAgICBhcHBlbmRTY29wZXMobmV3U2NvcGVzKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgbmV3U2NvcGVzLmZvckVhY2goKG5ld1Njb3BlKSA9PiB0aGlzLmFwcGVuZFNjb3BlKG5ld1Njb3BlKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihjYW5ub3RBcHBlbmRTY29wZVNldCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW1vdmVzIGVsZW1lbnQgZnJvbSBzZXQgb2Ygc2NvcGVzLlxyXG4gICAgICogQHBhcmFtIHNjb3BlXHJcbiAgICAgKi9cclxuICAgIHJlbW92ZVNjb3BlKHNjb3BlKSB7XHJcbiAgICAgICAgaWYgKCFzY29wZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoY2Fubm90UmVtb3ZlRW1wdHlTY29wZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc2NvcGVzLmRlbGV0ZShzY29wZS50cmltKCkpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBSZW1vdmVzIGRlZmF1bHQgc2NvcGVzIGZyb20gc2V0IG9mIHNjb3Blc1xyXG4gICAgICogUHJpbWFyaWx5IHVzZWQgdG8gcHJldmVudCBjYWNoZSBtaXNzZXMgaWYgdGhlIGRlZmF1bHQgc2NvcGVzIGFyZSBub3QgcmV0dXJuZWQgZnJvbSB0aGUgc2VydmVyXHJcbiAgICAgKi9cclxuICAgIHJlbW92ZU9JRENTY29wZXMoKSB7XHJcbiAgICAgICAgT0lEQ19TQ09QRVMuZm9yRWFjaCgoZGVmYXVsdFNjb3BlKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuc2NvcGVzLmRlbGV0ZShkZWZhdWx0U2NvcGUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBDb21iaW5lcyBhbiBhcnJheSBvZiBzY29wZXMgd2l0aCB0aGUgY3VycmVudCBzZXQgb2Ygc2NvcGVzLlxyXG4gICAgICogQHBhcmFtIG90aGVyU2NvcGVzXHJcbiAgICAgKi9cclxuICAgIHVuaW9uU2NvcGVTZXRzKG90aGVyU2NvcGVzKSB7XHJcbiAgICAgICAgaWYgKCFvdGhlclNjb3Blcykge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoZW1wdHlJbnB1dFNjb3BlU2V0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgdW5pb25TY29wZXMgPSBuZXcgU2V0KCk7IC8vIEl0ZXJhdG9yIGluIGNvbnN0cnVjdG9yIG5vdCBzdXBwb3J0ZWQgaW4gSUUxMVxyXG4gICAgICAgIG90aGVyU2NvcGVzLnNjb3Blcy5mb3JFYWNoKChzY29wZSkgPT4gdW5pb25TY29wZXMuYWRkKHNjb3BlLnRvTG93ZXJDYXNlKCkpKTtcclxuICAgICAgICB0aGlzLnNjb3Blcy5mb3JFYWNoKChzY29wZSkgPT4gdW5pb25TY29wZXMuYWRkKHNjb3BlLnRvTG93ZXJDYXNlKCkpKTtcclxuICAgICAgICByZXR1cm4gdW5pb25TY29wZXM7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGlmIHNjb3BlcyBpbnRlcnNlY3QgYmV0d2VlbiB0aGlzIHNldCBhbmQgYW5vdGhlci5cclxuICAgICAqIEBwYXJhbSBvdGhlclNjb3Blc1xyXG4gICAgICovXHJcbiAgICBpbnRlcnNlY3RpbmdTY29wZVNldHMob3RoZXJTY29wZXMpIHtcclxuICAgICAgICBpZiAoIW90aGVyU2NvcGVzKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihlbXB0eUlucHV0U2NvcGVTZXQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBEbyBub3QgYWxsb3cgT0lEQyBzY29wZXMgdG8gYmUgdGhlIG9ubHkgaW50ZXJzZWN0aW5nIHNjb3Blc1xyXG4gICAgICAgIGlmICghb3RoZXJTY29wZXMuY29udGFpbnNPbmx5T0lEQ1Njb3BlcygpKSB7XHJcbiAgICAgICAgICAgIG90aGVyU2NvcGVzLnJlbW92ZU9JRENTY29wZXMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgdW5pb25TY29wZXMgPSB0aGlzLnVuaW9uU2NvcGVTZXRzKG90aGVyU2NvcGVzKTtcclxuICAgICAgICBjb25zdCBzaXplT3RoZXJTY29wZXMgPSBvdGhlclNjb3Blcy5nZXRTY29wZUNvdW50KCk7XHJcbiAgICAgICAgY29uc3Qgc2l6ZVRoaXNTY29wZXMgPSB0aGlzLmdldFNjb3BlQ291bnQoKTtcclxuICAgICAgICBjb25zdCBzaXplVW5pb25TY29wZXMgPSB1bmlvblNjb3Blcy5zaXplO1xyXG4gICAgICAgIHJldHVybiBzaXplVW5pb25TY29wZXMgPCBzaXplVGhpc1Njb3BlcyArIHNpemVPdGhlclNjb3BlcztcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJucyBzaXplIG9mIHNldCBvZiBzY29wZXMuXHJcbiAgICAgKi9cclxuICAgIGdldFNjb3BlQ291bnQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc2NvcGVzLnNpemU7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIHNjb3BlcyBhcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzXHJcbiAgICAgKi9cclxuICAgIGFzQXJyYXkoKSB7XHJcbiAgICAgICAgY29uc3QgYXJyYXkgPSBbXTtcclxuICAgICAgICB0aGlzLnNjb3Blcy5mb3JFYWNoKCh2YWwpID0+IGFycmF5LnB1c2godmFsKSk7XHJcbiAgICAgICAgcmV0dXJuIGFycmF5O1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBQcmludHMgc2NvcGVzIGludG8gYSBzcGFjZS1kZWxpbWl0ZWQgc3RyaW5nXHJcbiAgICAgKi9cclxuICAgIHByaW50U2NvcGVzKCkge1xyXG4gICAgICAgIGlmICh0aGlzLnNjb3Blcykge1xyXG4gICAgICAgICAgICBjb25zdCBzY29wZUFyciA9IHRoaXMuYXNBcnJheSgpO1xyXG4gICAgICAgICAgICByZXR1cm4gc2NvcGVBcnIuam9pbihcIiBcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBDb25zdGFudHMuRU1QVFlfU1RSSU5HO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBQcmludHMgc2NvcGVzIGludG8gYSBzcGFjZS1kZWxpbWl0ZWQgbG93ZXItY2FzZSBzdHJpbmcgKHVzZWQgZm9yIGNhY2hpbmcpXHJcbiAgICAgKi9cclxuICAgIHByaW50U2NvcGVzTG93ZXJDYXNlKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnByaW50U2NvcGVzKCkudG9Mb3dlckNhc2UoKTtcclxuICAgIH1cclxufVxuXG5leHBvcnQgeyBTY29wZVNldCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2NvcGVTZXQubWpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ResponseHandler: () => (/* binding */ ResponseHandler),\n/* harmony export */   buildAccountToCache: () => (/* binding */ buildAccountToCache)\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../error/ServerError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ServerError.mjs\");\n/* harmony import */ var _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../request/ScopeSet.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs\");\n/* harmony import */ var _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cache/entities/AccountEntity.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs\");\n/* harmony import */ var _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/InteractionRequiredAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs\");\n/* harmony import */ var _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/ProtocolUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../crypto/PopTokenGenerator.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs\");\n/* harmony import */ var _cache_persistence_TokenCacheContext_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../cache/persistence/TokenCacheContext.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs\");\n/* harmony import */ var _telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../telemetry/performance/PerformanceEvent.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/* harmony import */ var _account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../account/AuthToken.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs\");\n/* harmony import */ var _account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../account/TokenClaims.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs\");\n/* harmony import */ var _account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../account/AccountInfo.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs\");\n/* harmony import */ var _cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../cache/utils/CacheHelpers.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction parseServerErrorNo(serverResponse) {\r\n    const errorCodePrefix = \"code=\";\r\n    const errorCodePrefixIndex = serverResponse.error_uri?.lastIndexOf(errorCodePrefix);\r\n    return errorCodePrefixIndex && errorCodePrefixIndex >= 0\r\n        ? serverResponse.error_uri?.substring(errorCodePrefixIndex + errorCodePrefix.length)\r\n        : undefined;\r\n}\r\n/**\r\n * Class that handles response parsing.\r\n * @internal\r\n */\r\nclass ResponseHandler {\r\n    constructor(clientId, cacheStorage, cryptoObj, logger, serializableCache, persistencePlugin, performanceClient) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n        this.serializableCache = serializableCache;\r\n        this.persistencePlugin = persistencePlugin;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param requestState\r\n     * @param cryptoObj\r\n     */\r\n    validateServerAuthorizationCodeResponse(serverResponse, requestState) {\r\n        if (!serverResponse.state || !requestState) {\r\n            throw serverResponse.state\r\n                ? (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stateNotFound, \"Cached State\")\r\n                : (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stateNotFound, \"Server State\");\r\n        }\r\n        let decodedServerResponseState;\r\n        let decodedRequestState;\r\n        try {\r\n            decodedServerResponseState = decodeURIComponent(serverResponse.state);\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidState, serverResponse.state);\r\n        }\r\n        try {\r\n            decodedRequestState = decodeURIComponent(requestState);\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidState, serverResponse.state);\r\n        }\r\n        if (decodedServerResponseState !== decodedRequestState) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.stateMismatch);\r\n        }\r\n        // Check for error\r\n        if (serverResponse.error ||\r\n            serverResponse.error_description ||\r\n            serverResponse.suberror) {\r\n            const serverErrorNo = parseServerErrorNo(serverResponse);\r\n            if ((0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.isInteractionRequiredError)(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || \"\", serverResponse.trace_id || \"\", serverResponse.correlation_id || \"\", serverResponse.claims || \"\", serverErrorNo);\r\n            }\r\n            throw new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__.ServerError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror, serverErrorNo);\r\n        }\r\n    }\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     * @param refreshAccessToken\r\n     */\r\n    validateTokenResponse(serverResponse, refreshAccessToken) {\r\n        // Check for error\r\n        if (serverResponse.error ||\r\n            serverResponse.error_description ||\r\n            serverResponse.suberror) {\r\n            const errString = `Error(s): ${serverResponse.error_codes || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Timestamp: ${serverResponse.timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Description: ${serverResponse.error_description || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Correlation ID: ${serverResponse.correlation_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE} - Trace ID: ${serverResponse.trace_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.NOT_AVAILABLE}`;\r\n            const serverErrorNo = serverResponse.error_codes?.length\r\n                ? serverResponse.error_codes[0]\r\n                : undefined;\r\n            const serverError = new _error_ServerError_mjs__WEBPACK_IMPORTED_MODULE_3__.ServerError(serverResponse.error, errString, serverResponse.suberror, serverErrorNo, serverResponse.status);\r\n            // check if 500 error\r\n            if (refreshAccessToken &&\r\n                serverResponse.status &&\r\n                serverResponse.status >= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SERVER_ERROR_RANGE_START &&\r\n                serverResponse.status <= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.SERVER_ERROR_RANGE_END) {\r\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`);\r\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\r\n                return;\r\n                // check if 400 error\r\n            }\r\n            else if (refreshAccessToken &&\r\n                serverResponse.status &&\r\n                serverResponse.status >= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.CLIENT_ERROR_RANGE_START &&\r\n                serverResponse.status <= _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.HttpStatus.CLIENT_ERROR_RANGE_END) {\r\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`);\r\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\r\n                return;\r\n            }\r\n            if ((0,_error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.isInteractionRequiredError)(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new _error_InteractionRequiredAuthError_mjs__WEBPACK_IMPORTED_MODULE_2__.InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverResponse.trace_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverResponse.correlation_id || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverResponse.claims || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, serverErrorNo);\r\n            }\r\n            throw serverError;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authority\r\n     */\r\n    async handleServerTokenResponse(serverTokenResponse, authority, reqTimestamp, request, authCodePayload, userAssertionHash, handlingRefreshTokenResponse, forceCacheRefreshTokenResponse, serverRequestId) {\r\n        this.performanceClient?.addQueueMeasurement(_telemetry_performance_PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_5__.PerformanceEvents.HandleServerTokenResponse, serverTokenResponse.correlation_id);\r\n        // create an idToken object (not entity)\r\n        let idTokenClaims;\r\n        if (serverTokenResponse.id_token) {\r\n            idTokenClaims = (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__.extractTokenClaims)(serverTokenResponse.id_token || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, this.cryptoObj.base64Decode);\r\n            // token nonce check (TODO: Add a warning if no nonce is given?)\r\n            if (authCodePayload && authCodePayload.nonce) {\r\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\r\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.nonceMismatch);\r\n                }\r\n            }\r\n            // token max_age check\r\n            if (request.maxAge || request.maxAge === 0) {\r\n                const authTime = idTokenClaims.auth_time;\r\n                if (!authTime) {\r\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.authTimeNotFound);\r\n                }\r\n                (0,_account_AuthToken_mjs__WEBPACK_IMPORTED_MODULE_6__.checkMaxAge)(authTime, request.maxAge);\r\n            }\r\n        }\r\n        // generate homeAccountId\r\n        this.homeAccountIdentifier = _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_7__.AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\r\n        // save the response tokens\r\n        let requestStateObj;\r\n        if (!!authCodePayload && !!authCodePayload.state) {\r\n            requestStateObj = _utils_ProtocolUtils_mjs__WEBPACK_IMPORTED_MODULE_8__.ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\r\n        }\r\n        // Add keyId from request to serverTokenResponse if defined\r\n        serverTokenResponse.key_id =\r\n            serverTokenResponse.key_id || request.sshKid || undefined;\r\n        const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload);\r\n        let cacheContext;\r\n        try {\r\n            if (this.persistencePlugin && this.serializableCache) {\r\n                this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\r\n                cacheContext = new _cache_persistence_TokenCacheContext_mjs__WEBPACK_IMPORTED_MODULE_9__.TokenCacheContext(this.serializableCache, true);\r\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\r\n            }\r\n            /*\r\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\r\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\r\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\r\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\r\n             */\r\n            if (handlingRefreshTokenResponse &&\r\n                !forceCacheRefreshTokenResponse &&\r\n                cacheRecord.account) {\r\n                const key = cacheRecord.account.generateAccountKey();\r\n                const account = this.cacheStorage.getAccount(key, this.logger);\r\n                if (!account) {\r\n                    this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\r\n                    return await ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, undefined, serverRequestId);\r\n                }\r\n            }\r\n            await this.cacheStorage.saveCacheRecord(cacheRecord, request.storeInCache, request.correlationId);\r\n        }\r\n        finally {\r\n            if (this.persistencePlugin &&\r\n                this.serializableCache &&\r\n                cacheContext) {\r\n                this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\r\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\r\n            }\r\n        }\r\n        return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, serverTokenResponse, serverRequestId);\r\n    }\r\n    /**\r\n     * Generates CacheRecord\r\n     * @param serverTokenResponse\r\n     * @param idTokenObj\r\n     * @param authority\r\n     */\r\n    generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload) {\r\n        const env = authority.getPreferredCache();\r\n        if (!env) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.invalidCacheEnvironment);\r\n        }\r\n        const claimsTenantId = (0,_account_TokenClaims_mjs__WEBPACK_IMPORTED_MODULE_10__.getTenantIdFromIdTokenClaims)(idTokenClaims);\r\n        // IdToken: non AAD scenarios can have empty realm\r\n        let cachedIdToken;\r\n        let cachedAccount;\r\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\r\n            cachedIdToken = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__.createIdTokenEntity)(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, claimsTenantId || \"\");\r\n            cachedAccount = buildAccountToCache(this.cacheStorage, authority, this.homeAccountIdentifier, this.cryptoObj.base64Decode, idTokenClaims, serverTokenResponse.client_info, env, claimsTenantId, authCodePayload, undefined, // nativeAccountId\r\n            this.logger);\r\n        }\r\n        // AccessToken\r\n        let cachedAccessToken = null;\r\n        if (serverTokenResponse.access_token) {\r\n            // If scopes not returned in server response, use request scopes\r\n            const responseScopes = serverTokenResponse.scope\r\n                ? _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet.fromString(serverTokenResponse.scope)\r\n                : new _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet(request.scopes || []);\r\n            /*\r\n             * Use timestamp calculated before request\r\n             * Server may return timestamps as strings, parse to numbers if so.\r\n             */\r\n            const expiresIn = (typeof serverTokenResponse.expires_in === \"string\"\r\n                ? parseInt(serverTokenResponse.expires_in, 10)\r\n                : serverTokenResponse.expires_in) || 0;\r\n            const extExpiresIn = (typeof serverTokenResponse.ext_expires_in === \"string\"\r\n                ? parseInt(serverTokenResponse.ext_expires_in, 10)\r\n                : serverTokenResponse.ext_expires_in) || 0;\r\n            const refreshIn = (typeof serverTokenResponse.refresh_in === \"string\"\r\n                ? parseInt(serverTokenResponse.refresh_in, 10)\r\n                : serverTokenResponse.refresh_in) || undefined;\r\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n            const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\r\n            const refreshOnSeconds = refreshIn && refreshIn > 0\r\n                ? reqTimestamp + refreshIn\r\n                : undefined;\r\n            // non AAD scenarios can have empty realm\r\n            cachedAccessToken = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__.createAccessTokenEntity)(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, claimsTenantId || authority.tenant || \"\", responseScopes.printScopes(), tokenExpirationSeconds, extendedTokenExpirationSeconds, this.cryptoObj.base64Decode, refreshOnSeconds, serverTokenResponse.token_type, userAssertionHash, serverTokenResponse.key_id, request.claims, request.requestedClaimsHash);\r\n        }\r\n        // refreshToken\r\n        let cachedRefreshToken = null;\r\n        if (serverTokenResponse.refresh_token) {\r\n            let rtExpiresOn;\r\n            if (serverTokenResponse.refresh_token_expires_in) {\r\n                const rtExpiresIn = typeof serverTokenResponse.refresh_token_expires_in ===\r\n                    \"string\"\r\n                    ? parseInt(serverTokenResponse.refresh_token_expires_in, 10)\r\n                    : serverTokenResponse.refresh_token_expires_in;\r\n                rtExpiresOn = reqTimestamp + rtExpiresIn;\r\n            }\r\n            cachedRefreshToken = (0,_cache_utils_CacheHelpers_mjs__WEBPACK_IMPORTED_MODULE_11__.createRefreshTokenEntity)(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci, userAssertionHash, rtExpiresOn);\r\n        }\r\n        // appMetadata\r\n        let cachedAppMetadata = null;\r\n        if (serverTokenResponse.foci) {\r\n            cachedAppMetadata = {\r\n                clientId: this.clientId,\r\n                environment: env,\r\n                familyId: serverTokenResponse.foci,\r\n            };\r\n        }\r\n        return {\r\n            account: cachedAccount,\r\n            idToken: cachedIdToken,\r\n            accessToken: cachedAccessToken,\r\n            refreshToken: cachedRefreshToken,\r\n            appMetadata: cachedAppMetadata,\r\n        };\r\n    }\r\n    /**\r\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\r\n     *\r\n     * Optionally takes a state string that is set as-is in the response.\r\n     *\r\n     * @param cacheRecord\r\n     * @param idTokenObj\r\n     * @param fromTokenCache\r\n     * @param stateString\r\n     */\r\n    static async generateAuthenticationResult(cryptoObj, authority, cacheRecord, fromTokenCache, request, idTokenClaims, requestState, serverTokenResponse, requestId) {\r\n        let accessToken = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING;\r\n        let responseScopes = [];\r\n        let expiresOn = null;\r\n        let extExpiresOn;\r\n        let refreshOn;\r\n        let familyId = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING;\r\n        if (cacheRecord.accessToken) {\r\n            /*\r\n             * if the request object has `popKid` property, `signPopToken` will be set to false and\r\n             * the token will be returned unsigned\r\n             */\r\n            if (cacheRecord.accessToken.tokenType ===\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.AuthenticationScheme.POP &&\r\n                !request.popKid) {\r\n                const popTokenGenerator = new _crypto_PopTokenGenerator_mjs__WEBPACK_IMPORTED_MODULE_13__.PopTokenGenerator(cryptoObj);\r\n                const { secret, keyId } = cacheRecord.accessToken;\r\n                if (!keyId) {\r\n                    throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.keyIdMissing);\r\n                }\r\n                accessToken = await popTokenGenerator.signPopToken(secret, keyId, request);\r\n            }\r\n            else {\r\n                accessToken = cacheRecord.accessToken.secret;\r\n            }\r\n            responseScopes = _request_ScopeSet_mjs__WEBPACK_IMPORTED_MODULE_12__.ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\r\n            expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\r\n            extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\r\n            if (cacheRecord.accessToken.refreshOn) {\r\n                refreshOn = new Date(Number(cacheRecord.accessToken.refreshOn) * 1000);\r\n            }\r\n        }\r\n        if (cacheRecord.appMetadata) {\r\n            familyId =\r\n                cacheRecord.appMetadata.familyId === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.THE_FAMILY_ID\r\n                    ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.THE_FAMILY_ID\r\n                    : \"\";\r\n        }\r\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\r\n        const tid = idTokenClaims?.tid || \"\";\r\n        // for hybrid + native bridge enablement, send back the native account Id\r\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\r\n            cacheRecord.account.nativeAccountId =\r\n                serverTokenResponse?.spa_accountid;\r\n        }\r\n        const accountInfo = cacheRecord.account\r\n            ? (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_14__.updateAccountTenantProfileData)(cacheRecord.account.getAccountInfo(), undefined, // tenantProfile optional\r\n            idTokenClaims, cacheRecord.idToken?.secret)\r\n            : null;\r\n        return {\r\n            authority: authority.canonicalAuthority,\r\n            uniqueId: uid,\r\n            tenantId: tid,\r\n            scopes: responseScopes,\r\n            account: accountInfo,\r\n            idToken: cacheRecord?.idToken?.secret || \"\",\r\n            idTokenClaims: idTokenClaims || {},\r\n            accessToken: accessToken,\r\n            fromCache: fromTokenCache,\r\n            expiresOn: expiresOn,\r\n            extExpiresOn: extExpiresOn,\r\n            refreshOn: refreshOn,\r\n            correlationId: request.correlationId,\r\n            requestId: requestId || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            familyId: familyId,\r\n            tokenType: cacheRecord.accessToken?.tokenType || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            state: requestState\r\n                ? requestState.userRequestState\r\n                : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            cloudGraphHostName: cacheRecord.account?.cloudGraphHostName ||\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            msGraphHost: cacheRecord.account?.msGraphHost || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_4__.Constants.EMPTY_STRING,\r\n            code: serverTokenResponse?.spa_code,\r\n            fromNativeBroker: false,\r\n        };\r\n    }\r\n}\r\nfunction buildAccountToCache(cacheStorage, authority, homeAccountId, base64Decode, idTokenClaims, clientInfo, environment, claimsTenantId, authCodePayload, nativeAccountId, logger) {\r\n    logger?.verbose(\"setCachedAccount called\");\r\n    // Check if base account is already cached\r\n    const accountKeys = cacheStorage.getAccountKeys();\r\n    const baseAccountKey = accountKeys.find((accountKey) => {\r\n        return accountKey.startsWith(homeAccountId);\r\n    });\r\n    let cachedAccount = null;\r\n    if (baseAccountKey) {\r\n        cachedAccount = cacheStorage.getAccount(baseAccountKey, logger);\r\n    }\r\n    const baseAccount = cachedAccount ||\r\n        _cache_entities_AccountEntity_mjs__WEBPACK_IMPORTED_MODULE_7__.AccountEntity.createAccount({\r\n            homeAccountId,\r\n            idTokenClaims,\r\n            clientInfo,\r\n            environment,\r\n            cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\r\n            msGraphHost: authCodePayload?.msgraph_host,\r\n            nativeAccountId: nativeAccountId,\r\n        }, authority, base64Decode);\r\n    const tenantProfiles = baseAccount.tenantProfiles || [];\r\n    const tenantId = claimsTenantId || baseAccount.realm;\r\n    if (tenantId &&\r\n        !tenantProfiles.find((tenantProfile) => {\r\n            return tenantProfile.tenantId === tenantId;\r\n        })) {\r\n        const newTenantProfile = (0,_account_AccountInfo_mjs__WEBPACK_IMPORTED_MODULE_14__.buildTenantProfile)(homeAccountId, baseAccount.localAccountId, tenantId, idTokenClaims);\r\n        tenantProfiles.push(newTenantProfile);\r\n    }\r\n    baseAccount.tenantProfiles = tenantProfiles;\r\n    return baseAccount;\r\n}\n\n\n//# sourceMappingURL=ResponseHandler.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IntFields: () => (/* binding */ IntFields),\n/* harmony export */   PerformanceEventAbbreviations: () => (/* binding */ PerformanceEventAbbreviations),\n/* harmony export */   PerformanceEventStatus: () => (/* binding */ PerformanceEventStatus),\n/* harmony export */   PerformanceEvents: () => (/* binding */ PerformanceEvents)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nconst PerformanceEvents = {\r\n    /**\r\n     * acquireTokenByCode API (msal-browser and msal-node).\r\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\r\n     */\r\n    AcquireTokenByCode: \"acquireTokenByCode\",\r\n    /**\r\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\r\n     * Used to renew an access token using a refresh token against the token endpoint.\r\n     */\r\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\r\n    /**\r\n     * acquireTokenSilent API (msal-browser and msal-node).\r\n     * Used to silently acquire a new access token (from the cache or the network).\r\n     */\r\n    AcquireTokenSilent: \"acquireTokenSilent\",\r\n    /**\r\n     * acquireTokenSilentAsync (msal-browser).\r\n     * Internal API for acquireTokenSilent.\r\n     */\r\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\r\n    /**\r\n     * acquireTokenPopup (msal-browser).\r\n     * Used to acquire a new access token interactively through pop ups\r\n     */\r\n    AcquireTokenPopup: \"acquireTokenPopup\",\r\n    /**\r\n     * acquireTokenPreRedirect (msal-browser).\r\n     * First part of the redirect flow.\r\n     * Used to acquire a new access token interactively through redirects.\r\n     */\r\n    AcquireTokenPreRedirect: \"acquireTokenPreRedirect\",\r\n    /**\r\n     * acquireTokenRedirect (msal-browser).\r\n     * Second part of the redirect flow.\r\n     * Used to acquire a new access token interactively through redirects.\r\n     */\r\n    AcquireTokenRedirect: \"acquireTokenRedirect\",\r\n    /**\r\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\r\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\r\n     */\r\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\r\n    /**\r\n     * signJwt API in CryptoOpts class (msal-browser).\r\n     * Used to signed a pop token.\r\n     */\r\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\r\n    /**\r\n     * acquireToken API in the SilentCacheClient class (msal-browser).\r\n     * Used to read access tokens from the cache.\r\n     */\r\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\r\n    /**\r\n     * acquireToken API in the SilentIframeClient class (msal-browser).\r\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\r\n     */\r\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\r\n    AwaitConcurrentIframe: \"awaitConcurrentIframe\",\r\n    /**\r\n     * acquireToken API in SilentRereshClient (msal-browser).\r\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\r\n     */\r\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\r\n    /**\r\n     * ssoSilent API (msal-browser).\r\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\r\n     */\r\n    SsoSilent: \"ssoSilent\",\r\n    /**\r\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\r\n     * Used to load authority metadata for a request.\r\n     */\r\n    StandardInteractionClientGetDiscoveredAuthority: \"standardInteractionClientGetDiscoveredAuthority\",\r\n    /**\r\n     * acquireToken APIs in msal-browser.\r\n     * Used to make an /authorize endpoint call with native brokering enabled.\r\n     */\r\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\r\n    /**\r\n     * acquireToken API in NativeInteractionClient class (msal-browser).\r\n     * Used to acquire a token from Native component when native brokering is enabled.\r\n     */\r\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\r\n    /**\r\n     * Time spent creating default headers for requests to token endpoint\r\n     */\r\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\r\n    /**\r\n     * Time spent sending/waiting for the response of a request to the token endpoint\r\n     */\r\n    RefreshTokenClientExecutePostToTokenEndpoint: \"refreshTokenClientExecutePostToTokenEndpoint\",\r\n    AuthorizationCodeClientExecutePostToTokenEndpoint: \"authorizationCodeClientExecutePostToTokenEndpoint\",\r\n    /**\r\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\r\n     */\r\n    BrokerHandhshake: \"brokerHandshake\",\r\n    /**\r\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\r\n     */\r\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\r\n    /**\r\n     * Time taken for token acquisition by broker\r\n     */\r\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\r\n    /**\r\n     * Time spent on the network for refresh token acquisition\r\n     */\r\n    RefreshTokenClientExecuteTokenRequest: \"refreshTokenClientExecuteTokenRequest\",\r\n    /**\r\n     * Time taken for acquiring refresh token , records RT size\r\n     */\r\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\r\n    /**\r\n     * Time taken for acquiring cached refresh token\r\n     */\r\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken: \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\r\n    /**\r\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\r\n     */\r\n    RefreshTokenClientAcquireTokenByRefreshToken: \"refreshTokenClientAcquireTokenByRefreshToken\",\r\n    /**\r\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\r\n     */\r\n    RefreshTokenClientCreateTokenRequestBody: \"refreshTokenClientCreateTokenRequestBody\",\r\n    /**\r\n     * acquireTokenFromCache (msal-browser).\r\n     * Internal API for acquiring token from cache\r\n     */\r\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\r\n    SilentFlowClientAcquireCachedToken: \"silentFlowClientAcquireCachedToken\",\r\n    SilentFlowClientGenerateResultFromCacheRecord: \"silentFlowClientGenerateResultFromCacheRecord\",\r\n    /**\r\n     * acquireTokenBySilentIframe (msal-browser).\r\n     * Internal API for acquiring token by silent Iframe\r\n     */\r\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\r\n    /**\r\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\r\n     */\r\n    InitializeBaseRequest: \"initializeBaseRequest\",\r\n    /**\r\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\r\n     */\r\n    InitializeSilentRequest: \"initializeSilentRequest\",\r\n    InitializeClientApplication: \"initializeClientApplication\",\r\n    /**\r\n     * Helper function in SilentIframeClient class (msal-browser).\r\n     */\r\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\r\n    /**\r\n     * SilentHandler\r\n     */\r\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\r\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\r\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\r\n    SilentHandlerLoadFrameSync: \"silentHandlerLoadFrameSync\",\r\n    /**\r\n     * Helper functions in StandardInteractionClient class (msal-browser)\r\n     */\r\n    StandardInteractionClientCreateAuthCodeClient: \"standardInteractionClientCreateAuthCodeClient\",\r\n    StandardInteractionClientGetClientConfiguration: \"standardInteractionClientGetClientConfiguration\",\r\n    StandardInteractionClientInitializeAuthorizationRequest: \"standardInteractionClientInitializeAuthorizationRequest\",\r\n    StandardInteractionClientInitializeAuthorizationCodeRequest: \"standardInteractionClientInitializeAuthorizationCodeRequest\",\r\n    /**\r\n     * getAuthCodeUrl API (msal-browser and msal-node).\r\n     */\r\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\r\n    /**\r\n     * Functions from InteractionHandler (msal-browser)\r\n     */\r\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\r\n    HandleCodeResponse: \"handleCodeResponse\",\r\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\r\n    /**\r\n     * APIs in Authorization Code Client (msal-common)\r\n     */\r\n    AuthClientAcquireToken: \"authClientAcquireToken\",\r\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\r\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\r\n    AuthClientCreateQueryString: \"authClientCreateQueryString\",\r\n    /**\r\n     * Generate functions in PopTokenGenerator (msal-common)\r\n     */\r\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\r\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\r\n    /**\r\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\r\n     */\r\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\r\n    DeserializeResponse: \"deserializeResponse\",\r\n    /**\r\n     * Authority functions\r\n     */\r\n    AuthorityFactoryCreateDiscoveredInstance: \"authorityFactoryCreateDiscoveredInstance\",\r\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\r\n    AuthorityResolveEndpointsFromLocalSources: \"authorityResolveEndpointsFromLocalSources\",\r\n    AuthorityGetCloudDiscoveryMetadataFromNetwork: \"authorityGetCloudDiscoveryMetadataFromNetwork\",\r\n    AuthorityUpdateCloudDiscoveryMetadata: \"authorityUpdateCloudDiscoveryMetadata\",\r\n    AuthorityGetEndpointMetadataFromNetwork: \"authorityGetEndpointMetadataFromNetwork\",\r\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\r\n    AuthorityUpdateMetadataWithRegionalInformation: \"authorityUpdateMetadataWithRegionalInformation\",\r\n    /**\r\n     * Region Discovery functions\r\n     */\r\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\r\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\r\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\r\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\r\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\r\n    GetCloudDiscoveryMetadataFromNetworkMeasurement: \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\r\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromise\",\r\n    HandleNativeRedirectPromiseMeasurement: \"handleNativeRedirectPromise\",\r\n    UpdateCloudDiscoveryMetadataMeasurement: \"updateCloudDiscoveryMetadataMeasurement\",\r\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\r\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\r\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\r\n    RemoveHiddenIframe: \"removeHiddenIframe\",\r\n    /**\r\n     * Cache operations\r\n     */\r\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\r\n    CacheManagerGetRefreshToken: \"cacheManagerGetRefreshToken\",\r\n    /**\r\n     * Crypto Operations\r\n     */\r\n    GeneratePkceCodes: \"generatePkceCodes\",\r\n    GenerateCodeVerifier: \"generateCodeVerifier\",\r\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\r\n    Sha256Digest: \"sha256Digest\",\r\n    GetRandomValues: \"getRandomValues\",\r\n};\r\nconst PerformanceEventAbbreviations = new Map([\r\n    [PerformanceEvents.AcquireTokenByCode, \"ATByCode\"],\r\n    [PerformanceEvents.AcquireTokenByRefreshToken, \"ATByRT\"],\r\n    [PerformanceEvents.AcquireTokenSilent, \"ATS\"],\r\n    [PerformanceEvents.AcquireTokenSilentAsync, \"ATSAsync\"],\r\n    [PerformanceEvents.AcquireTokenPopup, \"ATPopup\"],\r\n    [PerformanceEvents.AcquireTokenRedirect, \"ATRedirect\"],\r\n    [\r\n        PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\r\n        \"CryptoGetPKThumb\",\r\n    ],\r\n    [PerformanceEvents.CryptoOptsSignJwt, \"CryptoSignJwt\"],\r\n    [PerformanceEvents.SilentCacheClientAcquireToken, \"SltCacheClientAT\"],\r\n    [PerformanceEvents.SilentIframeClientAcquireToken, \"SltIframeClientAT\"],\r\n    [PerformanceEvents.SilentRefreshClientAcquireToken, \"SltRClientAT\"],\r\n    [PerformanceEvents.SsoSilent, \"SsoSlt\"],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\r\n        \"StdIntClientGetDiscAuth\",\r\n    ],\r\n    [\r\n        PerformanceEvents.FetchAccountIdWithNativeBroker,\r\n        \"FetchAccIdWithNtvBroker\",\r\n    ],\r\n    [\r\n        PerformanceEvents.NativeInteractionClientAcquireToken,\r\n        \"NtvIntClientAT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.BaseClientCreateTokenRequestHeaders,\r\n        \"BaseClientCreateTReqHead\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\r\n        \"RTClientExecPost\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\r\n        \"AuthCodeClientExecPost\",\r\n    ],\r\n    [PerformanceEvents.BrokerHandhshake, \"BrokerHandshake\"],\r\n    [\r\n        PerformanceEvents.AcquireTokenByRefreshTokenInBroker,\r\n        \"ATByRTInBroker\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenByBroker, \"ATByBroker\"],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\r\n        \"RTClientExecTReq\",\r\n    ],\r\n    [PerformanceEvents.RefreshTokenClientAcquireToken, \"RTClientAT\"],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\r\n        \"RTClientATWithCachedRT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\r\n        \"RTClientATByRT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\r\n        \"RTClientCreateTReqBody\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenFromCache, \"ATFromCache\"],\r\n    [\r\n        PerformanceEvents.SilentFlowClientAcquireCachedToken,\r\n        \"SltFlowClientATCached\",\r\n    ],\r\n    [\r\n        PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\r\n        \"SltFlowClientGenResFromCache\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenBySilentIframe, \"ATBySltIframe\"],\r\n    [PerformanceEvents.InitializeBaseRequest, \"InitBaseReq\"],\r\n    [PerformanceEvents.InitializeSilentRequest, \"InitSltReq\"],\r\n    [\r\n        PerformanceEvents.InitializeClientApplication,\r\n        \"InitClientApplication\",\r\n    ],\r\n    [PerformanceEvents.SilentIframeClientTokenHelper, \"SIClientTHelper\"],\r\n    [\r\n        PerformanceEvents.SilentHandlerInitiateAuthRequest,\r\n        \"SHandlerInitAuthReq\",\r\n    ],\r\n    [\r\n        PerformanceEvents.SilentHandlerMonitorIframeForHash,\r\n        \"SltHandlerMonitorIframeForHash\",\r\n    ],\r\n    [PerformanceEvents.SilentHandlerLoadFrame, \"SHandlerLoadFrame\"],\r\n    [PerformanceEvents.SilentHandlerLoadFrameSync, \"SHandlerLoadFrameSync\"],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n        \"StdIntClientCreateAuthCodeClient\",\r\n    ],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientGetClientConfiguration,\r\n        \"StdIntClientGetClientConf\",\r\n    ],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\r\n        \"StdIntClientInitAuthReq\",\r\n    ],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\r\n        \"StdIntClientInitAuthCodeReq\",\r\n    ],\r\n    [PerformanceEvents.GetAuthCodeUrl, \"GetAuthCodeUrl\"],\r\n    [\r\n        PerformanceEvents.HandleCodeResponseFromServer,\r\n        \"HandleCodeResFromServer\",\r\n    ],\r\n    [PerformanceEvents.HandleCodeResponse, \"HandleCodeResp\"],\r\n    [PerformanceEvents.UpdateTokenEndpointAuthority, \"UpdTEndpointAuth\"],\r\n    [PerformanceEvents.AuthClientAcquireToken, \"AuthClientAT\"],\r\n    [PerformanceEvents.AuthClientExecuteTokenRequest, \"AuthClientExecTReq\"],\r\n    [\r\n        PerformanceEvents.AuthClientCreateTokenRequestBody,\r\n        \"AuthClientCreateTReqBody\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthClientCreateQueryString,\r\n        \"AuthClientCreateQueryStr\",\r\n    ],\r\n    [PerformanceEvents.PopTokenGenerateCnf, \"PopTGenCnf\"],\r\n    [PerformanceEvents.PopTokenGenerateKid, \"PopTGenKid\"],\r\n    [PerformanceEvents.HandleServerTokenResponse, \"HandleServerTRes\"],\r\n    [PerformanceEvents.DeserializeResponse, \"DeserializeRes\"],\r\n    [\r\n        PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\r\n        \"AuthFactCreateDiscInst\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityResolveEndpointsAsync,\r\n        \"AuthResolveEndpointsAsync\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityResolveEndpointsFromLocalSources,\r\n        \"AuthResolveEndpointsFromLocal\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\r\n        \"AuthGetCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\r\n        \"AuthUpdCDMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\r\n        \"AuthUpdCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateEndpointMetadata,\r\n        \"AuthUpdEndpointMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\r\n        \"AuthUpdMetaWithRegInfo\",\r\n    ],\r\n    [PerformanceEvents.RegionDiscoveryDetectRegion, \"RegDiscDetectReg\"],\r\n    [\r\n        PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\r\n        \"RegDiscGetRegFromIMDS\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RegionDiscoveryGetCurrentVersion,\r\n        \"RegDiscGetCurrentVer\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenByCodeAsync, \"ATByCodeAsync\"],\r\n    [\r\n        PerformanceEvents.GetEndpointMetadataFromNetwork,\r\n        \"GetEndpointMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.GetCloudDiscoveryMetadataFromNetworkMeasurement,\r\n        \"GetCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.HandleRedirectPromiseMeasurement,\r\n        \"HandleRedirectPromise\",\r\n    ],\r\n    [\r\n        PerformanceEvents.HandleNativeRedirectPromiseMeasurement,\r\n        \"HandleNtvRedirectPromise\",\r\n    ],\r\n    [\r\n        PerformanceEvents.UpdateCloudDiscoveryMetadataMeasurement,\r\n        \"UpdateCDMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.UsernamePasswordClientAcquireToken,\r\n        \"UserPassClientAT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.NativeMessageHandlerHandshake,\r\n        \"NtvMsgHandlerHandshake\",\r\n    ],\r\n    [PerformanceEvents.NativeGenerateAuthResult, \"NtvGenAuthRes\"],\r\n    [PerformanceEvents.RemoveHiddenIframe, \"RemoveHiddenIframe\"],\r\n    [\r\n        PerformanceEvents.ClearTokensAndKeysWithClaims,\r\n        \"ClearTAndKeysWithClaims\",\r\n    ],\r\n    [PerformanceEvents.CacheManagerGetRefreshToken, \"CacheManagerGetRT\"],\r\n    [PerformanceEvents.GeneratePkceCodes, \"GenPkceCodes\"],\r\n    [PerformanceEvents.GenerateCodeVerifier, \"GenCodeVerifier\"],\r\n    [\r\n        PerformanceEvents.GenerateCodeChallengeFromVerifier,\r\n        \"GenCodeChallengeFromVerifier\",\r\n    ],\r\n    [PerformanceEvents.Sha256Digest, \"Sha256Digest\"],\r\n    [PerformanceEvents.GetRandomValues, \"GetRandomValues\"],\r\n]);\r\n/**\r\n * State of the performance event.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nconst PerformanceEventStatus = {\r\n    NotStarted: 0,\r\n    InProgress: 1,\r\n    Completed: 2,\r\n};\r\nconst IntFields = new Set([\r\n    \"accessTokenSize\",\r\n    \"durationMs\",\r\n    \"idTokenSize\",\r\n    \"matsSilentStatus\",\r\n    \"matsHttpStatus\",\r\n    \"refreshTokenSize\",\r\n    \"queuedTimeMs\",\r\n    \"startTimeMs\",\r\n    \"status\",\r\n    \"multiMatchedAT\",\r\n    \"multiMatchedID\",\r\n    \"multiMatchedRT\",\r\n]);\n\n\n//# sourceMappingURL=PerformanceEvent.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StubPerformanceClient: () => (/* binding */ StubPerformanceClient),\n/* harmony export */   StubPerformanceMeasurement: () => (/* binding */ StubPerformanceMeasurement)\n/* harmony export */ });\n/* harmony import */ var _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./PerformanceEvent.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass StubPerformanceMeasurement {\r\n    startMeasurement() {\r\n        return;\r\n    }\r\n    endMeasurement() {\r\n        return;\r\n    }\r\n    flushMeasurement() {\r\n        return null;\r\n    }\r\n}\r\nclass StubPerformanceClient {\r\n    generateId() {\r\n        return \"callback-id\";\r\n    }\r\n    startMeasurement(measureName, correlationId) {\r\n        return {\r\n            end: () => null,\r\n            discard: () => { },\r\n            add: () => { },\r\n            increment: () => { },\r\n            event: {\r\n                eventId: this.generateId(),\r\n                status: _PerformanceEvent_mjs__WEBPACK_IMPORTED_MODULE_0__.PerformanceEventStatus.InProgress,\r\n                authority: \"\",\r\n                libraryName: \"\",\r\n                libraryVersion: \"\",\r\n                clientId: \"\",\r\n                name: measureName,\r\n                startTimeMs: Date.now(),\r\n                correlationId: correlationId || \"\",\r\n            },\r\n            measurement: new StubPerformanceMeasurement(),\r\n        };\r\n    }\r\n    startPerformanceMeasurement() {\r\n        return new StubPerformanceMeasurement();\r\n    }\r\n    calculateQueuedTime() {\r\n        return 0;\r\n    }\r\n    addQueueMeasurement() {\r\n        return;\r\n    }\r\n    setPreQueueTime() {\r\n        return;\r\n    }\r\n    endMeasurement() {\r\n        return null;\r\n    }\r\n    discardMeasurements() {\r\n        return;\r\n    }\r\n    removePerformanceCallback() {\r\n        return true;\r\n    }\r\n    addPerformanceCallback() {\r\n        return \"\";\r\n    }\r\n    emitEvents() {\r\n        return;\r\n    }\r\n    addFields() {\r\n        return;\r\n    }\r\n    incrementFields() {\r\n        return;\r\n    }\r\n    cacheEventByCorrelationId() {\r\n        return;\r\n    }\r\n}\n\n\n//# sourceMappingURL=StubPerformanceClient.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdGVsZW1ldHJ5L3BlcmZvcm1hbmNlL1N0dWJQZXJmb3JtYW5jZUNsaWVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDYTtBQUNtRDs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsMEJBQTBCO0FBQzFCLGdDQUFnQztBQUNoQztBQUNBO0FBQ0Esd0JBQXdCLHlFQUFzQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNkQ7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3RlbGVtZXRyeS9wZXJmb3JtYW5jZS9TdHViUGVyZm9ybWFuY2VDbGllbnQubWpzPzkwYTYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBQZXJmb3JtYW5jZUV2ZW50U3RhdHVzIH0gZnJvbSAnLi9QZXJmb3JtYW5jZUV2ZW50Lm1qcyc7XG5cbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5jbGFzcyBTdHViUGVyZm9ybWFuY2VNZWFzdXJlbWVudCB7XHJcbiAgICBzdGFydE1lYXN1cmVtZW50KCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGVuZE1lYXN1cmVtZW50KCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGZsdXNoTWVhc3VyZW1lbnQoKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbn1cclxuY2xhc3MgU3R1YlBlcmZvcm1hbmNlQ2xpZW50IHtcclxuICAgIGdlbmVyYXRlSWQoKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiY2FsbGJhY2staWRcIjtcclxuICAgIH1cclxuICAgIHN0YXJ0TWVhc3VyZW1lbnQobWVhc3VyZU5hbWUsIGNvcnJlbGF0aW9uSWQpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBlbmQ6ICgpID0+IG51bGwsXHJcbiAgICAgICAgICAgIGRpc2NhcmQ6ICgpID0+IHsgfSxcclxuICAgICAgICAgICAgYWRkOiAoKSA9PiB7IH0sXHJcbiAgICAgICAgICAgIGluY3JlbWVudDogKCkgPT4geyB9LFxyXG4gICAgICAgICAgICBldmVudDoge1xyXG4gICAgICAgICAgICAgICAgZXZlbnRJZDogdGhpcy5nZW5lcmF0ZUlkKCksXHJcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFBlcmZvcm1hbmNlRXZlbnRTdGF0dXMuSW5Qcm9ncmVzcyxcclxuICAgICAgICAgICAgICAgIGF1dGhvcml0eTogXCJcIixcclxuICAgICAgICAgICAgICAgIGxpYnJhcnlOYW1lOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgbGlicmFyeVZlcnNpb246IFwiXCIsXHJcbiAgICAgICAgICAgICAgICBjbGllbnRJZDogXCJcIixcclxuICAgICAgICAgICAgICAgIG5hbWU6IG1lYXN1cmVOYW1lLFxyXG4gICAgICAgICAgICAgICAgc3RhcnRUaW1lTXM6IERhdGUubm93KCksXHJcbiAgICAgICAgICAgICAgICBjb3JyZWxhdGlvbklkOiBjb3JyZWxhdGlvbklkIHx8IFwiXCIsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG1lYXN1cmVtZW50OiBuZXcgU3R1YlBlcmZvcm1hbmNlTWVhc3VyZW1lbnQoKSxcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG4gICAgc3RhcnRQZXJmb3JtYW5jZU1lYXN1cmVtZW50KCkge1xyXG4gICAgICAgIHJldHVybiBuZXcgU3R1YlBlcmZvcm1hbmNlTWVhc3VyZW1lbnQoKTtcclxuICAgIH1cclxuICAgIGNhbGN1bGF0ZVF1ZXVlZFRpbWUoKSB7XHJcbiAgICAgICAgcmV0dXJuIDA7XHJcbiAgICB9XHJcbiAgICBhZGRRdWV1ZU1lYXN1cmVtZW50KCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHNldFByZVF1ZXVlVGltZSgpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBlbmRNZWFzdXJlbWVudCgpIHtcclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIGRpc2NhcmRNZWFzdXJlbWVudHMoKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgcmVtb3ZlUGVyZm9ybWFuY2VDYWxsYmFjaygpIHtcclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIGFkZFBlcmZvcm1hbmNlQ2FsbGJhY2soKSB7XHJcbiAgICAgICAgcmV0dXJuIFwiXCI7XHJcbiAgICB9XHJcbiAgICBlbWl0RXZlbnRzKCkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGFkZEZpZWxkcygpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpbmNyZW1lbnRGaWVsZHMoKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY2FjaGVFdmVudEJ5Q29ycmVsYXRpb25JZCgpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgU3R1YlBlcmZvcm1hbmNlQ2xpZW50LCBTdHViUGVyZm9ybWFuY2VNZWFzdXJlbWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U3R1YlBlcmZvcm1hbmNlQ2xpZW50Lm1qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs":
/*!******************************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerTelemetryManager: () => (/* binding */ ServerTelemetryManager)\n/* harmony export */ });\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../error/AuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/AuthError.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst skuGroupSeparator = \",\";\r\nconst skuValueSeparator = \"|\";\r\nfunction makeExtraSkuString(params) {\r\n    const { skus, libraryName, libraryVersion, extensionName, extensionVersion, } = params;\r\n    const skuMap = new Map([\r\n        [0, [libraryName, libraryVersion]],\r\n        [2, [extensionName, extensionVersion]],\r\n    ]);\r\n    let skuArr = [];\r\n    if (skus?.length) {\r\n        skuArr = skus.split(skuGroupSeparator);\r\n        // Ignore invalid input sku param\r\n        if (skuArr.length < 4) {\r\n            return skus;\r\n        }\r\n    }\r\n    else {\r\n        skuArr = Array.from({ length: 4 }, () => skuValueSeparator);\r\n    }\r\n    skuMap.forEach((value, key) => {\r\n        if (value.length === 2 && value[0]?.length && value[1]?.length) {\r\n            setSku({\r\n                skuArr,\r\n                index: key,\r\n                skuName: value[0],\r\n                skuVersion: value[1],\r\n            });\r\n        }\r\n    });\r\n    return skuArr.join(skuGroupSeparator);\r\n}\r\nfunction setSku(params) {\r\n    const { skuArr, index, skuName, skuVersion } = params;\r\n    if (index >= skuArr.length) {\r\n        return;\r\n    }\r\n    skuArr[index] = [skuName, skuVersion].join(skuValueSeparator);\r\n}\r\n/** @internal */\r\nclass ServerTelemetryManager {\r\n    constructor(telemetryRequest, cacheManager) {\r\n        this.cacheOutcome = _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.CacheOutcome.NOT_APPLICABLE;\r\n        this.cacheManager = cacheManager;\r\n        this.apiId = telemetryRequest.apiId;\r\n        this.correlationId = telemetryRequest.correlationId;\r\n        this.wrapperSKU = telemetryRequest.wrapperSKU || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n        this.wrapperVer = telemetryRequest.wrapperVer || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n        this.telemetryCacheKey =\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CACHE_KEY +\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Separators.CACHE_KEY_SEPARATOR +\r\n                telemetryRequest.clientId;\r\n    }\r\n    /**\r\n     * API to add MSER Telemetry to request\r\n     */\r\n    generateCurrentRequestHeaderValue() {\r\n        const request = `${this.apiId}${_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\r\n        const platformFieldsArr = [this.wrapperSKU, this.wrapperVer];\r\n        const nativeBrokerErrorCode = this.getNativeBrokerErrorCode();\r\n        if (nativeBrokerErrorCode?.length) {\r\n            platformFieldsArr.push(`broker_error=${nativeBrokerErrorCode}`);\r\n        }\r\n        const platformFields = platformFieldsArr.join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\r\n        const requestWithRegionDiscoveryFields = [\r\n            request,\r\n            regionDiscoveryFields,\r\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        return [\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\r\n            requestWithRegionDiscoveryFields,\r\n            platformFields,\r\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    }\r\n    /**\r\n     * API to add MSER Telemetry for the last failed request\r\n     */\r\n    generateLastRequestHeaderValue() {\r\n        const lastRequests = this.getLastRequests();\r\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        const failedRequests = lastRequests.failedRequests\r\n            .slice(0, 2 * maxErrors)\r\n            .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const errors = lastRequests.errors\r\n            .slice(0, maxErrors)\r\n            .join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const errorCount = lastRequests.errors.length;\r\n        // Indicate whether this header contains all data or partial data\r\n        const overflow = maxErrors < errorCount\r\n            ? _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\r\n            : _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\r\n        const platformFields = [errorCount, overflow].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        return [\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\r\n            lastRequests.cacheHits,\r\n            failedRequests,\r\n            errors,\r\n            platformFields,\r\n        ].join(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    }\r\n    /**\r\n     * API to cache token failures for MSER data capture\r\n     * @param error\r\n     */\r\n    cacheFailedRequest(error) {\r\n        const lastRequests = this.getLastRequests();\r\n        if (lastRequests.errors.length >=\r\n            _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\r\n            // Remove a cached error to make room, first in first out\r\n            lastRequests.failedRequests.shift(); // apiId\r\n            lastRequests.failedRequests.shift(); // correlationId\r\n            lastRequests.errors.shift();\r\n        }\r\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\r\n        if (error instanceof Error && !!error && error.toString()) {\r\n            if (error instanceof _error_AuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.AuthError) {\r\n                if (error.subError) {\r\n                    lastRequests.errors.push(error.subError);\r\n                }\r\n                else if (error.errorCode) {\r\n                    lastRequests.errors.push(error.errorCode);\r\n                }\r\n                else {\r\n                    lastRequests.errors.push(error.toString());\r\n                }\r\n            }\r\n            else {\r\n                lastRequests.errors.push(error.toString());\r\n            }\r\n        }\r\n        else {\r\n            lastRequests.errors.push(_utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\r\n        }\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n        return;\r\n    }\r\n    /**\r\n     * Update server telemetry cache entry by incrementing cache hit counter\r\n     */\r\n    incrementCacheHits() {\r\n        const lastRequests = this.getLastRequests();\r\n        lastRequests.cacheHits += 1;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n        return lastRequests.cacheHits;\r\n    }\r\n    /**\r\n     * Get the server telemetry entity from cache or initialize a new one\r\n     */\r\n    getLastRequests() {\r\n        const initialValue = {\r\n            failedRequests: [],\r\n            errors: [],\r\n            cacheHits: 0,\r\n        };\r\n        const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey);\r\n        return lastRequests || initialValue;\r\n    }\r\n    /**\r\n     * Remove server telemetry cache entry\r\n     */\r\n    clearTelemetryCache() {\r\n        const lastRequests = this.getLastRequests();\r\n        const numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        const errorCount = lastRequests.errors.length;\r\n        if (numErrorsFlushed === errorCount) {\r\n            // All errors were sent on last request, clear Telemetry cache\r\n            this.cacheManager.removeItem(this.telemetryCacheKey);\r\n        }\r\n        else {\r\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\r\n            const serverTelemEntity = {\r\n                failedRequests: lastRequests.failedRequests.slice(numErrorsFlushed * 2),\r\n                errors: lastRequests.errors.slice(numErrorsFlushed),\r\n                cacheHits: 0,\r\n            };\r\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\r\n     * @param serverTelemetryEntity\r\n     */\r\n    static maxErrorsToSend(serverTelemetryEntity) {\r\n        let i;\r\n        let maxErrors = 0;\r\n        let dataSize = 0;\r\n        const errorCount = serverTelemetryEntity.errors.length;\r\n        for (i = 0; i < errorCount; i++) {\r\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\r\n            const apiId = serverTelemetryEntity.failedRequests[2 * i] ||\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n            const correlationId = serverTelemetryEntity.failedRequests[2 * i + 1] ||\r\n                _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n            const errorCode = serverTelemetryEntity.errors[i] || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\r\n            dataSize +=\r\n                apiId.toString().length +\r\n                    correlationId.toString().length +\r\n                    errorCode.length +\r\n                    3;\r\n            if (dataSize < _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\r\n                // Adding this entry to the header would still keep header size below the limit\r\n                maxErrors += 1;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return maxErrors;\r\n    }\r\n    /**\r\n     * Get the region discovery fields\r\n     *\r\n     * @returns string\r\n     */\r\n    getRegionDiscoveryFields() {\r\n        const regionDiscoveryFields = [];\r\n        regionDiscoveryFields.push(this.regionUsed || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\r\n        regionDiscoveryFields.push(this.regionSource || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\r\n        regionDiscoveryFields.push(this.regionOutcome || _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING);\r\n        return regionDiscoveryFields.join(\",\");\r\n    }\r\n    /**\r\n     * Update the region discovery metadata\r\n     *\r\n     * @param regionDiscoveryMetadata\r\n     * @returns void\r\n     */\r\n    updateRegionDiscoveryMetadata(regionDiscoveryMetadata) {\r\n        this.regionUsed = regionDiscoveryMetadata.region_used;\r\n        this.regionSource = regionDiscoveryMetadata.region_source;\r\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\r\n    }\r\n    /**\r\n     * Set cache outcome\r\n     */\r\n    setCacheOutcome(cacheOutcome) {\r\n        this.cacheOutcome = cacheOutcome;\r\n    }\r\n    setNativeBrokerErrorCode(errorCode) {\r\n        const lastRequests = this.getLastRequests();\r\n        lastRequests.nativeBrokerErrorCode = errorCode;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n    }\r\n    getNativeBrokerErrorCode() {\r\n        return this.getLastRequests().nativeBrokerErrorCode;\r\n    }\r\n    clearNativeBrokerErrorCode() {\r\n        const lastRequests = this.getLastRequests();\r\n        delete lastRequests.nativeBrokerErrorCode;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n    }\r\n    static makeExtraSkuString(params) {\r\n        return makeExtraSkuString(params);\r\n    }\r\n}\n\n\n//# sourceMappingURL=ServerTelemetryManager.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/url/UrlString.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UrlString: () => (/* binding */ UrlString)\n/* harmony export */ });\n/* harmony import */ var _error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientConfigurationError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs\");\n/* harmony import */ var _utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/StringUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\");\n/* harmony import */ var _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _utils_UrlUtils_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/UrlUtils.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs\");\n/* harmony import */ var _error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientConfigurationErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nclass UrlString {\r\n    get urlString() {\r\n        return this._urlString;\r\n    }\r\n    constructor(url) {\r\n        this._urlString = url;\r\n        if (!this._urlString) {\r\n            // Throws error if url is empty\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlEmptyError);\r\n        }\r\n        if (!url.includes(\"#\")) {\r\n            this._urlString = UrlString.canonicalizeUri(url);\r\n        }\r\n    }\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    static canonicalizeUri(url) {\r\n        if (url) {\r\n            let lowerCaseUrl = url.toLowerCase();\r\n            if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringUtils.endsWith(lowerCaseUrl, \"?\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\r\n            }\r\n            else if (_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\r\n            }\r\n            if (!_utils_StringUtils_mjs__WEBPACK_IMPORTED_MODULE_2__.StringUtils.endsWith(lowerCaseUrl, \"/\")) {\r\n                lowerCaseUrl += \"/\";\r\n            }\r\n            return lowerCaseUrl;\r\n        }\r\n        return url;\r\n    }\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    validateAsUri() {\r\n        // Attempts to parse url for uri components\r\n        let components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol ||\r\n            components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.authorityUriInsecure);\r\n        }\r\n    }\r\n    /**\r\n     * Given a url and a query string return the url with provided query string appended\r\n     * @param url\r\n     * @param queryString\r\n     */\r\n    static appendQueryString(url, queryString) {\r\n        if (!queryString) {\r\n            return url;\r\n        }\r\n        return url.indexOf(\"?\") < 0\r\n            ? `${url}?${queryString}`\r\n            : `${url}&${queryString}`;\r\n    }\r\n    /**\r\n     * Returns a url with the hash removed\r\n     * @param url\r\n     */\r\n    static removeHashFromUrl(url) {\r\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\r\n    }\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    replaceTenantPath(tenantId) {\r\n        const urlObject = this.getUrlComponents();\r\n        const pathArray = urlObject.PathSegments;\r\n        if (tenantId &&\r\n            pathArray.length !== 0 &&\r\n            (pathArray[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.AADAuthorityConstants.COMMON ||\r\n                pathArray[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.AADAuthorityConstants.ORGANIZATIONS)) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    }\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    getUrlComponents() {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        const match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\r\n        }\r\n        // Url component object\r\n        const urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5],\r\n            QueryString: match[7],\r\n        };\r\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        if (urlComponents.QueryString &&\r\n            urlComponents.QueryString.endsWith(\"/\")) {\r\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length - 1);\r\n        }\r\n        return urlComponents;\r\n    }\r\n    static getDomainFromUrl(url) {\r\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\r\n        const match = url.match(regEx);\r\n        if (!match) {\r\n            throw (0,_error_ClientConfigurationError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientConfigurationError)(_error_ClientConfigurationErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.urlParseError);\r\n        }\r\n        return match[2];\r\n    }\r\n    static getAbsoluteUrl(relativeUrl, baseUrl) {\r\n        if (relativeUrl[0] === _utils_Constants_mjs__WEBPACK_IMPORTED_MODULE_3__.Constants.FORWARD_SLASH) {\r\n            const url = new UrlString(baseUrl);\r\n            const baseComponents = url.getUrlComponents();\r\n            return (baseComponents.Protocol +\r\n                \"//\" +\r\n                baseComponents.HostNameAndPort +\r\n                relativeUrl);\r\n        }\r\n        return relativeUrl;\r\n    }\r\n    static constructAuthorityUriFromObject(urlObject) {\r\n        return new UrlString(urlObject.Protocol +\r\n            \"//\" +\r\n            urlObject.HostNameAndPort +\r\n            \"/\" +\r\n            urlObject.PathSegments.join(\"/\"));\r\n    }\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     * @deprecated This API will be removed in a future version\r\n     */\r\n    static hashContainsKnownProperties(response) {\r\n        return !!(0,_utils_UrlUtils_mjs__WEBPACK_IMPORTED_MODULE_4__.getDeserializedResponse)(response);\r\n    }\r\n}\n\n\n//# sourceMappingURL=UrlString.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/url/UrlString.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getClientAssertion: () => (/* binding */ getClientAssertion)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nasync function getClientAssertion(clientAssertion, clientId, tokenEndpoint) {\r\n    if (typeof clientAssertion === \"string\") {\r\n        return clientAssertion;\r\n    }\r\n    else {\r\n        const config = {\r\n            clientId: clientId,\r\n            tokenEndpoint: tokenEndpoint,\r\n        };\r\n        return clientAssertion(config);\r\n    }\r\n}\n\n\n//# sourceMappingURL=ClientAssertionUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvQ2xpZW50QXNzZXJ0aW9uVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC91dGlscy9DbGllbnRBc3NlcnRpb25VdGlscy5tanM/NDdlZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0Jztcbi8qXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXHJcbiAqL1xyXG5hc3luYyBmdW5jdGlvbiBnZXRDbGllbnRBc3NlcnRpb24oY2xpZW50QXNzZXJ0aW9uLCBjbGllbnRJZCwgdG9rZW5FbmRwb2ludCkge1xyXG4gICAgaWYgKHR5cGVvZiBjbGllbnRBc3NlcnRpb24gPT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICByZXR1cm4gY2xpZW50QXNzZXJ0aW9uO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgY29uc3QgY29uZmlnID0ge1xyXG4gICAgICAgICAgICBjbGllbnRJZDogY2xpZW50SWQsXHJcbiAgICAgICAgICAgIHRva2VuRW5kcG9pbnQ6IHRva2VuRW5kcG9pbnQsXHJcbiAgICAgICAgfTtcclxuICAgICAgICByZXR1cm4gY2xpZW50QXNzZXJ0aW9uKGNvbmZpZyk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgZ2V0Q2xpZW50QXNzZXJ0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1DbGllbnRBc3NlcnRpb25VdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/Constants.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AADAuthorityConstants: () => (/* binding */ AADAuthorityConstants),\n/* harmony export */   APP_METADATA: () => (/* binding */ APP_METADATA),\n/* harmony export */   AUTHORITY_METADATA_CONSTANTS: () => (/* binding */ AUTHORITY_METADATA_CONSTANTS),\n/* harmony export */   AuthenticationScheme: () => (/* binding */ AuthenticationScheme),\n/* harmony export */   AuthorityMetadataSource: () => (/* binding */ AuthorityMetadataSource),\n/* harmony export */   CLIENT_INFO: () => (/* binding */ CLIENT_INFO),\n/* harmony export */   CacheAccountType: () => (/* binding */ CacheAccountType),\n/* harmony export */   CacheOutcome: () => (/* binding */ CacheOutcome),\n/* harmony export */   CacheType: () => (/* binding */ CacheType),\n/* harmony export */   ClaimsRequestKeys: () => (/* binding */ ClaimsRequestKeys),\n/* harmony export */   CodeChallengeMethodValues: () => (/* binding */ CodeChallengeMethodValues),\n/* harmony export */   Constants: () => (/* binding */ Constants),\n/* harmony export */   CredentialType: () => (/* binding */ CredentialType),\n/* harmony export */   DEFAULT_TOKEN_RENEWAL_OFFSET_SEC: () => (/* binding */ DEFAULT_TOKEN_RENEWAL_OFFSET_SEC),\n/* harmony export */   Errors: () => (/* binding */ Errors),\n/* harmony export */   GrantType: () => (/* binding */ GrantType),\n/* harmony export */   HeaderNames: () => (/* binding */ HeaderNames),\n/* harmony export */   HttpStatus: () => (/* binding */ HttpStatus),\n/* harmony export */   JsonWebTokenTypes: () => (/* binding */ JsonWebTokenTypes),\n/* harmony export */   OIDC_DEFAULT_SCOPES: () => (/* binding */ OIDC_DEFAULT_SCOPES),\n/* harmony export */   OIDC_SCOPES: () => (/* binding */ OIDC_SCOPES),\n/* harmony export */   ONE_DAY_IN_MS: () => (/* binding */ ONE_DAY_IN_MS),\n/* harmony export */   PasswordGrantConstants: () => (/* binding */ PasswordGrantConstants),\n/* harmony export */   PersistentCacheKeys: () => (/* binding */ PersistentCacheKeys),\n/* harmony export */   PromptValue: () => (/* binding */ PromptValue),\n/* harmony export */   RegionDiscoveryOutcomes: () => (/* binding */ RegionDiscoveryOutcomes),\n/* harmony export */   RegionDiscoverySources: () => (/* binding */ RegionDiscoverySources),\n/* harmony export */   ResponseCodes: () => (/* binding */ ResponseCodes),\n/* harmony export */   ResponseMode: () => (/* binding */ ResponseMode),\n/* harmony export */   SERVER_TELEM_CONSTANTS: () => (/* binding */ SERVER_TELEM_CONSTANTS),\n/* harmony export */   Separators: () => (/* binding */ Separators),\n/* harmony export */   ServerResponseType: () => (/* binding */ ServerResponseType),\n/* harmony export */   THE_FAMILY_ID: () => (/* binding */ THE_FAMILY_ID),\n/* harmony export */   ThrottlingConstants: () => (/* binding */ ThrottlingConstants)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    DEFAULT_COMMON_TENANT: \"common\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    DSTS: \"dstsv2\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // CIAM URL\r\n    CIAM_AUTH_URL: \".ciamlogin.com\",\r\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    EMAIL_SCOPE: \"email\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\",\r\n    EMPTY_STRING: \"\",\r\n    NOT_APPLICABLE: \"N/A\",\r\n    NOT_AVAILABLE: \"Not Available\",\r\n    FORWARD_SLASH: \"/\",\r\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\r\n    IMDS_VERSION: \"2020-06-01\",\r\n    IMDS_TIMEOUT: 2000,\r\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\r\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\r\n    KNOWN_PUBLIC_CLOUDS: [\r\n        \"login.microsoftonline.com\",\r\n        \"login.windows.net\",\r\n        \"login.microsoft.com\",\r\n        \"sts.windows.net\",\r\n    ],\r\n    TOKEN_RESPONSE_TYPE: \"token\",\r\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\r\n    SHR_NONCE_VALIDITY: 240,\r\n    INVALID_INSTANCE: \"invalid_instance\",\r\n};\r\nconst HttpStatus = {\r\n    SUCCESS: 200,\r\n    SUCCESS_RANGE_START: 200,\r\n    SUCCESS_RANGE_END: 299,\r\n    REDIRECT: 302,\r\n    CLIENT_ERROR: 400,\r\n    CLIENT_ERROR_RANGE_START: 400,\r\n    BAD_REQUEST: 400,\r\n    UNAUTHORIZED: 401,\r\n    NOT_FOUND: 404,\r\n    REQUEST_TIMEOUT: 408,\r\n    TOO_MANY_REQUESTS: 429,\r\n    CLIENT_ERROR_RANGE_END: 499,\r\n    SERVER_ERROR: 500,\r\n    SERVER_ERROR_RANGE_START: 500,\r\n    SERVICE_UNAVAILABLE: 503,\r\n    GATEWAY_TIMEOUT: 504,\r\n    SERVER_ERROR_RANGE_END: 599,\r\n    MULTI_SIDED_ERROR: 600,\r\n};\r\nconst OIDC_DEFAULT_SCOPES = [\r\n    Constants.OPENID_SCOPE,\r\n    Constants.PROFILE_SCOPE,\r\n    Constants.OFFLINE_ACCESS_SCOPE,\r\n];\r\nconst OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\r\n/**\r\n * Request header names\r\n */\r\nconst HeaderNames = {\r\n    CONTENT_TYPE: \"Content-Type\",\r\n    RETRY_AFTER: \"Retry-After\",\r\n    CCS_HEADER: \"X-AnchorMailbox\",\r\n    WWWAuthenticate: \"WWW-Authenticate\",\r\n    AuthenticationInfo: \"Authentication-Info\",\r\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\r\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\r\n};\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nconst PersistentCacheKeys = {\r\n    ID_TOKEN: \"idtoken\",\r\n    CLIENT_INFO: \"client.info\",\r\n    ADAL_ID_TOKEN: \"adal.idtoken\",\r\n    ERROR: \"error\",\r\n    ERROR_DESC: \"error.description\",\r\n    ACTIVE_ACCOUNT: \"active-account\",\r\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\r\n};\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nconst AADAuthorityConstants = {\r\n    COMMON: \"common\",\r\n    ORGANIZATIONS: \"organizations\",\r\n    CONSUMERS: \"consumers\",\r\n};\r\n/**\r\n * Claims request keys\r\n */\r\nconst ClaimsRequestKeys = {\r\n    ACCESS_TOKEN: \"access_token\",\r\n    XMS_CC: \"xms_cc\",\r\n};\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nconst PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n    CREATE: \"create\",\r\n    NO_SESSION: \"no_session\",\r\n};\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nconst CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\",\r\n};\r\n/**\r\n * allowed values for server response type\r\n */\r\nconst ServerResponseType = {\r\n    QUERY: \"query\",\r\n    FRAGMENT: \"fragment\",\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nconst ResponseMode = {\r\n    ...ServerResponseType,\r\n    FORM_POST: \"form_post\",\r\n};\r\n/**\r\n * allowed grant_type\r\n */\r\nconst GrantType = {\r\n    IMPLICIT_GRANT: \"implicit\",\r\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\r\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\r\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\r\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\r\n    DEVICE_CODE_GRANT: \"device_code\",\r\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\r\n};\r\n/**\r\n * Account types in Cache\r\n */\r\nconst CacheAccountType = {\r\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\r\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\r\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\r\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\r\n};\r\n/**\r\n * Separators used in cache\r\n */\r\nconst Separators = {\r\n    CACHE_KEY_SEPARATOR: \"-\",\r\n    CLIENT_INFO_SEPARATOR: \".\",\r\n};\r\n/**\r\n * Credential Type stored in the cache\r\n */\r\nconst CredentialType = {\r\n    ID_TOKEN: \"IdToken\",\r\n    ACCESS_TOKEN: \"AccessToken\",\r\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\r\n    REFRESH_TOKEN: \"RefreshToken\",\r\n};\r\n/**\r\n * Combine all cache types\r\n */\r\nconst CacheType = {\r\n    ADFS: 1001,\r\n    MSA: 1002,\r\n    MSSTS: 1003,\r\n    GENERIC: 1004,\r\n    ACCESS_TOKEN: 2001,\r\n    REFRESH_TOKEN: 2002,\r\n    ID_TOKEN: 2003,\r\n    APP_METADATA: 3001,\r\n    UNDEFINED: 9999,\r\n};\r\n/**\r\n * More Cache related constants\r\n */\r\nconst APP_METADATA = \"appmetadata\";\r\nconst CLIENT_INFO = \"client_info\";\r\nconst THE_FAMILY_ID = \"1\";\r\nconst AUTHORITY_METADATA_CONSTANTS = {\r\n    CACHE_KEY: \"authority-metadata\",\r\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\r\n};\r\nconst AuthorityMetadataSource = {\r\n    CONFIG: \"config\",\r\n    CACHE: \"cache\",\r\n    NETWORK: \"network\",\r\n    HARDCODED_VALUES: \"hardcoded_values\",\r\n};\r\nconst SERVER_TELEM_CONSTANTS = {\r\n    SCHEMA_VERSION: 5,\r\n    MAX_CUR_HEADER_BYTES: 80,\r\n    MAX_LAST_HEADER_BYTES: 330,\r\n    MAX_CACHED_ERRORS: 50,\r\n    CACHE_KEY: \"server-telemetry\",\r\n    CATEGORY_SEPARATOR: \"|\",\r\n    VALUE_SEPARATOR: \",\",\r\n    OVERFLOW_TRUE: \"1\",\r\n    OVERFLOW_FALSE: \"0\",\r\n    UNKNOWN_ERROR: \"unknown_error\",\r\n};\r\n/**\r\n * Type of the authentication request\r\n */\r\nconst AuthenticationScheme = {\r\n    BEARER: \"Bearer\",\r\n    POP: \"pop\",\r\n    SSH: \"ssh-cert\",\r\n};\r\n/**\r\n * Constants related to throttling\r\n */\r\nconst ThrottlingConstants = {\r\n    // Default time to throttle RequestThumbprint in seconds\r\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\r\n    // Default maximum time to throttle in seconds, overrides what the server sends back\r\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\r\n    // Prefix for storing throttling entries\r\n    THROTTLING_PREFIX: \"throttling\",\r\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\r\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\r\n};\r\nconst Errors = {\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\r\n};\r\n/**\r\n * Password grant parameters\r\n */\r\nconst PasswordGrantConstants = {\r\n    username: \"username\",\r\n    password: \"password\",\r\n};\r\n/**\r\n * Response codes\r\n */\r\nconst ResponseCodes = {\r\n    httpSuccess: 200,\r\n    httpBadRequest: 400,\r\n};\r\n/**\r\n * Region Discovery Sources\r\n */\r\nconst RegionDiscoverySources = {\r\n    FAILED_AUTO_DETECTION: \"1\",\r\n    INTERNAL_CACHE: \"2\",\r\n    ENVIRONMENT_VARIABLE: \"3\",\r\n    IMDS: \"4\",\r\n};\r\n/**\r\n * Region Discovery Outcomes\r\n */\r\nconst RegionDiscoveryOutcomes = {\r\n    CONFIGURED_MATCHES_DETECTED: \"1\",\r\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\r\n    CONFIGURED_NOT_DETECTED: \"3\",\r\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\r\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\r\n};\r\n/**\r\n * Specifies the reason for fetching the access token from the identity provider\r\n */\r\nconst CacheOutcome = {\r\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\r\n    NOT_APPLICABLE: \"0\",\r\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\r\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\r\n    // When the token request goes to the identity provider because no cached access token exists\r\n    NO_CACHED_ACCESS_TOKEN: \"2\",\r\n    // When the token request goes to the identity provider because cached access token expired\r\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\r\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\r\n    PROACTIVELY_REFRESHED: \"4\",\r\n};\r\nconst JsonWebTokenTypes = {\r\n    Jwt: \"JWT\",\r\n    Jwk: \"JWK\",\r\n    Pop: \"pop\",\r\n};\r\nconst ONE_DAY_IN_MS = 86400000;\r\n// Token renewal offset default in seconds\r\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\n\n\n//# sourceMappingURL=Constants.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invoke: () => (/* binding */ invoke),\n/* harmony export */   invokeAsync: () => (/* binding */ invokeAsync)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Wraps a function with a performance measurement.\r\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\r\n * @param callback\r\n * @param eventName\r\n * @param logger\r\n * @param telemetryClient\r\n * @param correlationId\r\n * @returns\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst invoke = (callback, eventName, logger, telemetryClient, correlationId) => {\r\n    return (...args) => {\r\n        logger.trace(`Executing function ${eventName}`);\r\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\r\n        if (correlationId) {\r\n            // Track number of times this API is called in a single request\r\n            const eventCount = eventName + \"CallCount\";\r\n            telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);\r\n        }\r\n        try {\r\n            const result = callback(...args);\r\n            inProgressEvent?.end({\r\n                success: true,\r\n            });\r\n            logger.trace(`Returning result from ${eventName}`);\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            logger.trace(`Error occurred in ${eventName}`);\r\n            try {\r\n                logger.trace(JSON.stringify(e));\r\n            }\r\n            catch (e) {\r\n                logger.trace(\"Unable to print error message.\");\r\n            }\r\n            inProgressEvent?.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        }\r\n    };\r\n};\r\n/**\r\n * Wraps an async function with a performance measurement.\r\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\r\n * @param callback\r\n * @param eventName\r\n * @param logger\r\n * @param telemetryClient\r\n * @param correlationId\r\n * @returns\r\n * @internal\r\n *\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst invokeAsync = (callback, eventName, logger, telemetryClient, correlationId) => {\r\n    return (...args) => {\r\n        logger.trace(`Executing function ${eventName}`);\r\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\r\n        if (correlationId) {\r\n            // Track number of times this API is called in a single request\r\n            const eventCount = eventName + \"CallCount\";\r\n            telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);\r\n        }\r\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\r\n        return callback(...args)\r\n            .then((response) => {\r\n            logger.trace(`Returning result from ${eventName}`);\r\n            inProgressEvent?.end({\r\n                success: true,\r\n            });\r\n            return response;\r\n        })\r\n            .catch((e) => {\r\n            logger.trace(`Error occurred in ${eventName}`);\r\n            try {\r\n                logger.trace(JSON.stringify(e));\r\n            }\r\n            catch (e) {\r\n                logger.trace(\"Unable to print error message.\");\r\n            }\r\n            inProgressEvent?.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        });\r\n    };\r\n};\n\n\n//# sourceMappingURL=FunctionWrappers.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvRnVuY3Rpb25XcmFwcGVycy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLFVBQVU7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsaUJBQWlCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2Isa0RBQWtELFVBQVU7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsOENBQThDLFVBQVU7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxVQUFVO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLGlCQUFpQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxVQUFVO0FBQzVEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQSw4Q0FBOEMsVUFBVTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLXNlY3JldC1jZXJ0LWV4cGlyeS8uL25vZGVfbW9kdWxlcy9AYXp1cmUvbXNhbC1jb21tb24vZGlzdC91dGlscy9GdW5jdGlvbldyYXBwZXJzLm1qcz9mM2NjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBXcmFwcyBhIGZ1bmN0aW9uIHdpdGggYSBwZXJmb3JtYW5jZSBtZWFzdXJlbWVudC5cclxuICogVXNhZ2U6IGludm9rZShmdW5jdGlvblRvQ2FsbCwgcGVyZm9ybWFuY2VDbGllbnQsIFwiRXZlbnROYW1lXCIsIFwiY29ycmVsYXRpb25JZFwiKSguLi5hcmdzVG9QYXNzVG9GdW5jdGlvbilcclxuICogQHBhcmFtIGNhbGxiYWNrXHJcbiAqIEBwYXJhbSBldmVudE5hbWVcclxuICogQHBhcmFtIGxvZ2dlclxyXG4gKiBAcGFyYW0gdGVsZW1ldHJ5Q2xpZW50XHJcbiAqIEBwYXJhbSBjb3JyZWxhdGlvbklkXHJcbiAqIEByZXR1cm5zXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcclxuY29uc3QgaW52b2tlID0gKGNhbGxiYWNrLCBldmVudE5hbWUsIGxvZ2dlciwgdGVsZW1ldHJ5Q2xpZW50LCBjb3JyZWxhdGlvbklkKSA9PiB7XHJcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcclxuICAgICAgICBsb2dnZXIudHJhY2UoYEV4ZWN1dGluZyBmdW5jdGlvbiAke2V2ZW50TmFtZX1gKTtcclxuICAgICAgICBjb25zdCBpblByb2dyZXNzRXZlbnQgPSB0ZWxlbWV0cnlDbGllbnQ/LnN0YXJ0TWVhc3VyZW1lbnQoZXZlbnROYW1lLCBjb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBpZiAoY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgICAgICAvLyBUcmFjayBudW1iZXIgb2YgdGltZXMgdGhpcyBBUEkgaXMgY2FsbGVkIGluIGEgc2luZ2xlIHJlcXVlc3RcclxuICAgICAgICAgICAgY29uc3QgZXZlbnRDb3VudCA9IGV2ZW50TmFtZSArIFwiQ2FsbENvdW50XCI7XHJcbiAgICAgICAgICAgIHRlbGVtZXRyeUNsaWVudD8uaW5jcmVtZW50RmllbGRzKHsgW2V2ZW50Q291bnRdOiAxIH0sIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBjYWxsYmFjayguLi5hcmdzKTtcclxuICAgICAgICAgICAgaW5Qcm9ncmVzc0V2ZW50Py5lbmQoe1xyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGxvZ2dlci50cmFjZShgUmV0dXJuaW5nIHJlc3VsdCBmcm9tICR7ZXZlbnROYW1lfWApO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICBsb2dnZXIudHJhY2UoYEVycm9yIG9jY3VycmVkIGluICR7ZXZlbnROYW1lfWApO1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgbG9nZ2VyLnRyYWNlKEpTT04uc3RyaW5naWZ5KGUpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgbG9nZ2VyLnRyYWNlKFwiVW5hYmxlIHRvIHByaW50IGVycm9yIG1lc3NhZ2UuXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGluUHJvZ3Jlc3NFdmVudD8uZW5kKHtcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgICAgICB9LCBlKTtcclxuICAgICAgICAgICAgdGhyb3cgZTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG59O1xyXG4vKipcclxuICogV3JhcHMgYW4gYXN5bmMgZnVuY3Rpb24gd2l0aCBhIHBlcmZvcm1hbmNlIG1lYXN1cmVtZW50LlxyXG4gKiBVc2FnZTogaW52b2tlQXN5bmMoZnVuY3Rpb25Ub0NhbGwsIHBlcmZvcm1hbmNlQ2xpZW50LCBcIkV2ZW50TmFtZVwiLCBcImNvcnJlbGF0aW9uSWRcIikoLi4uYXJnc1RvUGFzc1RvRnVuY3Rpb24pXHJcbiAqIEBwYXJhbSBjYWxsYmFja1xyXG4gKiBAcGFyYW0gZXZlbnROYW1lXHJcbiAqIEBwYXJhbSBsb2dnZXJcclxuICogQHBhcmFtIHRlbGVtZXRyeUNsaWVudFxyXG4gKiBAcGFyYW0gY29ycmVsYXRpb25JZFxyXG4gKiBAcmV0dXJuc1xyXG4gKiBAaW50ZXJuYWxcclxuICpcclxuICovXHJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XHJcbmNvbnN0IGludm9rZUFzeW5jID0gKGNhbGxiYWNrLCBldmVudE5hbWUsIGxvZ2dlciwgdGVsZW1ldHJ5Q2xpZW50LCBjb3JyZWxhdGlvbklkKSA9PiB7XHJcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcclxuICAgICAgICBsb2dnZXIudHJhY2UoYEV4ZWN1dGluZyBmdW5jdGlvbiAke2V2ZW50TmFtZX1gKTtcclxuICAgICAgICBjb25zdCBpblByb2dyZXNzRXZlbnQgPSB0ZWxlbWV0cnlDbGllbnQ/LnN0YXJ0TWVhc3VyZW1lbnQoZXZlbnROYW1lLCBjb3JyZWxhdGlvbklkKTtcclxuICAgICAgICBpZiAoY29ycmVsYXRpb25JZCkge1xyXG4gICAgICAgICAgICAvLyBUcmFjayBudW1iZXIgb2YgdGltZXMgdGhpcyBBUEkgaXMgY2FsbGVkIGluIGEgc2luZ2xlIHJlcXVlc3RcclxuICAgICAgICAgICAgY29uc3QgZXZlbnRDb3VudCA9IGV2ZW50TmFtZSArIFwiQ2FsbENvdW50XCI7XHJcbiAgICAgICAgICAgIHRlbGVtZXRyeUNsaWVudD8uaW5jcmVtZW50RmllbGRzKHsgW2V2ZW50Q291bnRdOiAxIH0sIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0ZWxlbWV0cnlDbGllbnQ/LnNldFByZVF1ZXVlVGltZShldmVudE5hbWUsIGNvcnJlbGF0aW9uSWQpO1xyXG4gICAgICAgIHJldHVybiBjYWxsYmFjayguLi5hcmdzKVxyXG4gICAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcclxuICAgICAgICAgICAgbG9nZ2VyLnRyYWNlKGBSZXR1cm5pbmcgcmVzdWx0IGZyb20gJHtldmVudE5hbWV9YCk7XHJcbiAgICAgICAgICAgIGluUHJvZ3Jlc3NFdmVudD8uZW5kKHtcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlKSA9PiB7XHJcbiAgICAgICAgICAgIGxvZ2dlci50cmFjZShgRXJyb3Igb2NjdXJyZWQgaW4gJHtldmVudE5hbWV9YCk7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBsb2dnZXIudHJhY2UoSlNPTi5zdHJpbmdpZnkoZSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICBsb2dnZXIudHJhY2UoXCJVbmFibGUgdG8gcHJpbnQgZXJyb3IgbWVzc2FnZS5cIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW5Qcm9ncmVzc0V2ZW50Py5lbmQoe1xyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgICAgICAgIH0sIGUpO1xyXG4gICAgICAgICAgICB0aHJvdyBlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxufTtcblxuZXhwb3J0IHsgaW52b2tlLCBpbnZva2VBc3luYyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RnVuY3Rpb25XcmFwcGVycy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs":
/*!**********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProtocolUtils: () => (/* binding */ ProtocolUtils)\n/* harmony export */ });\n/* harmony import */ var _Constants_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Constants.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/utils/Constants.mjs\");\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nclass ProtocolUtils {\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    static setRequestState(cryptoObj, userState, meta) {\r\n        const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\r\n        return userState\r\n            ? `${libraryState}${_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.RESOURCE_DELIM}${userState}`\r\n            : libraryState;\r\n    }\r\n    /**\r\n     * Generates the state value used by the common library.\r\n     * @param randomGuid\r\n     * @param cryptoObj\r\n     */\r\n    static generateLibraryState(cryptoObj, meta) {\r\n        if (!cryptoObj) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noCryptoObject);\r\n        }\r\n        // Create a state object containing a unique id and the timestamp of the request creation\r\n        const stateObj = {\r\n            id: cryptoObj.createNewGuid(),\r\n        };\r\n        if (meta) {\r\n            stateObj.meta = meta;\r\n        }\r\n        const stateString = JSON.stringify(stateObj);\r\n        return cryptoObj.base64Encode(stateString);\r\n    }\r\n    /**\r\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n     * @param state\r\n     * @param cryptoObj\r\n     */\r\n    static parseRequestState(cryptoObj, state) {\r\n        if (!cryptoObj) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.noCryptoObject);\r\n        }\r\n        if (!state) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidState);\r\n        }\r\n        try {\r\n            // Split the state between library state and user passed state and decode them separately\r\n            const splitState = state.split(_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.RESOURCE_DELIM);\r\n            const libraryState = splitState[0];\r\n            const userState = splitState.length > 1\r\n                ? splitState.slice(1).join(_Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.RESOURCE_DELIM)\r\n                : _Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING;\r\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\r\n            const libraryStateObj = JSON.parse(libraryStateString);\r\n            return {\r\n                userRequestState: userState || _Constants_mjs__WEBPACK_IMPORTED_MODULE_0__.Constants.EMPTY_STRING,\r\n                libraryState: libraryStateObj,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_1__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_2__.invalidState);\r\n        }\r\n    }\r\n}\n\n\n//# sourceMappingURL=ProtocolUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvUHJvdG9jb2xVdGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ2E7QUFDK0I7QUFDeUI7QUFDWTs7QUFFakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsYUFBYSxFQUFFLHFEQUFTLGdCQUFnQixFQUFFLFVBQVU7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLDJFQUFjO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixpRkFBcUIsQ0FBQywyRUFBYztBQUN0RDtBQUNBO0FBQ0Esa0JBQWtCLGlGQUFxQixDQUFDLHlFQUFZO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxxREFBUztBQUNwRDtBQUNBO0FBQ0EsMkNBQTJDLHFEQUFTO0FBQ3BELGtCQUFrQixxREFBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MscURBQVM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsaUZBQXFCLENBQUMseUVBQVk7QUFDcEQ7QUFDQTtBQUNBOztBQUV5QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvUHJvdG9jb2xVdGlscy5tanM/NWJiMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgQGF6dXJlL21zYWwtY29tbW9uIHYxNC4xNS4wIDIwMjQtMDktMjAgKi9cbid1c2Ugc3RyaWN0JztcbmltcG9ydCB7IENvbnN0YW50cyB9IGZyb20gJy4vQ29uc3RhbnRzLm1qcyc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IG5vQ3J5cHRvT2JqZWN0LCBpbnZhbGlkU3RhdGUgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIENsYXNzIHdoaWNoIHByb3ZpZGVzIGhlbHBlcnMgZm9yIE9BdXRoIDIuMCBwcm90b2NvbCBzcGVjaWZpYyB2YWx1ZXNcclxuICovXHJcbmNsYXNzIFByb3RvY29sVXRpbHMge1xyXG4gICAgLyoqXHJcbiAgICAgKiBBcHBlbmRzIHVzZXIgc3RhdGUgd2l0aCByYW5kb20gZ3VpZCwgb3IgcmV0dXJucyByYW5kb20gZ3VpZC5cclxuICAgICAqIEBwYXJhbSB1c2VyU3RhdGVcclxuICAgICAqIEBwYXJhbSByYW5kb21HdWlkXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBzZXRSZXF1ZXN0U3RhdGUoY3J5cHRvT2JqLCB1c2VyU3RhdGUsIG1ldGEpIHtcclxuICAgICAgICBjb25zdCBsaWJyYXJ5U3RhdGUgPSBQcm90b2NvbFV0aWxzLmdlbmVyYXRlTGlicmFyeVN0YXRlKGNyeXB0b09iaiwgbWV0YSk7XHJcbiAgICAgICAgcmV0dXJuIHVzZXJTdGF0ZVxyXG4gICAgICAgICAgICA/IGAke2xpYnJhcnlTdGF0ZX0ke0NvbnN0YW50cy5SRVNPVVJDRV9ERUxJTX0ke3VzZXJTdGF0ZX1gXHJcbiAgICAgICAgICAgIDogbGlicmFyeVN0YXRlO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBHZW5lcmF0ZXMgdGhlIHN0YXRlIHZhbHVlIHVzZWQgYnkgdGhlIGNvbW1vbiBsaWJyYXJ5LlxyXG4gICAgICogQHBhcmFtIHJhbmRvbUd1aWRcclxuICAgICAqIEBwYXJhbSBjcnlwdG9PYmpcclxuICAgICAqL1xyXG4gICAgc3RhdGljIGdlbmVyYXRlTGlicmFyeVN0YXRlKGNyeXB0b09iaiwgbWV0YSkge1xyXG4gICAgICAgIGlmICghY3J5cHRvT2JqKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihub0NyeXB0b09iamVjdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIENyZWF0ZSBhIHN0YXRlIG9iamVjdCBjb250YWluaW5nIGEgdW5pcXVlIGlkIGFuZCB0aGUgdGltZXN0YW1wIG9mIHRoZSByZXF1ZXN0IGNyZWF0aW9uXHJcbiAgICAgICAgY29uc3Qgc3RhdGVPYmogPSB7XHJcbiAgICAgICAgICAgIGlkOiBjcnlwdG9PYmouY3JlYXRlTmV3R3VpZCgpLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgaWYgKG1ldGEpIHtcclxuICAgICAgICAgICAgc3RhdGVPYmoubWV0YSA9IG1ldGE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHN0YXRlU3RyaW5nID0gSlNPTi5zdHJpbmdpZnkoc3RhdGVPYmopO1xyXG4gICAgICAgIHJldHVybiBjcnlwdG9PYmouYmFzZTY0RW5jb2RlKHN0YXRlU3RyaW5nKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUGFyc2VzIHRoZSBzdGF0ZSBpbnRvIHRoZSBSZXF1ZXN0U3RhdGVPYmplY3QsIHdoaWNoIGNvbnRhaW5zIHRoZSBMaWJyYXJ5U3RhdGUgaW5mbyBhbmQgdGhlIHN0YXRlIHBhc3NlZCBieSB0aGUgdXNlci5cclxuICAgICAqIEBwYXJhbSBzdGF0ZVxyXG4gICAgICogQHBhcmFtIGNyeXB0b09ialxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgcGFyc2VSZXF1ZXN0U3RhdGUoY3J5cHRvT2JqLCBzdGF0ZSkge1xyXG4gICAgICAgIGlmICghY3J5cHRvT2JqKSB7XHJcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUNsaWVudEF1dGhFcnJvcihub0NyeXB0b09iamVjdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghc3RhdGUpIHtcclxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKGludmFsaWRTdGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIC8vIFNwbGl0IHRoZSBzdGF0ZSBiZXR3ZWVuIGxpYnJhcnkgc3RhdGUgYW5kIHVzZXIgcGFzc2VkIHN0YXRlIGFuZCBkZWNvZGUgdGhlbSBzZXBhcmF0ZWx5XHJcbiAgICAgICAgICAgIGNvbnN0IHNwbGl0U3RhdGUgPSBzdGF0ZS5zcGxpdChDb25zdGFudHMuUkVTT1VSQ0VfREVMSU0pO1xyXG4gICAgICAgICAgICBjb25zdCBsaWJyYXJ5U3RhdGUgPSBzcGxpdFN0YXRlWzBdO1xyXG4gICAgICAgICAgICBjb25zdCB1c2VyU3RhdGUgPSBzcGxpdFN0YXRlLmxlbmd0aCA+IDFcclxuICAgICAgICAgICAgICAgID8gc3BsaXRTdGF0ZS5zbGljZSgxKS5qb2luKENvbnN0YW50cy5SRVNPVVJDRV9ERUxJTSlcclxuICAgICAgICAgICAgICAgIDogQ29uc3RhbnRzLkVNUFRZX1NUUklORztcclxuICAgICAgICAgICAgY29uc3QgbGlicmFyeVN0YXRlU3RyaW5nID0gY3J5cHRvT2JqLmJhc2U2NERlY29kZShsaWJyYXJ5U3RhdGUpO1xyXG4gICAgICAgICAgICBjb25zdCBsaWJyYXJ5U3RhdGVPYmogPSBKU09OLnBhcnNlKGxpYnJhcnlTdGF0ZVN0cmluZyk7XHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB1c2VyUmVxdWVzdFN0YXRlOiB1c2VyU3RhdGUgfHwgQ29uc3RhbnRzLkVNUFRZX1NUUklORyxcclxuICAgICAgICAgICAgICAgIGxpYnJhcnlTdGF0ZTogbGlicmFyeVN0YXRlT2JqLFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVDbGllbnRBdXRoRXJyb3IoaW52YWxpZFN0YXRlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgUHJvdG9jb2xVdGlscyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UHJvdG9jb2xVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StringUtils: () => (/* binding */ StringUtils)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nclass StringUtils {\r\n    /**\r\n     * Check if stringified object is empty\r\n     * @param strObj\r\n     */\r\n    static isEmptyObj(strObj) {\r\n        if (strObj) {\r\n            try {\r\n                const obj = JSON.parse(strObj);\r\n                return Object.keys(obj).length === 0;\r\n            }\r\n            catch (e) { }\r\n        }\r\n        return true;\r\n    }\r\n    static startsWith(str, search) {\r\n        return str.indexOf(search) === 0;\r\n    }\r\n    static endsWith(str, search) {\r\n        return (str.length >= search.length &&\r\n            str.lastIndexOf(search) === str.length - search.length);\r\n    }\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    static queryStringToObject(query) {\r\n        const obj = {};\r\n        const params = query.split(\"&\");\r\n        const decode = (s) => decodeURIComponent(s.replace(/\\+/g, \" \"));\r\n        params.forEach((pair) => {\r\n            if (pair.trim()) {\r\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\r\n                if (key && value) {\r\n                    obj[decode(key)] = decode(value);\r\n                }\r\n            }\r\n        });\r\n        return obj;\r\n    }\r\n    /**\r\n     * Trims entries in an array.\r\n     *\r\n     * @param arr\r\n     */\r\n    static trimArrayEntries(arr) {\r\n        return arr.map((entry) => entry.trim());\r\n    }\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    static removeEmptyStringsFromArray(arr) {\r\n        return arr.filter((entry) => {\r\n            return !!entry;\r\n        });\r\n    }\r\n    /**\r\n     * Attempts to parse a string into JSON\r\n     * @param str\r\n     */\r\n    static jsonParseHelper(str) {\r\n        try {\r\n            return JSON.parse(str);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\r\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\r\n     * @param input String to match against\r\n     */\r\n    static matchPattern(pattern, input) {\r\n        /**\r\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\r\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\r\n         */\r\n        // eslint-disable-next-line security/detect-non-literal-regexp\r\n        const regex = new RegExp(pattern\r\n            .replace(/\\\\/g, \"\\\\\\\\\")\r\n            .replace(/\\*/g, \"[^ ]*\")\r\n            .replace(/\\?/g, \"\\\\?\"));\r\n        return regex.test(input);\r\n    }\r\n}\n\n\n//# sourceMappingURL=StringUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvU3RyaW5nVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQ7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItc2VjcmV0LWNlcnQtZXhwaXJ5Ly4vbm9kZV9tb2R1bGVzL0BhenVyZS9tc2FsLWNvbW1vbi9kaXN0L3V0aWxzL1N0cmluZ1V0aWxzLm1qcz9jMWNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBAaGlkZGVuXHJcbiAqL1xyXG5jbGFzcyBTdHJpbmdVdGlscyB7XHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGlmIHN0cmluZ2lmaWVkIG9iamVjdCBpcyBlbXB0eVxyXG4gICAgICogQHBhcmFtIHN0ck9ialxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgaXNFbXB0eU9iaihzdHJPYmopIHtcclxuICAgICAgICBpZiAoc3RyT2JqKSB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBvYmogPSBKU09OLnBhcnNlKHN0ck9iaik7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMob2JqKS5sZW5ndGggPT09IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGUpIHsgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIHN0YXRpYyBzdGFydHNXaXRoKHN0ciwgc2VhcmNoKSB7XHJcbiAgICAgICAgcmV0dXJuIHN0ci5pbmRleE9mKHNlYXJjaCkgPT09IDA7XHJcbiAgICB9XHJcbiAgICBzdGF0aWMgZW5kc1dpdGgoc3RyLCBzZWFyY2gpIHtcclxuICAgICAgICByZXR1cm4gKHN0ci5sZW5ndGggPj0gc2VhcmNoLmxlbmd0aCAmJlxyXG4gICAgICAgICAgICBzdHIubGFzdEluZGV4T2Yoc2VhcmNoKSA9PT0gc3RyLmxlbmd0aCAtIHNlYXJjaC5sZW5ndGgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBQYXJzZXMgc3RyaW5nIGludG8gYW4gb2JqZWN0LlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBxdWVyeVxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgcXVlcnlTdHJpbmdUb09iamVjdChxdWVyeSkge1xyXG4gICAgICAgIGNvbnN0IG9iaiA9IHt9O1xyXG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHF1ZXJ5LnNwbGl0KFwiJlwiKTtcclxuICAgICAgICBjb25zdCBkZWNvZGUgPSAocykgPT4gZGVjb2RlVVJJQ29tcG9uZW50KHMucmVwbGFjZSgvXFwrL2csIFwiIFwiKSk7XHJcbiAgICAgICAgcGFyYW1zLmZvckVhY2goKHBhaXIpID0+IHtcclxuICAgICAgICAgICAgaWYgKHBhaXIudHJpbSgpKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBba2V5LCB2YWx1ZV0gPSBwYWlyLnNwbGl0KC89KC4rKS9nLCAyKTsgLy8gU3BsaXQgb24gdGhlIGZpcnN0IG9jY3VyZW5jZSBvZiB0aGUgJz0nIGNoYXJhY3RlclxyXG4gICAgICAgICAgICAgICAgaWYgKGtleSAmJiB2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIG9ialtkZWNvZGUoa2V5KV0gPSBkZWNvZGUodmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVHJpbXMgZW50cmllcyBpbiBhbiBhcnJheS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gYXJyXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyB0cmltQXJyYXlFbnRyaWVzKGFycikge1xyXG4gICAgICAgIHJldHVybiBhcnIubWFwKChlbnRyeSkgPT4gZW50cnkudHJpbSgpKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogUmVtb3ZlcyBlbXB0eSBzdHJpbmdzIGZyb20gYXJyYXlcclxuICAgICAqIEBwYXJhbSBhcnJcclxuICAgICAqL1xyXG4gICAgc3RhdGljIHJlbW92ZUVtcHR5U3RyaW5nc0Zyb21BcnJheShhcnIpIHtcclxuICAgICAgICByZXR1cm4gYXJyLmZpbHRlcigoZW50cnkpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuICEhZW50cnk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEF0dGVtcHRzIHRvIHBhcnNlIGEgc3RyaW5nIGludG8gSlNPTlxyXG4gICAgICogQHBhcmFtIHN0clxyXG4gICAgICovXHJcbiAgICBzdGF0aWMganNvblBhcnNlSGVscGVyKHN0cikge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHJldHVybiBKU09OLnBhcnNlKHN0cik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogVGVzdHMgaWYgYSBnaXZlbiBzdHJpbmcgbWF0Y2hlcyBhIGdpdmVuIHBhdHRlcm4sIHdpdGggc3VwcG9ydCBmb3Igd2lsZGNhcmRzIGFuZCBxdWVyaWVzLlxyXG4gICAgICogQHBhcmFtIHBhdHRlcm4gV2lsZGNhcmQgcGF0dGVybiB0byBzdHJpbmcgbWF0Y2guIFN1cHBvcnRzIFwiKlwiIGZvciB3aWxkY2FyZHMgYW5kIFwiP1wiIGZvciBxdWVyaWVzXHJcbiAgICAgKiBAcGFyYW0gaW5wdXQgU3RyaW5nIHRvIG1hdGNoIGFnYWluc3RcclxuICAgICAqL1xyXG4gICAgc3RhdGljIG1hdGNoUGF0dGVybihwYXR0ZXJuLCBpbnB1dCkge1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFdpbGRjYXJkIHN1cHBvcnQ6IGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8zMTE3MjQ4LzQ4ODg1NTlcclxuICAgICAgICAgKiBRdWVyaWVzOiByZXBsYWNlcyBcIj9cIiBpbiBzdHJpbmcgd2l0aCBlc2NhcGVkIFwiXFw/XCIgZm9yIHJlZ2V4IHRlc3RcclxuICAgICAgICAgKi9cclxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2VjdXJpdHkvZGV0ZWN0LW5vbi1saXRlcmFsLXJlZ2V4cFxyXG4gICAgICAgIGNvbnN0IHJlZ2V4ID0gbmV3IFJlZ0V4cChwYXR0ZXJuXHJcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcL2csIFwiXFxcXFxcXFxcIilcclxuICAgICAgICAgICAgLnJlcGxhY2UoL1xcKi9nLCBcIlteIF0qXCIpXHJcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXD8vZywgXCJcXFxcP1wiKSk7XHJcbiAgICAgICAgcmV0dXJuIHJlZ2V4LnRlc3QoaW5wdXQpO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IFN0cmluZ1V0aWxzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1TdHJpbmdVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs":
/*!******************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   delay: () => (/* binding */ delay),\n/* harmony export */   isTokenExpired: () => (/* binding */ isTokenExpired),\n/* harmony export */   nowSeconds: () => (/* binding */ nowSeconds),\n/* harmony export */   wasClockTurnedBack: () => (/* binding */ wasClockTurnedBack)\n/* harmony export */ });\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility functions for managing date and time operations.\r\n */\r\n/**\r\n * return the current time in Unix time (seconds).\r\n */\r\nfunction nowSeconds() {\r\n    // Date.getTime() returns in milliseconds.\r\n    return Math.round(new Date().getTime() / 1000.0);\r\n}\r\n/**\r\n * check if a token is expired based on given UTC time in seconds.\r\n * @param expiresOn\r\n */\r\nfunction isTokenExpired(expiresOn, offset) {\r\n    // check for access token expiry\r\n    const expirationSec = Number(expiresOn) || 0;\r\n    const offsetCurrentTimeSec = nowSeconds() + offset;\r\n    // If current time + offset is greater than token expiration time, then token is expired.\r\n    return offsetCurrentTimeSec > expirationSec;\r\n}\r\n/**\r\n * If the current time is earlier than the time that a token was cached at, we must discard the token\r\n * i.e. The system clock was turned back after acquiring the cached token\r\n * @param cachedAt\r\n * @param offset\r\n */\r\nfunction wasClockTurnedBack(cachedAt) {\r\n    const cachedAtSec = Number(cachedAt);\r\n    return cachedAtSec > nowSeconds();\r\n}\r\n/**\r\n * Waits for t number of milliseconds\r\n * @param t number\r\n * @param value T\r\n */\r\nfunction delay(t, value) {\r\n    return new Promise((resolve) => setTimeout(() => resolve(value), t));\r\n}\n\n\n//# sourceMappingURL=TimeUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvVGltZVV0aWxzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVpRTtBQUNqRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvVGltZVV0aWxzLm1qcz80ZTA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qISBAYXp1cmUvbXNhbC1jb21tb24gdjE0LjE1LjAgMjAyNC0wOS0yMCAqL1xuJ3VzZSBzdHJpY3QnO1xuLypcclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBVdGlsaXR5IGZ1bmN0aW9ucyBmb3IgbWFuYWdpbmcgZGF0ZSBhbmQgdGltZSBvcGVyYXRpb25zLlxyXG4gKi9cclxuLyoqXHJcbiAqIHJldHVybiB0aGUgY3VycmVudCB0aW1lIGluIFVuaXggdGltZSAoc2Vjb25kcykuXHJcbiAqL1xyXG5mdW5jdGlvbiBub3dTZWNvbmRzKCkge1xyXG4gICAgLy8gRGF0ZS5nZXRUaW1lKCkgcmV0dXJucyBpbiBtaWxsaXNlY29uZHMuXHJcbiAgICByZXR1cm4gTWF0aC5yb3VuZChuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDAuMCk7XHJcbn1cclxuLyoqXHJcbiAqIGNoZWNrIGlmIGEgdG9rZW4gaXMgZXhwaXJlZCBiYXNlZCBvbiBnaXZlbiBVVEMgdGltZSBpbiBzZWNvbmRzLlxyXG4gKiBAcGFyYW0gZXhwaXJlc09uXHJcbiAqL1xyXG5mdW5jdGlvbiBpc1Rva2VuRXhwaXJlZChleHBpcmVzT24sIG9mZnNldCkge1xyXG4gICAgLy8gY2hlY2sgZm9yIGFjY2VzcyB0b2tlbiBleHBpcnlcclxuICAgIGNvbnN0IGV4cGlyYXRpb25TZWMgPSBOdW1iZXIoZXhwaXJlc09uKSB8fCAwO1xyXG4gICAgY29uc3Qgb2Zmc2V0Q3VycmVudFRpbWVTZWMgPSBub3dTZWNvbmRzKCkgKyBvZmZzZXQ7XHJcbiAgICAvLyBJZiBjdXJyZW50IHRpbWUgKyBvZmZzZXQgaXMgZ3JlYXRlciB0aGFuIHRva2VuIGV4cGlyYXRpb24gdGltZSwgdGhlbiB0b2tlbiBpcyBleHBpcmVkLlxyXG4gICAgcmV0dXJuIG9mZnNldEN1cnJlbnRUaW1lU2VjID4gZXhwaXJhdGlvblNlYztcclxufVxyXG4vKipcclxuICogSWYgdGhlIGN1cnJlbnQgdGltZSBpcyBlYXJsaWVyIHRoYW4gdGhlIHRpbWUgdGhhdCBhIHRva2VuIHdhcyBjYWNoZWQgYXQsIHdlIG11c3QgZGlzY2FyZCB0aGUgdG9rZW5cclxuICogaS5lLiBUaGUgc3lzdGVtIGNsb2NrIHdhcyB0dXJuZWQgYmFjayBhZnRlciBhY3F1aXJpbmcgdGhlIGNhY2hlZCB0b2tlblxyXG4gKiBAcGFyYW0gY2FjaGVkQXRcclxuICogQHBhcmFtIG9mZnNldFxyXG4gKi9cclxuZnVuY3Rpb24gd2FzQ2xvY2tUdXJuZWRCYWNrKGNhY2hlZEF0KSB7XHJcbiAgICBjb25zdCBjYWNoZWRBdFNlYyA9IE51bWJlcihjYWNoZWRBdCk7XHJcbiAgICByZXR1cm4gY2FjaGVkQXRTZWMgPiBub3dTZWNvbmRzKCk7XHJcbn1cclxuLyoqXHJcbiAqIFdhaXRzIGZvciB0IG51bWJlciBvZiBtaWxsaXNlY29uZHNcclxuICogQHBhcmFtIHQgbnVtYmVyXHJcbiAqIEBwYXJhbSB2YWx1ZSBUXHJcbiAqL1xyXG5mdW5jdGlvbiBkZWxheSh0LCB2YWx1ZSkge1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KCgpID0+IHJlc29sdmUodmFsdWUpLCB0KSk7XHJcbn1cblxuZXhwb3J0IHsgZGVsYXksIGlzVG9rZW5FeHBpcmVkLCBub3dTZWNvbmRzLCB3YXNDbG9ja1R1cm5lZEJhY2sgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVRpbWVVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs":
/*!*****************************************************************!*\
  !*** ./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDeserializedResponse: () => (/* binding */ getDeserializedResponse),\n/* harmony export */   stripLeadingHashOrQuery: () => (/* binding */ stripLeadingHashOrQuery)\n/* harmony export */ });\n/* harmony import */ var _error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error/ClientAuthError.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs\");\n/* harmony import */ var _error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../error/ClientAuthErrorCodes.mjs */ \"(ssr)/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs\");\n/*! @azure/msal-common v14.15.0 2024-09-20 */\n\n\n\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Parses hash string from given string. Returns empty string if no hash symbol is found.\r\n * @param hashString\r\n */\r\nfunction stripLeadingHashOrQuery(responseString) {\r\n    if (responseString.startsWith(\"#/\")) {\r\n        return responseString.substring(2);\r\n    }\r\n    else if (responseString.startsWith(\"#\") ||\r\n        responseString.startsWith(\"?\")) {\r\n        return responseString.substring(1);\r\n    }\r\n    return responseString;\r\n}\r\n/**\r\n * Returns URL hash as server auth code response object.\r\n */\r\nfunction getDeserializedResponse(responseString) {\r\n    // Check if given hash is empty\r\n    if (!responseString || responseString.indexOf(\"=\") < 0) {\r\n        return null;\r\n    }\r\n    try {\r\n        // Strip the # or ? symbol if present\r\n        const normalizedResponse = stripLeadingHashOrQuery(responseString);\r\n        // If # symbol was not present, above will return empty string, so give original hash value\r\n        const deserializedHash = Object.fromEntries(new URLSearchParams(normalizedResponse));\r\n        // Check for known response properties\r\n        if (deserializedHash.code ||\r\n            deserializedHash.error ||\r\n            deserializedHash.error_description ||\r\n            deserializedHash.state) {\r\n            return deserializedHash;\r\n        }\r\n    }\r\n    catch (e) {\r\n        throw (0,_error_ClientAuthError_mjs__WEBPACK_IMPORTED_MODULE_0__.createClientAuthError)(_error_ClientAuthErrorCodes_mjs__WEBPACK_IMPORTED_MODULE_1__.hashNotDeserialized);\r\n    }\r\n    return null;\r\n}\n\n\n//# sourceMappingURL=UrlUtils.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvVXJsVXRpbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNhO0FBQ3dEO0FBQ0c7O0FBRXhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRkFBcUIsQ0FBQyxnRkFBbUI7QUFDdkQ7QUFDQTtBQUNBOztBQUU0RDtBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi1zZWNyZXQtY2VydC1leHBpcnkvLi9ub2RlX21vZHVsZXMvQGF6dXJlL21zYWwtY29tbW9uL2Rpc3QvdXRpbHMvVXJsVXRpbHMubWpzPzk0OTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIEBhenVyZS9tc2FsLWNvbW1vbiB2MTQuMTUuMCAyMDI0LTA5LTIwICovXG4ndXNlIHN0cmljdCc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnRBdXRoRXJyb3IgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3IubWpzJztcbmltcG9ydCB7IGhhc2hOb3REZXNlcmlhbGl6ZWQgfSBmcm9tICcuLi9lcnJvci9DbGllbnRBdXRoRXJyb3JDb2Rlcy5tanMnO1xuXG4vKlxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFBhcnNlcyBoYXNoIHN0cmluZyBmcm9tIGdpdmVuIHN0cmluZy4gUmV0dXJucyBlbXB0eSBzdHJpbmcgaWYgbm8gaGFzaCBzeW1ib2wgaXMgZm91bmQuXHJcbiAqIEBwYXJhbSBoYXNoU3RyaW5nXHJcbiAqL1xyXG5mdW5jdGlvbiBzdHJpcExlYWRpbmdIYXNoT3JRdWVyeShyZXNwb25zZVN0cmluZykge1xyXG4gICAgaWYgKHJlc3BvbnNlU3RyaW5nLnN0YXJ0c1dpdGgoXCIjL1wiKSkge1xyXG4gICAgICAgIHJldHVybiByZXNwb25zZVN0cmluZy5zdWJzdHJpbmcoMik7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChyZXNwb25zZVN0cmluZy5zdGFydHNXaXRoKFwiI1wiKSB8fFxyXG4gICAgICAgIHJlc3BvbnNlU3RyaW5nLnN0YXJ0c1dpdGgoXCI/XCIpKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlU3RyaW5nLnN1YnN0cmluZygxKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXNwb25zZVN0cmluZztcclxufVxyXG4vKipcclxuICogUmV0dXJucyBVUkwgaGFzaCBhcyBzZXJ2ZXIgYXV0aCBjb2RlIHJlc3BvbnNlIG9iamVjdC5cclxuICovXHJcbmZ1bmN0aW9uIGdldERlc2VyaWFsaXplZFJlc3BvbnNlKHJlc3BvbnNlU3RyaW5nKSB7XHJcbiAgICAvLyBDaGVjayBpZiBnaXZlbiBoYXNoIGlzIGVtcHR5XHJcbiAgICBpZiAoIXJlc3BvbnNlU3RyaW5nIHx8IHJlc3BvbnNlU3RyaW5nLmluZGV4T2YoXCI9XCIpIDwgMCkge1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgdHJ5IHtcclxuICAgICAgICAvLyBTdHJpcCB0aGUgIyBvciA/IHN5bWJvbCBpZiBwcmVzZW50XHJcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplZFJlc3BvbnNlID0gc3RyaXBMZWFkaW5nSGFzaE9yUXVlcnkocmVzcG9uc2VTdHJpbmcpO1xyXG4gICAgICAgIC8vIElmICMgc3ltYm9sIHdhcyBub3QgcHJlc2VudCwgYWJvdmUgd2lsbCByZXR1cm4gZW1wdHkgc3RyaW5nLCBzbyBnaXZlIG9yaWdpbmFsIGhhc2ggdmFsdWVcclxuICAgICAgICBjb25zdCBkZXNlcmlhbGl6ZWRIYXNoID0gT2JqZWN0LmZyb21FbnRyaWVzKG5ldyBVUkxTZWFyY2hQYXJhbXMobm9ybWFsaXplZFJlc3BvbnNlKSk7XHJcbiAgICAgICAgLy8gQ2hlY2sgZm9yIGtub3duIHJlc3BvbnNlIHByb3BlcnRpZXNcclxuICAgICAgICBpZiAoZGVzZXJpYWxpemVkSGFzaC5jb2RlIHx8XHJcbiAgICAgICAgICAgIGRlc2VyaWFsaXplZEhhc2guZXJyb3IgfHxcclxuICAgICAgICAgICAgZGVzZXJpYWxpemVkSGFzaC5lcnJvcl9kZXNjcmlwdGlvbiB8fFxyXG4gICAgICAgICAgICBkZXNlcmlhbGl6ZWRIYXNoLnN0YXRlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBkZXNlcmlhbGl6ZWRIYXNoO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgdGhyb3cgY3JlYXRlQ2xpZW50QXV0aEVycm9yKGhhc2hOb3REZXNlcmlhbGl6ZWQpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbn1cblxuZXhwb3J0IHsgZ2V0RGVzZXJpYWxpemVkUmVzcG9uc2UsIHN0cmlwTGVhZGluZ0hhc2hPclF1ZXJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1VcmxVdGlscy5tanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs\n");

/***/ })

};
;