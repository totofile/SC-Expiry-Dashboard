"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[766],{4766:function(e,t,r){r.d(t,{Lx:function(){return n_}});var n,i,o=r(9873);(n=i||(i={}))[n.Error=0]="Error",n[n.Warning=1]="Warning",n[n.Info=2]="Info",n[n.Verbose=3]="Verbose",n[n.Trace=4]="Trace";class a{constructor(e,t,r){this.level=i.Info;let n=e||a.createDefaultLoggerOptions();this.localCallback=n.loggerCallback||(()=>{}),this.piiLoggingEnabled=n.piiLoggingEnabled||!1,this.level="number"==typeof n.logLevel?n.logLevel:i.Info,this.correlationId=n.correlationId||o.gT.EMPTY_STRING,this.packageName=t||o.gT.EMPTY_STRING,this.packageVersion=r||o.gT.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:i.Info}}clone(e,t,r){return new a({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:r||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;let r=new Date().toUTCString(),n=`[${r}] : [${t.correlationId||this.correlationId||""}]`,o=`${n} : ${this.packageName}@${this.packageVersion} : ${i[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,o,t.containsPii||!1)}executeCallback(e,t,r){this.localCallback&&this.localCallback(e,t,r)}error(e,t){this.logMessage(e,{logLevel:i.Error,containsPii:!1,correlationId:t||o.gT.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:i.Error,containsPii:!0,correlationId:t||o.gT.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:i.Warning,containsPii:!1,correlationId:t||o.gT.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:i.Warning,containsPii:!0,correlationId:t||o.gT.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:i.Info,containsPii:!1,correlationId:t||o.gT.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:i.Info,containsPii:!0,correlationId:t||o.gT.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:i.Verbose,containsPii:!1,correlationId:t||o.gT.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:i.Verbose,containsPii:!0,correlationId:t||o.gT.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:i.Trace,containsPii:!1,correlationId:t||o.gT.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:i.Trace,containsPii:!0,correlationId:t||o.gT.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}let s={AAD:"AAD",OIDC:"OIDC"},c={None:"none"};var l=r(5717);let h="client_info_decoding_error",d="client_info_empty_error",u="token_parsing_error",g="null_or_empty_token",p="endpoints_resolution_error",m="network_error",C="openid_config_error",f="hash_not_deserialized",y="invalid_state",T="state_mismatch",I="state_not_found",A="nonce_mismatch",v="auth_time_not_found",_="max_age_transpired",E="multiple_matching_tokens",w="multiple_matching_accounts",S="multiple_matching_appMetadata",R="request_cannot_be_made",k="cannot_remove_empty_scope",b="cannot_append_scopeset",O="empty_input_scopeset",N="device_code_polling_cancelled",P="device_code_expired",M="device_code_unknown_error",q="no_account_in_silent_request",U="invalid_cache_record",H="invalid_cache_environment",L="no_account_found",D="no_crypto_object",x="unexpected_credential_type",K="invalid_assertion",B="invalid_client_credential",F="token_refresh_required",G="user_timeout_reached",$="token_claims_cnf_required_for_signedjwt",z="authorization_code_missing_from_server_response",Q="binding_key_not_removed",W="end_session_endpoint_not_supported",V="key_id_missing",Y="no_network_connectivity",j="user_canceled",J="missing_tenant_id_error",Z="method_not_implemented",X="nested_app_auth_bridge_disabled",ee={[h]:"The client info could not be parsed/decoded correctly",[d]:"The client info was empty",[u]:"Token cannot be parsed",[g]:"The token is null or empty",[p]:"Endpoints cannot be resolved",[m]:"Network request failed",[C]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[f]:"The hash parameters could not be deserialized",[y]:"State was not the expected format",[T]:"State mismatch error",[I]:"State not found",[A]:"Nonce mismatch error",[v]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[_]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[E]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[w]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[S]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[R]:"Token request cannot be made without authorization code or refresh token.",[k]:"Cannot remove null or empty scope from ScopeSet",[b]:"Cannot append ScopeSet",[O]:"Empty input ScopeSet cannot be processed",[N]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[P]:"Device code is expired.",[M]:"Device code stopped polling for unknown reasons.",[q]:"Please pass an account object, silent flow is not supported without account information",[U]:"Cache record object was null or undefined.",[H]:"Invalid environment when attempting to create cache entry",[L]:"No account found in cache for given key.",[D]:"No crypto object detected.",[x]:"Unexpected credential type.",[K]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[B]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[F]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[G]:"User defined timeout for device code polling reached",[$]:"Cannot generate a POP jwt if the token_claims are not populated",[z]:"Server response does not contain an authorization code to proceed",[Q]:"Could not remove the credential's binding key from storage.",[W]:"The provided authority does not support logout",[V]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[Y]:"No network connectivity. Check your internet connection.",[j]:"User cancelled the flow.",[J]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[Z]:"This method has not been implemented",[X]:"The nested app auth bridge is disabled"};ee[h],ee[d],ee[u],ee[g],ee[p],ee[m],ee[C],ee[f],ee[y],ee[T],ee[I],ee[A],ee[v],ee[_],ee[E],ee[w],ee[S],ee[R],ee[k],ee[b],ee[O],ee[N],ee[P],ee[M],ee[q],ee[U],ee[H],ee[L],ee[D],ee[x],ee[K],ee[B],ee[F],ee[G],ee[$],ee[z],ee[Q],ee[W],ee[V],ee[Y],ee[j],ee[J],ee[X];class et extends l.l4{constructor(e,t){super(e,t?`${ee[e]}: ${t}`:ee[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,et.prototype)}}function er(e,t){return new et(e,t)}let en={createNewGuid:()=>{throw er(Z)},base64Decode:()=>{throw er(Z)},base64Encode:()=>{throw er(Z)},base64UrlEncode:()=>{throw er(Z)},encodeKid:()=>{throw er(Z)},async getPublicKeyThumbprint(){throw er(Z)},async removeTokenBindingKey(){throw er(Z)},async clearKeystore(){throw er(Z)},async signJwt(){throw er(Z)},async hashString(){throw er(Z)}},ei="@azure/msal-common",eo="14.15.0";function ea(e,t){let r=function(e){if(!e)throw er(g);let t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(e);if(!t||t.length<4)throw er(u);return t[2]}(e);try{let e=t(r);return JSON.parse(e)}catch(e){throw er(u)}}function es(e,t){if(0===t||Date.now()-3e5>e+t)throw er(_)}function ec(){return Math.round(new Date().getTime()/1e3)}function el(e,t){let r=Number(e)||0;return ec()+t>r}function eh(e){return[[e.homeAccountId,e.environment].join(o.Bv.CACHE_KEY_SEPARATOR).toLowerCase(),function(e){let t=e.credentialType===o.d3.REFRESH_TOKEN&&e.familyId||e.clientId;return[e.credentialType,t,e.realm||""].join(o.Bv.CACHE_KEY_SEPARATOR).toLowerCase()}(e),(e.target||"").toLowerCase(),(e.requestedClaimsHash||"").toLowerCase(),e.tokenType&&e.tokenType.toLowerCase()!==o.hO.BEARER.toLowerCase()?e.tokenType.toLowerCase():""].join(o.Bv.CACHE_KEY_SEPARATOR).toLowerCase()}function ed(e,t,r,n,i){return{credentialType:o.d3.ID_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r,realm:i}}function eu(e,t,r,n,i,a,s,c,l,h,d,u,g,p,m){let C={homeAccountId:e,credentialType:o.d3.ACCESS_TOKEN,secret:r,cachedAt:ec().toString(),expiresOn:s.toString(),extendedExpiresOn:c.toString(),environment:t,clientId:n,realm:i,target:a,tokenType:d||o.hO.BEARER};if(u&&(C.userAssertionHash=u),h&&(C.refreshOn=h.toString()),p&&(C.requestedClaims=p,C.requestedClaimsHash=m),C.tokenType?.toLowerCase()!==o.hO.BEARER.toLowerCase())switch(C.credentialType=o.d3.ACCESS_TOKEN_WITH_AUTH_SCHEME,C.tokenType){case o.hO.POP:let f=ea(r,l);if(!f?.cnf?.kid)throw er($);C.keyId=f.cnf.kid;break;case o.hO.SSH:C.keyId=g}return C}function eg(e,t,r,n,i,a,s){let c={credentialType:o.d3.REFRESH_TOKEN,homeAccountId:e,environment:t,clientId:n,secret:r};return a&&(c.userAssertionHash=a),i&&(c.familyId=i),s&&(c.expiresOn=s.toString()),c}function ep(e){return e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("credentialType")&&e.hasOwnProperty("clientId")&&e.hasOwnProperty("secret")}function em(e){return!!e&&ep(e)&&e.hasOwnProperty("realm")&&e.hasOwnProperty("target")&&(e.credentialType===o.d3.ACCESS_TOKEN||e.credentialType===o.d3.ACCESS_TOKEN_WITH_AUTH_SCHEME)}function eC(e){return!!e&&ep(e)&&e.hasOwnProperty("realm")&&e.credentialType===o.d3.ID_TOKEN}function ef(e){return!!e&&ep(e)&&e.credentialType===o.d3.REFRESH_TOKEN}function ey(){return ec()+o.QU.REFRESH_TIME_SECONDS}function eT(e,t,r){e.authorization_endpoint=t.authorization_endpoint,e.token_endpoint=t.token_endpoint,e.end_session_endpoint=t.end_session_endpoint,e.issuer=t.issuer,e.endpointsFromNetwork=r,e.jwks_uri=t.jwks_uri}function eI(e,t,r){e.aliases=t.aliases,e.preferred_cache=t.preferred_cache,e.preferred_network=t.preferred_network,e.aliasesFromNetwork=r}function eA(e){return e.expiresAt<=ec()}let ev="redirect_uri_empty",e_="claims_request_parsing_error",eE="authority_uri_insecure",ew="url_parse_error",eS="empty_url_error",eR="empty_input_scopes_error",ek="invalid_prompt_value",eb="invalid_claims",eO="token_request_empty",eN="logout_request_empty",eP="invalid_code_challenge_method",eM="pkce_params_missing",eq="invalid_cloud_discovery_metadata",eU="invalid_authority_metadata",eH="untrusted_authority",eL="missing_ssh_jwk",eD="missing_ssh_kid",ex="missing_nonce_authentication_header",eK="invalid_authentication_header",eB="cannot_set_OIDCOptions",eF="cannot_allow_native_broker",eG="authority_mismatch",e$={[ev]:"A redirect URI is required for all calls, and none has been set.",[e_]:"Could not parse the given claims request object.",[eE]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[ew]:"URL could not be parsed into appropriate segments.",[eS]:"URL was empty or null.",[eR]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[ek]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[eb]:"Given claims parameter must be a stringified JSON object.",[eO]:"Token request was empty and not found in cache.",[eN]:"The logout request was null or undefined.",[eP]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[eM]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[eq]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[eU]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[eH]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[eL]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[eD]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[ex]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[eK]:"Invalid authentication header provided",[eB]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[eF]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[eG]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."};e$[ev],e$[e_],e$[eE],e$[ew],e$[eS],e$[eR],e$[ek],e$[eb],e$[eO],e$[eN],e$[eP],e$[eM],e$[eq],e$[eU],e$[eH],e$[eL],e$[eD],e$[ex],e$[eK],e$[eB],e$[eF],e$[eG];class ez extends l.l4{constructor(e){super(e,e$[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,ez.prototype)}}function eQ(e){return new ez(e)}class eW{static isEmptyObj(e){if(e)try{let t=JSON.parse(e);return 0===Object.keys(t).length}catch(e){}return!0}static startsWith(e,t){return 0===e.indexOf(t)}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){let t={},r=e.split("&"),n=e=>decodeURIComponent(e.replace(/\+/g," "));return r.forEach(e=>{if(e.trim()){let[r,i]=e.split(/=(.+)/g,2);r&&i&&(t[n(r)]=n(i))}}),t}static trimArrayEntries(e){return e.map(e=>e.trim())}static removeEmptyStringsFromArray(e){return e.filter(e=>!!e)}static jsonParseHelper(e){try{return JSON.parse(e)}catch(e){return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}class eV{constructor(e){let t=e?eW.trimArrayEntries([...e]):[],r=t?eW.removeEmptyStringsFromArray(t):[];this.validateInputScopes(r),this.scopes=new Set,r.forEach(e=>this.scopes.add(e))}static fromString(e){return new eV((e||o.gT.EMPTY_STRING).split(" "))}static createSearchScopes(e){let t=new eV(e);return t.containsOnlyOIDCScopes()?t.removeScope(o.gT.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw eQ(eR)}containsScope(e){let t=new eV(this.printScopesLowerCase().split(" "));return!!e&&t.scopes.has(e.toLowerCase())}containsScopeSet(e){return!!e&&!(e.scopes.size<=0)&&this.scopes.size>=e.scopes.size&&e.asArray().every(e=>this.containsScope(e))}containsOnlyOIDCScopes(){let e=0;return o.$f.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(e=>this.appendScope(e))}catch(e){throw er(b)}}removeScope(e){if(!e)throw er(k);this.scopes.delete(e.trim())}removeOIDCScopes(){o.$f.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw er(O);let t=new Set;return e.scopes.forEach(e=>t.add(e.toLowerCase())),this.scopes.forEach(e=>t.add(e.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw er(O);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();let t=this.unionScopeSets(e),r=e.getScopeCount(),n=this.getScopeCount();return t.size<n+r}getScopeCount(){return this.scopes.size}asArray(){let e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):o.gT.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}function eY(e,t){if(!e)throw er(d);try{let r=t(e);return JSON.parse(r)}catch(e){throw er(h)}}function ej(e){if(!e)throw er(h);let t=e.split(o.Bv.CLIENT_INFO_SEPARATOR,2);return{uid:t[0],utid:t.length<2?o.gT.EMPTY_STRING:t[1]}}function eJ(e,t){return!!e&&!!t&&e===t.split(".")[1]}function eZ(e,t,r,n){if(!n)return{tenantId:r,localAccountId:t,isHomeTenant:eJ(r,e)};{let{oid:t,sub:r,tid:i,name:o,tfp:a,acr:s}=n,c=i||a||s||"";return{tenantId:c,localAccountId:t||r||"",name:o,isHomeTenant:eJ(c,e)}}}function eX(e,t,r,n){let i=e;if(t){let{isHomeTenant:r,...n}=t;i={...e,...n}}if(r){let{isHomeTenant:t,...o}=eZ(e.homeAccountId,e.localAccountId,e.tenantId,r);i={...i,...o,idTokenClaims:r,idToken:n}}return i}let e0={Default:0,Adfs:1,Dsts:2,Ciam:3};function e1(e){return e&&(e.tid||e.tfp||e.acr)||null}class e4{generateAccountId(){return[this.homeAccountId,this.environment].join(o.Bv.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return e4.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType,tenantProfiles:new Map((this.tenantProfiles||[]).map(e=>[e.tenantId,e]))}}isSingleTenant(){return!this.tenantProfiles}static generateAccountCacheKey(e){let t=e.homeAccountId.split(".")[1];return[e.homeAccountId,e.environment||"",t||e.tenantId||""].join(o.Bv.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t,r){let n;let i=new e4;t.authorityType===e0.Adfs?i.authorityType=o.iR.ADFS_ACCOUNT_TYPE:t.protocolMode===s.AAD?i.authorityType=o.iR.MSSTS_ACCOUNT_TYPE:i.authorityType=o.iR.GENERIC_ACCOUNT_TYPE,e.clientInfo&&r&&(n=eY(e.clientInfo,r)),i.clientInfo=e.clientInfo,i.homeAccountId=e.homeAccountId,i.nativeAccountId=e.nativeAccountId;let a=e.environment||t&&t.getPreferredCache();if(!a)throw er(H);i.environment=a,i.realm=n?.utid||e1(e.idTokenClaims)||"",i.localAccountId=n?.uid||e.idTokenClaims?.oid||e.idTokenClaims?.sub||"";let c=e.idTokenClaims?.preferred_username||e.idTokenClaims?.upn,l=e.idTokenClaims?.emails?e.idTokenClaims.emails[0]:null;if(i.username=c||l||"",i.name=e.idTokenClaims?.name||"",i.cloudGraphHostName=e.cloudGraphHostName,i.msGraphHost=e.msGraphHost,e.tenantProfiles)i.tenantProfiles=e.tenantProfiles;else{let t=eZ(e.homeAccountId,i.localAccountId,i.realm,e.idTokenClaims);i.tenantProfiles=[t]}return i}static createFromAccountInfo(e,t,r){let n=new e4;return n.authorityType=e.authorityType||o.iR.GENERIC_ACCOUNT_TYPE,n.homeAccountId=e.homeAccountId,n.localAccountId=e.localAccountId,n.nativeAccountId=e.nativeAccountId,n.realm=e.tenantId,n.environment=e.environment,n.username=e.username,n.name=e.name,n.cloudGraphHostName=t,n.msGraphHost=r,n.tenantProfiles=Array.from(e.tenantProfiles?.values()||[]),n}static generateHomeAccountId(e,t,r,n,i){if(!(t===e0.Adfs||t===e0.Dsts)){if(e)try{let t=eY(e,n.base64Decode);if(t.uid&&t.utid)return`${t.uid}.${t.utid}`}catch(e){}r.warning("No client info in response")}return i?.sub||""}static isAccountEntity(e){return!!e&&e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType")}static accountInfoIsEqual(e,t,r){if(!e||!t)return!1;let n=!0;if(r){let r=e.idTokenClaims||{},i=t.idTokenClaims||{};n=r.iat===i.iat&&r.nonce===i.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&n}}function e2(e){return e.startsWith("#/")?e.substring(2):e.startsWith("#")||e.startsWith("?")?e.substring(1):e}function e3(e){if(!e||0>e.indexOf("="))return null;try{let t=e2(e),r=Object.fromEntries(new URLSearchParams(t));if(r.code||r.error||r.error_description||r.state)return r}catch(e){throw er(f)}return null}class e6{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw eQ(eS);e.includes("#")||(this._urlString=e6.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return eW.endsWith(t,"?")?t=t.slice(0,-1):eW.endsWith(t,"?/")&&(t=t.slice(0,-2)),eW.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch(e){throw eQ(ew)}if(!e.HostNameAndPort||!e.PathSegments)throw eQ(ew);if(!e.Protocol||"https:"!==e.Protocol.toLowerCase())throw eQ(eE)}static appendQueryString(e,t){return t?0>e.indexOf("?")?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return e6.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){let t=this.getUrlComponents(),r=t.PathSegments;return e&&0!==r.length&&(r[0]===o.Nb.COMMON||r[0]===o.Nb.ORGANIZATIONS)&&(r[0]=e),e6.constructAuthorityUriFromObject(t)}getUrlComponents(){let e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw eQ(ew);let r={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]},n=r.AbsolutePath.split("/");return n=n.filter(e=>e&&e.length>0),r.PathSegments=n,r.QueryString&&r.QueryString.endsWith("/")&&(r.QueryString=r.QueryString.substring(0,r.QueryString.length-1)),r}static getDomainFromUrl(e){let t=RegExp("^([^:/?#]+://)?([^/?#]*)"),r=e.match(t);if(!r)throw eQ(ew);return r[2]}static getAbsoluteUrl(e,t){if(e[0]===o.gT.FORWARD_SLASH){let r=new e6(t).getUrlComponents();return r.Protocol+"//"+r.HostNameAndPort+e}return e}static constructAuthorityUriFromObject(e){return new e6(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static hashContainsKnownProperties(e){return!!e3(e)}}let e5={"login.microsoftonline.com":{token_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout"},"login.chinacloudapi.cn":{token_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys",issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",authorization_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout"},"login.microsoftonline.us":{token_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token",jwks_uri:"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys",issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",authorization_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize",end_session_endpoint:"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout"}},e7={metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]},e8=new Set;function e9(e,t,r,n){if(n?.trace(`getAliasesFromMetadata called with source: ${r}`),e&&t){let i=te(t,e);if(i)return n?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${r}, returning aliases`),i.aliases;n?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${r}`)}return null}function te(e,t){for(let r=0;r<e.length;r++){let n=e[r];if(n.aliases.includes(t))return n}return null}e7.metadata.forEach(e=>{e.aliases.forEach(e=>{e8.add(e)})});let tt="cache_quota_exceeded",tr="cache_error_unknown",tn={[tt]:"Exceeded cache storage capacity.",[tr]:"Unexpected error occurred when using cache storage."};class ti extends Error{constructor(e,t){let r=t||(tn[e]?tn[e]:tn[tr]);super(`${e}: ${r}`),Object.setPrototypeOf(this,ti.prototype),this.name="CacheError",this.errorCode=e,this.errorMessage=r}}class to{constructor(e,t,r,n){this.clientId=e,this.cryptoImpl=t,this.commonLogger=r.clone(ei,eo),this.staticAuthorityOptions=n}getAllAccounts(e){return this.buildTenantProfiles(this.getAccountsFilteredBy(e||{}),e)}getAccountInfoFilteredBy(e){let t=this.getAllAccounts(e);return t.length>1?t.sort(e=>e.idTokenClaims?-1:1)[0]:1===t.length?t[0]:null}getBaseAccountInfo(e){let t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}buildTenantProfiles(e,t){return e.flatMap(e=>this.getTenantProfilesFromAccountEntity(e,t?.tenantId,t))}getTenantedAccountInfoByFilter(e,t,r,n){let i;if(n&&!this.tenantProfileMatchesFilter(r,n))return null;let o=this.getIdToken(e,t,r.tenantId);return o&&(i=ea(o.secret,this.cryptoImpl.base64Decode),!this.idTokenClaimsMatchTenantProfileFilter(i,n))?null:eX(e,r,i,o?.secret)}getTenantProfilesFromAccountEntity(e,t,r){let n=e.getAccountInfo(),i=n.tenantProfiles||new Map,o=this.getTokenKeys();if(t){let e=i.get(t);if(!e)return[];i=new Map([[t,e]])}let a=[];return i.forEach(e=>{let t=this.getTenantedAccountInfoByFilter(n,o,e,r);t&&a.push(t)}),a}tenantProfileMatchesFilter(e,t){return(!t.localAccountId||!!this.matchLocalAccountIdFromTenantProfile(e,t.localAccountId))&&(!t.name||e.name===t.name)&&(void 0===t.isHomeTenant||e.isHomeTenant===t.isHomeTenant)}idTokenClaimsMatchTenantProfileFilter(e,t){return!t||(!t.localAccountId||!!this.matchLocalAccountIdFromTokenClaims(e,t.localAccountId))&&(!t.loginHint||!!this.matchLoginHintFromTokenClaims(e,t.loginHint))&&(!t.username||!!this.matchUsername(e.preferred_username,t.username))&&(!t.name||!!this.matchName(e,t.name))&&(!t.sid||!!this.matchSid(e,t.sid))}async saveCacheRecord(e,t,r){if(!e)throw er(U);try{e.account&&this.setAccount(e.account),e.idToken&&t?.idToken!==!1&&this.setIdTokenCredential(e.idToken),e.accessToken&&t?.accessToken!==!1&&await this.saveAccessToken(e.accessToken),e.refreshToken&&t?.refreshToken!==!1&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}catch(e){if(this.commonLogger?.error("CacheManager.saveCacheRecord: failed"),e instanceof Error){if(this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`,r),"QuotaExceededError"===e.name||"NS_ERROR_DOM_QUOTA_REACHED"===e.name||e.message.includes("exceeded the quota"))throw this.commonLogger?.error("CacheManager.saveCacheRecord: exceeded storage quota",r),new ti(tt);throw new ti(e.name,e.message)}throw this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`,r),new ti(tr)}}async saveAccessToken(e){let t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},r=this.getTokenKeys(),n=eV.fromString(e.target),i=[];r.accessToken.forEach(e=>{if(!this.accessTokenKeyMatchesFilter(e,t,!1))return;let r=this.getAccessTokenCredential(e);r&&this.credentialMatchesFilter(r,t)&&eV.fromString(r.target).intersectingScopeSets(n)&&i.push(this.removeAccessToken(e))}),await Promise.all(i),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){let t=this.getAccountKeys(),r=[];return t.forEach(t=>{if(!this.isAccountKey(t,e.homeAccountId))return;let n=this.getAccount(t,this.commonLogger);if(!n||e.homeAccountId&&!this.matchHomeAccountId(n,e.homeAccountId)||e.username&&!this.matchUsername(n.username,e.username)||e.environment&&!this.matchEnvironment(n,e.environment)||e.realm&&!this.matchRealm(n,e.realm)||e.nativeAccountId&&!this.matchNativeAccountId(n,e.nativeAccountId)||e.authorityType&&!this.matchAuthorityType(n,e.authorityType))return;let i={localAccountId:e?.localAccountId,name:e?.name},o=n.tenantProfiles?.filter(e=>this.tenantProfileMatchesFilter(e,i));o&&0===o.length||r.push(n)}),r}isAccountKey(e,t,r){return!(e.split(o.Bv.CACHE_KEY_SEPARATOR).length<3)&&(!t||!!e.toLowerCase().includes(t.toLowerCase()))&&(!r||!!e.toLowerCase().includes(r.toLowerCase()))}isCredentialKey(e){if(e.split(o.Bv.CACHE_KEY_SEPARATOR).length<6)return!1;let t=e.toLowerCase();if(-1===t.indexOf(o.d3.ID_TOKEN.toLowerCase())&&-1===t.indexOf(o.d3.ACCESS_TOKEN.toLowerCase())&&-1===t.indexOf(o.d3.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())&&-1===t.indexOf(o.d3.REFRESH_TOKEN.toLowerCase()))return!1;if(t.indexOf(o.d3.REFRESH_TOKEN.toLowerCase())>-1){let e=`${o.d3.REFRESH_TOKEN}${o.Bv.CACHE_KEY_SEPARATOR}${this.clientId}${o.Bv.CACHE_KEY_SEPARATOR}`,r=`${o.d3.REFRESH_TOKEN}${o.Bv.CACHE_KEY_SEPARATOR}${o.ch}${o.Bv.CACHE_KEY_SEPARATOR}`;if(-1===t.indexOf(e.toLowerCase())&&-1===t.indexOf(r.toLowerCase()))return!1}else if(-1===t.indexOf(this.clientId.toLowerCase()))return!1;return!0}credentialMatchesFilter(e,t){return(!t.clientId||!!this.matchClientId(e,t.clientId))&&(!t.userAssertionHash||!!this.matchUserAssertionHash(e,t.userAssertionHash))&&("string"!=typeof t.homeAccountId||!!this.matchHomeAccountId(e,t.homeAccountId))&&(!t.environment||!!this.matchEnvironment(e,t.environment))&&(!t.realm||!!this.matchRealm(e,t.realm))&&(!t.credentialType||!!this.matchCredentialType(e,t.credentialType))&&(!t.familyId||!!this.matchFamilyId(e,t.familyId))&&(!t.target||!!this.matchTarget(e,t.target))&&(!t.requestedClaimsHash&&!e.requestedClaimsHash||e.requestedClaimsHash===t.requestedClaimsHash)&&(e.credentialType!==o.d3.ACCESS_TOKEN_WITH_AUTH_SCHEME||(!t.tokenType||!!this.matchTokenType(e,t.tokenType))&&(t.tokenType!==o.hO.SSH||!t.keyId||!!this.matchKeyId(e,t.keyId)))}getAppMetadataFilteredBy(e){let t=this.getKeys(),r={};return t.forEach(t=>{if(!this.isAppMetadata(t))return;let n=this.getAppMetadata(t);n&&(!e.environment||this.matchEnvironment(n,e.environment))&&(!e.clientId||this.matchClientId(n,e.clientId))&&(r[t]=n)}),r}getAuthorityMetadataByAlias(e){let t=this.getAuthorityMetadataKeys(),r=null;return t.forEach(t=>{if(!this.isAuthorityMetadata(t)||-1===t.indexOf(this.clientId))return;let n=this.getAuthorityMetadata(t);n&&-1!==n.aliases.indexOf(e)&&(r=n)}),r}async removeAllAccounts(){let e=this.getAccountKeys(),t=[];e.forEach(e=>{t.push(this.removeAccount(e))}),await Promise.all(t)}async removeAccount(e){let t=this.getAccount(e,this.commonLogger);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){let t=this.getTokenKeys(),r=e.generateAccountId(),n=[];t.idToken.forEach(e=>{0===e.indexOf(r)&&this.removeIdToken(e)}),t.accessToken.forEach(e=>{0===e.indexOf(r)&&n.push(this.removeAccessToken(e))}),t.refreshToken.forEach(e=>{0===e.indexOf(r)&&this.removeRefreshToken(e)}),await Promise.all(n)}updateOutdatedCachedAccount(e,t,r){if(t&&t.isSingleTenant()){this.commonLogger?.verbose("updateOutdatedCachedAccount: Found a single-tenant (outdated) account entity in the cache, migrating to multi-tenant account entity");let n=this.getAccountKeys().filter(e=>e.startsWith(t.homeAccountId)),i=[];n.forEach(e=>{let t=this.getCachedAccountEntity(e);t&&i.push(t)});let o=i.find(e=>eJ(e.realm,e.homeAccountId))||i[0];o.tenantProfiles=i.map(e=>({tenantId:e.realm,localAccountId:e.localAccountId,name:e.name,isHomeTenant:eJ(e.realm,e.homeAccountId)}));let a=to.toObject(new e4,{...o}),s=a.generateAccountKey();return n.forEach(t=>{t!==s&&this.removeOutdatedAccount(e)}),this.setAccount(a),r?.verbose("Updated an outdated account entity in the cache"),a}return t}async removeAccessToken(e){let t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===o.d3.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===o.hO.POP){let e=t.keyId;if(e)try{await this.cryptoImpl.removeTokenBindingKey(e)}catch(e){throw er(Q)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach(e=>{this.isAppMetadata(e)&&this.removeItem(e)}),!0}readAccountFromCache(e){let t=e4.generateAccountCacheKey(e);return this.getAccount(t,this.commonLogger)}getIdToken(e,t,r,n,i){this.commonLogger.trace("CacheManager - getIdToken called");let a={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:o.d3.ID_TOKEN,clientId:this.clientId,realm:r},s=this.getIdTokensByFilter(a,t),c=s.size;if(c<1)return this.commonLogger.info("CacheManager:getIdToken - No token found"),null;if(c>1){let t=s;if(!r){let r=new Map;s.forEach((t,n)=>{t.realm===e.tenantId&&r.set(n,t)});let n=r.size;if(n<1)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result"),s.values().next().value;if(1===n)return this.commonLogger.info("CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile"),r.values().next().value;t=r}return this.commonLogger.info("CacheManager:getIdToken - Multiple matching ID tokens found, clearing them"),t.forEach((e,t)=>{this.removeIdToken(t)}),n&&i&&n.addFields({multiMatchedID:s.size},i),null}return this.commonLogger.info("CacheManager:getIdToken - Returning ID token"),s.values().next().value}getIdTokensByFilter(e,t){let r=t&&t.idToken||this.getTokenKeys().idToken,n=new Map;return r.forEach(t=>{if(!this.idTokenKeyMatchesFilter(t,{clientId:this.clientId,...e}))return;let r=this.getIdTokenCredential(t);r&&this.credentialMatchesFilter(r,e)&&n.set(t,r)}),n}idTokenKeyMatchesFilter(e,t){let r=e.toLowerCase();return(!t.clientId||-1!==r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase()))}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,r,n,i,a){this.commonLogger.trace("CacheManager - getAccessToken called");let s=eV.createSearchScopes(t.scopes),c=t.authenticationScheme||o.hO.BEARER,l=c&&c.toLowerCase()!==o.hO.BEARER.toLowerCase()?o.d3.ACCESS_TOKEN_WITH_AUTH_SCHEME:o.d3.ACCESS_TOKEN,h={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:l,clientId:this.clientId,realm:n||e.tenantId,target:s,tokenType:c,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},d=r&&r.accessToken||this.getTokenKeys().accessToken,u=[];d.forEach(e=>{if(this.accessTokenKeyMatchesFilter(e,h,!0)){let t=this.getAccessTokenCredential(e);t&&this.credentialMatchesFilter(t,h)&&u.push(t)}});let g=u.length;return g<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):g>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),u.forEach(e=>{this.removeAccessToken(eh(e))}),i&&a&&i.addFields({multiMatchedAT:u.length},a),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),u[0])}accessTokenKeyMatchesFilter(e,t,r){let n=e.toLowerCase();if(t.clientId&&-1===n.indexOf(t.clientId.toLowerCase())||t.homeAccountId&&-1===n.indexOf(t.homeAccountId.toLowerCase())||t.realm&&-1===n.indexOf(t.realm.toLowerCase())||t.requestedClaimsHash&&-1===n.indexOf(t.requestedClaimsHash.toLowerCase()))return!1;if(t.target){let e=t.target.asArray();for(let t=0;t<e.length;t++){if(r&&!n.includes(e[t].toLowerCase()))return!1;if(!r&&n.includes(e[t].toLowerCase()))break}}return!0}getAccessTokensByFilter(e){let t=this.getTokenKeys(),r=[];return t.accessToken.forEach(t=>{if(!this.accessTokenKeyMatchesFilter(t,e,!0))return;let n=this.getAccessTokenCredential(t);n&&this.credentialMatchesFilter(n,e)&&r.push(n)}),r}getRefreshToken(e,t,r,n,i){this.commonLogger.trace("CacheManager - getRefreshToken called");let a=t?o.ch:void 0,s={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:o.d3.REFRESH_TOKEN,clientId:this.clientId,familyId:a},c=r&&r.refreshToken||this.getTokenKeys().refreshToken,l=[];c.forEach(e=>{if(this.refreshTokenKeyMatchesFilter(e,s)){let t=this.getRefreshTokenCredential(e);t&&this.credentialMatchesFilter(t,s)&&l.push(t)}});let h=l.length;return h<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(h>1&&n&&i&&n.addFields({multiMatchedRT:h},i),this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),l[0])}refreshTokenKeyMatchesFilter(e,t){let r=e.toLowerCase();return(!t.familyId||-1!==r.indexOf(t.familyId.toLowerCase()))&&(!!t.familyId||!t.clientId||-1!==r.indexOf(t.clientId.toLowerCase()))&&(!t.homeAccountId||-1!==r.indexOf(t.homeAccountId.toLowerCase()))}readAppMetadataFromCache(e){let t={environment:e,clientId:this.clientId},r=this.getAppMetadataFilteredBy(t),n=Object.keys(r).map(e=>r[e]),i=n.length;if(i<1)return null;if(i>1)throw er(S);return n[0]}isAppMetadataFOCI(e){let t=this.readAppMetadataFromCache(e);return!!(t&&t.familyId===o.ch)}matchHomeAccountId(e,t){return!!("string"==typeof e.homeAccountId&&t===e.homeAccountId)}matchLocalAccountIdFromTokenClaims(e,t){return t===(e.oid||e.sub)}matchLocalAccountIdFromTenantProfile(e,t){return e.localAccountId===t}matchName(e,t){return!(t.toLowerCase()!==e.name?.toLowerCase())}matchUsername(e,t){return!!(e&&"string"==typeof e&&t?.toLowerCase()===e.toLowerCase())}matchUserAssertionHash(e,t){return!!(e.userAssertionHash&&t===e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){let r=function(e,t){let r;let n=e.canonicalAuthority;if(n){let i=new e6(n).getUrlComponents().HostNameAndPort;r=e9(i,e.cloudDiscoveryMetadata?.metadata,o.pQ.CONFIG,t)||e9(i,e7.metadata,o.pQ.HARDCODED_VALUES,t)||e.knownAuthorities}return r||[]}(this.staticAuthorityOptions,this.commonLogger);if(r.includes(t)&&r.includes(e.environment))return!0}let r=this.getAuthorityMetadataByAlias(t);return!!(r&&r.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!!(e.clientId&&t===e.clientId)}matchFamilyId(e,t){return!!(e.familyId&&t===e.familyId)}matchRealm(e,t){return!(e.realm?.toLowerCase()!==t.toLowerCase())}matchNativeAccountId(e,t){return!!(e.nativeAccountId&&t===e.nativeAccountId)}matchLoginHintFromTokenClaims(e,t){return e.login_hint===t||e.preferred_username===t||e.upn===t}matchSid(e,t){return e.sid===t}matchAuthorityType(e,t){return!!(e.authorityType&&t.toLowerCase()===e.authorityType.toLowerCase())}matchTarget(e,t){return(e.credentialType===o.d3.ACCESS_TOKEN||e.credentialType===o.d3.ACCESS_TOKEN_WITH_AUTH_SCHEME)&&!!e.target&&eV.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!!(e.tokenType&&e.tokenType===t)}matchKeyId(e,t){return!!(e.keyId&&e.keyId===t)}isAppMetadata(e){return -1!==e.indexOf(o.dg)}isAuthorityMetadata(e){return -1!==e.indexOf(o.QU.CACHE_KEY)}generateAuthorityMetadataCacheKey(e){return`${o.QU.CACHE_KEY}-${this.clientId}-${e}`}static toObject(e,t){for(let r in t)e[r]=t[r];return e}}class ta extends to{setAccount(){throw er(Z)}getAccount(){throw er(Z)}getCachedAccountEntity(){throw er(Z)}setIdTokenCredential(){throw er(Z)}getIdTokenCredential(){throw er(Z)}setAccessTokenCredential(){throw er(Z)}getAccessTokenCredential(){throw er(Z)}setRefreshTokenCredential(){throw er(Z)}getRefreshTokenCredential(){throw er(Z)}setAppMetadata(){throw er(Z)}getAppMetadata(){throw er(Z)}setServerTelemetry(){throw er(Z)}getServerTelemetry(){throw er(Z)}setAuthorityMetadata(){throw er(Z)}getAuthorityMetadata(){throw er(Z)}getAuthorityMetadataKeys(){throw er(Z)}setThrottlingCache(){throw er(Z)}getThrottlingCache(){throw er(Z)}removeItem(){throw er(Z)}getKeys(){throw er(Z)}getAccountKeys(){throw er(Z)}getTokenKeys(){throw er(Z)}async clear(){throw er(Z)}updateCredentialCacheKey(){throw er(Z)}removeOutdatedAccount(){throw er(Z)}}let ts={tokenRenewalOffsetSeconds:o.$A,preventCorsPreflight:!1},tc={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:i.Info,correlationId:o.gT.EMPTY_STRING},tl={claimsBasedCachingEnabled:!1},th={async sendGetRequestAsync(){throw er(Z)},async sendPostRequestAsync(){throw er(Z)}},td={sku:o.gT.SKU,version:eo,cpu:o.gT.EMPTY_STRING,os:o.gT.EMPTY_STRING},tu={clientSecret:o.gT.EMPTY_STRING,clientAssertion:void 0},tg={azureCloudInstance:c.None,tenant:`${o.gT.DEFAULT_COMMON_TENANT}`},tp={application:{appName:"",appVersion:""}};function tm(e){return e.authOptions.authority.options.protocolMode===s.OIDC}let tC={sendGetRequestAsync:()=>Promise.reject(er(Z)),sendPostRequestAsync:()=>Promise.reject(er(Z))},tf={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",AcquireTokenPreRedirect:"acquireTokenPreRedirect",AcquireTokenRedirect:"acquireTokenRedirect",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",AwaitConcurrentIframe:"awaitConcurrentIframe",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponse:"handleCodeResponse",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",DeserializeResponse:"deserializeResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromise",HandleNativeRedirectPromiseMeasurement:"handleNativeRedirectPromise",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"};tf.AcquireTokenByCode,tf.AcquireTokenByRefreshToken,tf.AcquireTokenSilent,tf.AcquireTokenSilentAsync,tf.AcquireTokenPopup,tf.AcquireTokenRedirect,tf.CryptoOptsGetPublicKeyThumbprint,tf.CryptoOptsSignJwt,tf.SilentCacheClientAcquireToken,tf.SilentIframeClientAcquireToken,tf.SilentRefreshClientAcquireToken,tf.SsoSilent,tf.StandardInteractionClientGetDiscoveredAuthority,tf.FetchAccountIdWithNativeBroker,tf.NativeInteractionClientAcquireToken,tf.BaseClientCreateTokenRequestHeaders,tf.RefreshTokenClientExecutePostToTokenEndpoint,tf.AuthorizationCodeClientExecutePostToTokenEndpoint,tf.BrokerHandhshake,tf.AcquireTokenByRefreshTokenInBroker,tf.AcquireTokenByBroker,tf.RefreshTokenClientExecuteTokenRequest,tf.RefreshTokenClientAcquireToken,tf.RefreshTokenClientAcquireTokenWithCachedRefreshToken,tf.RefreshTokenClientAcquireTokenByRefreshToken,tf.RefreshTokenClientCreateTokenRequestBody,tf.AcquireTokenFromCache,tf.SilentFlowClientAcquireCachedToken,tf.SilentFlowClientGenerateResultFromCacheRecord,tf.AcquireTokenBySilentIframe,tf.InitializeBaseRequest,tf.InitializeSilentRequest,tf.InitializeClientApplication,tf.SilentIframeClientTokenHelper,tf.SilentHandlerInitiateAuthRequest,tf.SilentHandlerMonitorIframeForHash,tf.SilentHandlerLoadFrame,tf.SilentHandlerLoadFrameSync,tf.StandardInteractionClientCreateAuthCodeClient,tf.StandardInteractionClientGetClientConfiguration,tf.StandardInteractionClientInitializeAuthorizationRequest,tf.StandardInteractionClientInitializeAuthorizationCodeRequest,tf.GetAuthCodeUrl,tf.HandleCodeResponseFromServer,tf.HandleCodeResponse,tf.UpdateTokenEndpointAuthority,tf.AuthClientAcquireToken,tf.AuthClientExecuteTokenRequest,tf.AuthClientCreateTokenRequestBody,tf.AuthClientCreateQueryString,tf.PopTokenGenerateCnf,tf.PopTokenGenerateKid,tf.HandleServerTokenResponse,tf.DeserializeResponse,tf.AuthorityFactoryCreateDiscoveredInstance,tf.AuthorityResolveEndpointsAsync,tf.AuthorityResolveEndpointsFromLocalSources,tf.AuthorityGetCloudDiscoveryMetadataFromNetwork,tf.AuthorityUpdateCloudDiscoveryMetadata,tf.AuthorityGetEndpointMetadataFromNetwork,tf.AuthorityUpdateEndpointMetadata,tf.AuthorityUpdateMetadataWithRegionalInformation,tf.RegionDiscoveryDetectRegion,tf.RegionDiscoveryGetRegionFromIMDS,tf.RegionDiscoveryGetCurrentVersion,tf.AcquireTokenByCodeAsync,tf.GetEndpointMetadataFromNetwork,tf.GetCloudDiscoveryMetadataFromNetworkMeasurement,tf.HandleRedirectPromiseMeasurement,tf.HandleNativeRedirectPromiseMeasurement,tf.UpdateCloudDiscoveryMetadataMeasurement,tf.UsernamePasswordClientAcquireToken,tf.NativeMessageHandlerHandshake,tf.NativeGenerateAuthResult,tf.RemoveHiddenIframe,tf.ClearTokensAndKeysWithClaims,tf.CacheManagerGetRefreshToken,tf.GeneratePkceCodes,tf.GenerateCodeVerifier,tf.GenerateCodeChallengeFromVerifier,tf.Sha256Digest,tf.GetRandomValues;class ty{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class tT{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:1,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new ty}}startPerformanceMeasurement(){return new ty}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}var tI=r(2392);class tA{navigateInternal(e,t){return tA.defaultNavigateWindow(e,t)}navigateExternal(e,t){return tA.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise(e=>{setTimeout(()=>{e(!0)},t.timeout)})}}var tv=r(6504),t_=r(874);class tE{async sendGetRequestAsync(e,t){let r;try{r=await fetch(e,{method:tI.EC.GET,headers:this.getFetchHeaders(t)})}catch(e){if(window.navigator.onLine)throw(0,tv.Z_)(t_.C8);throw(0,tv.Z_)(t_.Mq)}try{return{headers:this.getHeaderDict(r.headers),body:await r.json(),status:r.status}}catch(e){throw(0,tv.Z_)(t_.w6)}}async sendPostRequestAsync(e,t){let r;let n=t&&t.body||o.gT.EMPTY_STRING;try{r=await fetch(e,{method:tI.EC.POST,headers:this.getFetchHeaders(t),body:n})}catch(e){if(window.navigator.onLine)throw(0,tv.Z_)(t_.Dc);throw(0,tv.Z_)(t_.Mq)}try{return{headers:this.getHeaderDict(r.headers),body:await r.json(),status:r.status}}catch(e){throw(0,tv.Z_)(t_.w6)}}getFetchHeaders(e){let t=new Headers;if(!(e&&e.headers))return t;let r=e.headers;return Object.keys(r).forEach(e=>{t.append(e,r[e])}),t}getHeaderDict(e){let t={};return e.forEach((e,r)=>{t[r]=e}),t}}let tw="3.24.0";class tS{static loggerCallback(e,t){switch(e){case i.Error:console.error(t);return;case i.Info:console.info(t);return;case i.Verbose:console.debug(t);return;case i.Warning:console.warn(t);return;default:console.log(t);return}}constructor(e){let t;this.browserEnvironment="undefined"!=typeof window,this.config=function({auth:e,cache:t,system:r,telemetry:n},l){let h={clientId:o.gT.EMPTY_STRING,authority:`${o.gT.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:o.gT.EMPTY_STRING,authorityMetadata:o.gT.EMPTY_STRING,redirectUri:o.gT.EMPTY_STRING,postLogoutRedirectUri:o.gT.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:s.AAD,OIDCOptions:{serverResponseType:o.rg.FRAGMENT,defaultScopes:[o.gT.OPENID_SCOPE,o.gT.PROFILE_SCOPE,o.gT.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:c.None,tenant:o.gT.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1,instanceAware:!1},d={cacheLocation:tI.Ix.SessionStorage,temporaryCacheLocation:tI.Ix.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!!t&&t.cacheLocation===tI.Ix.LocalStorage,claimsBasedCachingEnabled:!1},u={loggerCallback:()=>{},logLevel:i.Info,piiLoggingEnabled:!1},g={...{...ts,loggerOptions:u,networkClient:l?new tE:tC,navigationClient:new tA,loadFrameTimeout:0,windowHashTimeout:r?.loadFrameTimeout||6e4,iframeHashTimeout:r?.loadFrameTimeout||1e4,navigateFrameWait:0,redirectNavigationTimeout:3e4,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:r?.nativeBrokerHandshakeTimeout||2e3,pollIntervalMilliseconds:tI.qx.DEFAULT_POLL_INTERVAL_MS},...r,loggerOptions:r?.loggerOptions||u},p={application:{appName:o.gT.EMPTY_STRING,appVersion:o.gT.EMPTY_STRING},client:new tT};if(e?.protocolMode!==s.OIDC&&e?.OIDCOptions&&new a(g.loggerOptions).warning(JSON.stringify(eQ(eB))),e?.protocolMode&&e.protocolMode!==s.AAD&&g?.allowNativeBroker)throw eQ(eF);return{auth:{...h,...e,OIDCOptions:{...h.OIDCOptions,...e?.OIDCOptions}},cache:{...d,...t},system:g,telemetry:{...p,...n}}}(e,this.browserEnvironment);try{t=window[tI.Ix.SessionStorage]}catch(e){}let r=t?.getItem(tI.bg),n=t?.getItem(tI.PK)?.toLowerCase(),l="true"===n||"false"!==n&&void 0,h={...this.config.system.loggerOptions},d=r&&Object.keys(i).includes(r)?i[r]:void 0;d&&(h.loggerCallback=tS.loggerCallback,h.logLevel=d),void 0!==l&&(h.piiLoggingEnabled=l),this.logger=new a(h,"@azure/msal-browser",tw),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}class tR extends tS{getModuleName(){return tR.MODULE_NAME}getId(){return tR.ID}async initialize(){return this.available="undefined"!=typeof window,this.available}}tR.MODULE_NAME="",tR.ID="StandardOperatingContext";let tk="missing_kid_error",tb="missing_alg_error",tO={[tk]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[tb]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class tN extends l.l4{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,tN.prototype)}}function tP(e){return new tN(e,tO[e])}class tM{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw tP(tk);if(!e.alg)throw tP(tb);return JSON.stringify(new tM({typ:e.typ||o.xd.Pop,kid:e.kid,alg:e.alg}))}}function tq(e){return encodeURIComponent(tH(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function tU(e){return tL(e).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function tH(e){return tL(new TextEncoder().encode(e))}function tL(e){return btoa(Array.from(e,e=>String.fromCodePoint(e)).join(""))}function tD(e){return new TextDecoder().decode(function(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw(0,tv.Z_)(t_.lZ)}let r=atob(t);return Uint8Array.from(r,e=>e.codePointAt(0)||0)}(e))}let tx="SHA-256",tK=new Uint8Array([1,0,1]),tB="0123456789abcdef",tF=new Uint32Array(1),tG={name:"RSASSA-PKCS1-v1_5",hash:tx,modulusLength:2048,publicExponent:tK};async function t$(e,t,r){t?.addQueueMeasurement(tf.Sha256Digest,r);let n=new TextEncoder().encode(e);return window.crypto.subtle.digest(tx,n)}function tz(e){return window.crypto.getRandomValues(e)}function tQ(){return window.crypto.getRandomValues(tF),tF[0]}function tW(){let e=Date.now(),t=1024*tQ()+(1023&tQ()),r=new Uint8Array(16),n=Math.trunc(t/1073741824),i=t&1073741824-1,o=tQ();r[0]=e/1099511627776,r[1]=e/4294967296,r[2]=e/16777216,r[3]=e/65536,r[4]=e/256,r[5]=e,r[6]=112|n>>>8,r[7]=n,r[8]=128|i>>>24,r[9]=i>>>16,r[10]=i>>>8,r[11]=i,r[12]=o>>>24,r[13]=o>>>16,r[14]=o>>>8,r[15]=o;let a="";for(let e=0;e<r.length;e++)a+=tB.charAt(r[e]>>>4)+tB.charAt(15&r[e]),(3===e||5===e||7===e||9===e)&&(a+="-");return a}async function tV(e,t){return window.crypto.subtle.generateKey(tG,e,t)}async function tY(e){return window.crypto.subtle.exportKey(tI.Mm,e)}async function tj(e,t,r){return window.crypto.subtle.importKey(tI.Mm,e,tG,t,r)}async function tJ(e,t){return window.crypto.subtle.sign(tG,e,t)}async function tZ(e){return tU(new Uint8Array(await t$(e)))}class tX{constructor(){this.dbName=tI.H4,this.version=tI.kd,this.tableName=tI.Gv,this.dbOpen=!1}async open(){return new Promise((e,t)=>{let r=window.indexedDB.open(this.dbName,this.version);r.addEventListener("upgradeneeded",e=>{e.target.result.createObjectStore(this.tableName)}),r.addEventListener("success",t=>{this.db=t.target.result,this.dbOpen=!0,e()}),r.addEventListener("error",()=>t((0,tv.Z_)(t_.Pi)))})}closeConnection(){let e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r((0,tv.Z_)(t_.IL));let n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);n.addEventListener("success",e=>{this.closeConnection(),t(e.target.result)}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((r,n)=>{if(!this.db)return n((0,tv.Z_)(t_.IL));let i=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);i.addEventListener("success",()=>{this.closeConnection(),r()}),i.addEventListener("error",e=>{this.closeConnection(),n(e)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r((0,tv.Z_)(t_.IL));let n=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);n.addEventListener("success",()=>{this.closeConnection(),t()}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t((0,tv.Z_)(t_.IL));let r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",t=>{this.closeConnection(),e(t.target.result)}),r.addEventListener("error",e=>{this.closeConnection(),t(e)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,r)=>{if(!this.db)return r((0,tv.Z_)(t_.IL));let n=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);n.addEventListener("success",e=>{this.closeConnection(),t(1===e.target.result)}),n.addEventListener("error",e=>{this.closeConnection(),r(e)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{let r=window.indexedDB.deleteDatabase(tI.H4),n=setTimeout(()=>t(!1),200);r.addEventListener("success",()=>(clearTimeout(n),e(!0))),r.addEventListener("blocked",()=>(clearTimeout(n),e(!0))),r.addEventListener("error",()=>(clearTimeout(n),t(!1)))})}}class t0{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){let e=[];return this.cache.forEach((t,r)=>{e.push(r)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}class t1{constructor(e){this.inMemoryCache=new t0,this.indexedDBCache=new tX,this.logger=e}handleDatabaseAccessError(e){if(e instanceof tv.Ut&&e.errorCode===t_.Pi)this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.");else throw e}async getItem(e){let t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(e){this.handleDatabaseAccessError(e)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(e){this.handleDatabaseAccessError(e)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(e){this.handleDatabaseAccessError(e)}}async getKeys(){let e=this.inMemoryCache.getKeys();if(0===e.length)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(e){this.handleDatabaseAccessError(e)}return e}async containsKey(e){let t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(e){this.handleDatabaseAccessError(e)}return t}clearInMemory(){this.logger.verbose("Deleting in-memory keystore"),this.inMemoryCache.clear(),this.logger.verbose("In-memory keystore deleted")}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");let e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}class t4{constructor(e,t){this.logger=e,function(e){if("crypto"in window)e.verbose("BrowserCrypto: modern crypto interface available");else throw e.error("BrowserCrypto: crypto interface is unavailable"),(0,tv.Z_)(t_.TR)}(e),this.cache=new t1(this.logger),this.performanceClient=t}createNewGuid(){return tW()}base64Encode(e){return tH(e)}base64Decode(e){return tD(e)}base64UrlEncode(e){return tq(e)}encodeKid(e){return this.base64UrlEncode(JSON.stringify({kid:e}))}async getPublicKeyThumbprint(e){let t=this.performanceClient?.startMeasurement(tf.CryptoOptsGetPublicKeyThumbprint,e.correlationId),r=await tV(t4.EXTRACTABLE,t4.POP_KEY_USAGES),n=await tY(r.publicKey),i=t2({e:n.e,kty:n.kty,n:n.n}),o=await this.hashString(i),a=await tY(r.privateKey),s=await tj(a,!1,["sign"]);return await this.cache.setItem(o,{privateKey:s,publicKey:r.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),o}async removeTokenBindingKey(e){return await this.cache.removeItem(e),!await this.cache.containsKey(e)}async clearKeystore(){this.cache.clearInMemory();try{return await this.cache.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}async signJwt(e,t,r,n){let i=this.performanceClient?.startMeasurement(tf.CryptoOptsSignJwt,n),o=await this.cache.getItem(t);if(!o)throw(0,tv.Z_)(t_.XM);let a=await tY(o.publicKey),s=t2(a),c=tq(JSON.stringify({kid:t})),l=tq(tM.getShrHeaderString({...r?.header,alg:a.alg,kid:c}));e.cnf={jwk:JSON.parse(s)};let h=tq(JSON.stringify(e)),d=`${l}.${h}`,u=new TextEncoder().encode(d),g=tU(new Uint8Array(await tJ(o.privateKey,u))),p=`${d}.${g}`;return i&&i.end({success:!0}),p}async hashString(e){return tZ(e)}}function t2(e){return JSON.stringify(e,Object.keys(e).sort())}t4.POP_KEY_USAGES=["sign","verify"],t4.EXTRACTABLE=!0;let t3=(e,t,r,n,i)=>(...o)=>{r.trace(`Executing function ${t}`);let a=n?.startMeasurement(t,i);i&&n?.incrementFields({[t+"CallCount"]:1},i);try{let n=e(...o);return a?.end({success:!0}),r.trace(`Returning result from ${t}`),n}catch(e){r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw a?.end({success:!1},e),e}},t6=(e,t,r,n,i)=>(...o)=>{r.trace(`Executing function ${t}`);let a=n?.startMeasurement(t,i);return i&&n?.incrementFields({[t+"CallCount"]:1},i),n?.setPreQueueTime(t,i),e(...o).then(e=>(r.trace(`Returning result from ${t}`),a?.end({success:!0}),e)).catch(e=>{r.trace(`Error occurred in ${t}`);try{r.trace(JSON.stringify(e))}catch(e){r.trace("Unable to print error message.")}throw a?.end({success:!1},e),e})};class t5{constructor(e,t,r,n){this.networkInterface=e,this.logger=t,this.performanceClient=r,this.correlationId=n}async detectRegion(e,t){this.performanceClient?.addQueueMeasurement(tf.RegionDiscoveryDetectRegion,this.correlationId);let r=e;if(r)t.region_source=o.W.ENVIRONMENT_VARIABLE;else{let e=t5.IMDS_OPTIONS;try{let n=await t6(this.getRegionFromIMDS.bind(this),tf.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(o.gT.IMDS_VERSION,e);if(n.status===o.YY.httpSuccess&&(r=n.body,t.region_source=o.W.IMDS),n.status===o.YY.httpBadRequest){let n=await t6(this.getCurrentVersion.bind(this),tf.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(e);if(!n)return t.region_source=o.W.FAILED_AUTO_DETECTION,null;let i=await t6(this.getRegionFromIMDS.bind(this),tf.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(n,e);i.status===o.YY.httpSuccess&&(r=i.body,t.region_source=o.W.IMDS)}}catch(e){return t.region_source=o.W.FAILED_AUTO_DETECTION,null}}return r||(t.region_source=o.W.FAILED_AUTO_DETECTION),r||null}async getRegionFromIMDS(e,t){return this.performanceClient?.addQueueMeasurement(tf.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${o.gT.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,o.gT.IMDS_TIMEOUT)}async getCurrentVersion(e){this.performanceClient?.addQueueMeasurement(tf.RegionDiscoveryGetCurrentVersion,this.correlationId);try{let t=await this.networkInterface.sendGetRequestAsync(`${o.gT.IMDS_ENDPOINT}?format=json`,e);if(t.status===o.YY.httpBadRequest&&t.body&&t.body["newest-versions"]&&t.body["newest-versions"].length>0)return t.body["newest-versions"][0];return null}catch(e){return null}}}t5.IMDS_OPTIONS={headers:{Metadata:"true"}};class t7{constructor(e,t,r,n,i,o,a,s){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=r,this.authorityOptions=n,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=i,this.performanceClient=a,this.correlationId=o,this.managedIdentity=s||!1,this.regionDiscovery=new t5(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(o.gT.CIAM_AUTH_URL))return e0.Ciam;let t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case o.gT.ADFS:return e0.Adfs;case o.gT.DSTS:return e0.Dsts}return e0.Default}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new e6(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw er(p)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw er(p)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw er(p)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw er(W);return this.replacePath(this.metadata.end_session_endpoint)}throw er(p)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw er(p)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw er(p)}canReplaceTenant(e){return 1===e.PathSegments.length&&!t7.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===e0.Default&&this.protocolMode===s.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e,r=new e6(this.metadata.canonical_authority).getUrlComponents(),n=r.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((e,i)=>{let o=n[i];if(0===i&&this.canReplaceTenant(r)){let e=new e6(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];o!==e&&(this.logger.verbose(`Replacing tenant domain name ${o} with id ${e}`),o=e)}e!==o&&(t=t.replace(`/${o}/`,`/${e}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){let e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===e0.Adfs||this.protocolMode!==s.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){this.performanceClient?.addQueueMeasurement(tf.AuthorityResolveEndpointsAsync,this.correlationId);let e=this.getCurrentMetadataEntity(),t=await t6(this.updateCloudDiscoveryMetadata.bind(this),tf.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);let r=await t6(this.updateEndpointMetadata.bind(this),tf.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:r}),this.performanceClient?.addFields({cloudDiscoverySource:t,authorityEndpointSource:r},this.correlationId)}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e={aliases:[],preferred_cache:this.hostnameAndPort,preferred_network:this.hostnameAndPort,canonical_authority:this.canonicalAuthority,authorization_endpoint:"",token_endpoint:"",end_session_endpoint:"",issuer:"",aliasesFromNetwork:!1,endpointsFromNetwork:!1,expiresAt:ey(),jwks_uri:""}),e}updateCachedMetadata(e,t,r){t!==o.pQ.CACHE&&r?.source!==o.pQ.CACHE&&(e.expiresAt=ey(),e.canonical_authority=this.canonicalAuthority);let n=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(n,e),this.metadata=e}async updateEndpointMetadata(e){this.performanceClient?.addQueueMeasurement(tf.AuthorityUpdateEndpointMetadata,this.correlationId);let t=this.updateEndpointMetadataFromLocalSources(e);if(t)return t.source===o.pQ.HARDCODED_VALUES&&this.authorityOptions.azureRegionConfiguration?.azureRegion&&t.metadata&&(eT(e,await t6(this.updateMetadataWithRegionalInformation.bind(this),tf.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata),!1),e.canonical_authority=this.canonicalAuthority),t.source;let r=await t6(this.getEndpointMetadataFromNetwork.bind(this),tf.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return this.authorityOptions.azureRegionConfiguration?.azureRegion&&(r=await t6(this.updateMetadataWithRegionalInformation.bind(this),tf.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(r)),eT(e,r,!0),o.pQ.NETWORK;throw er(C,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");let t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),eT(e,t,!1),{source:o.pQ.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{let t=this.getEndpointMetadataFromHardcodedValues();if(t)return eT(e,t,!1),{source:o.pQ.HARDCODED_VALUES,metadata:t};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}let r=eA(e);return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!r?(this.logger.verbose("Found endpoint metadata in the cache."),{source:o.pQ.CACHE}):(r&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new e6(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch(e){throw eQ(eU)}return null}async getEndpointMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(tf.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);let e=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${e}`);try{var t;let r=await this.networkInterface.sendGetRequestAsync(e,{});if((t=r.body).hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("jwks_uri"))return r.body;return this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null}catch(e){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`),null}}getEndpointMetadataFromHardcodedValues(){return this.hostnameAndPort in e5?e5[this.hostnameAndPort]:null}async updateMetadataWithRegionalInformation(e){this.performanceClient?.addQueueMeasurement(tf.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);let t=this.authorityOptions.azureRegionConfiguration?.azureRegion;if(t){if(t!==o.gT.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=o.ki.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,t7.replaceWithRegionalInformation(e,t);let r=await t6(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),tf.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)(this.authorityOptions.azureRegionConfiguration?.environmentRegion,this.regionDiscoveryMetadata);if(r)return this.regionDiscoveryMetadata.region_outcome=o.ki.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=r,t7.replaceWithRegionalInformation(e,r);this.regionDiscoveryMetadata.region_outcome=o.ki.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){this.performanceClient?.addQueueMeasurement(tf.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);let t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;let r=await t6(this.getCloudDiscoveryMetadataFromNetwork.bind(this),tf.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(r)return eI(e,r,!0),o.pQ.NETWORK;throw eQ(eH)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||o.gT.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||o.gT.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||o.gT.NOT_APPLICABLE}`);let t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),eI(e,t,!1),o.pQ.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{var r;let t=(r=this.hostnameAndPort,te(e7.metadata,r));if(t)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),eI(e,t,!1),o.pQ.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}let n=eA(e);return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!n?(this.logger.verbose("Found cloud discovery metadata in the cache."),o.pQ.CACHE):(n&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===e0.Ciam)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),t7.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");let e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=te(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch(e){throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),eQ(eq)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),t7.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){this.performanceClient?.addQueueMeasurement(tf.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);let e=`${o.gT.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t=null;try{var r,n;let i,a;let s=await this.networkInterface.sendGetRequestAsync(e,{});if((r=s.body).hasOwnProperty("tenant_discovery_endpoint")&&r.hasOwnProperty("metadata"))a=(i=s.body).metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else{if(!((n=s.body).hasOwnProperty("error")&&n.hasOwnProperty("error_description")))return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${s.status}`),(i=s.body).error===o.gT.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),a=[]}this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),t=te(a,this.hostnameAndPort)}catch(e){return e instanceof l.l4?this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${e.errorCode}
Error Description: ${e.errorMessage}`):this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${e.name}
Error Description: ${e.message}`),null}return t||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),t=t7.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),t}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(e=>e&&e6.getDomainFromUrl(e).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let r;if(t&&t.azureCloudInstance!==c.None){let e=t.tenant?t.tenant:o.gT.DEFAULT_COMMON_TENANT;r=`${t.azureCloudInstance}/${e}/`}return r||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.managedIdentity)return o.gT.DEFAULT_AUTHORITY_HOST;if(this.discoveryComplete())return this.metadata.preferred_cache;throw er(p)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return e8.has(e)}static isPublicCloudAuthority(e){return o.gT.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,r){let n=new e6(e);n.validateAsUri();let i=n.getUrlComponents(),a=`${t}.${i.HostNameAndPort}`;this.isPublicCloudAuthority(i.HostNameAndPort)&&(a=`${t}.${o.gT.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);let s=e6.constructAuthorityUriFromObject({...n.getUrlComponents(),HostNameAndPort:a}).urlString;return r?`${s}?${r}`:s}static replaceWithRegionalInformation(e,t){let r={...e};return r.authorization_endpoint=t7.buildRegionalAuthorityString(r.authorization_endpoint,t),r.token_endpoint=t7.buildRegionalAuthorityString(r.token_endpoint,t),r.end_session_endpoint&&(r.end_session_endpoint=t7.buildRegionalAuthorityString(r.end_session_endpoint,t)),r}static transformCIAMAuthority(e){let t=e,r=new e6(e).getUrlComponents();if(0===r.PathSegments.length&&r.HostNameAndPort.endsWith(o.gT.CIAM_AUTH_URL)){let e=r.HostNameAndPort.split(".")[0];t=`${t}${e}${o.gT.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}function t8(e){return e.endsWith(o.gT.FORWARD_SLASH)?e:`${e}${o.gT.FORWARD_SLASH}`}t7.reservedTenantDomains=new Set(["{tenant}","{tenantid}",o.Nb.COMMON,o.Nb.CONSUMERS,o.Nb.ORGANIZATIONS]);let t9="no_tokens_found",re="native_account_unavailable",rt="refresh_token_expired",rr="bad_token",rn=["interaction_required","consent_required","login_required",rr],ri=["message_only","additional_action","basic_action","user_password_expired","consent_required","bad_token"],ro={[t9]:"No refresh token found in the cache. Please sign-in.",[re]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.",[rt]:"Refresh token has expired.",[rr]:"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve."};ro[t9],ro[re],ro[rr];class ra extends l.l4{constructor(e,t,r,n,i,a,s,c){super(e,t,r),Object.setPrototypeOf(this,ra.prototype),this.timestamp=n||o.gT.EMPTY_STRING,this.traceId=i||o.gT.EMPTY_STRING,this.correlationId=a||o.gT.EMPTY_STRING,this.claims=s||o.gT.EMPTY_STRING,this.name="InteractionRequiredAuthError",this.errorNo=c}}function rs(e,t,r){let n=!!e&&rn.indexOf(e)>-1,i=!!r&&ri.indexOf(r)>-1,o=!!t&&rn.some(e=>t.indexOf(e)>-1);return n||o||i}function rc(e){return new ra(e,ro[e])}class rl{static setRequestState(e,t,r){let n=rl.generateLibraryState(e,r);return t?`${n}${o.gT.RESOURCE_DELIM}${t}`:n}static generateLibraryState(e,t){if(!e)throw er(D);let r={id:e.createNewGuid()};t&&(r.meta=t);let n=JSON.stringify(r);return e.base64Encode(n)}static parseRequestState(e,t){if(!e)throw er(D);if(!t)throw er(y);try{let r=t.split(o.gT.RESOURCE_DELIM),n=r[0],i=r.length>1?r.slice(1).join(o.gT.RESOURCE_DELIM):o.gT.EMPTY_STRING,a=e.base64Decode(n),s=JSON.parse(a);return{userRequestState:i||o.gT.EMPTY_STRING,libraryState:s}}catch(e){throw er(y)}}}let rh={HOME_ACCOUNT_ID:"home_account_id",UPN:"UPN"},rd="storage_not_supported",ru="stubbed_public_client_application_called",rg="in_mem_redirect_unavailable",rp={[rd]:"Given storage configuration option was not supported.",[ru]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[rg]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};rp[rd],rp[ru],rp[rg];class rm extends l.l4{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,rm.prototype)}}function rC(e){return new rm(e,rp[e])}class rf{constructor(e){this.validateWindowStorage(e),this.windowStorage=window[e]}validateWindowStorage(e){if(e!==tI.Ix.LocalStorage&&e!==tI.Ix.SessionStorage||!window[e])throw rC(rd)}getItem(e){return this.windowStorage.getItem(e)}setItem(e,t){this.windowStorage.setItem(e,t)}removeItem(e){this.windowStorage.removeItem(e)}getKeys(){return Object.keys(this.windowStorage)}containsKey(e){return this.windowStorage.hasOwnProperty(e)}}function ry(e,t){if(!t)return null;try{return rl.parseRequestState(e,t).libraryState.meta}catch(e){throw er(y)}}class rT extends to{constructor(e,t,r,n,i,o){super(e,r,n,i),this.COOKIE_LIFE_MULTIPLIER=864e5,this.cacheConfig=t,this.logger=n,this.internalStorage=new t0,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation,this.cacheConfig.cacheLocation),t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps()),this.performanceClient=o}setupBrowserStorage(e){switch(e){case tI.Ix.LocalStorage:case tI.Ix.SessionStorage:try{return new rf(e)}catch(e){this.logger.verbose(e)}}return this.cacheConfig.cacheLocation=tI.Ix.MemoryStorage,new t0}setupTemporaryCacheStorage(e,t){switch(t){case tI.Ix.LocalStorage:case tI.Ix.SessionStorage:try{return new rf(e||tI.Ix.SessionStorage)}catch(e){return this.logger.verbose(e),this.internalStorage}case tI.Ix.MemoryStorage:default:return this.internalStorage}}migrateCacheEntries(){let e=`${o.gT.CACHE_PREFIX}.${o.Vi.ID_TOKEN}`,t=`${o.gT.CACHE_PREFIX}.${o.Vi.CLIENT_INFO}`,r=`${o.gT.CACHE_PREFIX}.${o.Vi.ERROR}`,n=`${o.gT.CACHE_PREFIX}.${o.Vi.ERROR_DESC}`,i=this.browserStorage.getItem(e),a=[i,this.browserStorage.getItem(t),this.browserStorage.getItem(r),this.browserStorage.getItem(n)];[o.Vi.ID_TOKEN,o.Vi.CLIENT_INFO,o.Vi.ERROR,o.Vi.ERROR_DESC].forEach((e,t)=>{let r=a[t];r&&this.setTemporaryCache(e,r,!0)})}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");let e=this.getItem(tI.Oq.ACCOUNT_KEYS),t=this.getItem(`${tI.Oq.TOKEN_KEYS}.${this.clientId}`);if(e&&t){this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.");return}this.browserStorage.getKeys().forEach(e=>{if(this.isCredentialKey(e)){let t=this.getItem(e);if(t){let r=this.validateAndParseJson(t);if(r&&r.hasOwnProperty("credentialType"))switch(r.credentialType){case o.d3.ID_TOKEN:if(eC(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${e} found, saving key to token key map`);let t=this.updateCredentialCacheKey(e,r);this.addTokenKey(t,o.d3.ID_TOKEN);return}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${e}`);break;case o.d3.ACCESS_TOKEN:case o.d3.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(em(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${e} found, saving key to token key map`);let t=this.updateCredentialCacheKey(e,r);this.addTokenKey(t,o.d3.ACCESS_TOKEN);return}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${e}`);break;case o.d3.REFRESH_TOKEN:if(ef(r)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${e} found, saving key to token key map`);let t=this.updateCredentialCacheKey(e,r);this.addTokenKey(t,o.d3.REFRESH_TOKEN);return}this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${e}`)}}}if(this.isAccountKey(e)){let t=this.getItem(e);if(t){let r=this.validateAndParseJson(t);r&&e4.isAccountEntity(r)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${e} found, saving key to account key map`),this.addAccountKeyToMap(e))}}})}validateAndParseJson(e){try{let t=JSON.parse(e);return t&&"object"==typeof t?t:null}catch(e){return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e,t){this.logger.trace("BrowserCacheManager.getAccount called");let r=this.getCachedAccountEntity(e);return this.updateOutdatedCachedAccount(e,r,t)}getCachedAccountEntity(e){let t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;let r=this.validateAndParseJson(t);return r&&e4.isAccountEntity(r)?to.toObject(new e4,r):(this.removeAccountKeyFromMap(e),null)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");let t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");let e=this.getItem(tI.Oq.ACCOUNT_KEYS);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);let t=this.getAccountKeys();-1===t.indexOf(e)?(t.push(e),this.setItem(tI.Oq.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);let t=this.getAccountKeys(),r=t.indexOf(e);r>-1?(t.splice(r,1),this.setItem(tI.Oq.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeOutdatedAccount(e){this.removeItem(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,o.d3.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,o.d3.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,o.d3.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");let e=this.getItem(`${tI.Oq.TOKEN_KEYS}.${this.clientId}`);if(e){let t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");let r=this.getTokenKeys();switch(t){case o.d3.ID_TOKEN:-1===r.idToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),r.idToken.push(e));break;case o.d3.ACCESS_TOKEN:-1===r.accessToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),r.accessToken.push(e));break;case o.d3.REFRESH_TOKEN:-1===r.refreshToken.indexOf(e)&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),r.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),er(x)}this.setItem(`${tI.Oq.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(r))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");let r=this.getTokenKeys();switch(t){case o.d3.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);let n=r.idToken.indexOf(e);n>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),r.idToken.splice(n,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case o.d3.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);let i=r.accessToken.indexOf(e);i>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),r.accessToken.splice(i,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case o.d3.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);let a=r.refreshToken.indexOf(e);a>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),r.refreshToken.splice(a,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),er(x)}this.setItem(`${tI.Oq.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(r))}getIdTokenCredential(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,o.d3.ID_TOKEN),null;let r=this.validateAndParseJson(t);return r&&eC(r)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,o.d3.ID_TOKEN),null)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");let t=eh(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,o.d3.ID_TOKEN)}getAccessTokenCredential(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,o.d3.ACCESS_TOKEN),null;let r=this.validateAndParseJson(t);return r&&em(r)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,o.d3.ACCESS_TOKEN),null)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");let t=eh(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,o.d3.ACCESS_TOKEN)}getRefreshTokenCredential(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,o.d3.REFRESH_TOKEN),null;let r=this.validateAndParseJson(t);return r&&ef(r)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),r):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,o.d3.REFRESH_TOKEN),null)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");let t=eh(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,o.d3.REFRESH_TOKEN)}getAppMetadata(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;let r=this.validateAndParseJson(t);return r&&r&&0===e.indexOf(o.dg)&&r.hasOwnProperty("clientId")&&r.hasOwnProperty("environment")?(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),r):(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null)}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");let t=function({environment:e,clientId:t}){return[o.dg,e,t].join(o.Bv.CACHE_KEY_SEPARATOR).toLowerCase()}(e);this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){let t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;let r=this.validateAndParseJson(t);return r&&function(e,t){let r=0===e.indexOf(o.HN.CACHE_KEY),n=!0;return t&&(n=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),r&&n}(e,r)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),r):(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null)}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){let t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;let r=this.validateAndParseJson(t);return r&&r&&0===e.indexOf(o.QU.CACHE_KEY)&&r.hasOwnProperty("aliases")&&r.hasOwnProperty("preferred_cache")&&r.hasOwnProperty("preferred_network")&&r.hasOwnProperty("canonical_authority")&&r.hasOwnProperty("authorization_endpoint")&&r.hasOwnProperty("token_endpoint")&&r.hasOwnProperty("issuer")&&r.hasOwnProperty("aliasesFromNetwork")&&r.hasOwnProperty("endpointsFromNetwork")&&r.hasOwnProperty("expiresAt")&&r.hasOwnProperty("jwks_uri")?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),r):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(e=>this.isAuthorityMetadata(e))}setWrapperMetadata(e,t){this.internalStorage.setItem(tI.Bs.WRAPPER_SKU,e),this.internalStorage.setItem(tI.Bs.WRAPPER_VER,t)}getWrapperMetadata(){return[this.internalStorage.getItem(tI.Bs.WRAPPER_SKU)||o.gT.EMPTY_STRING,this.internalStorage.getItem(tI.Bs.WRAPPER_VER)||o.gT.EMPTY_STRING]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){let e=this.generateCacheKey(o.Vi.ACTIVE_ACCOUNT_FILTERS),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");let e=this.generateCacheKey(o.Vi.ACTIVE_ACCOUNT),t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;let r=this.getAccountInfoFilteredBy({localAccountId:t});return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(r),r):null}let r=this.validateAndParseJson(t);return r?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:r.homeAccountId,localAccountId:r.localAccountId,tenantId:r.tenantId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){let t=this.generateCacheKey(o.Vi.ACTIVE_ACCOUNT_FILTERS),r=this.generateCacheKey(o.Vi.ACTIVE_ACCOUNT);if(e){this.logger.verbose("setActiveAccount: Active account set");let n={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId,tenantId:e.tenantId};this.browserStorage.setItem(t,JSON.stringify(n)),this.browserStorage.setItem(r,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(r)}getThrottlingCache(e){let t,r;let n=this.getItem(e);if(!n)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;let i=this.validateAndParseJson(n);return i&&(t=!1,e&&(t=0===e.indexOf(o.bb.THROTTLING_PREFIX)),r=!0,i&&(r=i.hasOwnProperty("throttleTime")),t&&r)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),i):(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null)}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){let r=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){let e=this.getItemCookie(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),e}let n=this.temporaryCacheStorage.getItem(r);if(!n){if(this.cacheConfig.cacheLocation===tI.Ix.LocalStorage){let e=this.browserStorage.getItem(r);if(e)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),e}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),n}setTemporaryCache(e,t,r){let n=r?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(n,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.setItemCookie(n,t))}removeItem(e){this.browserStorage.removeItem(e)}removeTemporaryItem(e){this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.clearItemCookie(e))}getKeys(){return this.browserStorage.getKeys()}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.temporaryCacheStorage.getKeys().forEach(e=>{(-1!==e.indexOf(o.gT.CACHE_PREFIX)||-1!==e.indexOf(this.clientId))&&this.removeTemporaryItem(e)}),this.browserStorage.getKeys().forEach(e=>{(-1!==e.indexOf(o.gT.CACHE_PREFIX)||-1!==e.indexOf(this.clientId))&&this.browserStorage.removeItem(e)}),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e,t){e.addQueueMeasurement(tf.ClearTokensAndKeysWithClaims,t);let r=this.getTokenKeys(),n=[];r.accessToken.forEach(e=>{let t=this.getAccessTokenCredential(e);t?.requestedClaimsHash&&e.includes(t.requestedClaimsHash.toLowerCase())&&n.push(this.removeAccessToken(e))}),await Promise.all(n),n.length>0&&this.logger.warning(`${n.length} access tokens with claims in the cache keys have been removed from the cache.`)}setItemCookie(e,t,r){let n=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(r){let e=this.getCookieExpirationTime(r);n+=`expires=${e};`}this.cacheConfig.secureCookies&&(n+="Secure;"),document.cookie=n}getItemCookie(e){let t=`${encodeURIComponent(e)}=`,r=document.cookie.split(";");for(let e=0;e<r.length;e++){let n=r[e];for(;" "===n.charAt(0);)n=n.substring(1);if(0===n.indexOf(t))return decodeURIComponent(n.substring(t.length,n.length))}return o.gT.EMPTY_STRING}clearMsalCookies(){let e=`${o.gT.CACHE_PREFIX}.${this.clientId}`;document.cookie.split(";").forEach(t=>{for(;" "===t.charAt(0);)t=t.substring(1);if(0===t.indexOf(e)){let e=t.split("=")[0];this.clearItemCookie(e)}})}clearItemCookie(e){this.setItemCookie(e,o.gT.EMPTY_STRING,-1)}getCookieExpirationTime(e){return new Date(new Date().getTime()+e*this.COOKIE_LIFE_MULTIPLIER).toUTCString()}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):eW.startsWith(e,o.gT.CACHE_PREFIX)||eW.startsWith(e,o.Vi.ADAL_ID_TOKEN)?e:`${o.gT.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){let{libraryState:{id:t}}=rl.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${tI.c4.AUTHORITY}.${t}`)}generateNonceKey(e){let{libraryState:{id:t}}=rl.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${tI.c4.NONCE_IDTOKEN}.${t}`)}generateStateKey(e){let{libraryState:{id:t}}=rl.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${tI.c4.REQUEST_STATE}.${t}`)}getCachedAuthority(e){let t=this.generateStateKey(e),r=this.getTemporaryCache(t);if(!r)return null;let n=this.generateAuthorityKey(r);return this.getTemporaryCache(n)}updateCacheEntries(e,t,r,n,i){this.logger.trace("BrowserCacheManager.updateCacheEntries called");let o=this.generateStateKey(e);this.setTemporaryCache(o,e,!1);let a=this.generateNonceKey(e);this.setTemporaryCache(a,t,!1);let s=this.generateAuthorityKey(e);if(this.setTemporaryCache(s,r,!1),i){let e={credential:i.homeAccountId,type:rh.HOME_ACCOUNT_ID};this.setTemporaryCache(tI.c4.CCS_CREDENTIAL,JSON.stringify(e),!0)}else if(n){let e={credential:n,type:rh.UPN};this.setTemporaryCache(tI.c4.CCS_CREDENTIAL,JSON.stringify(e),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.temporaryCacheStorage.getKeys().forEach(t=>{-1!==t.indexOf(e)&&this.removeTemporaryItem(t)}),this.removeTemporaryItem(this.generateStateKey(e)),this.removeTemporaryItem(this.generateNonceKey(e)),this.removeTemporaryItem(this.generateAuthorityKey(e))),this.removeTemporaryItem(this.generateCacheKey(tI.c4.REQUEST_PARAMS)),this.removeTemporaryItem(this.generateCacheKey(tI.c4.ORIGIN_URI)),this.removeTemporaryItem(this.generateCacheKey(tI.c4.URL_HASH)),this.removeTemporaryItem(this.generateCacheKey(tI.c4.CORRELATION_ID)),this.removeTemporaryItem(this.generateCacheKey(tI.c4.CCS_CREDENTIAL)),this.removeTemporaryItem(this.generateCacheKey(tI.c4.NATIVE_REQUEST)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){let t=this.generateStateKey(e),r=this.temporaryCacheStorage.getItem(t);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${r}`),this.resetRequestCache(r||o.gT.EMPTY_STRING)}this.clearMsalCookies()}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.temporaryCacheStorage.getKeys().forEach(t=>{if(-1===t.indexOf(tI.c4.REQUEST_STATE))return;let r=this.temporaryCacheStorage.getItem(t);if(!r)return;let n=ry(this.cryptoImpl,r);n&&n.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${r}`),this.resetRequestCache(r))}),this.clearMsalCookies(),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");let t=tH(JSON.stringify(e));this.setTemporaryCache(tI.c4.REQUEST_PARAMS,t,!0)}getCachedRequest(e){let t;this.logger.trace("BrowserCacheManager.getCachedRequest called");let r=this.getTemporaryCache(tI.c4.REQUEST_PARAMS,!0);if(!r)throw(0,tv.Z_)(t_.QO);try{t=JSON.parse(tD(r))}catch(e){throw this.logger.errorPii(`Attempted to parse: ${r}`),this.logger.error(`Parsing cached token request threw with error: ${e}`),(0,tv.Z_)(t_.e$)}if(this.removeTemporaryItem(this.generateCacheKey(tI.c4.REQUEST_PARAMS)),!t.authority){let r=this.generateAuthorityKey(e),n=this.getTemporaryCache(r);if(!n)throw(0,tv.Z_)(t_.dT);t.authority=n}return t}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");let e=this.getTemporaryCache(tI.c4.NATIVE_REQUEST,!0);return e?this.validateAndParseJson(e)||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null):(this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null)}isInteractionInProgress(e){let t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){let e=`${o.gT.CACHE_PREFIX}.${tI.c4.INTERACTION_STATUS_KEY}`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){let t=`${o.gT.CACHE_PREFIX}.${tI.c4.INTERACTION_STATUS_KEY}`;if(e){if(this.getInteractionInProgress())throw(0,tv.Z_)(t_.Ck);this.setTemporaryCache(t,this.clientId,!1)}else e||this.getInteractionInProgress()!==this.clientId||this.removeTemporaryItem(t)}getLegacyLoginHint(){let e=this.getTemporaryCache(o.Vi.ADAL_ID_TOKEN);e&&(this.browserStorage.removeItem(o.Vi.ADAL_ID_TOKEN),this.logger.verbose("Cached ADAL id token retrieved."));let t=this.getTemporaryCache(o.Vi.ID_TOKEN,!0);t&&(this.browserStorage.removeItem(this.generateCacheKey(o.Vi.ID_TOKEN)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));let r=t||e;if(r){let e=ea(r,tD);if(e.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),e.preferred_username;if(e.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),e.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){let r=eh(t);if(e!==r){let n=this.getItem(e);if(n)return this.browserStorage.removeItem(e),this.setItem(r,n),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),r;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}async hydrateCache(e,t){let r;let n=ed(e.account?.homeAccountId,e.account?.environment,e.idToken,this.clientId,e.tenantId);t.claims&&(r=await this.cryptoImpl.hashString(t.claims));let i=eu(e.account?.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),e.expiresOn?e.expiresOn.getTime()/1e3:0,e.extExpiresOn?e.extExpiresOn.getTime()/1e3:0,tD,void 0,e.tokenType,void 0,t.sshKid,t.claims,r);return this.saveCacheRecord({idToken:n,accessToken:i})}async saveCacheRecord(e,t,r){try{await super.saveCacheRecord(e,t,r)}catch(e){if(e instanceof ti&&this.performanceClient&&r)try{let e=this.getTokenKeys();this.performanceClient.addFields({cacheRtCount:e.refreshToken.length,cacheIdCount:e.idToken.length,cacheAtCount:e.accessToken.length},r)}catch(e){}throw e}}}let rI=(e,t)=>new rT(e,{cacheLocation:tI.Ix.MemoryStorage,temporaryCacheLocation:tI.Ix.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1},en,t);function rA(){return window.parent!==window}function rv(){return window.location.href.split("?")[0].split("#")[0]}function r_(e){if(!e)throw(0,tv.Z_)(t_.al)}function rE(e){!function(){if("undefined"==typeof window)throw(0,tv.Z_)(t_.Dx)}(),function(){if(e6.hashContainsKnownProperties(window.location.hash)&&rA())throw(0,tv.Z_)(t_.xO)}(),function(){if("undefined"!=typeof window&&window.opener&&window.opener!==window&&"string"==typeof window.name&&0===window.name.indexOf(`${tI.qx.POPUP_NAME_PREFIX}.`))throw(0,tv.Z_)(t_.bj)}(),r_(e)}function rw(e,t){if(rE(e),!function(e){if(rA()&&!e)throw(0,tv.Z_)(t_.b_)}(t.system.allowRedirectInIframe),t.cache.cacheLocation===tI.Ix.MemoryStorage&&!t.cache.storeAuthStateInCookie)throw rC(rg)}function rS(e){let t=document.createElement("link");t.rel="preconnect",t.href=new URL(e).origin,t.crossOrigin="anonymous",document.head.appendChild(t),window.setTimeout(()=>{try{document.head.removeChild(t)}catch{}},1e4)}let rR={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",ACTIVE_ACCOUNT_CHANGED:"msal:activeAccountChanged",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache"};class rk{constructor(e,t){this.eventCallbacks=new Map,this.logger=e,this.browserCrypto=t,this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}addEventCallback(e){if("undefined"!=typeof window){let t=tW();return this.eventCallbacks.set(t,e),this.logger.verbose(`Event callback registered with id: ${t}`),t}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}enableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){"undefined"!=typeof window&&(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}emitEvent(e,t,r,n){if("undefined"!=typeof window){let i={eventType:e,interactionType:t||null,payload:r||null,error:n||null,timestamp:Date.now()};this.logger.info(`Emitting event: ${e}`),this.eventCallbacks.forEach((t,r)=>{this.logger.verbose(`Emitting event to callback ${r}: ${e}`),t.apply(null,[i])})}}handleAccountCacheChange(e){try{e.key?.includes(o.Vi.ACTIVE_ACCOUNT_FILTERS)&&this.emitEvent(rR.ACTIVE_ACCOUNT_CHANGED);let t=e.newValue||e.oldValue;if(!t)return;let r=JSON.parse(t);if("object"!=typeof r||!e4.isAccountEntity(r))return;let n=to.toObject(new e4,r).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.emitEvent(rR.ACCOUNT_ADDED,void 0,n)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.emitEvent(rR.ACCOUNT_REMOVED,void 0,n))}catch(e){return}}}class rb extends l.l4{constructor(e,t,r,n,i){super(e,t,r),this.name="ServerError",this.errorNo=n,this.status=i,Object.setPrototypeOf(this,rb.prototype)}}class rO{static generateThrottlingStorageKey(e){return`${o.bb.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t){let r=rO.generateThrottlingStorageKey(t),n=e.getThrottlingCache(r);if(n){if(n.throttleTime<Date.now()){e.removeItem(r);return}throw new rb(n.errorCodes?.join(" ")||o.gT.EMPTY_STRING,n.errorMessage,n.subError)}}static postProcess(e,t,r){if(rO.checkResponseStatus(r)||rO.checkResponseForRetryAfter(r)){let n={throttleTime:rO.calculateThrottleTime(parseInt(r.headers[o.SZ.RETRY_AFTER])),error:r.body.error,errorCodes:r.body.error_codes,errorMessage:r.body.error_description,subError:r.body.suberror};e.setThrottlingCache(rO.generateThrottlingStorageKey(t),n)}}static checkResponseStatus(e){return 429===e.status||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return!!e.headers&&e.headers.hasOwnProperty(o.SZ.RETRY_AFTER)&&(e.status<200||e.status>=300)}static calculateThrottleTime(e){let t=Date.now()/1e3;return Math.floor(1e3*Math.min(t+((e<=0?0:e)||o.bb.DEFAULT_THROTTLE_TIME_SECONDS),t+o.bb.DEFAULT_MAX_THROTTLE_TIME_SECONDS))}static removeThrottle(e,t,r,n){let i={clientId:t,authority:r.authority,scopes:r.scopes,homeAccountIdentifier:n,claims:r.claims,authenticationScheme:r.authenticationScheme,resourceRequestMethod:r.resourceRequestMethod,resourceRequestUri:r.resourceRequestUri,shrClaims:r.shrClaims,sshKid:r.sshKid},o=this.generateThrottlingStorageKey(i);e.removeItem(o)}}class rN{constructor(e,t){this.networkClient=e,this.cacheManager=t}async sendPostRequest(e,t,r){let n;rO.preProcess(this.cacheManager,e);try{n=await this.networkClient.sendPostRequestAsync(t,r)}catch(e){if(e instanceof l.l4)throw e;throw er(m)}return rO.postProcess(this.cacheManager,e,n),n}}let rP="client_id",rM="response_type",rq="token_type",rU="req_cnf",rH="return_spa_code";class rL{static validateRedirectUri(e){if(!e)throw eQ(ev)}static validatePrompt(e){let t=[];for(let e in o.NJ)t.push(o.NJ[e]);if(0>t.indexOf(e))throw eQ(ek)}static validateClaims(e){try{JSON.parse(e)}catch(e){throw eQ(eb)}}static validateCodeChallengeParams(e,t){if(e&&t)this.validateCodeChallengeMethod(t);else throw eQ(eM)}static validateCodeChallengeMethod(e){if(0>[o.VX.PLAIN,o.VX.S256].indexOf(e))throw eQ(eP)}}class rD{constructor(){this.parameters=new Map}addResponseTypeCode(){this.parameters.set(rM,encodeURIComponent(o.gT.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(rM,encodeURIComponent(`${o.gT.TOKEN_RESPONSE_TYPE} ${o.gT.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set("response_mode",encodeURIComponent(e||o.vw.QUERY))}addNativeBroker(){this.parameters.set("nativebroker",encodeURIComponent("1"))}addScopes(e,t=!0,r=o.f_){!t||r.includes("openid")||e.includes("openid")||r.push("openid");let n=new eV(t?[...e||[],...r]:e||[]);this.parameters.set("scope",encodeURIComponent(n.printScopes()))}addClientId(e){this.parameters.set(rP,encodeURIComponent(e))}addRedirectUri(e){rL.validateRedirectUri(e),this.parameters.set("redirect_uri",encodeURIComponent(e))}addPostLogoutRedirectUri(e){rL.validateRedirectUri(e),this.parameters.set("post_logout_redirect_uri",encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set("id_token_hint",encodeURIComponent(e))}addDomainHint(e){this.parameters.set("domain_hint",encodeURIComponent(e))}addLoginHint(e){this.parameters.set("login_hint",encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(o.SZ.CCS_HEADER,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(o.SZ.CCS_HEADER,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set("sid",encodeURIComponent(e))}addClaims(e,t){let r=this.addClientCapabilitiesToClaims(e,t);rL.validateClaims(r),this.parameters.set("claims",encodeURIComponent(r))}addCorrelationId(e){this.parameters.set("client-request-id",encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set("x-client-SKU",e.sku),this.parameters.set("x-client-VER",e.version),e.os&&this.parameters.set("x-client-OS",e.os),e.cpu&&this.parameters.set("x-client-CPU",e.cpu)}addApplicationTelemetry(e){e?.appName&&this.parameters.set("x-app-name",e.appName),e?.appVersion&&this.parameters.set("x-app-ver",e.appVersion)}addPrompt(e){rL.validatePrompt(e),this.parameters.set("prompt",encodeURIComponent(e))}addState(e){e&&this.parameters.set("state",encodeURIComponent(e))}addNonce(e){this.parameters.set("nonce",encodeURIComponent(e))}addCodeChallengeParams(e,t){if(rL.validateCodeChallengeParams(e,t),e&&t)this.parameters.set("code_challenge",encodeURIComponent(e)),this.parameters.set("code_challenge_method",encodeURIComponent(t));else throw eQ(eM)}addAuthorizationCode(e){this.parameters.set("code",encodeURIComponent(e))}addDeviceCode(e){this.parameters.set("device_code",encodeURIComponent(e))}addRefreshToken(e){this.parameters.set("refresh_token",encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set("code_verifier",encodeURIComponent(e))}addClientSecret(e){this.parameters.set("client_secret",encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set("client_assertion",encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set("client_assertion_type",encodeURIComponent(e))}addOboAssertion(e){this.parameters.set("assertion",encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set("requested_token_use",encodeURIComponent(e))}addGrantType(e){this.parameters.set("grant_type",encodeURIComponent(e))}addClientInfo(){this.parameters.set(o.sR,"1")}addExtraQueryParameters(e){Object.entries(e).forEach(([e,t])=>{!this.parameters.has(e)&&t&&this.parameters.set(e,t)})}addClientCapabilitiesToClaims(e,t){let r;if(e)try{r=JSON.parse(e)}catch(e){throw eQ(eb)}else r={};return t&&t.length>0&&(r.hasOwnProperty(o.As.ACCESS_TOKEN)||(r[o.As.ACCESS_TOKEN]={}),r[o.As.ACCESS_TOKEN][o.As.XMS_CC]={values:t}),JSON.stringify(r)}addUsername(e){this.parameters.set(o.Ge.username,encodeURIComponent(e))}addPassword(e){this.parameters.set(o.Ge.password,encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(rq,o.hO.POP),this.parameters.set(rU,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(rq,o.hO.SSH),this.parameters.set(rU,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set("x-client-current-telemetry",e.generateCurrentRequestHeaderValue()),this.parameters.set("x-client-last-telemetry",e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set("x-ms-lib-capability",o.bb.X_MS_LIB_CAPABILITY_VALUE)}addLogoutHint(e){this.parameters.set("logout_hint",encodeURIComponent(e))}createQueryString(){let e=[];return this.parameters.forEach((t,r)=>{e.push(`${r}=${t}`)}),e.join("&")}}async function rx(e,t,r,n,i,o,a){a?.addQueueMeasurement(tf.AuthorityFactoryCreateDiscoveredInstance,o);let s=t7.transformCIAMAuthority(t8(e)),c=new t7(s,t,r,n,i,o,a);try{return await t6(c.resolveEndpointsAsync.bind(c),tf.AuthorityResolveEndpointsAsync,i,a,o)(),c}catch(e){throw er(p)}}class rK{constructor(e,t){this.config=function({authOptions:e,systemOptions:t,loggerOptions:r,cacheOptions:n,storageInterface:i,networkInterface:o,cryptoInterface:s,clientCredentials:c,libraryInfo:l,telemetry:h,serverTelemetryManager:d,persistencePlugin:u,serializableCache:g}){let p={...tc,...r};return{authOptions:{clientCapabilities:[],azureCloudOptions:tg,skipAuthorityMetadataCache:!1,instanceAware:!1,...e},systemOptions:{...ts,...t},loggerOptions:p,cacheOptions:{...tl,...n},storageInterface:i||new ta(e.clientId,en,new a(p)),networkInterface:o||th,cryptoInterface:s||en,clientCredentials:c||tu,libraryInfo:{...td,...l},telemetry:{...tp,...h},serverTelemetryManager:d||null,persistencePlugin:u||null,serializableCache:g||null}}(e),this.logger=new a(this.config.loggerOptions,ei,eo),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.networkManager=new rN(this.networkClient,this.cacheManager),this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){let t={};if(t[o.SZ.CONTENT_TYPE]=o.gT.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case rh.HOME_ACCOUNT_ID:try{let r=ej(e.credential);t[o.SZ.CCS_HEADER]=`Oid:${r.uid}@${r.utid}`}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case rh.UPN:t[o.SZ.CCS_HEADER]=`UPN: ${e.credential}`}return t}async executePostToTokenEndpoint(e,t,r,n,i,a){a&&this.performanceClient?.addQueueMeasurement(a,i);let s=await this.networkManager.sendPostRequest(n,e,{body:t,headers:r});return this.performanceClient?.addFields({refreshTokenSize:s.body.refresh_token?.length||0,httpVerToken:s.headers?.[o.SZ.X_MS_HTTP_VERSION]||""},i),this.config.serverTelemetryManager&&s.status<500&&429!==s.status&&this.config.serverTelemetryManager.clearTelemetryCache(),s}async updateAuthority(e,t){this.performanceClient?.addQueueMeasurement(tf.UpdateTokenEndpointAuthority,t);let r=`https://${e}/${this.authority.tenant}/`,n=await rx(r,this.networkClient,this.cacheManager,this.authority.options,this.logger,t,this.performanceClient);this.authority=n}createTokenQueryParameters(e){let t=new rD;return e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.createQueryString()}}class rB{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){this.performanceClient?.addQueueMeasurement(tf.PopTokenGenerateCnf,e.correlationId);let r=await t6(this.generateKid.bind(this),tf.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),n=this.cryptoUtils.base64UrlEncode(JSON.stringify(r));return{kid:r.kid,reqCnfString:n}}async generateKid(e){return this.performanceClient?.addQueueMeasurement(tf.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:"sw"}}async signPopToken(e,t,r){return this.signPayload(e,t,r)}async signPayload(e,t,r,n){let{resourceRequestMethod:i,resourceRequestUri:o,shrClaims:a,shrNonce:s,shrOptions:c}=r,l=o?new e6(o):void 0,h=l?.getUrlComponents();return this.cryptoUtils.signJwt({at:e,ts:ec(),m:i?.toUpperCase(),u:h?.HostNameAndPort,nonce:s||this.cryptoUtils.createNewGuid(),p:h?.AbsolutePath,q:h?.QueryString?[[],h.QueryString]:void 0,client_claims:a||void 0,...n},t,c,r.correlationId)}}class rF{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}class rG{constructor(e,t,r,n,i,o,a){this.clientId=e,this.cacheStorage=t,this.cryptoObj=r,this.logger=n,this.serializableCache=i,this.persistencePlugin=o,this.performanceClient=a}validateServerAuthorizationCodeResponse(e,t){let r,n;if(!e.state||!t)throw e.state?er(I,"Cached State"):er(I,"Server State");try{r=decodeURIComponent(e.state)}catch(t){throw er(y,e.state)}try{n=decodeURIComponent(t)}catch(t){throw er(y,e.state)}if(r!==n)throw er(T);if(e.error||e.error_description||e.suberror){let t=function(e){let t="code=",r=e.error_uri?.lastIndexOf(t);return r&&r>=0?e.error_uri?.substring(r+t.length):void 0}(e);if(rs(e.error,e.error_description,e.suberror))throw new ra(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||"",t);throw new rb(e.error||"",e.error_description,e.suberror,t)}}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){let r=`Error(s): ${e.error_codes||o.gT.NOT_AVAILABLE} - Timestamp: ${e.timestamp||o.gT.NOT_AVAILABLE} - Description: ${e.error_description||o.gT.NOT_AVAILABLE} - Correlation ID: ${e.correlation_id||o.gT.NOT_AVAILABLE} - Trace ID: ${e.trace_id||o.gT.NOT_AVAILABLE}`,n=e.error_codes?.length?e.error_codes[0]:void 0,i=new rb(e.error,r,e.suberror,n,e.status);if(t&&e.status&&e.status>=o.oj.SERVER_ERROR_RANGE_START&&e.status<=o.oj.SERVER_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${i}`);return}if(t&&e.status&&e.status>=o.oj.CLIENT_ERROR_RANGE_START&&e.status<=o.oj.CLIENT_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${i}`);return}if(rs(e.error,e.error_description,e.suberror))throw new ra(e.error,e.error_description,e.suberror,e.timestamp||o.gT.EMPTY_STRING,e.trace_id||o.gT.EMPTY_STRING,e.correlation_id||o.gT.EMPTY_STRING,e.claims||o.gT.EMPTY_STRING,n);throw i}}async handleServerTokenResponse(e,t,r,n,i,a,s,c,l){let h,d,u;if(this.performanceClient?.addQueueMeasurement(tf.HandleServerTokenResponse,e.correlation_id),e.id_token){if(h=ea(e.id_token||o.gT.EMPTY_STRING,this.cryptoObj.base64Decode),i&&i.nonce&&h.nonce!==i.nonce)throw er(A);if(n.maxAge||0===n.maxAge){let e=h.auth_time;if(!e)throw er(v);es(e,n.maxAge)}}this.homeAccountIdentifier=e4.generateHomeAccountId(e.client_info||o.gT.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,h),i&&i.state&&(d=rl.parseRequestState(this.cryptoObj,i.state)),e.key_id=e.key_id||n.sshKid||void 0;let g=this.generateCacheRecord(e,t,r,n,h,a,i);try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),u=new rF(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(u)),s&&!c&&g.account){let e=g.account.generateAccountKey();if(!this.cacheStorage.getAccount(e,this.logger))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),await rG.generateAuthenticationResult(this.cryptoObj,t,g,!1,n,h,d,void 0,l)}await this.cacheStorage.saveCacheRecord(g,n.storeInCache,n.correlationId)}finally{this.persistencePlugin&&this.serializableCache&&u&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(u))}return rG.generateAuthenticationResult(this.cryptoObj,t,g,!1,n,h,d,e,l)}generateCacheRecord(e,t,r,n,i,o,a){let s,c;let l=t.getPreferredCache();if(!l)throw er(H);let h=e1(i);e.id_token&&i&&(s=ed(this.homeAccountIdentifier,l,e.id_token,this.clientId,h||""),c=r$(this.cacheStorage,t,this.homeAccountIdentifier,this.cryptoObj.base64Decode,i,e.client_info,l,h,a,void 0,this.logger));let d=null;if(e.access_token){let i=e.scope?eV.fromString(e.scope):new eV(n.scopes||[]),a=("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,s=("string"==typeof e.ext_expires_in?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,c=("string"==typeof e.refresh_in?parseInt(e.refresh_in,10):e.refresh_in)||void 0,u=r+a;d=eu(this.homeAccountIdentifier,l,e.access_token,this.clientId,h||t.tenant||"",i.printScopes(),u,u+s,this.cryptoObj.base64Decode,c&&c>0?r+c:void 0,e.token_type,o,e.key_id,n.claims,n.requestedClaimsHash)}let u=null;if(e.refresh_token){let t;e.refresh_token_expires_in&&(t=r+("string"==typeof e.refresh_token_expires_in?parseInt(e.refresh_token_expires_in,10):e.refresh_token_expires_in)),u=eg(this.homeAccountIdentifier,l,e.refresh_token,this.clientId,e.foci,o,t)}let g=null;return e.foci&&(g={clientId:this.clientId,environment:l,familyId:e.foci}),{account:c,idToken:s,accessToken:d,refreshToken:u,appMetadata:g}}static async generateAuthenticationResult(e,t,r,n,i,a,s,c,l){let h,d,u=o.gT.EMPTY_STRING,g=[],p=null,m=o.gT.EMPTY_STRING;if(r.accessToken){if(r.accessToken.tokenType!==o.hO.POP||i.popKid)u=r.accessToken.secret;else{let t=new rB(e),{secret:n,keyId:o}=r.accessToken;if(!o)throw er(V);u=await t.signPopToken(n,o,i)}g=eV.fromString(r.accessToken.target).asArray(),p=new Date(1e3*Number(r.accessToken.expiresOn)),h=new Date(1e3*Number(r.accessToken.extendedExpiresOn)),r.accessToken.refreshOn&&(d=new Date(1e3*Number(r.accessToken.refreshOn)))}r.appMetadata&&(m=r.appMetadata.familyId===o.ch?o.ch:"");let C=a?.oid||a?.sub||"",f=a?.tid||"";c?.spa_accountid&&r.account&&(r.account.nativeAccountId=c?.spa_accountid);let y=r.account?eX(r.account.getAccountInfo(),void 0,a,r.idToken?.secret):null;return{authority:t.canonicalAuthority,uniqueId:C,tenantId:f,scopes:g,account:y,idToken:r?.idToken?.secret||"",idTokenClaims:a||{},accessToken:u,fromCache:n,expiresOn:p,extExpiresOn:h,refreshOn:d,correlationId:i.correlationId,requestId:l||o.gT.EMPTY_STRING,familyId:m,tokenType:r.accessToken?.tokenType||o.gT.EMPTY_STRING,state:s?s.userRequestState:o.gT.EMPTY_STRING,cloudGraphHostName:r.account?.cloudGraphHostName||o.gT.EMPTY_STRING,msGraphHost:r.account?.msGraphHost||o.gT.EMPTY_STRING,code:c?.spa_code,fromNativeBroker:!1}}}function r$(e,t,r,n,i,o,a,s,c,l,h){h?.verbose("setCachedAccount called");let d=e.getAccountKeys().find(e=>e.startsWith(r)),u=null;d&&(u=e.getAccount(d,h));let g=u||e4.createAccount({homeAccountId:r,idTokenClaims:i,clientInfo:o,environment:a,cloudGraphHostName:c?.cloud_graph_host_name,msGraphHost:c?.msgraph_host,nativeAccountId:l},t,n),p=g.tenantProfiles||[],m=s||g.realm;if(m&&!p.find(e=>e.tenantId===m)){let e=eZ(r,g.localAccountId,m,i);p.push(e)}return g.tenantProfiles=p,g}async function rz(e,t,r){return"string"==typeof e?e:e({clientId:t,tokenEndpoint:r})}class rQ extends rK{constructor(e,t){super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=this.config.authOptions.authority.options.OIDCOptions?.defaultScopes}async getAuthCodeUrl(e){this.performanceClient?.addQueueMeasurement(tf.GetAuthCodeUrl,e.correlationId);let t=await t6(this.createAuthCodeUrlQueryString.bind(this),tf.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return e6.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){if(this.performanceClient?.addQueueMeasurement(tf.AuthClientAcquireToken,e.correlationId),!e.code)throw er(R);let r=ec(),n=await t6(this.executeTokenRequest.bind(this),tf.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),i=n.headers?.[o.SZ.X_MS_REQUEST_ID],a=new rG(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return a.validateTokenResponse(n.body),t6(a.handleServerTokenResponse.bind(a),tf.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,r,e,t,void 0,void 0,void 0,i)}handleFragmentResponse(e,t){if(new rG(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null).validateServerAuthorizationCodeResponse(e,t),!e.code)throw er(z);return e}getLogoutUri(e){if(!e)throw eQ(eN);let t=this.createLogoutUrlQueryString(e);return e6.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){let r;this.performanceClient?.addQueueMeasurement(tf.AuthClientExecuteTokenRequest,t.correlationId);let n=this.createTokenQueryParameters(t),i=e6.appendQueryString(e.tokenEndpoint,n),a=await t6(this.createTokenRequestBody.bind(this),tf.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);if(t.clientInfo)try{let e=eY(t.clientInfo,this.cryptoUtils.base64Decode);r={credential:`${e.uid}${o.Bv.CLIENT_INFO_SEPARATOR}${e.utid}`,type:rh.HOME_ACCOUNT_ID}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}let s=this.createTokenRequestHeaders(r||t.ccsCredential),c={clientId:t.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return t6(this.executePostToTokenEndpoint.bind(this),tf.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(i,a,s,c,t.correlationId,tf.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){let t;this.performanceClient?.addQueueMeasurement(tf.AuthClientCreateTokenRequestBody,e.correlationId);let r=new rD;if(r.addClientId(e.tokenBodyParameters?.[rP]||this.config.authOptions.clientId),this.includeRedirectUri?r.addRedirectUri(e.redirectUri):rL.validateRedirectUri(e.redirectUri),r.addScopes(e.scopes,!0,this.oidcDefaultScopes),r.addAuthorizationCode(e.code),r.addLibraryInfo(this.config.libraryInfo),r.addApplicationTelemetry(this.config.telemetry.application),r.addThrottling(),this.serverTelemetryManager&&!tm(this.config)&&r.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&r.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&r.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){let t=this.config.clientCredentials.clientAssertion;r.addClientAssertion(await rz(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),r.addClientAssertionType(t.assertionType)}if(r.addGrantType(o.qJ.AUTHORIZATION_CODE_GRANT),r.addClientInfo(),e.authenticationScheme===o.hO.POP){let t;let n=new rB(this.cryptoUtils,this.performanceClient);t=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await t6(n.generateCnf.bind(n),tf.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,r.addPopToken(t)}else if(e.authenticationScheme===o.hO.SSH){if(e.sshJwk)r.addSshJwk(e.sshJwk);else throw eQ(eL)}let n=e.correlationId||this.config.cryptoInterface.createNewGuid();if(r.addCorrelationId(n),(!eW.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.clientInfo)try{let r=eY(e.clientInfo,this.cryptoUtils.base64Decode);t={credential:`${r.uid}${o.Bv.CLIENT_INFO_SEPARATOR}${r.utid}`,type:rh.HOME_ACCOUNT_ID}}catch(e){this.logger.verbose("Could not parse client info for CCS Header: "+e)}else t=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&t)switch(t.type){case rh.HOME_ACCOUNT_ID:try{let e=ej(t.credential);r.addCcsOid(e)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case rh.UPN:r.addCcsUpn(t.credential)}return e.tokenBodyParameters&&r.addExtraQueryParameters(e.tokenBodyParameters),!e.enableSpaAuthorizationCode||e.tokenBodyParameters&&e.tokenBodyParameters[rH]||r.addExtraQueryParameters({[rH]:"1"}),r.createQueryString()}async createAuthCodeUrlQueryString(e){this.performanceClient?.addQueueMeasurement(tf.AuthClientCreateQueryString,e.correlationId);let t=new rD;t.addClientId(e.extraQueryParameters?.[rP]||this.config.authOptions.clientId);let r=[...e.scopes||[],...e.extraScopesToConsent||[]];t.addScopes(r,!0,this.oidcDefaultScopes),t.addRedirectUri(e.redirectUri);let n=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(n),t.addResponseMode(e.responseMode),t.addResponseTypeCode(),t.addLibraryInfo(this.config.libraryInfo),tm(this.config)||t.addApplicationTelemetry(this.config.telemetry.application),t.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&t.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&t.addPrompt(e.prompt),e.domainHint&&t.addDomainHint(e.domainHint),e.prompt!==o.NJ.SELECT_ACCOUNT){if(e.sid&&e.prompt===o.NJ.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),t.addSid(e.sid);else if(e.account){let r=this.extractAccountSid(e.account),n=this.extractLoginHint(e.account);if(n&&e.domainHint&&(this.logger.warning('AuthorizationCodeClient.createAuthCodeUrlQueryString: "domainHint" param is set, skipping opaque "login_hint" claim. Please consider not passing domainHint'),n=null),n){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),t.addLoginHint(n);try{let r=ej(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(r&&e.prompt===o.NJ.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),t.addSid(r);try{let r=ej(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),t.addLoginHint(e.account.username);try{let r=ej(e.account.homeAccountId);t.addCcsOid(r)}catch(e){this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint))}else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&t.addNonce(e.nonce),e.state&&t.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.addExtraQueryParams(e,t),e.nativeBroker&&(t.addNativeBroker(),e.authenticationScheme===o.hO.POP)){let r;let n=new rB(this.cryptoUtils);r=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await t6(n.generateCnf.bind(n),tf.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,t.addPopToken(r)}return t.createQueryString()}createLogoutUrlQueryString(e){let t=new rD;return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),this.addExtraQueryParams(e,t),t.createQueryString()}addExtraQueryParams(e,t){!(e.extraQueryParameters&&e.extraQueryParameters.hasOwnProperty("instance_aware"))&&this.config.authOptions.instanceAware&&(e.extraQueryParameters=e.extraQueryParameters||{},e.extraQueryParameters.instance_aware="true"),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters)}extractAccountSid(e){return e.idTokenClaims?.sid||null}extractLoginHint(e){return e.idTokenClaims?.login_hint||null}}class rW{constructor(e,t){this.cacheOutcome=o.To.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||o.gT.EMPTY_STRING,this.wrapperVer=e.wrapperVer||o.gT.EMPTY_STRING,this.telemetryCacheKey=o.HN.CACHE_KEY+o.Bv.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){let e=`${this.apiId}${o.HN.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer],r=this.getNativeBrokerErrorCode();r?.length&&t.push(`broker_error=${r}`);let n=t.join(o.HN.VALUE_SEPARATOR),i=[e,this.getRegionDiscoveryFields()].join(o.HN.VALUE_SEPARATOR);return[o.HN.SCHEMA_VERSION,i,n].join(o.HN.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){let e=this.getLastRequests(),t=rW.maxErrorsToSend(e),r=e.failedRequests.slice(0,2*t).join(o.HN.VALUE_SEPARATOR),n=e.errors.slice(0,t).join(o.HN.VALUE_SEPARATOR),i=e.errors.length,a=t<i?o.HN.OVERFLOW_TRUE:o.HN.OVERFLOW_FALSE,s=[i,a].join(o.HN.VALUE_SEPARATOR);return[o.HN.SCHEMA_VERSION,e.cacheHits,r,n,s].join(o.HN.CATEGORY_SEPARATOR)}cacheFailedRequest(e){let t=this.getLastRequests();t.errors.length>=o.HN.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof l.l4?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(o.HN.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){let e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||{failedRequests:[],errors:[],cacheHits:0}}clearTelemetryCache(){let e=this.getLastRequests(),t=rW.maxErrorsToSend(e);if(t===e.errors.length)this.cacheManager.removeItem(this.telemetryCacheKey);else{let r={failedRequests:e.failedRequests.slice(2*t),errors:e.errors.slice(t),cacheHits:0};this.cacheManager.setServerTelemetry(this.telemetryCacheKey,r)}}static maxErrorsToSend(e){let t;let r=0,n=0,i=e.errors.length;for(t=0;t<i;t++){let i=e.failedRequests[2*t]||o.gT.EMPTY_STRING,a=e.failedRequests[2*t+1]||o.gT.EMPTY_STRING,s=e.errors[t]||o.gT.EMPTY_STRING;if((n+=i.toString().length+a.toString().length+s.length+3)<o.HN.MAX_LAST_HEADER_BYTES)r+=1;else break}return r}getRegionDiscoveryFields(){let e=[];return e.push(this.regionUsed||o.gT.EMPTY_STRING),e.push(this.regionSource||o.gT.EMPTY_STRING),e.push(this.regionOutcome||o.gT.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}setNativeBrokerErrorCode(e){let t=this.getLastRequests();t.nativeBrokerErrorCode=e,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}getNativeBrokerErrorCode(){return this.getLastRequests().nativeBrokerErrorCode}clearNativeBrokerErrorCode(){let e=this.getLastRequests();delete e.nativeBrokerErrorCode,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e)}static makeExtraSkuString(e){return function(e){let{skus:t,libraryName:r,libraryVersion:n,extensionName:i,extensionVersion:o}=e,a=new Map([[0,[r,n]],[2,[i,o]]]),s=[];if(t?.length){if((s=t.split(",")).length<4)return t}else s=Array.from({length:4},()=>"|");return a.forEach((e,t)=>{2===e.length&&e[0]?.length&&e[1]?.length&&function(e){let{skuArr:t,index:r,skuName:n,skuVersion:i}=e;r>=t.length||(t[r]=[n,i].join("|"))}({skuArr:s,index:t,skuName:e[0],skuVersion:e[1]})}),s.join(",")}(e)}}class rV{constructor(e,t,r,n,i,o,a,s,c){this.config=e,this.browserStorage=t,this.browserCrypto=r,this.networkClient=this.config.system.networkClient,this.eventHandler=i,this.navigationClient=o,this.nativeMessageHandler=s,this.correlationId=c||tW(),this.logger=n.clone(tI.qx.MSAL_SKU,tw,this.correlationId),this.performanceClient=a}async clearCacheOnLogout(e){if(e){e4.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(e4.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch(e){this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch(e){this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}getRedirectUri(e){this.logger.verbose("getRedirectUri called");let t=e||this.config.auth.redirectUri||rv();return e6.getAbsoluteUrl(t,rv())}initializeServerTelemetryManager(e,t){return this.logger.verbose("initializeServerTelemetryManager called"),new rW({clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]},this.browserStorage)}async getDiscoveredAuthority(e){let{account:t}=e,r=e.requestExtraQueryParameters&&e.requestExtraQueryParameters.hasOwnProperty("instance_aware")?e.requestExtraQueryParameters.instance_aware:void 0;this.performanceClient.addQueueMeasurement(tf.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);let n={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},i=e.requestAuthority||this.config.auth.authority,o=r?.length?"true"===r:this.config.auth.instanceAware,a=t&&o?this.config.auth.authority.replace(e6.getDomainFromUrl(i),t.environment):i,s=t7.generateAuthority(a,e.requestAzureCloudOptions||this.config.auth.azureCloudOptions),c=await t6(rx,tf.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(s,this.config.system.networkClient,this.browserStorage,n,this.logger,this.correlationId,this.performanceClient);if(t&&!c.isAlias(t.environment))throw eQ(eG);return c}}async function rY(e,t,r){e.addQueueMeasurement(tf.GeneratePkceCodes,r);let n=t3(rj,tf.GenerateCodeVerifier,t,e,r)(e,t,r),i=await t6(rJ,tf.GenerateCodeChallengeFromVerifier,t,e,r)(n,e,t,r);return{verifier:n,challenge:i}}function rj(e,t,r){try{let n=new Uint8Array(32);return t3(tz,tf.GetRandomValues,t,e,r)(n),tU(n)}catch(e){throw(0,tv.Z_)(t_.vD)}}async function rJ(e,t,r,n){t.addQueueMeasurement(tf.GenerateCodeChallengeFromVerifier,n);try{let i=await t6(t$,tf.Sha256Digest,r,t,n)(e,t,n);return tU(new Uint8Array(i))}catch(e){throw(0,tv.Z_)(t_.vD)}}async function rZ(e,t,r,n){r.addQueueMeasurement(tf.InitializeBaseRequest,e.correlationId);let i=e.authority||t.auth.authority,a=[...e&&e.scopes||[]],s={...e,correlationId:e.correlationId,authority:i,scopes:a};if(s.authenticationScheme){if(s.authenticationScheme===o.hO.SSH){if(!e.sshJwk)throw eQ(eL);if(!e.sshKid)throw eQ(eD)}n.verbose(`Authentication Scheme set to "${s.authenticationScheme}" as configured in Auth request`)}else s.authenticationScheme=o.hO.BEARER,n.verbose('Authentication Scheme wasn\'t explicitly set in request, defaulting to "Bearer" request');return t.cache.claimsBasedCachingEnabled&&e.claims&&!eW.isEmptyObj(e.claims)&&(s.requestedClaimsHash=await tZ(e.claims)),s}async function rX(e,t,r,n,i){n.addQueueMeasurement(tf.InitializeSilentRequest,e.correlationId);let o=await t6(rZ,tf.InitializeBaseRequest,i,n,e.correlationId)(e,r,n,i);return{...e,...o,account:t,forceRefresh:e.forceRefresh||!1}}class r0 extends rV{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(tf.StandardInteractionClientInitializeAuthorizationCodeRequest,this.correlationId);let t=await t6(rY,tf.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),r={...e,redirectUri:e.redirectUri,code:o.gT.EMPTY_STRING,codeVerifier:t.verifier};return e.codeChallenge=t.challenge,e.codeChallengeMethod=o.gT.S256_CODE_CHALLENGE_METHOD,r}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e?.correlationId);let t={correlationId:this.correlationId||tW(),...e};if(e){if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){let r=this.getLogoutHintFromIdTokenClaims(e.account);r&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=r)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set")}else this.logger.verbose("logoutHint will not be set since no logout request was configured");return e&&null===e.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId):e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=e6.getAbsoluteUrl(e.postLogoutRedirectUri,rv())):null===this.config.auth.postLogoutRedirectUri?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=e6.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,rv())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=e6.getAbsoluteUrl(rv(),rv())),t}getLogoutHintFromIdTokenClaims(e){let t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e){return this.performanceClient.addQueueMeasurement(tf.StandardInteractionClientCreateAuthCodeClient,this.correlationId),new rQ(await t6(this.getClientConfiguration.bind(this),tf.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e),this.performanceClient)}async getClientConfiguration(e){let{serverTelemetryManager:t,requestAuthority:r,requestAzureCloudOptions:n,requestExtraQueryParameters:i,account:a}=e;this.performanceClient.addQueueMeasurement(tf.StandardInteractionClientGetClientConfiguration,this.correlationId);let s=await t6(this.getDiscoveredAuthority.bind(this),tf.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)({requestAuthority:r,requestAzureCloudOptions:n,requestExtraQueryParameters:i,account:a}),c=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:s,clientCapabilities:this.config.auth.clientCapabilities},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:c.loggerCallback,piiLoggingEnabled:c.piiLoggingEnabled,logLevel:c.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:t,libraryInfo:{sku:tI.qx.MSAL_SKU,version:tw,cpu:o.gT.EMPTY_STRING,os:o.gT.EMPTY_STRING},telemetry:this.config.telemetry}}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(tf.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);let r=this.getRedirectUri(e.redirectUri),n=rl.setRequestState(this.browserCrypto,e&&e.state||o.gT.EMPTY_STRING,{interactionType:t}),i={...await t6(rZ,tf.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)({...e,correlationId:this.correlationId},this.config,this.performanceClient,this.logger),redirectUri:r,state:n,nonce:e.nonce||tW(),responseMode:this.config.auth.OIDCOptions.serverResponseType},a=e.account||this.browserStorage.getActiveAccount();if(a&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${a.homeAccountId}`,this.correlationId),i.account=a),!i.loginHint&&!a){let e=this.browserStorage.getLegacyLoginHint();e&&(i.loginHint=e)}return i}}var r1=r(6213);let r4="user_switch",r2={[r4]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class r3 extends l.l4{constructor(e,t,r){super(e,t),Object.setPrototypeOf(this,r3.prototype),this.name="NativeAuthError",this.ext=r}}function r6(e){return!!e.ext&&!!e.ext.status&&("PERSISTENT_ERROR"===e.ext.status||"DISABLED"===e.ext.status)||!!e.ext&&!!e.ext.error&&-2147186943===e.ext.error||"ContentError"===e.errorCode}function r5(e,t,r){if(r&&r.status)switch(r.status){case"ACCOUNT_UNAVAILABLE":return rc(re);case"USER_INTERACTION_REQUIRED":return new ra(e,t);case"USER_CANCEL":return(0,tv.Z_)(t_.h7);case"NO_NETWORK":return(0,tv.Z_)(t_.Mq)}return new r3(e,r2[e]||t,r)}class r7 extends rK{constructor(e,t){super(e,t)}async acquireToken(e){this.performanceClient?.addQueueMeasurement(tf.RefreshTokenClientAcquireToken,e.correlationId);let t=ec(),r=await t6(this.executeTokenRequest.bind(this),tf.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),n=r.headers?.[o.SZ.X_MS_REQUEST_ID],i=new rG(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return i.validateTokenResponse(r.body),t6(i.handleServerTokenResponse.bind(i),tf.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(r.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,n)}async acquireTokenByRefreshToken(e){if(!e)throw eQ(eO);if(this.performanceClient?.addQueueMeasurement(tf.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw er(q);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return await t6(this.acquireTokenWithCachedRefreshToken.bind(this),tf.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(r){let e=r instanceof ra&&r.errorCode===t9,t=r instanceof rb&&r.errorCode===o.D1.INVALID_GRANT_ERROR&&r.subError===o.D1.CLIENT_MISMATCH_ERROR;if(e||t);else throw r}return t6(this.acquireTokenWithCachedRefreshToken.bind(this),tf.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){this.performanceClient?.addQueueMeasurement(tf.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);let r=t3(this.cacheManager.getRefreshToken.bind(this.cacheManager),tf.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t,void 0,this.performanceClient,e.correlationId);if(!r)throw rc(t9);if(r.expiresOn&&el(r.expiresOn,e.refreshTokenExpirationOffsetSeconds||300))throw rc(rt);let n={...e,refreshToken:r.secret,authenticationScheme:e.authenticationScheme||o.hO.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:rh.HOME_ACCOUNT_ID}};try{return await t6(this.acquireToken.bind(this),tf.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(n)}catch(e){if(e instanceof ra&&e.subError===rr){this.logger.verbose("acquireTokenWithRefreshToken: bad refresh token, removing from cache");let e=eh(r);this.cacheManager.removeRefreshToken(e)}throw e}}async executeTokenRequest(e,t){this.performanceClient?.addQueueMeasurement(tf.RefreshTokenClientExecuteTokenRequest,e.correlationId);let r=this.createTokenQueryParameters(e),n=e6.appendQueryString(t.tokenEndpoint,r),i=await t6(this.createTokenRequestBody.bind(this),tf.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),o=this.createTokenRequestHeaders(e.ccsCredential),a={clientId:e.tokenBodyParameters?.clientId||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return t6(this.executePostToTokenEndpoint.bind(this),tf.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(n,i,o,a,e.correlationId,tf.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){this.performanceClient?.addQueueMeasurement(tf.RefreshTokenClientCreateTokenRequestBody,e.correlationId);let t=e.correlationId,r=new rD;if(r.addClientId(e.tokenBodyParameters?.[rP]||this.config.authOptions.clientId),e.redirectUri&&r.addRedirectUri(e.redirectUri),r.addScopes(e.scopes,!0,this.config.authOptions.authority.options.OIDCOptions?.defaultScopes),r.addGrantType(o.qJ.REFRESH_TOKEN_GRANT),r.addClientInfo(),r.addLibraryInfo(this.config.libraryInfo),r.addApplicationTelemetry(this.config.telemetry.application),r.addThrottling(),this.serverTelemetryManager&&!tm(this.config)&&r.addServerTelemetry(this.serverTelemetryManager),r.addCorrelationId(t),r.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&r.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){let t=this.config.clientCredentials.clientAssertion;r.addClientAssertion(await rz(t.assertion,this.config.authOptions.clientId,e.resourceRequestUri)),r.addClientAssertionType(t.assertionType)}if(e.authenticationScheme===o.hO.POP){let t;let n=new rB(this.cryptoUtils,this.performanceClient);t=e.popKid?this.cryptoUtils.encodeKid(e.popKid):(await t6(n.generateCnf.bind(n),tf.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger)).reqCnfString,r.addPopToken(t)}else if(e.authenticationScheme===o.hO.SSH){if(e.sshJwk)r.addSshJwk(e.sshJwk);else throw eQ(eL)}if((!eW.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&r.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case rh.HOME_ACCOUNT_ID:try{let t=ej(e.ccsCredential.credential);r.addCcsOid(t)}catch(e){this.logger.verbose("Could not parse home account ID for CCS Header: "+e)}break;case rh.UPN:r.addCcsUpn(e.ccsCredential.credential)}return e.tokenBodyParameters&&r.addExtraQueryParameters(e.tokenBodyParameters),r.createQueryString()}}class r8 extends rK{constructor(e,t){super(e,t)}async acquireToken(e){try{let[t,r]=await this.acquireCachedToken({...e,scopes:e.scopes?.length?e.scopes:[...o.f_]});return r===o.To.PROACTIVELY_REFRESHED&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new r7(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch(()=>{})),t}catch(t){if(t instanceof et&&t.errorCode===F)return new r7(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){this.performanceClient?.addQueueMeasurement(tf.SilentFlowClientAcquireCachedToken,e.correlationId);let t=o.To.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!eW.isEmptyObj(e.claims))throw this.setCacheOutcome(o.To.FORCE_REFRESH_OR_CLAIMS,e.correlationId),er(F);if(!e.account)throw er(q);let r=e.account.tenantId||function(e){let t=new e6(e).getUrlComponents(),r=t.PathSegments.slice(-1)[0]?.toLowerCase();switch(r){case o.Nb.COMMON:case o.Nb.ORGANIZATIONS:case o.Nb.CONSUMERS:return;default:return r}}(e.authority),n=this.cacheManager.getTokenKeys(),i=this.cacheManager.getAccessToken(e.account,e,n,r,this.performanceClient,e.correlationId);if(i){if(Number(i.cachedAt)>ec()||el(i.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(o.To.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),er(F);i.refreshOn&&el(i.refreshOn,0)&&(t=o.To.PROACTIVELY_REFRESHED)}else throw this.setCacheOutcome(o.To.NO_CACHED_ACCESS_TOKEN,e.correlationId),er(F);let a=e.authority||this.authority.getPreferredCache(),s={account:this.cacheManager.readAccountFromCache(e.account),accessToken:i,idToken:this.cacheManager.getIdToken(e.account,n,r,this.performanceClient,e.correlationId),refreshToken:null,appMetadata:this.cacheManager.readAppMetadataFromCache(a)};return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await t6(this.generateResultFromCacheRecord.bind(this),tf.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(s,e),t]}setCacheOutcome(e,t){this.serverTelemetryManager?.setCacheOutcome(e),this.performanceClient?.addFields({cacheOutcome:e},t),e!==o.To.NOT_APPLICABLE&&this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){let r;if(this.performanceClient?.addQueueMeasurement(tf.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId),e.idToken&&(r=ea(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||0===t.maxAge){let e=r?.auth_time;if(!e)throw er(v);es(e,t.maxAge)}return rG.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,r)}}class r9 extends r0{async acquireToken(e){this.performanceClient.addQueueMeasurement(tf.SilentCacheClientAcquireToken,e.correlationId);let t=this.initializeServerTelemetryManager(tI.WN.acquireTokenSilent_silentFlow),r=new r8(await t6(this.getClientConfiguration.bind(this),tf.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:e.authority,requestAzureCloudOptions:e.azureCloudOptions,account:e.account}),this.performanceClient);this.logger.verbose("Silent auth client created");try{let t=(await t6(r.acquireCachedToken.bind(r),tf.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),t}catch(e){throw e instanceof tv.Ut&&e.errorCode===t_.XM&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),e}}logout(e){this.logger.verbose("logoutRedirect called");let t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t?.account)}}let ne={BROKER_CLIENT_ID:"brk_client_id",BROKER_REDIRECT_URI:"brk_redirect_uri"};class nt extends rV{constructor(e,t,r,n,i,o,a,s,c,l,h,d){super(e,t,r,n,i,o,s,c,d),this.apiId=a,this.accountId=l,this.nativeMessageHandler=c,this.nativeStorageManager=h,this.silentCacheClient=new r9(e,this.nativeStorageManager,r,n,i,o,s,c,d),this.serverTelemetryManager=this.initializeServerTelemetryManager(this.apiId);let u=this.nativeMessageHandler.getExtensionId()===tI.BD.PREFERRED_EXTENSION_ID?"chrome":this.nativeMessageHandler.getExtensionId()?.length?"unknown":void 0;this.skus=rW.makeExtraSkuString({libraryName:tI.qx.MSAL_SKU,libraryVersion:tw,extensionName:u,extensionVersion:this.nativeMessageHandler.getExtensionVersion()})}addRequestSKUs(e){e.extraParameters={...e.extraParameters,"x-client-xtra-sku":this.skus}}async acquireToken(e){this.performanceClient.addQueueMeasurement(tf.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");let t=this.performanceClient.startMeasurement(tf.NativeInteractionClientAcquireToken,e.correlationId),r=ec();try{let n=await this.initializeNativeRequest(e);try{let e=await this.acquireTokensFromCache(this.accountId,n);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),e}catch(e){this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}let{...i}=n,o={method:tI.Ky.GetToken,request:i},a=await this.nativeMessageHandler.sendMessage(o),s=this.validateNativeResponse(a);return await this.handleNativeResponse(s,n,r).then(e=>(t.end({success:!0,isNativeBroker:!0,requestId:e.requestId}),this.serverTelemetryManager.clearNativeBrokerErrorCode(),e)).catch(e=>{throw t.end({success:!1,errorCode:e.errorCode,subErrorCode:e.subError,isNativeBroker:!0}),e})}catch(e){throw e instanceof r3&&this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),e}}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:eV.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),er(L);let r=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!r)throw er(L);try{let e=this.createSilentCacheRequest(t,r),n=await this.silentCacheClient.acquireToken(e),i={...r,idTokenClaims:n?.idTokenClaims,idToken:n?.idToken};return{...n,account:i}}catch(e){throw e}}async acquireTokenRedirect(e,t){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");let{...r}=e;delete r.onRedirectNavigate;let n=await this.initializeNativeRequest(r),i={method:tI.Ky.GetToken,request:n};try{let e=await this.nativeMessageHandler.sendMessage(i);this.validateNativeResponse(e)}catch(e){if(e instanceof r3&&(this.serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode),r6(e)))throw e}this.browserStorage.setTemporaryCache(tI.c4.NATIVE_REQUEST,JSON.stringify(n),!0);let o={apiId:tI.WN.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},a=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);t.end({success:!0}),await this.navigationClient.navigateExternal(a,o)}async handleRedirectPromise(e,t){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;let r=this.browserStorage.getCachedNativeRequest();if(!r)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),e&&t&&e?.addFields({errorCode:"no_cached_request"},t),null;let{prompt:n,...i}=r;n&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(tI.c4.NATIVE_REQUEST));let o={method:tI.Ky.GetToken,request:i},a=ec();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");let e=await this.nativeMessageHandler.sendMessage(o);this.validateNativeResponse(e);let t=this.handleNativeResponse(e,i,a);this.browserStorage.setInteractionInProgress(!1);let r=await t;return this.serverTelemetryManager.clearNativeBrokerErrorCode(),r}catch(e){throw this.browserStorage.setInteractionInProgress(!1),e}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,r){this.logger.trace("NativeInteractionClient - handleNativeResponse called.");let n=ea(e.id_token,tD),i=this.createHomeAccountIdentifier(e,n);if(i!==this.browserStorage.getAccountInfoFilteredBy({nativeAccountId:t.accountId})?.homeAccountId&&e.account.id!==t.accountId)throw r5(r4);let o=await this.getDiscoveredAuthority({requestAuthority:t.authority}),a=r$(this.browserStorage,o,i,tD,n,e.client_info,void 0,n.tid,void 0,e.account.id,this.logger),s=await this.generateAuthenticationResult(e,t,n,a,o.canonicalAuthority,r);return this.cacheAccount(a),this.cacheNativeTokens(e,t,i,n,e.access_token,s.tenantId,r),s}createHomeAccountIdentifier(e,t){return e4.generateHomeAccountId(e.client_info||o.gT.EMPTY_STRING,e0.Default,this.logger,this.browserCrypto,t)}generateScopes(e,t){return e.scope?eV.fromString(e.scope):eV.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType!==o.hO.POP||!t.signPopToken)return e.access_token;{if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;let r=new rB(this.browserCrypto),n={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw er(V);return r.signPopToken(e.access_token,t.keyId,n)}}async generateAuthenticationResult(e,t,r,n,i,a){let s=this.addTelemetryFromNativeResponse(e),c=e.scope?eV.fromString(e.scope):eV.fromString(t.scope),l=e.account.properties||{},h=l.UID||r.oid||r.sub||o.gT.EMPTY_STRING,d=l.TenantId||r.tid||o.gT.EMPTY_STRING,u=eX(n.getAccountInfo(),void 0,r,e.id_token);u.nativeAccountId!==e.account.id&&(u.nativeAccountId=e.account.id);let g=await this.generatePopAccessToken(e,t),p=t.tokenType===o.hO.POP?o.hO.POP:o.hO.BEARER;return{authority:i,uniqueId:h,tenantId:d,scopes:c.asArray(),account:u,idToken:e.id_token,idTokenClaims:r,accessToken:g,fromCache:!!s&&this.isResponseFromCache(s),expiresOn:new Date(1e3*Number(a+e.expires_in)),tokenType:p,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch(e=>{this.logger.error(`Error occurred while removing account context from browser storage. ${e}`)})}cacheNativeTokens(e,t,r,n,i,a,s){let c=ed(r,t.authority,e.id_token||"",t.clientId,n.tid||""),l=t.tokenType===o.hO.POP?o.gT.SHR_NONCE_VALIDITY:("string"==typeof e.expires_in?parseInt(e.expires_in,10):e.expires_in)||0,h=this.generateScopes(e,t),d=eu(r,t.authority,i,t.clientId,n.tid||a,h.printScopes(),s+l,0,tD,void 0,t.tokenType,void 0,t.keyId);this.nativeStorageManager.saveCacheRecord({idToken:c,accessToken:d},t.storeInCache)}addTelemetryFromNativeResponse(e){let t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw(0,l.MD)(r1.g,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch(e){this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return void 0===e.is_cached?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");let t=e.authority||this.config.auth.authority;e.account&&await this.getDiscoveredAuthority({requestAuthority:t,requestAzureCloudOptions:e.azureCloudOptions,account:e.account});let r=new e6(t);r.validateAsUri();let{scopes:n,...i}=e,a=new eV(n||[]);a.appendScopes(o.f_);let s={...i,accountId:this.accountId,clientId:this.config.auth.clientId,authority:r.urlString,scope:a.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:(()=>{switch(this.apiId){case tI.WN.ssoSilent:case tI.WN.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),o.NJ.NONE}if(!e.prompt){this.logger.trace("initializeNativeRequest: prompt was not provided");return}switch(e.prompt){case o.NJ.NONE:case o.NJ.CONSENT:case o.NJ.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),(0,tv.Z_)(t_.o9)}})(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1,keyId:e.popKid};if(s.signPopToken&&e.popKid)throw(0,tv.Z_)(t_.Hh);if(this.handleExtraBrokerParams(s),s.extraParameters=s.extraParameters||{},s.extraParameters.telemetry=tI.BD.MATS_TELEMETRY,e.authenticationScheme===o.hO.POP){let t;let r={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},n=new rB(this.browserCrypto);if(s.keyId)t=this.browserCrypto.base64UrlEncode(JSON.stringify({kid:s.keyId})),s.signPopToken=!1;else{let i=await t6(n.generateCnf.bind(n),tf.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(r,this.logger);t=i.reqCnfString,s.keyId=i.kid,s.signPopToken=!0}s.reqCnf=t}return this.addRequestSKUs(s),s}handleExtraBrokerParams(e){if(e.extraParameters&&e.extraParameters.hasOwnProperty(ne.BROKER_CLIENT_ID)&&e.extraParameters.hasOwnProperty(ne.BROKER_REDIRECT_URI)&&e.extraParameters.hasOwnProperty(rP)){let t=e.extraParameters[rP],r=e.redirectUri,n=e.extraParameters[ne.BROKER_REDIRECT_URI];e.extraParameters={child_client_id:t,child_redirect_uri:r},e.redirectUri=n}}}class nr{constructor(e,t,r,n){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=n,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=r,this.handshakeEvent=r.startMeasurement(tf.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");let t={channel:tI.BD.CHANNEL_ID,extensionId:this.extensionId,responseId:tW(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise((e,r)=>{this.resolvers.set(t.responseId,{resolve:e,reject:r})})}static async createProvider(e,t,r){e.trace("NativeMessageHandler - createProvider called.");try{let n=new nr(e,t,r,tI.BD.PREFERRED_EXTENSION_ID);return await n.sendHandshakeRequest(),n}catch(i){let n=new nr(e,t,r);return await n.sendHandshakeRequest(),n}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);let e={channel:tI.BD.CHANNEL_ID,extensionId:this.extensionId,responseId:tW(),body:{method:tI.Ky.HandshakeRequest}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=e=>{this.onChannelMessage(e)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,r)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:r}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),r((0,tv.Z_)(t_.hR)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;let t=e.data;if(t.channel&&t.channel===tI.BD.CHANNEL_ID&&(!t.extensionId||t.extensionId===this.extensionId)&&t.body.method===tI.Ky.HandshakeRequest){let e=this.handshakeResolvers.get(t.responseId);if(!e){this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);return}this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),e.reject((0,tv.Z_)(t_.Wb))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");let t=e.data,r=this.resolvers.get(t.responseId),n=this.handshakeResolvers.get(t.responseId);try{let e=t.body.method;if(e===tI.Ky.Response){if(!r)return;let e=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(e)}`),"Success"!==e.status)r.reject(r5(e.code,e.description,e.ext));else if(e.result)e.result.code&&e.result.description?r.reject(r5(e.result.code,e.result.description,e.result.ext)):r.resolve(e.result);else throw(0,l.MD)(r1.g,"Event does not contain result.");this.resolvers.delete(t.responseId)}else if(e===tI.Ky.HandshakeResponse){if(!n){this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);return}clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),n.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(t){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${t}`),this.logger.errorPii(`Unable to parse ${e}`),r?r.reject(t):n&&n.reject(t)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,r,n){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!r)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(n)switch(n){case o.hO.BEARER:case o.hO.POP:t.trace("isNativeAvailable: authenticationScheme is supported, returning true");break;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}class nn{constructor(e,t,r,n,i){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=i}async handleCodeResponse(e,t){let r;this.performanceClient.addQueueMeasurement(tf.HandleCodeResponse,t.correlationId);try{r=this.authModule.handleFragmentResponse(e,t.state)}catch(e){if(e instanceof rb&&e.subError===t_.h7)throw(0,tv.Z_)(t_.h7);throw e}return t6(this.handleCodeResponseFromServer.bind(this),tf.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(r,t)}async handleCodeResponseFromServer(e,t,r=!0){if(this.performanceClient.addQueueMeasurement(tf.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await t6(this.authModule.updateAuthority.bind(this.authModule),tf.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),r&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{let e=this.createCcsCredentials(t);e&&(this.authCodeRequest.ccsCredential=e)}return await t6(this.authModule.acquireToken.bind(this.authModule),tf.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:rh.HOME_ACCOUNT_ID}:e.loginHint?{credential:e.loginHint,type:rh.UPN}:null}}function ni(e,t,r){let n=e3(e);if(!n){if(e2(e))throw r.error(`A ${t} is present in the iframe but it does not contain known properties. It's likely that the ${t} has been replaced by code running on the redirectUri page.`),r.errorPii(`The ${t} detected is: ${e}`),(0,tv.Z_)(t_.S_);throw r.error(`The request has returned to the redirectUri but a ${t} is not present. It's likely that the ${t} has been removed or the page has been redirected by code running on the redirectUri page.`),(0,tv.Z_)(t_.nF)}return n}class no extends r0{constructor(e,t,r,n,i,o,a,s,c,l){super(e,t,r,n,i,o,a,c,l),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=s}acquireToken(e){try{let t={popupName:this.generatePopupName(e.scopes||o.f_,e.authority||this.config.auth.authority),popupWindowAttributes:e.popupWindowAttributes||{},popupWindowParent:e.popupWindowParent??window};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,t);return this.logger.verbose("asyncPopup set to false, opening popup before acquiring token"),t.popup=this.openSizedPopup("about:blank",t),this.acquireTokenPopupAsync(e,t)}catch(e){return Promise.reject(e)}}logout(e){try{this.logger.verbose("logoutPopup called");let t=this.initializeLogoutRequest(e),r={popupName:this.generateLogoutPopupName(t),popupWindowAttributes:e?.popupWindowAttributes||{},popupWindowParent:e?.popupWindowParent??window},n=e&&e.authority,i=e&&e.mainWindowRedirectUri;if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,r,n,i);return this.logger.verbose("asyncPopup set to false, opening popup"),r.popup=this.openSizedPopup("about:blank",r),this.logoutPopupAsync(t,r,n,i)}catch(e){return Promise.reject(e)}}async acquireTokenPopupAsync(e,t){this.logger.verbose("acquireTokenPopupAsync called");let r=this.initializeServerTelemetryManager(tI.WN.acquireTokenPopup),n=await t6(this.initializeAuthorizationRequest.bind(this),tf.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,tI.s_.Popup);rS(n.authority);try{let i;let o=await t6(this.initializeAuthorizationCodeRequest.bind(this),tf.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(n),a=await t6(this.createAuthCodeClient.bind(this),tf.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:n.authority,requestAzureCloudOptions:n.azureCloudOptions,requestExtraQueryParameters:n.extraQueryParameters,account:n.account}),s=nr.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);s&&(i=this.performanceClient.startMeasurement(tf.FetchAccountIdWithNativeBroker,e.correlationId));let c=await a.getAuthCodeUrl({...n,nativeBroker:s}),l=new nn(a,this.browserStorage,o,this.logger,this.performanceClient),h=this.initiateAuthRequest(c,t);this.eventHandler.emitEvent(rR.POPUP_OPENED,tI.s_.Popup,{popupWindow:h},null);let d=await this.monitorPopupForHash(h,t.popupWindowParent),u=t3(ni,tf.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(d,this.config.auth.OIDCOptions.serverResponseType,this.logger);if(rO.removeThrottle(this.browserStorage,this.config.auth.clientId,o),u.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),i&&i.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw(0,tv.Z_)(t_.V7);let e=new nt(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,tI.WN.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,u.accountId,this.nativeStorage,n.correlationId),{userRequestState:t}=rl.parseRequestState(this.browserCrypto,n.state);return await e.acquireToken({...n,state:t,prompt:void 0})}return await l.handleCodeResponse(u,n)}catch(e){throw t.popup?.close(),e instanceof l.l4&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),e}}async logoutPopupAsync(e,t,r,n){this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(rR.LOGOUT_START,tI.s_.Popup,e);let i=this.initializeServerTelemetryManager(tI.WN.logoutPopup);try{await this.clearCacheOnLogout(e.account);let o=await t6(this.createAuthCodeClient.bind(this),tf.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:i,requestAuthority:r,account:e.account||void 0});try{o.authority.endSessionEndpoint}catch{if(e.account?.homeAccountId&&e.postLogoutRedirectUri&&o.authority.protocolMode===s.OIDC){if(this.browserStorage.removeAccount(e.account?.homeAccountId),this.eventHandler.emitEvent(rR.LOGOUT_SUCCESS,tI.s_.Popup,e),n){let e={apiId:tI.WN.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=e6.getAbsoluteUrl(n,rv());await this.navigationClient.navigateInternal(t,e)}t.popup?.close();return}}let a=o.getLogoutUri(e);this.eventHandler.emitEvent(rR.LOGOUT_SUCCESS,tI.s_.Popup,e);let c=this.openPopup(a,t);if(this.eventHandler.emitEvent(rR.POPUP_OPENED,tI.s_.Popup,{popupWindow:c},null),await this.monitorPopupForHash(c,t.popupWindowParent).catch(()=>{}),n){let e={apiId:tI.WN.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},t=e6.getAbsoluteUrl(n,rv());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${t}`),await this.navigationClient.navigateInternal(t,e)}else this.logger.verbose("No main window navigation requested")}catch(e){throw t.popup?.close(),e instanceof l.l4&&(e.setCorrelationId(this.correlationId),i.cacheFailedRequest(e)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(rR.LOGOUT_FAILURE,tI.s_.Popup,null,e),this.eventHandler.emitEvent(rR.LOGOUT_END,tI.s_.Popup),e}this.eventHandler.emitEvent(rR.LOGOUT_END,tI.s_.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),(0,tv.Z_)(t_._c)}monitorPopupForHash(e,t){return new Promise((t,r)=>{this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");let n=setInterval(()=>{if(e.closed){this.logger.error("PopupHandler.monitorPopupForHash - window closed"),clearInterval(n),r((0,tv.Z_)(t_.h7));return}let i="";try{i=e.location.href}catch(e){}if(!i||"about:blank"===i)return;clearInterval(n);let a="",s=this.config.auth.OIDCOptions.serverResponseType;e&&(a=s===o.rg.QUERY?e.location.search:e.location.hash),this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),t(a)},this.config.system.pollIntervalMilliseconds)}).finally(()=>{this.cleanPopup(e,t)})}openPopup(e,t){try{let r;if(t.popup?(r=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),r.location.assign(e)):void 0===t.popup&&(this.logger.verbosePii(`Opening popup window to: ${e}`),r=this.openSizedPopup(e,t)),!r)throw(0,tv.Z_)(t_.H);return r.focus&&r.focus(),this.currentWindow=r,t.popupWindowParent.addEventListener("beforeunload",this.unloadWindow),r}catch(e){throw this.logger.error("error opening popup "+e.message),this.browserStorage.setInteractionInProgress(!1),(0,tv.Z_)(t_.E)}}openSizedPopup(e,{popupName:t,popupWindowAttributes:r,popupWindowParent:n}){let i=n.screenLeft?n.screenLeft:n.screenX,o=n.screenTop?n.screenTop:n.screenY,a=n.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,s=n.innerHeight||document.documentElement.clientHeight||document.body.clientHeight,c=r.popupSize?.width,l=r.popupSize?.height,h=r.popupPosition?.top,d=r.popupPosition?.left;return(!c||c<0||c>a)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),c=tI.qx.POPUP_WIDTH),(!l||l<0||l>s)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),l=tI.qx.POPUP_HEIGHT),(!h||h<0||h>s)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),h=Math.max(0,s/2-tI.qx.POPUP_HEIGHT/2+o)),(!d||d<0||d>a)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),d=Math.max(0,a/2-tI.qx.POPUP_WIDTH/2+i)),n.open(e,t,`width=${c}, height=${l}, top=${h}, left=${d}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(tI.s_.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e,t){e.close(),t.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${tI.qx.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){let t=e.account&&e.account.homeAccountId;return`${tI.qx.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}}class na{constructor(e,t,r,n,i){this.authModule=e,this.browserStorage=t,this.authCodeRequest=r,this.logger=n,this.performanceClient=i}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(tI.c4.ORIGIN_URI,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(tI.c4.CORRELATION_ID,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);let r={apiId:tI.WN.acquireTokenRedirect,timeout:t.redirectTimeout,noHistory:!1};if("function"==typeof t.onRedirectNavigate){if(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),!1!==t.onRedirectNavigate(e)){this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),await t.navigationClient.navigateExternal(e,r);return}this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation");return}this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),await t.navigationClient.navigateExternal(e,r);return}throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),(0,tv.Z_)(t_._c)}async handleCodeResponse(e,t){let r;this.logger.verbose("RedirectHandler.handleCodeResponse called"),this.browserStorage.setInteractionInProgress(!1);let n=this.browserStorage.generateStateKey(t),i=this.browserStorage.getTemporaryCache(n);if(!i)throw er(I,"Cached State");try{r=this.authModule.handleFragmentResponse(e,i)}catch(e){if(e instanceof rb&&e.subError===t_.h7)throw(0,tv.Z_)(t_.h7);throw e}let o=this.browserStorage.generateNonceKey(i),a=this.browserStorage.getTemporaryCache(o);if(this.authCodeRequest.code=r.code,r.cloud_instance_host_name&&await t6(this.authModule.updateAuthority.bind(this.authModule),tf.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(r.cloud_instance_host_name,this.authCodeRequest.correlationId),r.nonce=a||void 0,r.state=i,r.client_info)this.authCodeRequest.clientInfo=r.client_info;else{let e=this.checkCcsCredentials();e&&(this.authCodeRequest.ccsCredential=e)}let s=await this.authModule.acquireToken(this.authCodeRequest,r);return this.browserStorage.cleanRequestByState(t),s}checkCcsCredentials(){let e=this.browserStorage.getTemporaryCache(tI.c4.CCS_CREDENTIAL,!0);if(e)try{return JSON.parse(e)}catch(t){this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}class ns extends r0{constructor(e,t,r,n,i,o,a,s,c,l){super(e,t,r,n,i,o,a,c,l),this.nativeStorage=s}async acquireToken(e){let t=await t6(this.initializeAuthorizationRequest.bind(this),tf.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,tI.s_.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);let r=this.initializeServerTelemetryManager(tI.WN.acquireTokenRedirect),n=e=>{e.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent(rR.RESTORE_FROM_BFCACHE,tI.s_.Redirect))};try{let i=await t6(this.initializeAuthorizationCodeRequest.bind(this),tf.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(t),o=await t6(this.createAuthCodeClient.bind(this),tf.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),a=new na(o,this.browserStorage,i,this.logger,this.performanceClient),s=await o.getAuthCodeUrl({...t,nativeBroker:nr.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),c=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${c}`),window.addEventListener("pageshow",n),await a.initiateAuthRequest(s,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:c,onRedirectNavigate:e.onRedirectNavigate||this.config.auth.onRedirectNavigate})}catch(e){throw e instanceof l.l4&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),window.removeEventListener("pageshow",n),this.browserStorage.cleanRequestByState(t.state),e}}async handleRedirectPromise(e="",t){let r=this.initializeServerTelemetryManager(tI.WN.handleRedirectPromise);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;let[n,i]=this.getRedirectResponse(e||"");if(!n)return this.logger.info("handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(tI.s_.Redirect),t.event.errorCode="no_server_response",null;let a=this.browserStorage.getTemporaryCache(tI.c4.ORIGIN_URI,!0)||o.gT.EMPTY_STRING,s=e6.removeHashFromUrl(a),c=e6.removeHashFromUrl(window.location.href);if(s===c&&this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("Current page is loginRequestUrl, handling response"),a.indexOf("#")>-1&&function(e){let t=e.split("#");t.shift(),window.location.hash=t.length>0?t.join("#"):""}(a),await this.handleResponse(n,r);if(!this.config.auth.navigateToLoginRequestUrl)return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling response"),await this.handleResponse(n,r);if(!rA()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(tI.c4.URL_HASH,i,!0);let e={apiId:tI.WN.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0},t=!0;if(a&&"null"!==a)this.logger.verbose(`Navigating to loginRequestUrl: ${a}`),t=await this.navigationClient.navigateInternal(a,e);else{let r=function(){let e=new e6(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}();this.browserStorage.setTemporaryCache(tI.c4.ORIGIN_URI,r,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),t=await this.navigationClient.navigateInternal(r,e)}if(!t)return await this.handleResponse(n,r)}return null}catch(e){throw e instanceof l.l4&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),this.browserStorage.cleanRequestByInteractionType(tI.s_.Redirect),e}}getRedirectResponse(e){this.logger.verbose("getRedirectResponseHash called");let t=e;t||(t=this.config.auth.OIDCOptions.serverResponseType===o.rg.QUERY?window.location.search:window.location.hash);let r=e3(t);if(r){var n;try{!function(e,t,r){if(!e.state)throw(0,tv.Z_)(t_.Xk);let n=ry(t,e.state);if(!n)throw(0,tv.Z_)(t_.$P);if(n.interactionType!==r)throw(0,tv.Z_)(t_.yK)}(r,this.browserCrypto,tI.s_.Redirect)}catch(e){return e instanceof l.l4&&this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`),[null,""]}return(n=window).location.hash="","function"==typeof n.history.replaceState&&n.history.replaceState(null,"",`${n.location.origin}${n.location.pathname}${n.location.search}`),this.logger.verbose("Hash contains known properties, returning response hash"),[r,t]}let i=this.browserStorage.getTemporaryCache(tI.c4.URL_HASH,!0);return(this.browserStorage.removeItem(this.browserStorage.generateCacheKey(tI.c4.URL_HASH)),i&&(r=e3(i)))?(this.logger.verbose("Hash does not contain known properties, returning cached hash"),[r,i]):[null,""]}async handleResponse(e,t){let r=e.state;if(!r)throw(0,tv.Z_)(t_.Xk);let n=this.browserStorage.getCachedRequest(r);if(this.logger.verbose("handleResponse called, retrieved cached request"),e.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw(0,tv.Z_)(t_.V7);let t=new nt(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,tI.WN.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,e.accountId,this.nativeStorage,n.correlationId),{userRequestState:i}=rl.parseRequestState(this.browserCrypto,r);return t.acquireToken({...n,state:i,prompt:void 0}).finally(()=>{this.browserStorage.cleanRequestByState(r)})}let i=this.browserStorage.getCachedAuthority(r);if(!i)throw(0,tv.Z_)(t_.dT);let o=await t6(this.createAuthCodeClient.bind(this),tf.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:t,requestAuthority:i});return rO.removeThrottle(this.browserStorage,this.config.auth.clientId,n),new na(o,this.browserStorage,n,this.logger,this.performanceClient).handleCodeResponse(e,r)}async logout(e){this.logger.verbose("logoutRedirect called");let t=this.initializeLogoutRequest(e),r=this.initializeServerTelemetryManager(tI.WN.logout);try{this.eventHandler.emitEvent(rR.LOGOUT_START,tI.s_.Redirect,e),await this.clearCacheOnLogout(t.account);let n={apiId:tI.WN.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},i=await t6(this.createAuthCodeClient.bind(this),tf.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:r,requestAuthority:e&&e.authority,requestExtraQueryParameters:e?.extraQueryParameters,account:e&&e.account||void 0});if(i.authority.protocolMode===s.OIDC)try{i.authority.endSessionEndpoint}catch{if(t.account?.homeAccountId){this.browserStorage.removeAccount(t.account?.homeAccountId),this.eventHandler.emitEvent(rR.LOGOUT_SUCCESS,tI.s_.Redirect,t);return}}let o=i.getLogoutUri(t);if(this.eventHandler.emitEvent(rR.LOGOUT_SUCCESS,tI.s_.Redirect,t),e&&"function"==typeof e.onRedirectNavigate){let t=e.onRedirectNavigate(o);if(!1!==t){this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(o,n);return}this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation")}else{this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(o,n);return}}catch(e){throw e instanceof l.l4&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),this.eventHandler.emitEvent(rR.LOGOUT_FAILURE,tI.s_.Redirect,null,e),this.eventHandler.emitEvent(rR.LOGOUT_END,tI.s_.Redirect),e}this.eventHandler.emitEvent(rR.LOGOUT_END,tI.s_.Redirect)}getRedirectStartPage(e){let t=e||window.location.href;return e6.getAbsoluteUrl(t,rv())}}async function nc(e,t,r,n,i){if(t.addQueueMeasurement(tf.SilentHandlerInitiateAuthRequest,n),!e)throw r.info("Navigate url is empty"),(0,tv.Z_)(t_._c);return i?t6(nh,tf.SilentHandlerLoadFrame,r,t,n)(e,i,t,n):t3(nd,tf.SilentHandlerLoadFrameSync,r,t,n)(e)}async function nl(e,t,r,n,i,a,s){return n.addQueueMeasurement(tf.SilentHandlerMonitorIframeForHash,a),new Promise((n,a)=>{t<1e4&&i.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${t}ms) than the default (10000ms). This may result in timeouts.`);let c=window.setTimeout(()=>{window.clearInterval(l),a((0,tv.Z_)(t_.JA))},t),l=window.setInterval(()=>{let t="",r=e.contentWindow;try{t=r?r.location.href:""}catch(e){}if(!t||"about:blank"===t)return;let i="";r&&(i=s===o.rg.QUERY?r.location.search:r.location.hash),window.clearTimeout(c),window.clearInterval(l),n(i)},r)}).finally(()=>{t3(ng,tf.RemoveHiddenIframe,i,n,a)(e)})}function nh(e,t,r,n){return r.addQueueMeasurement(tf.SilentHandlerLoadFrame,n),new Promise((r,n)=>{let i=nu();window.setTimeout(()=>{if(!i){n("Unable to load iframe");return}i.src=e,r(i)},t)})}function nd(e){let t=nu();return t.src=e,t}function nu(){let e=document.createElement("iframe");return e.className="msalSilentIframe",e.style.visibility="hidden",e.style.position="absolute",e.style.width=e.style.height="0",e.style.border="0",e.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.body.appendChild(e),e}function ng(e){document.body===e.parentNode&&document.body.removeChild(e)}class np extends r0{constructor(e,t,r,n,i,o,a,s,c,l,h){super(e,t,r,n,i,o,s,l,h),this.apiId=a,this.nativeStorage=c}async acquireToken(e){let t;this.performanceClient.addQueueMeasurement(tf.SilentIframeClientAcquireToken,e.correlationId),e.loginHint||e.sid||e.account&&e.account.username||this.logger.warning("No user hint provided. The authorization server may need more information to complete this request.");let r={...e};r.prompt?r.prompt!==o.NJ.NONE&&r.prompt!==o.NJ.NO_SESSION&&(this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${r.prompt} with ${o.NJ.NONE}`),r.prompt=o.NJ.NONE):r.prompt=o.NJ.NONE;let n=await t6(this.initializeAuthorizationRequest.bind(this),tf.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(r,tI.s_.Silent);rS(n.authority);let i=this.initializeServerTelemetryManager(this.apiId);try{return t=await t6(this.createAuthCodeClient.bind(this),tf.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:i,requestAuthority:n.authority,requestAzureCloudOptions:n.azureCloudOptions,requestExtraQueryParameters:n.extraQueryParameters,account:n.account}),await t6(this.silentTokenHelper.bind(this),tf.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(t,n)}catch(o){if(o instanceof l.l4&&(o.setCorrelationId(this.correlationId),i.cacheFailedRequest(o)),!t||!(o instanceof l.l4)||o.errorCode!==tI.qx.INVALID_GRANT_ERROR)throw o;this.performanceClient.addFields({retryError:o.errorCode},this.correlationId);let n=await t6(this.initializeAuthorizationRequest.bind(this),tf.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(r,tI.s_.Silent);return await t6(this.silentTokenHelper.bind(this),tf.SilentIframeClientTokenHelper,this.logger,this.performanceClient,this.correlationId)(t,n)}}logout(){return Promise.reject((0,tv.Z_)(t_.I9))}async silentTokenHelper(e,t){let r=t.correlationId;this.performanceClient.addQueueMeasurement(tf.SilentIframeClientTokenHelper,r);let n=await t6(this.initializeAuthorizationCodeRequest.bind(this),tf.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,r)(t),i=await t6(e.getAuthCodeUrl.bind(e),tf.GetAuthCodeUrl,this.logger,this.performanceClient,r)({...t,nativeBroker:nr.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),a=new nn(e,this.browserStorage,n,this.logger,this.performanceClient),s=await t6(nc,tf.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,r)(i,this.performanceClient,this.logger,r,this.config.system.navigateFrameWait),c=this.config.auth.OIDCOptions.serverResponseType,l=await t6(nl,tf.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,r)(s,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,r,c),h=t3(ni,tf.DeserializeResponse,this.logger,this.performanceClient,this.correlationId)(l,c,this.logger);if(h.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw(0,tv.Z_)(t_.V7);let e=new nt(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,h.accountId,this.browserStorage,r),{userRequestState:n}=rl.parseRequestState(this.browserCrypto,t.state);return t6(e.acquireToken.bind(e),tf.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,r)({...t,state:n,prompt:t.prompt||o.NJ.NONE})}return t6(a.handleCodeResponse.bind(a),tf.HandleCodeResponse,this.logger,this.performanceClient,r)(h,t)}}class nm extends r0{async acquireToken(e){this.performanceClient.addQueueMeasurement(tf.SilentRefreshClientAcquireToken,e.correlationId);let t=await t6(rZ,tf.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,this.config,this.performanceClient,this.logger),r={...e,...t};e.redirectUri&&(r.redirectUri=this.getRedirectUri(e.redirectUri));let n=this.initializeServerTelemetryManager(tI.WN.acquireTokenSilent_silentFlow),i=await this.createRefreshTokenClient({serverTelemetryManager:n,authorityUrl:r.authority,azureCloudOptions:r.azureCloudOptions,account:r.account});return t6(i.acquireTokenByRefreshToken.bind(i),tf.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(r).catch(e=>{throw e.setCorrelationId(this.correlationId),n.cacheFailedRequest(e),e})}logout(){return Promise.reject((0,tv.Z_)(t_.I9))}async createRefreshTokenClient(e){return new r7(await t6(this.getClientConfiguration.bind(this),tf.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)({serverTelemetryManager:e.serverTelemetryManager,requestAuthority:e.authorityUrl,requestAzureCloudOptions:e.azureCloudOptions,requestExtraQueryParameters:e.extraQueryParameters,account:e.account}),this.performanceClient)}}class nC{constructor(e,t,r,n){this.isBrowserEnvironment="undefined"!=typeof window,this.config=e,this.storage=t,this.logger=r,this.cryptoObj=n}loadExternalTokens(e,t,r){if(!this.isBrowserEnvironment)throw(0,tv.Z_)(t_.Dx);let n=t.id_token?ea(t.id_token,tD):void 0,i={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e.authority?new t7(t7.generateAuthority(e.authority,e.azureCloudOptions),this.config.system.networkClient,this.storage,i,this.logger,e.correlationId||tW()):void 0,a=this.loadAccount(e,r.clientInfo||t.client_info||"",n,o),s=this.loadIdToken(t,a.homeAccountId,a.environment,a.realm),c=this.loadAccessToken(e,t,a.homeAccountId,a.environment,a.realm,r),l=this.loadRefreshToken(t,a.homeAccountId,a.environment);return this.generateAuthenticationResult(e,{account:a,idToken:s,accessToken:c,refreshToken:l},n,o)}loadAccount(e,t,r,n){if(this.logger.verbose("TokenCache - loading account"),e.account){let t=e4.createFromAccountInfo(e.account);return this.storage.setAccount(t),t}if(!n||!t&&!r)throw this.logger.error("TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead."),(0,tv.Z_)(t_.Jd);let i=e4.generateHomeAccountId(t,n.authorityType,this.logger,this.cryptoObj,r),o=r?.tid,a=r$(this.storage,n,i,tD,r,t,n.hostnameAndPort,o,void 0,void 0,this.logger);return this.storage.setAccount(a),a}loadIdToken(e,t,r,n){if(!e.id_token)return this.logger.verbose("TokenCache - no id token found in response"),null;this.logger.verbose("TokenCache - loading id token");let i=ed(t,r,e.id_token,this.config.auth.clientId,n);return this.storage.setIdTokenCredential(i),i}loadAccessToken(e,t,r,n,i,o){if(!t.access_token)return this.logger.verbose("TokenCache - no access token found in response"),null;if(!t.expires_in)return this.logger.error("TokenCache - no expiration set on the access token. Cannot add it to the cache."),null;if(!t.scope&&(!e.scopes||!e.scopes.length))return this.logger.error("TokenCache - scopes not specified in the request or response. Cannot add token to the cache."),null;this.logger.verbose("TokenCache - loading access token");let a=t.scope?eV.fromString(t.scope):new eV(e.scopes),s=o.expiresOn||t.expires_in+new Date().getTime()/1e3,c=o.extendedExpiresOn||(t.ext_expires_in||t.expires_in)+new Date().getTime()/1e3,l=eu(r,n,t.access_token,this.config.auth.clientId,i,a.printScopes(),s,c,tD);return this.storage.setAccessTokenCredential(l),l}loadRefreshToken(e,t,r){if(!e.refresh_token)return this.logger.verbose("TokenCache - no refresh token found in response"),null;this.logger.verbose("TokenCache - loading refresh token");let n=eg(t,r,e.refresh_token,this.config.auth.clientId,e.foci,void 0,e.refresh_token_expires_in);return this.storage.setRefreshTokenCredential(n),n}generateAuthenticationResult(e,t,r,n){let i,o="",a=[],s=null;t?.accessToken&&(o=t.accessToken.secret,a=eV.fromString(t.accessToken.target).asArray(),s=new Date(1e3*Number(t.accessToken.expiresOn)),i=new Date(1e3*Number(t.accessToken.extendedExpiresOn)));let c=t.account;return{authority:n?n.canonicalAuthority:"",uniqueId:t.account.localAccountId,tenantId:t.account.realm,scopes:a,account:c.getAccountInfo(),idToken:t.idToken?.secret||"",idTokenClaims:r||{},accessToken:o,fromCache:!0,expiresOn:s,correlationId:e.correlationId||"",requestId:"",extExpiresOn:i,familyId:t.refreshToken?.familyId||"",tokenType:t?.accessToken?.tokenType||"",state:e.state||"",cloudGraphHostName:c.cloudGraphHostName||"",msGraphHost:c.msGraphHost||"",fromNativeBroker:!1}}}class nf extends rQ{constructor(e){super(e),this.includeRedirectUri=!1}}class ny extends r0{constructor(e,t,r,n,i,o,a,s,c,l){super(e,t,r,n,i,o,s,c,l),this.apiId=a}async acquireToken(e){if(!e.code)throw(0,tv.Z_)(t_.Aj);let t=await t6(this.initializeAuthorizationRequest.bind(this),tf.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,tI.s_.Silent),r=this.initializeServerTelemetryManager(this.apiId);try{let n={...t,code:e.code},i=await t6(this.getClientConfiguration.bind(this),tf.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)({serverTelemetryManager:r,requestAuthority:t.authority,requestAzureCloudOptions:t.azureCloudOptions,requestExtraQueryParameters:t.extraQueryParameters,account:t.account}),o=new nf(i);this.logger.verbose("Auth code client created");let a=new nn(o,this.browserStorage,n,this.logger,this.performanceClient);return await t6(a.handleCodeResponseFromServer.bind(a),tf.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(e){throw e instanceof l.l4&&(e.setCorrelationId(this.correlationId),r.cacheFailedRequest(e)),e}}logout(){return Promise.reject((0,tv.Z_)(t_.I9))}}function nT(e){let t=e?.idTokenClaims;return t?.tfp||t?.acr?"B2C":t?.tid?t?.tid==="9188040d-6c67-4c5b-b112-36a304b66dad"?"MSA":"AAD":void 0}function nI(e,t){try{rE(e)}catch(e){throw t.end({success:!1},e),e}}class nA{constructor(e){this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new t4(this.logger,this.performanceClient):en,this.eventHandler=new rk(this.logger,this.browserCrypto),this.browserStorage=this.isBrowserEnvironment?new rT(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,function(e){let t;let r=e.cloudDiscoveryMetadata;if(r)try{t=JSON.parse(r)}catch(e){throw eQ(eq)}return{canonicalAuthority:e.authority?t8(e.authority):void 0,knownAuthorities:e.knownAuthorities,cloudDiscoveryMetadata:t}}(this.config.auth),this.performanceClient):rI(this.config.auth.clientId,this.logger);let t={cacheLocation:tI.Ix.MemoryStorage,temporaryCacheLocation:tI.Ix.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new rT(this.config.auth.clientId,t,this.browserCrypto,this.logger,void 0,this.performanceClient),this.tokenCache=new nC(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this)}static async createController(e,t){let r=new nA(e);return await r.initialize(t),r}trackPageVisibility(e){e&&(this.logger.info("Perf: Visibility change detected"),this.performanceClient.incrementFields({visibilityChangeCount:1},e))}async initialize(e){if(this.logger.trace("initialize called"),this.initialized){this.logger.info("initialize has already been called, exiting early.");return}let t=e?.correlationId||this.getRequestCorrelationId(),r=this.config.system.allowNativeBroker,n=this.performanceClient.startMeasurement(tf.InitializeClientApplication,t);if(this.eventHandler.emitEvent(rR.INITIALIZE_START),r)try{this.nativeExtensionProvider=await nr.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(e){this.logger.verbose(e)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await t6(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),tf.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient,t)(this.performanceClient,t)),this.initialized=!0,this.eventHandler.emitEvent(rR.INITIALIZE_END),n.end({allowNativeBroker:r,success:!0})}async handleRedirectPromise(e){if(this.logger.verbose("handleRedirectPromise called"),r_(this.initialized),this.isBrowserEnvironment){let t=e||"",r=this.redirectResponse.get(t);return void 0===r?(r=this.handleRedirectPromiseInternal(e),this.redirectResponse.set(t,r),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise")):this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call"),r}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async handleRedirectPromiseInternal(e){let t;let r=this.getAllAccounts(),n=this.browserStorage.getCachedNativeRequest(),i=n&&nr.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!e,o=i?n?.correlationId:this.browserStorage.getTemporaryCache(tI.c4.CORRELATION_ID,!0)||"",a=this.performanceClient.startMeasurement(tf.AcquireTokenRedirect,o);if(this.eventHandler.emitEvent(rR.HANDLE_REDIRECT_START,tI.s_.Redirect),i&&this.nativeExtensionProvider){this.logger.trace("handleRedirectPromise - acquiring token from native platform");let e=new nt(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,tI.WN.handleRedirectPromise,this.performanceClient,this.nativeExtensionProvider,n.accountId,this.nativeInternalStorage,n.correlationId);t=t6(e.handleRedirectPromise.bind(e),tf.HandleNativeRedirectPromiseMeasurement,this.logger,this.performanceClient,a.event.correlationId)(this.performanceClient,a.event.correlationId)}else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");let r=this.createRedirectClient(o);t=t6(r.handleRedirectPromise.bind(r),tf.HandleRedirectPromiseMeasurement,this.logger,this.performanceClient,a.event.correlationId)(e,a)}return t.then(e=>(e?(r.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(rR.LOGIN_SUCCESS,tI.s_.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_SUCCESS,tI.s_.Redirect,e),this.logger.verbose("handleRedirectResponse returned result, acquire token success")),a.end({success:!0,accountType:nT(e.account)})):a.event.errorCode?a.end({success:!1}):a.discard(),this.eventHandler.emitEvent(rR.HANDLE_REDIRECT_END,tI.s_.Redirect),e)).catch(e=>{throw r.length>0?this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_FAILURE,tI.s_.Redirect,null,e):this.eventHandler.emitEvent(rR.LOGIN_FAILURE,tI.s_.Redirect,null,e),this.eventHandler.emitEvent(rR.HANDLE_REDIRECT_END,tI.s_.Redirect),a.end({success:!1},e),e})}async acquireTokenRedirect(e){let t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t);let r=this.performanceClient.startMeasurement(tf.AcquireTokenPreRedirect,t);r.add({accountType:nT(e.account),scenarioId:e.scenarioId});let n=e.onRedirectNavigate;if(n)e.onRedirectNavigate=e=>{let t="function"==typeof n?n(e):void 0;return!1!==t?r.end({success:!0}):r.discard(),t};else{let e=this.config.auth.onRedirectNavigate;this.config.auth.onRedirectNavigate=t=>{let n="function"==typeof e?e(t):void 0;return!1!==n?r.end({success:!0}):r.discard(),n}}let i=this.getAllAccounts().length>0;try{let n;return rw(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),i?this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_START,tI.s_.Redirect,e):this.eventHandler.emitEvent(rR.LOGIN_START,tI.s_.Redirect,e),n=this.nativeExtensionProvider&&this.canUseNative(e)?new nt(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,tI.WN.acquireTokenRedirect,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,t).acquireTokenRedirect(e,r).catch(r=>{if(r instanceof r3&&r6(r))return this.nativeExtensionProvider=void 0,this.createRedirectClient(t).acquireToken(e);if(r instanceof ra)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),r}):this.createRedirectClient(t).acquireToken(e),await n}catch(e){throw r.end({success:!1},e),i?this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_FAILURE,tI.s_.Redirect,null,e):this.eventHandler.emitEvent(rR.LOGIN_FAILURE,tI.s_.Redirect,null,e),e}}acquireTokenPopup(e){let t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(tf.AcquireTokenPopup,t);r.add({scenarioId:e.scenarioId,accountType:nT(e.account)});try{this.logger.verbose("acquireTokenPopup called",t),nI(this.initialized,r),this.browserStorage.setInteractionInProgress(!0)}catch(e){return Promise.reject(e)}let n=this.getAllAccounts();return n.length>0?this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_START,tI.s_.Popup,e):this.eventHandler.emitEvent(rR.LOGIN_START,tI.s_.Popup,e),(this.canUseNative(e)?this.acquireTokenNative({...e,correlationId:t},tI.WN.acquireTokenPopup).then(e=>(this.browserStorage.setInteractionInProgress(!1),r.end({success:!0,isNativeBroker:!0,requestId:e.requestId,accountType:nT(e.account)}),e)).catch(r=>{if(r instanceof r3&&r6(r))return this.nativeExtensionProvider=void 0,this.createPopupClient(t).acquireToken(e);if(r instanceof ra)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(t).acquireToken(e);throw this.browserStorage.setInteractionInProgress(!1),r}):this.createPopupClient(t).acquireToken(e)).then(e=>(n.length<this.getAllAccounts().length?this.eventHandler.emitEvent(rR.LOGIN_SUCCESS,tI.s_.Popup,e):this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_SUCCESS,tI.s_.Popup,e),r.end({success:!0,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:nT(e.account)}),e)).catch(e=>(n.length>0?this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_FAILURE,tI.s_.Popup,null,e):this.eventHandler.emitEvent(rR.LOGIN_FAILURE,tI.s_.Popup,null,e),r.end({success:!1},e),Promise.reject(e)))}trackPageVisibilityWithMeasurement(){let e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){let t=this.getRequestCorrelationId(e),r={...e,prompt:e.prompt,correlationId:t};return this.ssoSilentMeasurement=this.performanceClient.startMeasurement(tf.SsoSilent,t),this.ssoSilentMeasurement?.add({scenarioId:e.scenarioId,accountType:nT(e.account)}),nI(this.initialized,this.ssoSilentMeasurement),this.ssoSilentMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent(rR.SSO_SILENT_START,tI.s_.Silent,r),(this.canUseNative(r)?this.acquireTokenNative(r,tI.WN.ssoSilent).catch(e=>{if(e instanceof r3&&r6(e))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(r.correlationId).acquireToken(r);throw e}):this.createSilentIframeClient(r.correlationId).acquireToken(r)).then(e=>(this.eventHandler.emitEvent(rR.SSO_SILENT_SUCCESS,tI.s_.Silent,e),this.ssoSilentMeasurement?.end({success:!0,isNativeBroker:e.fromNativeBroker,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:nT(e.account)}),e)).catch(e=>{throw this.eventHandler.emitEvent(rR.SSO_SILENT_FAILURE,tI.s_.Silent,null,e),this.ssoSilentMeasurement?.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){let t=this.getRequestCorrelationId(e);this.logger.trace("acquireTokenByCode called",t);let r=this.performanceClient.startMeasurement(tf.AcquireTokenByCode,t);nI(this.initialized,r),this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_BY_CODE_START,tI.s_.Silent,e),r.add({scenarioId:e.scenarioId});try{if(e.code&&e.nativeAccountId)throw(0,tv.Z_)(t_.LL);if(e.code){let n=e.code,i=this.hybridAuthCodeResponses.get(n);return i?(this.logger.verbose("Existing acquireTokenByCode request found",t),r.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),i=this.acquireTokenByCodeAsync({...e,correlationId:t}).then(e=>(this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_BY_CODE_SUCCESS,tI.s_.Silent,e),this.hybridAuthCodeResponses.delete(n),r.end({success:!0,isNativeBroker:e.fromNativeBroker,requestId:e.requestId,accessTokenSize:e.accessToken.length,idTokenSize:e.idToken.length,accountType:nT(e.account)}),e)).catch(e=>{throw this.hybridAuthCodeResponses.delete(n),this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_BY_CODE_FAILURE,tI.s_.Silent,null,e),r.end({success:!1},e),e}),this.hybridAuthCodeResponses.set(n,i)),await i}if(e.nativeAccountId){if(this.canUseNative(e,e.nativeAccountId)){let n=await this.acquireTokenNative({...e,correlationId:t},tI.WN.acquireTokenByCode,e.nativeAccountId).catch(e=>{throw e instanceof r3&&r6(e)&&(this.nativeExtensionProvider=void 0),e});return r.end({accountType:nT(n.account),success:!0}),n}throw(0,tv.Z_)(t_.KA)}throw(0,tv.Z_)(t_.Dy)}catch(e){throw this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_BY_CODE_FAILURE,tI.s_.Silent,null,e),r.end({success:!1},e),e}}async acquireTokenByCodeAsync(e){this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(tf.AcquireTokenByCodeAsync,e.correlationId),this.acquireTokenByCodeAsyncMeasurement?.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement);let t=this.createSilentAuthCodeClient(e.correlationId);return await t.acquireToken(e).then(e=>(this.acquireTokenByCodeAsyncMeasurement?.end({success:!0,fromCache:e.fromCache,isNativeBroker:e.fromNativeBroker,requestId:e.requestId}),e)).catch(e=>{throw this.acquireTokenByCodeAsyncMeasurement?.end({success:!1},e),e}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t){switch(this.performanceClient.addQueueMeasurement(tf.AcquireTokenFromCache,e.correlationId),t){case tI.lu.Default:case tI.lu.AccessToken:case tI.lu.AccessTokenAndRefreshToken:let r=this.createSilentCacheClient(e.correlationId);return t6(r.acquireToken.bind(r),tf.SilentCacheClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw er(F)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(tf.AcquireTokenByRefreshToken,e.correlationId),t){case tI.lu.Default:case tI.lu.AccessTokenAndRefreshToken:case tI.lu.RefreshToken:case tI.lu.RefreshTokenAndNetwork:let r=this.createSilentRefreshClient(e.correlationId);return t6(r.acquireToken.bind(r),tf.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw er(F)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(tf.AcquireTokenBySilentIframe,e.correlationId);let t=this.createSilentIframeClient(e.correlationId);return t6(t.acquireToken.bind(t),tf.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){let t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){let t=this.getRequestCorrelationId(e);return rw(this.initialized,this.config),this.browserStorage.setInteractionInProgress(!0),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{let t=this.getRequestCorrelationId(e);return rE(this.initialized),this.browserStorage.setInteractionInProgress(!0),this.createPopupClient(t).logout(e)}catch(e){return Promise.reject(e)}}async clearCache(e){let t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){var t,r,n;return t=this.logger,r=this.browserStorage,n=this.isBrowserEnvironment,t.verbose("getAllAccounts called"),n?r.getAllAccounts(e):[]}getAccount(e){return function(e,t,r){if(t.trace("getAccount called"),0===Object.keys(e).length)return t.warning("getAccount: No accountFilter provided"),null;let n=r.getAccountInfoFilteredBy(e);return n?(t.verbose("getAccount: Account matching provided filter found, returning"),n):(t.verbose("getAccount: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}getAccountByUsername(e){return function(e,t,r){if(t.trace("getAccountByUsername called"),!e)return t.warning("getAccountByUsername: No username provided"),null;let n=r.getAccountInfoFilteredBy({username:e});return n?(t.verbose("getAccountByUsername: Account matching username found, returning"),t.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),n):(t.verbose("getAccountByUsername: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}getAccountByHomeId(e){return function(e,t,r){if(t.trace("getAccountByHomeId called"),!e)return t.warning("getAccountByHomeId: No homeAccountId provided"),null;let n=r.getAccountInfoFilteredBy({homeAccountId:e});return n?(t.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),t.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),n):(t.verbose("getAccountByHomeId: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}getAccountByLocalId(e){return function(e,t,r){if(t.trace("getAccountByLocalId called"),!e)return t.warning("getAccountByLocalId: No localAccountId provided"),null;let n=r.getAccountInfoFilteredBy({localAccountId:e});return n?(t.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),t.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),n):(t.verbose("getAccountByLocalId: No matching account found, returning null"),null)}(e,this.logger,this.browserStorage)}setActiveAccount(e){!function(e,t){t.setActiveAccount(e)}(e,this.browserStorage)}getActiveAccount(){return this.browserStorage.getActiveAccount()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");let r=e4.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return(this.browserStorage.setAccount(r),e.fromNativeBroker)?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}async acquireTokenNative(e,t,r){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw(0,tv.Z_)(t_.V7);return new nt(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,r||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!nr.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case o.NJ.NONE:case o.NJ.CONSENT:case o.NJ.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!!(t||this.getNativeAccountId(e))||(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),!1)}getNativeAccountId(e){let t=e.account||this.getAccount({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new no(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new ns(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new np(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,tI.WN.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new r9(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new nm(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new ny(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,tI.WN.acquireTokenByCode,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e){return this.eventHandler.addEventCallback(e)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){this.eventHandler.enableAccountStorageEvents()}disableAccountStorageEvents(){this.eventHandler.disableAccountStorageEvents()}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}isBrowserEnv(){return this.isBrowserEnvironment}getEventHandler(){return this.eventHandler}getRequestCorrelationId(e){return e?.correlationId?e.correlationId:this.isBrowserEnvironment?tW():o.gT.EMPTY_STRING}async loginRedirect(e){let t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||tI.yo})}loginPopup(e){let t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||tI.yo})}async acquireTokenSilent(e){let t=this.getRequestCorrelationId(e),r=this.performanceClient.startMeasurement(tf.AcquireTokenSilent,t);r.add({cacheLookupPolicy:e.cacheLookupPolicy,scenarioId:e.scenarioId}),nI(this.initialized,r),this.logger.verbose("acquireTokenSilent called",t);let n=e.account||this.getActiveAccount();if(!n)throw(0,tv.Z_)(t_.wH);r.add({accountType:nT(n)});let i=JSON.stringify({clientId:this.config.auth.clientId,authority:e.authority||o.gT.EMPTY_STRING,scopes:e.scopes,homeAccountIdentifier:n.homeAccountId,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid,shrOptions:e.shrOptions}),a=this.activeSilentTokenRequests.get(i);if(void 0!==a)return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",t),r.discard(),{...await a,state:e.state};{this.logger.verbose("acquireTokenSilent called for the first time, storing active request",t);let o=t6(this.acquireTokenSilentAsync.bind(this),tf.AcquireTokenSilentAsync,this.logger,this.performanceClient,t)({...e,correlationId:t},n).then(t=>(this.activeSilentTokenRequests.delete(i),r.end({success:!0,fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker,cacheLookupPolicy:e.cacheLookupPolicy,requestId:t.requestId,accessTokenSize:t.accessToken.length,idTokenSize:t.idToken.length}),t)).catch(e=>{throw this.activeSilentTokenRequests.delete(i),r.end({success:!1},e),e});return this.activeSilentTokenRequests.set(i,o),{...await o,state:e.state}}}async acquireTokenSilentAsync(e,t){let r=()=>this.trackPageVisibility(e.correlationId);this.performanceClient.addQueueMeasurement(tf.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_START,tI.s_.Silent,e),e.correlationId&&this.performanceClient.incrementFields({visibilityChangeCount:0},e.correlationId),document.addEventListener("visibilitychange",r);let n=await t6(rX,tf.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t,this.config,this.performanceClient,this.logger),i=e.cacheLookupPolicy||tI.lu.Default;return this.acquireTokenSilentNoIframe(n,i).catch(async e=>{if(function(e,t){let r=!(e instanceof ra&&e.subError!==rr),n=e.errorCode===tI.qx.INVALID_GRANT_ERROR||e.errorCode===F,i=r&&n||e.errorCode===t9||e.errorCode===rt,o=tI.se.includes(t);return i&&o}(e,i)){if(this.activeIframeRequest){if(i===tI.lu.Skip)return this.logger.warning("Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.",n.correlationId),t6(this.acquireTokenBySilentIframe.bind(this),tf.AcquireTokenBySilentIframe,this.logger,this.performanceClient,n.correlationId)(n);{let[t,r]=this.activeIframeRequest;this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${r}`,n.correlationId);let o=this.performanceClient.startMeasurement(tf.AwaitConcurrentIframe,n.correlationId);o.add({awaitIframeCorrelationId:r});let a=await t;if(o.end({success:a}),a)return this.logger.verbose(`Parallel iframe request with correlationId: ${r} succeeded. Retrying cache and/or RT redemption`,n.correlationId),this.acquireTokenSilentNoIframe(n,i);throw this.logger.info(`Iframe request with correlationId: ${r} failed. Interaction is required.`),e}}{let e;return this.activeIframeRequest=[new Promise(t=>{e=t}),n.correlationId],this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",n.correlationId),t6(this.acquireTokenBySilentIframe.bind(this),tf.AcquireTokenBySilentIframe,this.logger,this.performanceClient,n.correlationId)(n).then(t=>(e(!0),t)).catch(t=>{throw e(!1),t}).finally(()=>{this.activeIframeRequest=void 0})}}throw e}).then(t=>(this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_SUCCESS,tI.s_.Silent,t),e.correlationId&&this.performanceClient.addFields({fromCache:t.fromCache,isNativeBroker:t.fromNativeBroker,requestId:t.requestId},e.correlationId),t)).catch(e=>{throw this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_FAILURE,tI.s_.Silent,null,e),e}).finally(()=>{document.removeEventListener("visibilitychange",r)})}async acquireTokenSilentNoIframe(e,t){return nr.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&e.account.nativeAccountId?(this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform"),this.acquireTokenNative(e,tI.WN.acquireTokenSilent_silentFlow).catch(async e=>{if(e instanceof r3&&r6(e))throw this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,er(F);throw e})):(this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow"),t6(this.acquireTokenFromCache.bind(this),tf.AcquireTokenFromCache,this.logger,this.performanceClient,e.correlationId)(e,t).catch(r=>{if(t===tI.lu.AccessToken)throw r;return this.eventHandler.emitEvent(rR.ACQUIRE_TOKEN_NETWORK_START,tI.s_.Silent,e),t6(this.acquireTokenByRefreshToken.bind(this),tf.AcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,t)}))}}async function nv(e,t){let r=new tR(e);return await r.initialize(),nA.createController(r,t)}class n_{static async createPublicClientApplication(e){let t=await nv(e);return new n_(e,t)}constructor(e,t){this.controller=t||new nA(new tR(e))}async initialize(e){return this.controller.initialize(e)}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e){return this.controller.addEventCallback(e)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}},6504:function(e,t,r){r.d(t,{Ut:function(){return s},Z_:function(){return c}});var n=r(5717),i=r(874);let o="For more visit: aka.ms/msaljs/browser-errors",a={[i.vD]:"The PKCE code challenge and verifier could not be generated.",[i.TR]:"The crypto object or function is not available.",[i._c]:"Navigation URI is empty. Please check stack trace for more info.",[i.nF]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${o}`,[i.Xk]:"Hash does not contain state. Please verify that the request originated from msal.",[i.S_]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${o}`,[i.$P]:"Unable to parse state. Please verify that the request originated from msal.",[i.yK]:"Hash contains state but the interaction type does not match the caller.",[i.Ck]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${o}`,[i.E]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[i.H]:"window.open returned null or undefined window object.",[i.h7]:"User cancelled the flow.",[i.ZT]:`Token acquisition in popup failed due to timeout.  ${o}`,[i.JA]:`Token acquisition in iframe failed due to timeout.  ${o}`,[i.b_]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[i.xO]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${o}`,[i.bj]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[i.h8]:"The iframe being monitored was closed prematurely.",[i.I9]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[i.wH]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[i.WQ]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[i.QO]:"No token request found in cache.",[i.e$]:"The cached token request could not be parsed.",[i.dT]:"No cached authority found.",[i.BO]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[i.Ut]:"Invalid cache type",[i.Dx]:"Login and token requests are not supported in non-browser environments.",[i.IL]:"Database is not open!",[i.Mq]:"No network connectivity. Check your internet connection.",[i.Dc]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[i.C8]:"Network request failed. Please check the network trace to determine root cause.",[i.w6]:"Failed to parse network response. Check network trace.",[i.Jd]:"Error loading token to cache.",[i.XM]:"Cryptographic Key or Keypair not found in browser storage.",[i.Aj]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[i.Dy]:"An authorization code or nativeAccountId must be provided to this flow.",[i.LL]:"Request cannot contain both spa code and native account id.",[i.Pi]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[i.KA]:`Unable to acquire token from native platform.  ${o}`,[i.hR]:"Timed out while attempting to establish connection to browser extension",[i.Wb]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[i.V7]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${o}`,[i.al]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${o}`,[i.o9]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[i.lZ]:"Invalid base64 encoded string.",[i.Hh]:"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true."};i.vD,a[i.vD],i.TR,a[i.TR],i._c,a[i._c],i.nF,a[i.nF],i.Xk,a[i.Xk],i.S_,a[i.S_],i.$P,a[i.$P],i.yK,a[i.yK],i.Ck,a[i.Ck],i.E,a[i.E],i.H,a[i.H],i.h7,a[i.h7],i.ZT,a[i.ZT],i.JA,a[i.JA],i.b_,a[i.b_],i.xO,a[i.xO],i.bj,a[i.bj],i.h8,a[i.h8],i.I9,a[i.I9],i.wH,a[i.wH],i.WQ,a[i.WQ],i.QO,a[i.QO],i.e$,a[i.e$],i.dT,a[i.dT],i.BO,a[i.BO],i.Ut,a[i.Ut],i.Dx,a[i.Dx],i.IL,a[i.IL],i.Mq,a[i.Mq],i.Dc,a[i.Dc],i.C8,a[i.C8],i.w6,a[i.w6],i.Jd,a[i.Jd],i.XM,a[i.XM],i.Aj,a[i.Aj],i.Dy,a[i.Dy],i.LL,a[i.LL],i.Pi,a[i.Pi],i.KA,a[i.KA],i.hR,a[i.hR],i.Wb,a[i.Wb],i.V7,a[i.V7],i.al,a[i.al],i.o9,a[i.o9],i.lZ,a[i.lZ],i.Hh,a[i.Hh];class s extends n.l4{constructor(e){super(e,a[e]),Object.setPrototypeOf(this,s.prototype),this.name="BrowserAuthError"}}function c(e){return new s(e)}},874:function(e,t,r){r.d(t,{$P:function(){return l},Aj:function(){return L},BO:function(){return R},C8:function(){return M},Ck:function(){return d},Dc:function(){return P},Dx:function(){return b},Dy:function(){return D},E:function(){return u},H:function(){return g},Hh:function(){return V},I9:function(){return A},IL:function(){return O},JA:function(){return C},Jd:function(){return U},KA:function(){return B},LL:function(){return x},Mq:function(){return N},Pi:function(){return K},QO:function(){return E},S_:function(){return c},TR:function(){return i},Ut:function(){return k},V7:function(){return $},WQ:function(){return _},Wb:function(){return G},XM:function(){return H},Xk:function(){return s},ZT:function(){return m},_c:function(){return o},al:function(){return z},b_:function(){return f},bj:function(){return T},dT:function(){return S},e$:function(){return w},h7:function(){return p},h8:function(){return I},hR:function(){return F},lZ:function(){return W},nF:function(){return a},o9:function(){return Q},vD:function(){return n},w6:function(){return q},wH:function(){return v},xO:function(){return y},yK:function(){return h}});let n="pkce_not_created",i="crypto_nonexistent",o="empty_navigate_uri",a="hash_empty_error",s="no_state_in_hash",c="hash_does_not_contain_known_properties",l="unable_to_parse_state",h="state_interaction_type_mismatch",d="interaction_in_progress",u="popup_window_error",g="empty_window_error",p="user_cancelled",m="monitor_popup_timeout",C="monitor_window_timeout",f="redirect_in_iframe",y="block_iframe_reload",T="block_nested_popups",I="iframe_closed_prematurely",A="silent_logout_unsupported",v="no_account_error",_="silent_prompt_value_error",E="no_token_request_cache_error",w="unable_to_parse_token_request_cache_error",S="no_cached_authority_error",R="auth_request_not_set_error",k="invalid_cache_type",b="non_browser_environment",O="database_not_open",N="no_network_connectivity",P="post_request_failed",M="get_request_failed",q="failed_to_parse_response",U="unable_to_load_token",H="crypto_key_not_found",L="auth_code_required",D="auth_code_or_nativeAccountId_required",x="spa_code_and_nativeAccountId_present",K="database_unavailable",B="unable_to_acquire_token_from_native_platform",F="native_handshake_timeout",G="native_extension_not_installed",$="native_connection_not_established",z="uninitialized_public_client_application",Q="native_prompt_not_supported",W="invalid_base64_string",V="invalid_pop_token_request"},2392:function(e,t,r){r.d(t,{BD:function(){return s},Bs:function(){return g},EC:function(){return h},Gv:function(){return T},H4:function(){return f},Ix:function(){return l},Ky:function(){return c},Mm:function(){return C},Oq:function(){return u},PK:function(){return _},WN:function(){return p},bg:function(){return v},c4:function(){return d},kd:function(){return y},lu:function(){return I},qx:function(){return a},s_:function(){return i},se:function(){return A},yo:function(){return m}});var n,i,o=r(9873);let a={INTERACTION_IN_PROGRESS_VALUE:"interaction_in_progress",INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},s={CHANNEL_ID:"53ee284d-920a-4b59-9d30-a60315b26836",PREFERRED_EXTENSION_ID:"ppnbnpeolgkicgegkbkbjmhlideopiji",MATS_TELEMETRY:"MATS"},c={HandshakeRequest:"Handshake",HandshakeResponse:"HandshakeResponse",GetToken:"GetToken",Response:"Response"},l={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},h={GET:"GET",POST:"POST"},d={AUTHORITY:"authority",ACQUIRE_TOKEN_ACCOUNT:"acquireToken.account",SESSION_STATE:"session.state",REQUEST_STATE:"request.state",NONCE_IDTOKEN:"nonce.id_token",ORIGIN_URI:"request.origin",RENEW_STATUS:"token.renew.status",URL_HASH:"urlHash",REQUEST_PARAMS:"request.params",SCOPES:"scopes",INTERACTION_STATUS_KEY:"interaction.status",CCS_CREDENTIAL:"ccs.credential",CORRELATION_ID:"request.correlationId",NATIVE_REQUEST:"request.native",REDIRECT_CONTEXT:"request.redirect.context"},u={ACCOUNT_KEYS:"msal.account.keys",TOKEN_KEYS:"msal.token.keys"},g={WRAPPER_SKU:"wrapper.sku",WRAPPER_VER:"wrapper.version"},p={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};(n=i||(i={})).Redirect="redirect",n.Popup="popup",n.Silent="silent",n.None="none";let m={scopes:o.f_},C="jwk",f="msal.db",y=1,T=`${f}.keys`,I={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5},A=[I.Default,I.Skip,I.RefreshTokenAndNetwork],v="msal.browser.log.level",_="msal.browser.log.pii"},5717:function(e,t,r){r.d(t,{MD:function(){return s},l4:function(){return a}});var n=r(9873),i=r(6213);let o={[i.g]:"Unexpected error in authentication.",[i.D]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};i.g,o[i.g],i.D,o[i.D];class a extends Error{constructor(e,t,r){super(t?`${e}: ${t}`:e),Object.setPrototypeOf(this,a.prototype),this.errorCode=e||n.gT.EMPTY_STRING,this.errorMessage=t||n.gT.EMPTY_STRING,this.subError=r||n.gT.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function s(e,t){return new a(e,t?`${o[e]} ${t}`:o[e])}},6213:function(e,t,r){r.d(t,{D:function(){return i},g:function(){return n}});let n="unexpected_error",i="post_request_failed"},9873:function(e,t,r){r.d(t,{$A:function(){return q},$f:function(){return a},As:function(){return h},Bv:function(){return f},D1:function(){return R},Ge:function(){return k},HN:function(){return E},NJ:function(){return d},Nb:function(){return l},QU:function(){return v},SZ:function(){return s},To:function(){return P},VX:function(){return u},Vi:function(){return c},W:function(){return O},YY:function(){return b},bb:function(){return S},ch:function(){return A},d3:function(){return y},dg:function(){return T},f_:function(){return o},gT:function(){return n},hO:function(){return w},iR:function(){return C},ki:function(){return N},oj:function(){return i},pQ:function(){return _},qJ:function(){return m},rg:function(){return g},sR:function(){return I},vw:function(){return p},xd:function(){return M}});let n={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",NOT_AVAILABLE:"Not Available",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},i={SUCCESS:200,SUCCESS_RANGE_START:200,SUCCESS_RANGE_END:299,REDIRECT:302,CLIENT_ERROR:400,CLIENT_ERROR_RANGE_START:400,BAD_REQUEST:400,UNAUTHORIZED:401,NOT_FOUND:404,REQUEST_TIMEOUT:408,TOO_MANY_REQUESTS:429,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR:500,SERVER_ERROR_RANGE_START:500,SERVICE_UNAVAILABLE:503,GATEWAY_TIMEOUT:504,SERVER_ERROR_RANGE_END:599,MULTI_SIDED_ERROR:600},o=[n.OPENID_SCOPE,n.PROFILE_SCOPE,n.OFFLINE_ACCESS_SCOPE],a=[...o,n.EMAIL_SCOPE],s={CONTENT_TYPE:"Content-Type",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",WWWAuthenticate:"WWW-Authenticate",AuthenticationInfo:"Authentication-Info",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},c={ID_TOKEN:"idtoken",CLIENT_INFO:"client.info",ADAL_ID_TOKEN:"adal.idtoken",ERROR:"error",ERROR_DESC:"error.description",ACTIVE_ACCOUNT:"active-account",ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},l={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},h={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},d={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},u={PLAIN:"plain",S256:"S256"},g={QUERY:"query",FRAGMENT:"fragment"},p={...g,FORM_POST:"form_post"},m={IMPLICIT_GRANT:"implicit",AUTHORIZATION_CODE_GRANT:"authorization_code",CLIENT_CREDENTIALS_GRANT:"client_credentials",RESOURCE_OWNER_PASSWORD_GRANT:"password",REFRESH_TOKEN_GRANT:"refresh_token",DEVICE_CODE_GRANT:"device_code",JWT_BEARER:"urn:ietf:params:oauth:grant-type:jwt-bearer"},C={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",MSAV1_ACCOUNT_TYPE:"MSA",GENERIC_ACCOUNT_TYPE:"Generic"},f={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},y={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},T="appmetadata",I="client_info",A="1",v={CACHE_KEY:"authority-metadata",REFRESH_TIME_SECONDS:86400},_={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},E={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},w={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},S={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},R={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},k={username:"username",password:"password"},b={httpSuccess:200,httpBadRequest:400},O={FAILED_AUTO_DETECTION:"1",INTERNAL_CACHE:"2",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},N={CONFIGURED_MATCHES_DETECTED:"1",CONFIGURED_NO_AUTO_DETECTION:"2",CONFIGURED_NOT_DETECTED:"3",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},P={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},M={Jwt:"JWT",Jwk:"JWK",Pop:"pop"},q=300}}]);